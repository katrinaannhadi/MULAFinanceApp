# compiler: R8
# compiler_version: 1.5.69
# min_api: 21
# pg_map_id: d2889ea
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    32:36:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    101:102:void <init>(android.os.IBinder) -> <init>
    106:106:android.os.IBinder asBinder() -> asBinder
    141:150:void cancel(java.lang.String,int,java.lang.String) -> cancel
    158:165:void cancelAll(java.lang.String) -> cancelAll
    117:133:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver -> android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    2310:2322:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    2246:2249:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    563:563:void <clinit>() -> <clinit>
    538:540:void <init>(android.os.Parcel) -> <init>
    556:560:java.lang.String toString() -> toString
    550:551:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    564:564:void <init>() -> <init>
    564:564:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    567:567:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    564:564:java.lang.Object[] newArray(int) -> newArray
    572:572:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    2276:2279:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    418:418:void <clinit>() -> <clinit>
    190:198:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    201:211:void <init>(android.os.Parcel) -> <init>
    375:410:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    331:332:java.lang.Object getMediaDescription() -> getMediaDescription
    316:316:java.lang.String toString() -> toString
    300:310:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    419:419:void <init>() -> <init>
    419:419:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    422:425:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    419:419:java.lang.Object[] newArray(int) -> newArray
    431:431:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    451:451:void <init>() -> <init>
    552:552:android.support.v4.media.MediaDescriptionCompat build() -> build
    495:495:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    530:530:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    507:507:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    519:519:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    461:461:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    541:541:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    483:483:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    472:472:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    62:62:java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    42:42:java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    54:54:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    46:46:android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    50:50:android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    30:30:java.lang.String getMediaId(java.lang.Object) -> getMediaId
    38:38:java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    34:34:java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    58:58:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    100:100:java.lang.Object build(java.lang.Object) -> build
    67:67:java.lang.Object newInstance() -> newInstance
    84:84:void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    96:96:void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    88:88:void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    92:92:void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    72:72:void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    80:80:void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
    76:76:void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.MediaDescriptionCompatApi23:
    26:26:android.net.Uri getMediaUri(java.lang.Object) -> getMediaUri
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    31:31:void setMediaUri(java.lang.Object,android.net.Uri) -> setMediaUri
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    308:641:void <clinit>() -> <clinit>
    373:374:void <init>(android.os.Parcel) -> <init>
    607:613:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    562:562:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    642:642:void <init>() -> <init>
    642:642:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    645:645:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    642:642:java.lang.Object[] newArray(int) -> newArray
    650:650:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    51:51:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    128:128:void <clinit>() -> <clinit>
    106:108:void <init>(int,float) -> <init>
    119:119:int describeContents() -> describeContents
    113:114:java.lang.String toString() -> toString
    124:125:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    129:129:void <init>() -> <init>
    129:129:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    137:137:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    129:129:java.lang.Object[] newArray(int) -> newArray
    142:142:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    19:20:void <init>() -> <init>
    183:47:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    30:34:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    622:623:void <init>(android.os.IBinder) -> <init>
    627:627:android.os.IBinder asBinder() -> asBinder
    690:700:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    693:697:void <init>() -> <init>
    823:823:void binderDied() -> binderDied
    843:846:void postToHandler(int,java.lang.Object,android.os.Bundle) -> postToHandler
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    854:855:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    927:929:void onAudioInfoChanged(int,int,int,int,int) -> onAudioInfoChanged
    918:920:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    894:896:void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    881:886:void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    902:904:void onQueueChanged(java.util.List) -> onQueueChanged
    910:912:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    860:862:void onSessionDestroyed() -> onSessionDestroyed
    868:874:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    938:939:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    992:994:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    944:946:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    1023:1025:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    968:970:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    960:962:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    976:978:void onQueueChanged(java.util.List) -> onQueueChanged
    984:986:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    1001:1003:void onRepeatModeChanged(int) -> onRepeatModeChanged
    952:954:void onSessionDestroyed() -> onSessionDestroyed
    1044:1046:void onSessionReady() -> onSessionReady
    1014:1016:void onShuffleModeChanged(int) -> onShuffleModeChanged
    1031:1038:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    2203:2218:void processPendingCallbacksLocked() -> processPendingCallbacksLocked
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    2231:2243:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    2249:2249:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2279:2279:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2261:2261:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2267:2267:void onQueueChanged(java.util.List) -> onQueueChanged
    2273:2273:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2255:2255:void onSessionDestroyed() -> onSessionDestroyed
    2285:2285:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    1363:1363:void <init>(int,int,int,int,int) -> <init>
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    46:46:java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    283:284:void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    326:326:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    320:321:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    305:305:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    300:300:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    310:310:void onQueueChanged(java.util.List) -> onQueueChanged
    315:315:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    289:289:void onSessionDestroyed() -> onSessionDestroyed
    294:295:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    200:200:android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    204:205:int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    228:237:int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    929:929:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    1875:1875:void <clinit>() -> <clinit>
    1772:1774:void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    1784:1786:void <init>(android.os.Parcel) -> <init>
    1844:1851:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    1865:1870:java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    1891:1891:java.lang.String toString() -> toString
    1805:1806:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    1876:1876:void <init>() -> <init>
    1876:1876:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1880:1880:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    1876:1876:java.lang.Object[] newArray(int) -> newArray
    1885:1885:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    1917:1917:void <clinit>() -> <clinit>
    1912:1913:void <init>(android.os.Parcel) -> <init>
    1936:1936:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    1917:1917:void <init>() -> <init>
    1917:1917:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1920:1920:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    1917:1917:java.lang.Object[] newArray(int) -> newArray
    1925:1925:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    1726:1726:void <clinit>() -> <clinit>
    1556:1556:void <init>(java.lang.Object) -> <init>
    1563:1565:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,android.os.Bundle) -> <init>
    1632:1643:boolean equals(java.lang.Object) -> equals
    1664:1664:android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    1621:1624:int hashCode() -> hashCode
    1672:1672:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> setExtraBinder
    1612:1615:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    1727:1727:void <init>() -> <init>
    1727:1727:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1731:1736:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    1727:1727:java.lang.Object[] newArray(int) -> newArray
    1741:1741:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    270:270:java.lang.Object getDescription(java.lang.Object) -> getDescription
    274:274:long getQueueId(java.lang.Object) -> getQueueId
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    65:65:void <clinit>() -> <clinit>
    42:47:void <init>(android.os.Parcel) -> <init>
    57:61:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    66:66:void <init>() -> <init>
    66:66:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    66:66:java.lang.Object[] newArray(int) -> newArray
    74:74:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    864:864:void <clinit>() -> <clinit>
    556:567:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    570:582:void <init>(android.os.Parcel) -> <init>
    798:823:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    587:599:java.lang.String toString() -> toString
    609:620:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    865:865:void <init>() -> <init>
    865:865:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    868:868:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    865:865:java.lang.Object[] newArray(int) -> newArray
    873:873:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    965:965:void <clinit>() -> <clinit>
    893:897:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    900:904:void <init>(android.os.Parcel) -> <init>
    932:940:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    1022:1022:java.lang.String toString() -> toString
    909:912:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    966:966:void <init>() -> <init>
    966:966:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    970:970:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object[] newArray(int) -> newArray
    975:975:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    45:45:long getActions(java.lang.Object) -> getActions
    61:61:long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    37:37:long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    57:57:java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    49:49:java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    53:53:long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    41:41:float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    33:33:long getPosition(java.lang.Object) -> getPosition
    29:29:int getState(java.lang.Object) -> getState
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    82:82:java.lang.String getAction(java.lang.Object) -> getAction
    93:93:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    90:90:int getIcon(java.lang.Object) -> getIcon
    86:86:java.lang.CharSequence getName(java.lang.Object) -> getName
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    29:29:android.os.Bundle getExtras(java.lang.Object) -> getExtras
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    15:16:void <init>() -> <init>
    27:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    64:59:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    72:73:void <init>(android.os.IBinder) -> <init>
    77:77:android.os.IBinder asBinder() -> asBinder
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    138:141:void <init>(android.os.Parcel) -> <init>
    130:135:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:73:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:58:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:63:void run() -> run
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    89:93:void <init>() -> <init>
    142:143:void <init>(int) -> <init>
    53:53:void access$001(androidx.activity.ComponentActivity) -> access$001
    290:291:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    226:227:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    246:246:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    325:325:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    331:331:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    262:263:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    314:314:void onBackPressed() -> onBackPressed
    154:158:void onCreate(android.os.Bundle) -> onCreate
    181:200:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    165:170:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    74:74:void <init>(androidx.activity.ComponentActivity) -> <init>
    77:77:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    99:99:void <init>(androidx.activity.ComponentActivity) -> <init>
    103:107:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    113:113:void <init>(androidx.activity.ComponentActivity) -> <init>
    117:119:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    60:60:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    45:46:void <init>(android.app.Activity) -> <init>
    101:108:void initializeReflectiveFields() -> initializeReflectiveFields
    51:91:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    54:55:void <init>(boolean) -> <init>
    103:103:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:92:void remove() -> remove
    107:107:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:71:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    77:78:void <init>(java.lang.Runnable) -> <init>
    148:153:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    114:116:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    187:197:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    223:226:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    246:250:void cancel() -> cancel
    232:240:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    203:204:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    209:210:void cancel() -> cancel
androidx.appcompat.R$styleable -> androidx.appcompat.R$styleable:
    1248:1711:void <clinit>() -> <clinit>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1377:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1386:void <init>(int,int) -> <init>
    1399:1401:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1405:1374:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    182:205:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:222:boolean canTextInput(android.view.View) -> canTextInput
    829:832:void centerButton(android.widget.Button) -> centerButton
    410:414:android.widget.Button getButton(int) -> getButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:233:void installContent() -> installContent
    750:753:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    443:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    324:344:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:257:void setCustomTitle(android.view.View) -> setCustomTitle
    359:367:void setIcon(int) -> setIcon
    378:386:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:263:void setMessage(java.lang.CharSequence) -> setMessage
    560:631:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    271:273:void setView(int) -> setView
    280:282:void setView(android.view.View) -> setView
    290:296:void setView(android.view.View,int,int,int,int) -> setView
    763:824:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:742:void setupContent(android.view.ViewGroup) -> setupContent
    640:668:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:713:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:552:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:146:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:596:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:603:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:615:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:622:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    924:927:void <init>(android.content.Context) -> <init>
    931:975:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1097:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1002:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1016:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1024:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1070:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1081:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:157:void <init>(android.content.DialogInterface) -> <init>
    162:167:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1104:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    840:840:void <init>(android.content.Context) -> <init>
    844:850:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:860:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    88:88:void <init>(android.content.Context) -> <init>
    98:99:void <init>(android.content.Context,int) -> <init>
    131:131:android.widget.Button getButton(int) -> getButton
    140:140:android.widget.ListView getListView() -> getListView
    278:279:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    114:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    226:226:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setButton
    164:164:void setMessage(java.lang.CharSequence) -> setMessage
    145:146:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:313:void <init>(android.content.Context) -> <init>
    342:345:void <init>(android.content.Context,int) -> <init>
    983:992:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:660:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:398:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:445:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    418:418:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    730:733:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    509:510:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    522:523:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    620:620:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:474:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    486:487:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    831:834:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    853:856:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:367:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:377:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    902:904:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    77:77:void <init>() -> <init>
    92:92:void <init>(int) -> <init>
    176:176:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    97:98:void attachBaseContext(android.content.Context) -> attachBaseContext
    609:612:void closeOptionsMenu() -> closeOptionsMenu
    552:558:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    214:214:android.view.View findViewById(int) -> findViewById
    542:545:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    506:506:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    156:156:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    563:566:android.content.res.Resources getResources() -> getResources
    130:130:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    454:454:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    268:268:void invalidateOptionsMenu() -> invalidateOptionsMenu
    181:190:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    493:493:void onContentChanged() -> onContentChanged
    103:106:void onCreate(android.os.Bundle) -> onCreate
    371:371:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    233:234:void onDestroy() -> onDestroy
    592:595:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    219:226:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    517:517:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    528:528:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    117:118:void onPostCreate(android.os.Bundle) -> onPostCreate
    195:196:void onPostResume() -> onPostResume
    533:534:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    201:202:void onStart() -> onStart
    207:208:void onStop() -> onStop
    416:435:boolean onSupportNavigateUp() -> onSupportNavigateUp
    239:240:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    600:603:void openOptionsMenu() -> openOptionsMenu
    575:582:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> performMenuItemShortcut
    161:161:void setContentView(int) -> setContentView
    166:166:void setContentView(android.view.View) -> setContentView
    171:171:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    150:150:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    111:112:void setTheme(int) -> setTheme
    316:316:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    263:263:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    487:487:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    258:258:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    471:471:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    165:167:void <clinit>() -> <clinit>
    262:262:void <init>() -> <init>
    221:221:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    232:232:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    571:571:int getDefaultNightMode() -> getDefaultNightMode
    622:628:void markStarted(androidx.appcompat.app.AppCompatDelegate) -> markStarted
    632:635:void markStopped(androidx.appcompat.app.AppCompatDelegate) -> markStopped
    639:649:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    130:183:void <clinit>() -> <clinit>
    278:278:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    282:282:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    294:328:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    570:573:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2159:2159:boolean applyDayNight() -> applyDayNight
    2163:2182:boolean applyDayNight(boolean) -> applyDayNight
    873:906:void applyFixedSizeWindow() -> applyFixedSizeWindow
    334:335:void attachBaseContext(android.content.Context) -> attachBaseContext
    631:632:void attachToWindow(android.view.Window) -> attachToWindow
    2232:2232:int calculateNightMode() -> calculateNightMode
    1918:1937:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1800:1810:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    606:610:void cleanupAutoManagers() -> cleanupAutoManagers
    1814:1814:void closePanel(int) -> closePanel
    1818:1845:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    692:696:android.view.ViewGroup createSubDecor() -> createSubDecor
    1375:1407:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2133:2153:void dismissPopups() -> dismissPopups
    1307:1325:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2005:2026:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1246:1247:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    658:686:void ensureSubDecor() -> ensureSubDecor
    622:626:void ensureWindow() -> ensureWindow
    1942:1946:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    479:480:android.view.View findViewById(int) -> findViewById
    453:459:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2398:2401:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager() -> getAutoBatteryNightModeManager
    2390:2394:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> getAutoTimeNightModeManager
    3061:3061:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    2198:2198:int getLocalNightMode() -> getLocalNightMode
    467:472:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1955:1965:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    383:384:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    992:996:java.lang.CharSequence getTitle() -> getTitle
    392:392:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    396:408:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1675:1692:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1581:1583:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1632:1669:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1441:1446:void installViewFactory() -> installViewFactory
    1071:1074:void invalidateOptionsMenu() -> invalidateOptionsMenu
    1996:2000:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2405:2427:boolean isActivityManifestHandlingUiMode() -> isActivityManifestHandlingUiMode
    1242:1242:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2220:2218:int mapNightMode(int) -> mapNightMode
    1253:1260:boolean onBackPressed() -> onBackPressed
    487:501:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    342:370:void onCreate(android.os.Bundle) -> onCreate
    1457:1457:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1465:1465:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    587:601:void onDestroy() -> onDestroy
    1358:1366:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1850:1853:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1270:1296:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1331:1347:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1861:1907:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1026:1030:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1038:1038:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1017:1019:void onMenuOpened(int) -> onMenuOpened
    1001:1010:void onPanelClosed(int) -> onPanelClosed
    376:376:void onPostCreate(android.os.Bundle) -> onPostCreate
    535:537:void onPostResume() -> onPostResume
    578:580:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    506:512:void onStart() -> onStart
    517:529:void onStop() -> onStop
    1486:1577:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    388:388:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    1972:1988:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1696:1794:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1588:1628:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> reopenMenu
    911:944:boolean requestWindowFeature(int) -> requestWindowFeature
    2116:2120:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    543:547:void setContentView(android.view.View) -> setContentView
    552:556:void setContentView(int) -> setContentView
    561:565:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    414:421:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    616:616:void setTheme(int) -> setTheme
    979:986:void setTitle(java.lang.CharSequence) -> setTitle
    1232:1232:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1419:1435:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1047:1044:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1078:1226:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2108:2109:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1470:1476:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2247:2331:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2341:2378:void updateResourcesConfigurationForNightMode(int,boolean) -> updateResourcesConfigurationForNightMode
    2040:2101:int updateStatusGuard(int) -> updateStatusGuard
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$1:
    158:158:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    174:177:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    161:169:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    256:256:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    259:266:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    780:780:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    784:796:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$4:
    802:802:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    805:805:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    857:857:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    863:863:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1133:1133:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1136:1159:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1144:1144:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1152:1154:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1147:1147:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1187:1187:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1200:1202:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1190:1194:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    3065:3065:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2521:2521:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2535:2535:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2526:2528:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2436:2437:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2452:2452:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2442:2442:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2457:2483:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2447:2447:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2465:2465:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2468:2476:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    2807:2808:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2813:2814:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2819:2820:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    2825:2830:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2868:2869:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2875:2876:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2841:2860:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2934:2941:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    2882:2891:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2919:2927:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    2901:2910:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3030:3031:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3050:3052:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3037:3038:int getApplyableNightMode() -> getApplyableNightMode
    3045:3045:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    2951:2951:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2983:2990:void cleanup() -> cleanup
    2960:2976:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    2969:2969:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2972:2972:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3002:3003:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3019:3022:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3009:3009:int getApplyableNightMode() -> getApplyableNightMode
    3014:3014:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    2771:2772:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2777:2778:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2801:2801:boolean isOutOfBounds(int,int) -> isOutOfBounds
    2783:2792:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2797:2797:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2604:2607:void <init>(int) -> <init>
    2672:2681:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2611:2614:boolean hasPanelItems() -> hasPanelItems
    2660:2667:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2628:2656:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2488:2488:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2493:2503:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2510:2513:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    57:67:void <init>(android.content.Context,int) -> <init>
    129:129:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    206:207:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    169:172:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    178:180:int getThemeResId(android.content.Context,int) -> getThemeResId
    162:162:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:79:void onCreate(android.os.Bundle) -> onCreate
    134:135:void onStop() -> onStop
    95:95:void setContentView(int) -> setContentView
    100:100:void setContentView(android.view.View) -> setContentView
    105:105:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:118:void setTitle(java.lang.CharSequence) -> setTitle
    123:124:void setTitle(int) -> setTitle
    201:201:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    153:153:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatDialogFragment -> androidx.appcompat.app.AppCompatDialogFragment:
    38:38:void <init>() -> <init>
    43:43:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    50:65:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    63:75:void <clinit>() -> <clinit>
    61:78:void <init>() -> <init>
    301:316:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    228:228:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    192:192:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    212:212:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    222:222:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    197:197:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    207:207:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    187:187:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    234:234:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    217:217:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    239:239:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    244:244:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    202:202:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    182:182:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    249:249:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    88:174:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    321:335:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    265:291:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    348:369:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    254:254:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    385:387:void <init>(android.view.View,java.lang.String) -> <init>
    392:399:void onClick(android.view.View) -> onClick
    411:436:void resolveMethod(android.content.Context,java.lang.String) -> resolveMethod
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    46:54:void flush(android.content.res.Resources) -> flush
    60:77:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:108:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:160:void flushNougats(android.content.res.Resources) -> flushNougats
    166:205:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
    68:73:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    428:428:boolean closeOptionsMenu() -> closeOptionsMenu
    440:441:boolean collapseActionView() -> collapseActionView
    504:511:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    323:323:int getDisplayOptions() -> getDisplayOptions
    543:548:android.view.Menu getMenu() -> getMenu
    146:146:android.content.Context getThemedContext() -> getThemedContext
    77:77:android.view.Window$Callback getWrappedWindowCallback() -> getWrappedWindowCallback
    433:434:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    186:186:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    489:489:void onDestroy() -> onDestroy
    476:481:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    468:469:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    423:423:boolean openOptionsMenu() -> openOptionsMenu
    448:463:void populateOptionsMenu() -> populateOptionsMenu
    290:290:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    275:275:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    259:260:void setDisplayOptions(int,int) -> setDisplayOptions
    228:228:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
    53:53:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    56:56:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
    61:61:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    64:64:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
    554:554:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    568:577:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    559:560:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
    583:583:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    593:598:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper:
    516:517:void <init>(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    536:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    522:525:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    95:136:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    69:71:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    110:124:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:138:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:101:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:191:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:205:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    84:85:void <clinit>() -> <clinit>
    169:175:void <init>(android.app.Activity,boolean) -> <init>
    179:181:void <init>(android.app.Dialog) -> <init>
    876:907:void animateToMode(boolean) -> animateToMode
    975:976:boolean collapseActionView() -> collapseActionView
    312:315:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    351:358:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    837:863:void doHide(boolean) -> doHide
    788:832:void doShow(boolean) -> doShow
    674:674:void enableContentAnimations(boolean) -> enableContentAnimations
    237:243:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    518:518:int getDisplayOptions() -> getDisplayOptions
    513:513:int getNavigationMode() -> getNavigationMode
    921:933:android.content.Context getThemedContext() -> getThemedContext
    712:717:void hideForActionMode() -> hideForActionMode
    723:725:void hideForSystem() -> hideForSystem
    195:206:void init(android.view.View) -> init
    259:259:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    963:965:void onContentScrollStarted() -> onContentScrollStarted
    1402:1410:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    321:321:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    483:483:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1395:1396:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    380:380:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    474:478:void setDisplayOptions(int,int) -> setDisplayOptions
    249:249:void setElevation(float) -> setElevation
    263:284:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    731:736:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    395:395:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    333:335:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    446:446:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    916:916:boolean shouldAnimateContextView() -> shouldAnimateContextView
    686:691:void showForActionMode() -> showForActionMode
    697:699:void showForSystem() -> showForSystem
    523:537:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    771:782:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:147:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:156:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:165:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    993:998:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1060:1065:boolean dispatchOnCreate() -> dispatchOnCreate
    1013:1039:void finish() -> finish
    1117:1117:android.view.View getCustomView() -> getCustomView
    1008:1008:android.view.Menu getMenu() -> getMenu
    1003:1003:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1101:1101:java.lang.CharSequence getSubtitle() -> getSubtitle
    1096:1096:java.lang.CharSequence getTitle() -> getTitle
    1044:1056:void invalidate() -> invalidate
    1112:1112:boolean isTitleOptional() -> isTitleOptional
    1122:1123:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1150:1154:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1070:1071:void setCustomView(android.view.View) -> setCustomView
    1076:1076:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1091:1091:void setSubtitle(int) -> setSubtitle
    1081:1081:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1086:void setTitle(int) -> setTitle
    1106:1107:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    50:55:void <clinit>() -> <clinit>
    150:158:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    130:144:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    67:86:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    173:176:android.util.TypedValue getTypedValue() -> getTypedValue
    112:122:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    162:167:boolean isColorInt(android.content.Context,int) -> isColorInt
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry:
    186:188:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    92:92:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    116:121:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:boolean canApplyTheme() -> canApplyTheme
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    614:614:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    171:174:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    201:209:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    483:497:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    472:472:void init() -> init
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    264:270:void jumpToCurrentState() -> jumpToCurrentState
    605:607:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    278:286:boolean onStateChange(int[]) -> onStateChange
    564:598:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    510:548:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    293:349:boolean selectTransition(int) -> selectTransition
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    718:720:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    89:89:void setDither(boolean) -> setDither
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    214:220:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    449:467:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    370:371:void <init>(android.graphics.drawable.Animatable) -> <init>
    376:376:void start() -> start
    381:381:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    634:641:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    667:668:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    652:661:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    681:681:int getKeyframeIdAt(int) -> getKeyframeIdAt
    673:677:int indexOfKeyframe(int[]) -> indexOfKeyframe
    685:686:int indexOfTransition(int,int) -> indexOfTransition
    690:691:boolean isTransitionReversed(int,int) -> isTransitionReversed
    647:648:void mutate() -> mutate
    702:702:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    708:708:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    695:696:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    433:434:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    439:439:void start() -> start
    444:444:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    392:406:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    411:411:boolean canReverse() -> canReverse
    421:421:void reverse() -> reverse
    416:416:void start() -> start
    426:426:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    732:733:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    759:772:float getInterpolation(float) -> getInterpolation
    754:754:int getTotalDuration() -> getTotalDuration
    737:749:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    353:353:void <init>() -> <init>
    353:353:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    53:74:void <init>() -> <init>
    535:571:void animate(boolean) -> animate
    595:595:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    601:601:boolean canApplyTheme() -> canApplyTheme
    87:91:void draw(android.graphics.Canvas) -> draw
    154:154:int getAlpha() -> getAlpha
    97:98:int getChangingConfigurations() -> getChangingConfigurations
    606:608:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    578:578:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    414:414:int getCurrentIndex() -> getCurrentIndex
    296:299:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    342:345:int getIntrinsicHeight() -> getIntrinsicHeight
    334:337:int getIntrinsicWidth() -> getIntrinsicWidth
    358:361:int getMinimumHeight() -> getMinimumHeight
    350:353:int getMinimumWidth() -> getMinimumWidth
    405:406:int getOpacity() -> getOpacity
    132:133:void getOutline(android.graphics.Outline) -> getOutline
    108:124:boolean getPadding(android.graphics.Rect) -> getPadding
    491:531:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    369:373:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    250:271:void jumpToCurrentState() -> jumpToCurrentState
    616:620:android.graphics.drawable.Drawable mutate() -> mutate
    102:103:boolean needsMirroring() -> needsMirroring
    218:222:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    329:329:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    316:320:boolean onLevelChange(int) -> onLevelChange
    305:309:boolean onStateChange(int[]) -> onStateChange
    1204:1204:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    379:380:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    427:481:boolean selectDrawable(int) -> selectDrawable
    139:146:void setAlpha(int) -> setAlpha
    233:236:void setAutoMirrored(boolean) -> setAutoMirrored
    169:173:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1152:1163:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    159:162:void setDither(boolean) -> setDither
    277:278:void setHotspot(float,float) -> setHotspot
    284:290:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:183:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:192:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    393:398:boolean setVisible(boolean,boolean) -> setVisible
    386:387:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    589:589:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    468:468:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    471:472:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1169:1169:void <init>() -> <init>
    1190:1191:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1197:1198:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1178:1179:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1173:1173:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    684:755:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:785:int addChild(android.graphics.drawable.Drawable) -> addChild
    896:906:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    913:923:boolean canApplyTheme() -> canApplyTheme
    1133:1147:boolean canConstantState() -> canConstantState
    1044:1059:void computeConstantSize() -> computeConstantSize
    802:809:void createAllFutures() -> createAllFutures
    798:798:int getCapacity() -> getCapacity
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    830:843:android.graphics.drawable.Drawable getChild(int) -> getChild
    823:823:int getChildCount() -> getChildCount
    1017:1020:int getConstantHeight() -> getConstantHeight
    1037:1040:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1027:1030:int getConstantMinimumWidth() -> getConstantMinimumWidth
    968:972:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1007:1010:int getConstantWidth() -> getConstantWidth
    1083:1094:int getOpacity() -> getOpacity
    1124:1126:void growArray(int,int) -> growArray
    793:794:void invalidateCache() -> invalidateCache
    1000:1000:boolean isConstantSize() -> isConstantSize
    814:818:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    993:993:void setConstantSize(boolean) -> setConstantSize
    1064:1064:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1072:1072:void setExitFadeDuration(int) -> setExitFadeDuration
    855:868:boolean setLayoutDirection(int,int) -> setLayoutDirection
    961:961:void setVariablePadding(boolean) -> setVariablePadding
    880:888:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:47:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:52:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:160:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:107:void jumpToCurrentState() -> jumpToCurrentState
    57:57:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:168:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:82:void setAlpha(int) -> setAlpha
    186:186:void setAutoMirrored(boolean) -> setAutoMirrored
    62:62:void setChangingConfigurations(int) -> setChangingConfigurations
    87:87:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:72:void setDither(boolean) -> setDither
    77:77:void setFilterBitmap(boolean) -> setFilterBitmap
    211:211:void setHotspot(float,float) -> setHotspot
    216:216:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:196:void setTint(int) -> setTint
    201:201:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:206:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:231:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:176:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    403:407:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    414:416:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    391:392:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    79:79:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    319:319:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    235:252:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    310:312:android.graphics.drawable.Drawable mutate() -> mutate
    113:122:boolean onStateChange(int[]) -> onStateChange
    397:399:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    332:337:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    351:352:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    381:384:void growArray(int,int) -> growArray
    357:360:int indexOfStateSet(int[]) -> indexOfStateSet
    343:347:void mutate() -> mutate
    370:370:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    376:376:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.resources.R$styleable -> androidx.appcompat.resources.R$styleable:
    185:245:void <clinit>() -> <clinit>
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:38:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:47:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:59:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:103:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:81:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:57:void setTag(java.lang.Object) -> setTag
    134:134:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:48:void <init>() -> <init>
    63:64:void <init>(android.content.Context,int) -> <init>
    77:78:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    83:83:void attachBaseContext(android.content.Context) -> attachBaseContext
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:121:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    137:137:int getThemeResId() -> getThemeResId
    181:189:void initializeTheme() -> initializeTheme
    177:177:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    126:128:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    50:57:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:111:void finish() -> finish
    131:131:android.view.View getCustomView() -> getCustomView
    116:116:android.view.Menu getMenu() -> getMenu
    136:136:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    126:126:java.lang.CharSequence getSubtitle() -> getSubtitle
    121:121:java.lang.CharSequence getTitle() -> getTitle
    100:100:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    141:141:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    161:162:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    94:95:void setCustomView(android.view.View) -> setCustomView
    68:68:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:78:void setSubtitle(int) -> setSubtitle
    63:63:void setTitle(java.lang.CharSequence) -> setTitle
    73:73:void setTitle(int) -> setTitle
    83:84:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:51:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:81:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:76:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:116:void setCustomView(android.view.View) -> setCustomView
    71:71:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:106:void setSubtitle(int) -> setSubtitle
    61:61:void setTag(java.lang.Object) -> setTag
    66:66:void setTitle(java.lang.CharSequence) -> setTitle
    96:96:void setTitle(int) -> setTitle
    131:131:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:154:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:203:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:185:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:159:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:178:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:165:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:104:void <init>(android.content.Context) -> <init>
    231:235:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:136:void inflate(int,android.view.Menu) -> inflate
    145:216:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    349:352:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    531:532:void addItem() -> addItem
    536:538:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    462:462:char getShortcut(java.lang.String) -> getShortcut
    543:543:boolean hasAddedItem() -> hasAddedItem
    550:555:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:379:void readGroup(android.util.AttributeSet) -> readGroup
    386:455:void readItem(android.util.AttributeSet) -> readItem
    356:361:void resetGroup() -> resetGroup
    467:526:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    48:49:void <init>() -> <init>
    90:96:void cancel() -> cancel
    86:86:void onAnimationsEnded() -> onAnimationsEnded
    53:54:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:63:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:101:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:108:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:115:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:82:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:132:void onAnimationStart(android.view.View) -> onAnimationStart
    137:139:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:52:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:171:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:166:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:129:void onAttachedToWindow() -> onAttachedToWindow
    119:119:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:134:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:139:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:184:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:178:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:114:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:124:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    83:89:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    444:453:void applyIconTint() -> applyIconTint
    347:347:android.view.ActionProvider getActionProvider() -> getActionProvider
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    399:399:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    425:425:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    440:440:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    410:410:java.lang.CharSequence getTooltipText() -> getTooltipText
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    342:342:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    332:332:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    352:352:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:184:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:191:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:197:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:208:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    393:393:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:214:android.view.MenuItem setEnabled(boolean) -> setEnabled
    220:223:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    230:232:android.view.MenuItem setIcon(int) -> setIcon
    415:418:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    430:433:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:238:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:244:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:251:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    388:388:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    263:264:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:274:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    367:367:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    280:280:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:286:android.view.MenuItem setTitle(int) -> setTitle
    292:292:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    404:404:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:298:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:151:void onClick(android.view.View) -> onClick
    92:95:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:294:void onMeasure(int,int) -> onMeasure
    333:333:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    179:182:void setExpandedFormat(boolean) -> setExpandedFormat
    215:233:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:156:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:114:void setPadding(int,int,int,int) -> setPadding
    160:160:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    188:209:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:300:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:306:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:316:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:65:void <init>(android.content.Context,int,int) -> <init>
    134:138:void addItemView(android.view.View,int) -> addItemView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    148:148:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    243:243:int getId() -> getId
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:72:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:214:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:221:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:154:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    247:247:void setId(int) -> setId
    91:121:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    37:38:void <init>(android.content.Context) -> <init>
    42:56:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    65:77:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    86:90:void internalClear() -> internalClear
    95:105:void internalRemoveGroup(int) -> internalRemoveGroup
    111:121:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    222:236:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:359:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    245:253:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    287:294:void dismiss() -> dismiss
    655:657:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    516:518:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    537:580:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    315:315:int getInitialMenuPosition() -> getInitialMenuPosition
    765:767:android.widget.ListView getListView() -> getListView
    329:344:int getNextMenuPosition(int) -> getNextMenuPosition
    588:588:boolean isShowing() -> isShowing
    667:720:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    599:610:void onDismiss() -> onDismiss
    302:303:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    629:641:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    749:753:void setAnchorView(android.view.View) -> setAnchorView
    623:623:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    241:241:void setForceShowIcon(boolean) -> setForceShowIcon
    740:742:void setGravity(int) -> setGravity
    772:773:void setHorizontalOffset(int) -> setHorizontalOffset
    760:760:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    784:784:void setShowTitle(boolean) -> setShowTitle
    778:779:void setVerticalOffset(int) -> setVerticalOffset
    259:277:void show() -> show
    369:501:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    616:617:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:108:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    127:133:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:193:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:143:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:188:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    800:803:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:73:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:81:void onDetachedFromWindow() -> onDetachedFromWindow
    92:92:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    76:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:99:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:141:void addContentView(android.view.View) -> addContentView
    145:148:void addContentView(android.view.View,int) -> addContentView
    350:356:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    126:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    312:316:void insertCheckBox() -> insertCheckBox
    297:300:void insertIconView() -> insertIconView
    304:308:void insertRadioButton() -> insertRadioButton
    104:121:void onFinishInflate() -> onFinishInflate
    285:293:void onMeasure(int,int) -> onMeasure
    174:213:void setCheckable(boolean) -> setCheckable
    222:234:void setChecked(boolean) -> setChecked
    153:153:void setForceShowIcon(boolean) -> setForceShowIcon
    342:343:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:276:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:253:void setShortcut(boolean,char) -> setShortcut
    238:239:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    159:163:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:73:void <init>(android.content.Context,int) -> <init>
    81:83:void <init>(int,int) -> <init>
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    212:212:int getId() -> getId
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:173:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    228:228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    217:222:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    143:148:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    200:202:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    192:196:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    138:138:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:133:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    234:235:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:289:void findExpandedIndex() -> findExpandedIndex
    240:242:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    268:272:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:295:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    44:49:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:126:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    94:109:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:132:void notifyDataSetChanged() -> notifyDataSetChanged
    57:57:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    229:241:void <init>(android.content.Context) -> <init>
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:546:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:458:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    256:256:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    269:271:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:504:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    847:848:void changeMenuMode() -> changeMenuMode
    610:615:void clear() -> clear
    1219:1223:void clearHeader() -> clearHeader
    1036:1047:void close(boolean) -> close
    1052:1052:void close() -> close
    1379:1395:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    466:466:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    840:840:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    290:301:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    350:363:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    327:346:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    306:320:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1357:1373:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:743:int findGroupIndex(int,int) -> findGroupIndex
    853:855:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    699:705:android.view.MenuItem findItem(int) -> findItem
    717:721:int findItemIndex(int) -> findItemIndex
    936:962:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    888:917:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1169:1205:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    836:836:android.content.Context getContext() -> getContext
    1401:1401:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1326:1326:android.view.View getHeaderView() -> getHeaderView
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1353:1353:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    787:788:int getOrdering(int) -> getOrdering
    832:832:android.content.res.Resources getResources() -> getResources
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:689:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1118:1119:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1107:1108:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1063:1073:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:1016:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    865:874:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:571:void removeGroup(int) -> removeGroup
    555:555:void removeItem(int) -> removeItem
    586:590:void removeItemAtInt(int,boolean) -> removeItemAtInt
    281:284:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    411:430:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    375:375:void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    381:401:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    371:371:void savePresenterStates(android.os.Bundle) -> savePresenterStates
    440:440:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    245:245:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    619:633:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    638:644:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:516:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:674:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:664:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1289:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1301:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1228:1254:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1265:1265:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1277:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1313:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1410:1410:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    768:770:void setQwertyMode(boolean) -> setQwertyMode
    818:820:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    753:753:int size() -> size
    1092:1096:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1087:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    42:43:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    139:140:void dismiss() -> dismiss
    169:169:void onClick(android.content.DialogInterface,int) -> onClick
    151:155:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    146:146:void onDismiss(android.content.DialogInterface) -> onDismiss
    95:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    161:162:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    53:89:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    137:145:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:691:void actionFormatChanged() -> actionFormatChanged
    403:403:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:582:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    838:848:boolean collapseActionView() -> collapseActionView
    824:830:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:774:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:508:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:477:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:859:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:176:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:756:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:764:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:866:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:254:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:269:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:598:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:624:android.view.MenuItem setChecked(boolean) -> setChecked
    631:634:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:884:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    191:196:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:605:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:519:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:531:android.view.MenuItem setIcon(int) -> setIcon
    539:543:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:559:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:228:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    721:723:void setIsActionButton(boolean) -> setIsActionButton
    682:682:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:296:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:310:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:876:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:672:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:320:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:333:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    742:746:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:818:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:430:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:806:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:458:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:493:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:898:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:665:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:809:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:58:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:314:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:293:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:306:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:272:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:284:android.view.MenuItem setActionView(int) -> setActionView
    171:171:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:177:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:204:android.view.MenuItem setChecked(boolean) -> setChecked
    343:343:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:225:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:393:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:108:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:114:android.view.MenuItem setIcon(int) -> setIcon
    365:365:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:376:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:125:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:149:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:155:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:336:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:246:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:136:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:143:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:258:void setShowAsAction(int) -> setShowAsAction
    263:263:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:80:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:86:android.view.MenuItem setTitle(int) -> setTitle
    97:97:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:354:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:434:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:454:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    464:464:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:496:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:490:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:514:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:524:void onActionViewCollapsed() -> onActionViewCollapsed
    519:519:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:415:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:402:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    147:164:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:128:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:71:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    203:207:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    79:79:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    84:90:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:257:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    298:299:void dismiss() -> dismiss
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:315:void onDismiss() -> onDismiss
    105:105:void setAnchorView(android.view.View) -> setAnchorView
    118:120:void setForceShowIcon(boolean) -> setForceShowIcon
    132:132:void setGravity(int) -> setGravity
    94:94:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:327:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:144:void show() -> show
    263:290:void showPopup(int,int,boolean,boolean) -> showPopup
    169:177:boolean tryShow() -> tryShow
    205:213:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:337:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:43:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    94:102:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:85:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:124:void clear() -> clear
    164:164:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:118:void removeGroup(int) -> removeGroup
    111:112:void removeItem(int) -> removeItem
    129:129:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:139:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:134:void setGroupVisible(int,boolean) -> setGroupVisible
    184:184:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    117:135:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    215:216:void dismiss() -> dismiss
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:305:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:243:void onDismiss() -> onDismiss
    330:331:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:290:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:325:void setAnchorView(android.view.View) -> setAnchorView
    258:258:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:140:void setForceShowIcon(boolean) -> setForceShowIcon
    145:145:void setGravity(int) -> setGravity
    350:350:void setHorizontalOffset(int) -> setHorizontalOffset
    339:339:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:360:void setShowTitle(boolean) -> setShowTitle
    355:355:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:201:boolean tryShow() -> tryShow
    249:252:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:70:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    87:91:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    42:45:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    137:137:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    89:90:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    132:132:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    142:146:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:79:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    151:151:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:95:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:101:android.view.SubMenu setIcon(int) -> setIcon
    50:50:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:40:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:75:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:57:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:63:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:45:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:51:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:69:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:80:android.view.SubMenu setIcon(int) -> setIcon
    86:86:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    52:52:void <init>(android.content.Context) -> <init>
    56:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    34:34:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    246:252:int measureChildView(android.view.View,int,int,int) -> measureChildView
    73:83:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:132:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:107:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    260:267:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    185:189:void setVisibility(int) -> setVisibility
    158:173:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    273:274:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    300:300:void onAnimationCancel(android.view.View) -> onAnimationCancel
    292:295:void onAnimationEnd(android.view.View) -> onAnimationEnd
    286:287:void onAnimationStart(android.view.View) -> onAnimationStart
    279:280:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:33:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:47:void draw(android.graphics.Canvas) -> draw
    68:75:void getOutline(android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    55:55:void <init>(android.content.Context) -> <init>
    59:78:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:176:void drawableStateChanged() -> drawableStateChanged
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    243:243:android.view.View getTabContainer() -> getTabContainer
    263:263:boolean isCollapsed(android.view.View) -> isCollapsed
    182:190:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:86:void onFinishInflate() -> onFinishInflate
    222:222:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:345:void onLayout(boolean,int,int,int,int) -> onLayout
    273:295:void onMeasure(int,int) -> onMeasure
    214:214:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:106:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:147:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:127:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:238:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:203:void setTransitioning(boolean) -> setTransitioning
    153:157:void setVisibility(int) -> setVisibility
    257:257:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:163:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:58:void <init>(android.content.Context) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    193:194:void closeMode() -> closeMode
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    161:189:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    134:156:void initTitle() -> initTitle
    378:378:boolean isTitleOptional() -> isTitleOptional
    200:202:void killMode() -> killMode
    88:91:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:366:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:348:void onLayout(boolean,int,int,int,int) -> onLayout
    243:245:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    97:97:void setContentHeight(int) -> setContentHeight
    101:112:void setCustomView(android.view.View) -> setCustomView
    121:122:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:117:void setTitle(java.lang.CharSequence) -> setTitle
    371:374:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    40:40:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    207:208:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    170:170:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    173:173:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    131:131:void <clinit>() -> <clinit>
    139:139:void <init>(android.content.Context) -> <init>
    143:146:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    651:652:void addActionBarHideOffset() -> addActionBarHideOffset
    267:282:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    732:733:boolean canShowOverflowMenu() -> canShowOverflowMenu
    337:337:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    786:787:void dismissPopups() -> dismissPopups
    453:460:void draw(android.graphics.Canvas) -> draw
    289:310:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    56:56:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    322:322:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    56:56:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    327:327:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    332:332:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    617:617:int getActionBarHideOffset() -> getActionBarHideOffset
    592:598:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    580:580:int getNestedScrollAxes() -> getNestedScrollAxes
    675:676:java.lang.CharSequence getTitle() -> getTitle
    628:631:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    756:757:boolean hideOverflowMenu() -> hideOverflowMenu
    150:159:void init(android.content.Context) -> init
    681:684:void initFeature(int) -> initFeature
    195:195:boolean isInOverlayMode() -> isInOverlayMode
    744:745:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    738:739:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    225:227:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    164:165:void onDetachedFromWindow() -> onDetachedFromWindow
    427:446:void onLayout(boolean,int,int,int,int) -> onLayout
    342:419:void onMeasure(int,int) -> onMeasure
    556:564:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    509:509:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    474:474:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    502:502:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    536:537:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    487:487:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    525:529:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    481:481:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    517:520:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    494:494:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    542:550:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    232:250:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    257:260:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    641:642:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    636:637:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    584:587:void pullChildren() -> pullChildren
    646:647:void removeActionBarHideOffset() -> removeActionBarHideOffset
    621:624:void setActionBarHideOffset(int) -> setActionBarHideOffset
    169:177:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    199:199:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    603:607:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    714:715:void setIcon(int) -> setIcon
    720:721:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    726:727:void setLogo(int) -> setLogo
    768:769:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    762:763:void setMenuPrepared() -> setMenuPrepared
    183:190:void setOverlayMode(boolean) -> setOverlayMode
    663:664:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    669:670:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    656:658:boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    750:751:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    98:98:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    107:108:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    101:102:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    112:112:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    115:117:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    121:121:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    124:127:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    792:792:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    796:796:void <init>(int,int) -> <init>
    800:800:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    87:83:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    207:216:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    377:378:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:324:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    417:544:boolean flagActionItems() -> flagActionItems
    191:200:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:184:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:174:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    358:366:boolean hideOverflowMenu() -> hideOverflowMenu
    388:389:boolean hideSubMenus() -> hideSubMenus
    92:129:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    403:403:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    399:399:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    552:553:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:137:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    565:574:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    558:559:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    281:312:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    158:158:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    590:591:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:166:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:149:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:345:boolean showOverflowMenu() -> showOverflowMenu
    226:270:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    738:747:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    752:755:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    805:805:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    810:810:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    787:788:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    793:800:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    633:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    676:681:boolean performClick() -> performClick
    697:710:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    643:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    646:650:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    655:655:boolean onForwardingStarted() -> onForwardingStarted
    664:668:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    720:723:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    728:733:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    760:760:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    774:779:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    767:769:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    615:615:void <clinit>() -> <clinit>
    598:598:void <init>() -> <init>
    601:602:void <init>(android.os.Parcel) -> <init>
    612:612:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
    616:616:void <init>() -> <init>
    616:616:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    619:619:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    616:616:java.lang.Object[] newArray(int) -> newArray
    624:624:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    76:76:void <init>(android.content.Context) -> <init>
    80:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:724:void dismissPopupMenus() -> dismissPopupMenus
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:585:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    597:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:617:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    736:743:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:639:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    404:432:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    128:135:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:545:void onDetachedFromWindow() -> onDetachedFromWindow
    439:537:void onLayout(boolean,int,int,int,int) -> onLayout
    147:172:void onMeasure(int,int) -> onMeasure
    178:386:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:756:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    141:141:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:555:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:578:void setOverflowReserved(boolean) -> setOverflowReserved
    97:102:void setPopupTheme(int) -> setPopupTheme
    122:123:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:793:void <init>() -> <init>
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    833:833:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:837:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:842:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:847:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    775:775:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:787:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    869:869:void <clinit>() -> <clinit>
    874:877:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:55:void <init>(android.content.Context) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:232:void forceUniformWidth(int,int) -> forceUniformWidth
    265:342:void onLayout(boolean,int,int,int,int) -> onLayout
    64:66:void onMeasure(int,int) -> onMeasure
    248:256:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:348:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    75:203:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    58:58:void <clinit>() -> <clinit>
    66:66:void <init>(android.content.Context) -> <init>
    70:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:175:void drawableStateChanged() -> drawableStateChanged
    136:137:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:165:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:108:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:100:void setBackgroundResource(int) -> setBackgroundResource
    200:199:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:93:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:122:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:150:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:183:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    41:43:void <init>(android.view.View) -> <init>
    173:191:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    118:131:void applySupportBackgroundTint() -> applySupportBackgroundTint
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    47:71:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    84:87:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    75:80:void onSetBackgroundResource(int) -> onSetBackgroundResource
    139:147:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    91:96:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    104:110:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    151:155:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:161:void drawableStateChanged() -> drawableStateChanged
    324:328:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    308:312:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    292:296:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    340:344:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    274:280:int getAutoSizeTextType() -> getAutoSizeTextType
    122:123:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    150:151:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    175:176:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    181:182:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    187:189:void onLayout(boolean,int,int,int,int) -> onLayout
    206:208:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    238:243:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    256:260:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    219:223:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    92:94:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    84:86:void setBackgroundResource(int) -> setBackgroundResource
    372:371:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    360:361:void setSupportAllCaps(boolean) -> setSupportAllCaps
    107:108:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    135:136:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    167:169:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    195:199:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    61:61:void <init>(android.content.Context) -> <init>
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    224:229:void drawableStateChanged() -> drawableStateChanged
    95:97:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    174:175:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    202:203:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:122:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:147:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    208:210:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    216:218:void setBackgroundResource(int) -> setBackgroundResource
    82:84:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:90:void setButtonDrawable(int) -> setButtonDrawable
    159:160:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    187:188:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:109:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:134:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    40:40:void <clinit>() -> <clinit>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:64:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:84:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:69:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    101:100:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:76:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    52:53:void <init>(android.widget.CompoundButton) -> <init>
    130:146:void applyButtonTint() -> applyButtonTint
    151:156:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    105:105:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    116:116:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    57:94:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    120:126:void onSetButtonDrawable() -> onSetButtonDrawable
    98:101:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    109:112:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    46:46:android.graphics.PorterDuff$Mode access$000() -> access$000
    397:400:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    406:406:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    411:411:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    438:438:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    429:429:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    415:416:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    54:391:void preload() -> preload
    433:433:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    57:126:void <init>() -> <init>
    291:291:boolean arrayContains(int[],int) -> arrayContains
    141:141:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    156:179:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    146:146:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    134:134:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    232:236:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    187:226:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    303:317:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    383:384:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    244:247:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    254:281:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    333:366:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    65:65:void <init>(android.content.Context) -> <init>
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:82:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    173:178:void drawableStateChanged() -> drawableStateChanged
    139:140:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    167:168:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    58:58:java.lang.CharSequence getText() -> getText
    91:96:android.text.Editable getText() -> getText
    230:231:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    192:192:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    109:111:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    101:103:void setBackgroundResource(int) -> setBackgroundResource
    203:202:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    124:125:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    152:153:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    184:186:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    212:213:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    28:37:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    65:65:void <init>(android.content.Context) -> <init>
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:246:void drawableStateChanged() -> drawableStateChanged
    152:153:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:181:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:208:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:236:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:124:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:116:void setBackgroundResource(int) -> setBackgroundResource
    98:100:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:92:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:85:void setImageResource(int) -> setImageResource
    106:108:void setImageURI(android.net.Uri) -> setImageURI
    137:138:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:166:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:193:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:221:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    45:46:void <init>(android.widget.ImageView) -> <init>
    196:214:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    137:154:void applySupportImageTint() -> applySupportImageTint
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    99:100:boolean hasOverlappingRendering() -> hasOverlappingRendering
    50:81:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    86:95:void setImageResource(int) -> setImageResource
    110:115:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    123:129:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    174:178:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:257:void drawableStateChanged() -> drawableStateChanged
    162:163:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:191:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:219:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:247:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:134:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:126:void setBackgroundResource(int) -> setBackgroundResource
    108:110:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:102:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:94:void setImageResource(int) -> setImageResource
    116:118:void setImageURI(android.net.Uri) -> setImageURI
    147:148:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:176:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:204:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:232:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    55:55:void <clinit>() -> <clinit>
    67:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:172:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:105:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:97:void setBackgroundResource(int) -> setBackgroundResource
    90:90:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:119:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:147:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:180:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:59:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:93:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:68:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:77:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:86:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:48:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTile() -> getSampleTile
    52:65:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:109:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:133:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    225:230:void drawableStateChanged() -> drawableStateChanged
    95:97:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    175:176:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    203:204:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:122:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:147:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    209:211:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    217:219:void setBackgroundResource(int) -> setBackgroundResource
    82:84:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:90:void setButtonDrawable(int) -> setButtonDrawable
    160:161:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    188:189:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:109:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:134:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:64:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:62:void drawableStateChanged() -> drawableStateChanged
    67:68:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    55:57:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    42:43:void <init>(android.widget.SeekBar) -> <init>
    125:139:void applyTickMarkTint() -> applyTickMarkTint
    162:179:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    151:154:void drawableStateChanged() -> drawableStateChanged
    145:146:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:73:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:92:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    78:78:void <clinit>() -> <clinit>
    114:114:void <init>(android.content.Context) -> <init>
    129:129:void <init>(android.content.Context,int) -> <init>
    140:140:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:155:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:174:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    203:293:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    558:587:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    543:545:void drawableStateChanged() -> drawableStateChanged
    365:368:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    339:342:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    384:387:int getDropDownWidth() -> getDropDownWidth
    595:595:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    320:323:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    301:301:android.content.Context getPopupContext() -> getPopupContext
    464:464:java.lang.CharSequence getPrompt() -> getPrompt
    508:509:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    537:538:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    411:414:void onDetachedFromWindow() -> onDetachedFromWindow
    428:432:void onMeasure(int,int) -> onMeasure
    617:640:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    609:611:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    420:423:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    441:450:boolean performClick() -> performClick
    76:76:void setAdapter(android.widget.Adapter) -> setAdapter
    396:405:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    477:479:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    469:471:void setBackgroundResource(int) -> setBackgroundResource
    349:353:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    330:333:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    375:378:void setDropDownWidth(int) -> setDropDownWidth
    306:309:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    315:315:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    455:458:void setPrompt(java.lang.CharSequence) -> setPrompt
    493:494:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    522:523:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    599:602:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    256:256:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    259:259:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    265:266:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    624:624:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    627:635:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    848:848:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    856:858:void dismiss() -> dismiss
    879:879:java.lang.CharSequence getHintText() -> getHintText
    864:864:boolean isShowing() -> isShowing
    903:907:void onClick(android.content.DialogInterface,int) -> onClick
    869:869:void setAdapter(android.widget.ListAdapter) -> setAdapter
    912:912:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    922:922:void setHorizontalOffset(int) -> setHorizontalOffset
    942:942:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    874:874:void setPromptText(java.lang.CharSequence) -> setPromptText
    917:917:void setVerticalOffset(int) -> setVerticalOffset
    884:898:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    693:711:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    768:770:boolean areAllItemsEnabled() -> areAllItemsEnabled
    719:719:int getCount() -> getCount
    739:740:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    724:724:java.lang.Object getItem(int) -> getItem
    729:729:long getItemId(int) -> getItemId
    734:734:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    745:745:boolean hasStableIds() -> hasStableIds
    802:802:boolean isEmpty() -> isEmpty
    782:784:boolean isEnabled(int) -> isEnabled
    750:751:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    757:758:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    958:965:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    952:952:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    996:1030:void computeContentWidth() -> computeContentWidth
    986:986:java.lang.CharSequence getHintText() -> getHintText
    1102:1102:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1092:1092:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    980:981:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1097:1097:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    992:992:void setPromptText(java.lang.CharSequence) -> setPromptText
    1035:1076:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    965:965:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    968:973:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1061:1061:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1064:1071:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1076:1076:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1079:1081:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    663:663:void <clinit>() -> <clinit>
    649:649:void <init>(android.os.Parcelable) -> <init>
    653:654:void <init>(android.os.Parcel) -> <init>
    659:660:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    664:664:void <init>() -> <init>
    664:664:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    666:666:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    664:664:java.lang.Object[] newArray(int) -> newArray
    670:670:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    42:43:void <init>(android.widget.TextView) -> <init>
    62:68:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    51:51:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    74:76:void <init>(android.widget.TextView) -> <init>
    555:555:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    536:548:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    592:592:void autoSizeText() -> autoSizeText
    561:565:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    637:637:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    633:633:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    629:629:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    641:641:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    625:625:int getAutoSizeTextType() -> getAutoSizeTextType
    646:646:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    660:660:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    598:598:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    81:329:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    574:575:void onLayout(boolean,int,int,int,int) -> onLayout
    532:532:void onSetCompoundDrawables() -> onSetCompoundDrawables
    485:523:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    347:347:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    528:528:void setAllCaps(boolean) -> setAllCaps
    614:614:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    620:620:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    606:606:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    650:655:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    664:669:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    685:710:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    673:678:void setCompoundTints() -> setCompoundTints
    582:584:void setTextSize(int,float) -> setTextSize
    602:602:void setTextSizeInternal(int,float) -> setTextSizeInternal
    337:339:void setTypefaceByCallback(android.graphics.Typeface) -> setTypefaceByCallback
    407:457:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback -> androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback:
    379:382:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int) -> <init>
    387:397:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback -> androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback:
    359:361:void <init>(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface) -> <init>
    366:370:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    91:91:void <init>(android.content.Context) -> <init>
    95:95:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    99:108:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    482:486:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    193:198:void drawableStateChanged() -> drawableStateChanged
    365:369:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    346:350:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    327:331:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    384:388:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    306:312:int getAutoSizeTextType() -> getAutoSizeTextType
    422:422:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    427:427:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    151:152:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    179:180:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    634:634:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    677:677:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    495:496:java.lang.CharSequence getText() -> getText
    523:524:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    454:454:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    396:396:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    204:206:void onLayout(boolean,int,int,int,int) -> onLayout
    550:551:void onMeasure(int,int) -> onMeasure
    223:225:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    263:268:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    285:289:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    240:244:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    121:123:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    113:115:void setBackgroundResource(int) -> setBackgroundResource
    557:559:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    567:569:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    599:601:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    609:616:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    576:578:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    584:591:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    442:441:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    402:405:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    412:415:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    432:432:void setLineHeight(int) -> setLineHeight
    478:478:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    136:137:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    164:165:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    657:658:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    697:698:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    185:187:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    505:506:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    542:544:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    465:465:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    212:216:void setTextSize(int,float) -> setTextSize
    705:708:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    63:76:void <clinit>() -> <clinit>
    105:107:void <init>(android.widget.TextView) -> <init>
    811:818:java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> accessAndReturnWithDefault
    546:581:void autoSizeText() -> autoSizeText
    453:475:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    585:590:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    679:684:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    725:748:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    771:778:android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre16
    754:760:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    642:644:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    410:410:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    394:394:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    378:378:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    423:423:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    364:364:int getAutoSizeTextType() -> getAutoSizeTextType
    846:857:java.lang.reflect.Field getTextViewField(java.lang.String) -> getTextViewField
    826:838:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    667:673:void initTempTextPaint(int) -> initTempTextPaint
    793:802:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    870:870:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    115:184:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    271:284:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    314:341:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    204:207:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    604:632:void setRawTextSize(float) -> setRawTextSize
    596:600:void setTextSizeInternal(int,float) -> setTextSizeInternal
    516:536:boolean setupAutoSizeText() -> setupAutoSizeText
    427:435:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    440:448:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    689:713:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    879:879:boolean supportsAutoSizeText() -> supportsAutoSizeText
    508:492:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    42:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    51:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:154:int getMinimumHeight() -> getMinimumHeight
    144:145:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    175:175:boolean isStacked() -> isStacked
    72:139:void onMeasure(int,int) -> onMeasure
    61:66:void setAllowStacking(boolean) -> setAllowStacking
    158:170:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    59:59:void <init>(android.content.Context) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:76:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:208:void onAttachedToWindow() -> onAttachedToWindow
    214:216:void onDetachedFromWindow() -> onDetachedFromWindow
    99:170:void onMeasure(int,int) -> onMeasure
    80:80:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    91:93:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    40:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:48:void <init>(android.content.Context) -> <init>
    53:76:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    45:59:void <clinit>() -> <clinit>
    142:173:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    131:133:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    184:193:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    73:122:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    206:201:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    118:126:void <init>(android.content.Context,boolean) -> <init>
    629:641:void clearPressedItem() -> clearPressedItem
    542:543:void clickPressedItem(android.view.View,int) -> clickPressedItem
    200:203:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    565:569:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    186:193:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    290:349:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    471:472:void onDetachedFromWindow() -> onDetachedFromWindow
    485:531:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    430:458:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:624:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    586:599:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    575:579:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    554:554:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:689:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    169:180:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:374:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    558:560:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    382:383:void <init>(android.graphics.drawable.Drawable) -> <init>
    400:401:void draw(android.graphics.Canvas) -> draw
    387:387:void setEnabled(boolean) -> setEnabled
    407:408:void setHotspot(float,float) -> setHotspot
    414:415:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:393:boolean setState(int[]) -> setState
    421:422:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:700:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:712:void cancel() -> cancel
    716:716:void post() -> post
    706:707:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    37:37:void <init>(android.content.Context) -> <init>
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:46:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    37:37:void <init>(android.content.Context) -> <init>
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:46:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    68:77:void <init>(android.view.View) -> <init>
    216:221:void clearCallbacks() -> clearCallbacks
    156:158:boolean onForwardingStopped() -> onForwardingStopped
    226:248:void onLongPress() -> onLongPress
    94:111:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:280:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:188:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    121:125:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    289:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:311:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:300:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:316:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:323:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:329:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:334:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    149:149:void <init>(android.content.Context) -> <init>
    153:153:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    157:188:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1755:1755:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    326:362:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    299:321:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    367:369:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    373:375:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1321:1336:void forceUniformHeight(int,int) -> forceUniformHeight
    899:914:void forceUniformWidth(int,int) -> forceUniformWidth
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1738:1741:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1725:1725:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1748:1748:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    427:432:int getBaseline() -> getBaseline
    484:484:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    225:225:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    272:272:int getDividerPadding() -> getDividerPadding
    282:282:int getDividerWidth() -> getDividerWidth
    1704:1704:int getGravity() -> getGravity
    1671:1671:int getOrientation() -> getOrientation
    216:216:int getShowDividers() -> getShowDividers
    509:509:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    522:522:int getVirtualChildCount() -> getVirtualChildCount
    533:533:float getWeightSum() -> getWeightSum
    571:577:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1525:1643:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1430:1507:void layoutVertical(int,int,int,int) -> layoutVertical
    1381:1381:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    932:1313:void measureHorizontal(int,int) -> measureHorizontal
    599:893:void measureVertical(int,int) -> measureVertical
    287:294:void onDraw(android.graphics.Canvas) -> onDraw
    1760:1761:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1766:1767:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1410:1413:void onLayout(boolean,int,int,int,int) -> onLayout
    554:557:void onMeasure(int,int) -> onMeasure
    396:396:void setBaselineAligned(boolean) -> setBaselineAligned
    492:494:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1649:1649:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    236:248:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    261:261:void setDividerPadding(int) -> setDividerPadding
    1683:1693:void setGravity(int) -> setGravity
    1709:1711:void setHorizontalGravity(int) -> setHorizontalGravity
    422:422:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1658:1660:void setOrientation(int) -> setOrientation
    199:202:void setShowDividers(int) -> setShowDividers
    1717:1719:void setVerticalGravity(int) -> setVerticalGravity
    549:549:void setWeightSum(float) -> setWeightSum
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1793:1800:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1807:1808:void <init>(int,int) -> <init>
    1830:1787:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:105:void <clinit>() -> <clinit>
    249:249:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:278:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1159:1326:int buildDropDown() -> buildDropDown
    847:852:void clearListSelection() -> clearListSelection
    951:951:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    773:777:void dismiss() -> dismiss
    461:461:android.view.View getAnchorView() -> getAnchorView
    424:424:android.graphics.drawable.Drawable getBackground() -> getBackground
    478:478:int getHorizontalOffset() -> getHorizontalOffset
    947:947:android.widget.ListView getListView() -> getListView
    1446:1458:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    494:497:int getVerticalOffset() -> getVerticalOffset
    546:546:int getWidth() -> getWidth
    869:869:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    346:346:boolean isModal() -> isModal
    861:861:boolean isShowing() -> isShowing
    790:794:void removePromptView() -> removePromptView
    288:299:void setAdapter(android.widget.ListAdapter) -> setAdapter
    471:471:void setAnchorView(android.view.View) -> setAnchorView
    442:442:void setAnimationStyle(int) -> setAnimationStyle
    433:433:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    566:571:void setContentWidth(int) -> setContentWidth
    539:539:void setDropDownGravity(int) -> setDropDownGravity
    518:518:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    487:487:void setHorizontalOffset(int) -> setHorizontalOffset
    812:812:void setInputMethodMode(int) -> setInputMethodMode
    336:337:void setModal(boolean) -> setModal
    786:786:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    620:620:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1339:1340:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1432:1441:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    313:313:void setPromptPosition(int) -> setPromptPosition
    831:837:void setSelection(int) -> setSelection
    506:507:void setVerticalOffset(int) -> setVerticalOffset
    556:556:void setWidth(int) -> setWidth
    664:763:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1168:1168:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1172:1174:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1187:1187:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1193:1196:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1362:1362:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1367:1367:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1344:1344:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1349:1351:void onChanged() -> onChanged
    1357:1357:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1408:1408:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1419:1422:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1387:1387:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1392:1401:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1372:1372:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1377:1381:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    60:65:void <clinit>() -> <clinit>
    72:72:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    77:78:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    119:120:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    127:128:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    83:84:void setEnterTransition(java.lang.Object) -> setEnterTransition
    89:90:void setExitTransition(java.lang.Object) -> setExitTransition
    95:95:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    103:112:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    144:154:void <init>(android.content.Context,boolean) -> <init>
    135:135:boolean hasFocus() -> hasFocus
    135:135:boolean hasWindowFocus() -> hasWindowFocus
    135:135:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    135:135:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    135:135:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    190:231:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    168:184:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    135:135:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    159:159:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    135:135:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    83:112:void <clinit>() -> <clinit>
    62:118:void <init>() -> <init>
    367:370:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> addDelegate
    336:346:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    417:425:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    497:507:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    167:167:long createCacheKey(android.util.TypedValue) -> createCacheKey
    172:192:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    478:479:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    94:98:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    315:331:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    132:132:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    137:155:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    485:493:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    394:404:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    408:410:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    389:389:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    105:108:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    513:514:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    229:305:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    159:164:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    351:358:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    128:129:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    200:218:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    451:469:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    363:363:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate:
    552:552:void <init>() -> <init>
    558:560:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate:
    535:535:void <init>() -> <init>
    543:545:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    431:431:void <init>(int) -> <init>
    445:445:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    435:435:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    439:439:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate:
    518:518:void <init>() -> <init>
    526:528:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:49:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:209:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:222:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:216:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:282:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:276:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:234:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:70:void setAbsolute(int,int) -> setAbsolute
    74:88:void setDirection(boolean) -> setDirection
    55:63:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    77:77:void <clinit>() -> <clinit>
    260:272:void animateToTab(int) -> animateToTab
    214:219:android.widget.Spinner createSpinner() -> createSpinner
    293:304:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    146:146:boolean isCollapsed() -> isCollapsed
    277:280:void onAttachedToWindow() -> onAttachedToWindow
    225:231:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:288:void onDetachedFromWindow() -> onDetachedFromWindow
    371:372:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:136:void onMeasure(int,int) -> onMeasure
    154:169:void performCollapse() -> performCollapse
    173:178:boolean performExpand() -> performExpand
    150:150:void setAllowCollapse(boolean) -> setAllowCollapse
    199:200:void setContentHeight(int) -> setContentHeight
    183:194:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    264:264:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:269:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    526:526:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    531:531:int getCount() -> getCount
    536:536:java.lang.Object getItem(int) -> getItem
    547:549:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    556:556:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    561:566:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    394:409:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    413:414:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    521:521:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    428:430:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    435:438:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    443:447:void onMeasure(int,int) -> onMeasure
    419:422:void setSelected(boolean) -> setSelected
    453:516:void update() -> update
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    176:176:void <clinit>() -> <clinit>
    267:267:void <init>(android.content.Context) -> <init>
    271:271:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    275:386:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1364:1383:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    497:501:void clearFocus() -> clearFocus
    1537:1559:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1656:1690:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1582:1635:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1567:1569:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1202:1202:void dismissSuggestions() -> dismissSuggestions
    1697:1701:void forceSuggestionQuery() -> forceSuggestionQuery
    851:855:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1088:1097:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    452:452:int getImeOptions() -> getImeOptions
    474:474:int getInputType() -> getInputType
    777:777:int getMaxWidth() -> getMaxWidth
    864:865:int getPreferredHeight() -> getPreferredHeight
    859:860:int getPreferredWidth() -> getPreferredWidth
    559:559:java.lang.CharSequence getQuery() -> getQuery
    619:624:java.lang.CharSequence getQueryHint() -> getQueryHint
    394:394:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    390:390:int getSuggestionRowLayout() -> getSuggestionRowLayout
    755:755:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    893:901:boolean hasVoiceSearch() -> hasVoiceSearch
    683:683:boolean isIconified() -> isIconified
    1706:1706:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    910:910:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1500:1502:void launchIntent(android.content.Intent) -> launchIntent
    1517:1518:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1477:1483:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1279:1283:void onActionViewCollapsed() -> onActionViewCollapsed
    1291:1297:void onActionViewExpanded() -> onActionViewExpanded
    1206:1220:void onCloseClicked() -> onCloseClicked
    964:966:void onDetachedFromWindow() -> onDetachedFromWindow
    1388:1392:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1399:1401:boolean onItemSelected(int) -> onItemSelected
    832:845:void onLayout(boolean,int,int,int,int) -> onLayout
    783:826:void onMeasure(int,int) -> onMeasure
    973:973:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1353:1360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1345:1347:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1226:1230:void onSearchClicked() -> onSearchClicked
    1188:1196:void onSubmitQuery() -> onSubmitQuery
    1043:1055:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1174:1184:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1258:1263:void onTextFocusChanged() -> onTextFocusChanged
    1236:1253:void onVoiceClicked() -> onVoiceClicked
    1269:1271:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    945:945:void postUpdateFocusedState() -> postUpdateFocusedState
    480:491:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1444:1462:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    429:429:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    670:672:void setIconified(boolean) -> setIconified
    642:645:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    441:441:void setImeOptions(int) -> setImeOptions
    464:464:void setInputType(int) -> setInputType
    764:766:void setMaxWidth(int) -> setMaxWidth
    520:520:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    529:529:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    511:511:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    550:550:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    538:538:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    571:579:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1510:1512:void setQuery(java.lang.CharSequence) -> setQuery
    594:595:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    723:725:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    406:419:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    695:696:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    745:747:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    933:940:void updateCloseButton() -> updateCloseButton
    949:959:void updateFocusedState() -> updateFocusedState
    1102:1103:void updateQueryHint() -> updateQueryHint
    1110:1140:void updateSearchAutoComplete() -> updateSearchAutoComplete
    924:929:void updateSubmitArea() -> updateSubmitArea
    915:919:void updateSubmitButton(boolean) -> updateSubmitButton
    869:889:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1154:1158:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    178:178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    181:181:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1713:1713:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1720:1720:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    185:185:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    188:189:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    331:331:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    334:335:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    376:376:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    380:380:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    976:976:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    979:988:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    998:998:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1002:1026:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1161:1161:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1168:1168:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1407:1407:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1415:1415:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1419:1419:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1427:1427:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    2029:2047:void <init>() -> <init>
    2063:2065:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2054:2056:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2072:2074:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1325:1325:void <clinit>() -> <clinit>
    1304:1304:void <init>(android.os.Parcelable) -> <init>
    1308:1309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1320:1321:java.lang.String toString() -> toString
    1314:1315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1325:1325:void <init>() -> <init>
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1328:1328:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object[] newArray(int) -> newArray
    1338:1338:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1842:1842:void <init>(android.content.Context) -> <init>
    1846:1846:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1850:1851:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1931:1931:boolean enoughToFilter() -> enoughToFilter
    1964:1968:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1876:1876:boolean isEmpty() -> isEmpty
    1983:1986:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1856:1858:void onFinishInflate() -> onFinishInflate
    1921:1922:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1939:1957:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1903:1914:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    2002:2021:void setImeVisibility(boolean) -> setImeVisibility
    1863:1863:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1868:1869:void setThreshold(int) -> setThreshold
    1992:1996:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1834:1834:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1837:1837:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1760:1766:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1778:1817:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1770:1773:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    96:106:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    276:322:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    218:236:void changeCursor(android.database.Cursor) -> changeCursor
    584:589:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    420:433:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    337:345:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    648:653:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    626:636:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    677:678:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    607:613:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    551:576:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    700:703:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    508:535:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    474:482:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    363:371:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    375:379:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    742:779:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    686:688:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    451:459:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    245:250:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    182:184:void notifyDataSetChanged() -> notifyDataSetChanged
    190:192:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    330:332:void onClick(android.view.View) -> onClick
    147:166:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    119:119:void setQueryRefinement(int) -> setQueryRefinement
    389:402:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    353:358:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    594:594:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    196:205:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    265:270:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    101:184:void <clinit>() -> <clinit>
    194:194:void <init>(android.content.Context) -> <init>
    205:205:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    219:294:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1029:1034:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    698:712:void applyThumbTint() -> applyThumbTint
    575:589:void applyTrackTint() -> applyTrackTint
    1038:1039:void cancelPositionAnimator() -> cancelPositionAnimator
    988:991:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1137:1197:void draw(android.graphics.Canvas) -> draw
    1357:1366:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1335:1351:void drawableStateChanged() -> drawableStateChanged
    1267:1272:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1279:1284:int getCompoundPaddingRight() -> getCompoundPaddingRight
    796:796:boolean getShowText() -> getShowText
    737:737:boolean getSplitTrack() -> getSplitTrack
    450:450:int getSwitchMinWidth() -> getSwitchMinWidth
    425:425:int getSwitchPadding() -> getSwitchPadding
    1044:1044:boolean getTargetCheckedState() -> getTargetCheckedState
    765:765:java.lang.CharSequence getTextOff() -> getTextOff
    746:746:java.lang.CharSequence getTextOn() -> getTextOn
    634:634:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1297:1302:int getThumbOffset() -> getThumbOffset
    1306:1317:int getThumbScrollRange() -> getThumbScrollRange
    473:473:int getThumbTextPadding() -> getThumbTextPadding
    665:665:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    694:694:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    513:513:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    543:543:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    571:571:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    892:904:boolean hitThumb(float,float) -> hitThumb
    1377:1389:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    878:884:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1326:1328:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1202:1262:void onDraw(android.graphics.Canvas) -> onDraw
    1395:1396:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1401:1411:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1081:1132:void onLayout(boolean,int,int,int,int) -> onLayout
    801:863:void onMeasure(int,int) -> onMeasure
    869:873:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    910:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1064:1075:void setChecked(boolean) -> setChecked
    1423:1422:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    785:787:void setShowText(boolean) -> setShowText
    727:728:void setSplitTrack(boolean) -> setSplitTrack
    437:438:void setSwitchMinWidth(int) -> setSwitchMinWidth
    413:414:void setSwitchPadding(int) -> setSwitchPadding
    304:339:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    370:384:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    396:401:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    354:358:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    774:775:void setTextOff(java.lang.CharSequence) -> setTextOff
    755:756:void setTextOn(java.lang.CharSequence) -> setTextOn
    603:610:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1053:1054:void setThumbPosition(float) -> setThumbPosition
    622:622:void setThumbResource(int) -> setThumbResource
    461:462:void setThumbTextPadding(int) -> setThumbTextPadding
    652:655:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    680:683:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    484:491:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    502:502:void setTrackResource(int) -> setTrackResource
    530:533:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    557:560:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1000:1024:void stopDrag(android.view.MotionEvent) -> stopDrag
    1059:1059:void toggle() -> toggle
    1372:1372:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    102:102:java.lang.Object get(java.lang.Object) -> get
    105:105:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
    110:110:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    28:40:void <clinit>() -> <clinit>
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    63:69:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    73:79:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    100:103:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:102:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:116:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:72:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:38:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:36:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:49:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:69:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    151:151:boolean getBoolean(int,boolean) -> getBoolean
    163:163:int getColor(int,int) -> getColor
    167:177:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    185:185:float getDimension(int,float) -> getDimension
    189:189:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    193:193:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    83:86:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    159:159:float getFloat(int,float) -> getFloat
    112:119:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    155:155:int getInt(int,int) -> getInt
    181:181:int getInteger(int,int) -> getInteger
    201:201:int getLayoutDimension(int,int) -> getLayoutDimension
    209:209:int getResourceId(int,int) -> getResourceId
    143:143:java.lang.String getString(int) -> getString
    139:139:java.lang.CharSequence getText(int) -> getText
    213:213:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    233:233:boolean hasValue(int) -> hasValue
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    245:245:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    228:228:void <init>(android.content.Context) -> <init>
    232:232:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    236:350:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2251:2256:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2139:2161:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1510:1525:void addSystemView(android.view.View,boolean) -> addSystemView
    515:515:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2221:2221:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void collapseActionView() -> collapseActionView
    593:594:void dismissPopupMenus() -> dismissPopupMenus
    1491:1500:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2288:2289:void ensureContentInsets() -> ensureContentInsets
    693:694:void ensureLogoView() -> ensureLogoView
    1152:1160:void ensureMenu() -> ensureMenu
    1165:1173:void ensureMenuView() -> ensureMenuView
    1481:1486:void ensureNavButtonView() -> ensureNavButtonView
    145:145:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2216:2216:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2198:2198:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2203:2210:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2168:2169:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2088:2093:int getChildTop(android.view.View,int) -> getChildTop
    2127:2127:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1035:1035:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1080:1080:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1266:1266:int getContentInsetEnd() -> getContentInsetEnd
    1388:1390:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1309:1309:int getContentInsetLeft() -> getContentInsetLeft
    1329:1329:int getContentInsetRight() -> getContentInsetRight
    1246:1246:int getContentInsetStart() -> getContentInsetStart
    1345:1347:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1441:1447:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1460:1462:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1475:1477:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1426:1428:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2186:2188:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    651:651:android.graphics.drawable.Drawable getLogo() -> getLogo
    689:689:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1126:1127:android.view.Menu getMenu() -> getMenu
    1178:1178:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    915:915:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1007:1007:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2315:2315:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1147:1148:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2319:2319:android.content.Context getPopupContext() -> getPopupContext
    377:377:int getPopupTheme() -> getPopupTheme
    792:792:java.lang.CharSequence getSubtitle() -> getSubtitle
    2308:2308:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    736:736:java.lang.CharSequence getTitle() -> getTitle
    474:474:int getTitleMarginBottom() -> getTitleMarginBottom
    452:452:int getTitleMarginEnd() -> getTitleMarginEnd
    408:408:int getTitleMarginStart() -> getTitleMarginStart
    430:430:int getTitleMarginTop() -> getTitleMarginTop
    2299:2299:android.widget.TextView getTitleTextView() -> getTitleTextView
    2192:2193:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2043:2056:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2231:2234:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    709:709:boolean hasExpandedActionView() -> hasExpandedActionView
    549:549:boolean hideOverflowMenu() -> hideOverflowMenu
    1191:1191:void inflateMenu(int) -> inflateMenu
    2260:2260:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    531:531:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    525:525:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2063:2070:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2076:2083:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1652:1669:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1627:1643:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1571:1572:void onDetachedFromWindow() -> onDetachedFromWindow
    1606:1619:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1825:2039:void onLayout(boolean,int,int,int,int) -> onLayout
    1695:1820:void onMeasure(int,int) -> onMeasure
    1543:1560:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    491:496:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1531:1537:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1582:1595:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1565:1566:void postShowOverflowMenu() -> postShowOverflowMenu
    2238:2245:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    1049:1049:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1063:1067:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1094:1094:void setCollapseIcon(int) -> setCollapseIcon
    1109:1112:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2270:2271:void setCollapsible(boolean) -> setCollapsible
    1409:1412:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1367:1370:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1225:1226:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    509:509:void setLogo(int) -> setLogo
    630:639:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    663:663:void setLogoDescription(int) -> setLogoDescription
    675:679:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    555:586:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2280:2283:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    929:929:void setNavigationContentDescription(int) -> setNavigationContentDescription
    943:947:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    966:966:void setNavigationIcon(int) -> setNavigationIcon
    985:994:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1020:1021:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1203:1203:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1136:1137:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    361:366:void setPopupTheme(int) -> setPopupTheme
    803:803:void setSubtitle(int) -> setSubtitle
    814:837:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    856:858:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    889:889:void setSubtitleTextColor(int) -> setSubtitleTextColor
    898:900:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    748:748:void setTitle(int) -> setTitle
    760:783:void setTitle(java.lang.CharSequence) -> setTitle
    485:486:void setTitleMarginBottom(int) -> setTitleMarginBottom
    463:465:void setTitleMarginEnd(int) -> setTitleMarginEnd
    419:421:void setTitleMarginStart(int) -> setTitleMarginStart
    441:443:void setTitleMarginTop(int) -> setTitleMarginTop
    845:847:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    868:868:void setTitleTextColor(int) -> setTitleTextColor
    877:879:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1676:1682:boolean shouldCollapse() -> shouldCollapse
    2182:2182:boolean shouldLayout(android.view.View) -> shouldLayout
    540:540:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    203:203:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    206:207:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    221:221:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    223:223:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1500:1500:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1503:1503:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2447:2447:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2545:2556:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2508:2535:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2453:2456:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2467:2483:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2354:2351:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2358:2359:void <init>(int,int) -> <init>
    2372:2374:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2378:2351:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2382:2385:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2389:2351:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2393:2396:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2425:2425:void <clinit>() -> <clinit>
    2409:2411:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2415:2415:void <init>(android.os.Parcelable) -> <init>
    2420:2422:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2425:2425:void <init>() -> <init>
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2428:2428:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2433:2433:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:96:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    101:182:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:232:void collapseActionView() -> collapseActionView
    208:210:int detectDisplayOptions() -> detectDisplayOptions
    375:375:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    380:380:int getDisplayOptions() -> getDisplayOptions
    677:677:android.view.Menu getMenu() -> getMenu
    458:458:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:286:void initIndeterminateProgress() -> initIndeterminateProgress
    281:281:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    651:651:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    448:448:void setCollapsible(boolean) -> setCollapsible
    540:545:void setCustomView(android.view.View) -> setCustomView
    196:201:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    385:414:void setDisplayOptions(int) -> setDisplayOptions
    422:432:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    301:301:void setIcon(int) -> setIcon
    306:307:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:312:void setLogo(int) -> setLogo
    317:318:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:370:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    672:672:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    360:360:void setMenuPrepared() -> setMenuPrepared
    620:621:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:626:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:594:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    273:275:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:256:void setTitle(java.lang.CharSequence) -> setTitle
    260:262:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:661:void setVisibility(int) -> setVisibility
    237:237:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:244:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:634:void updateHomeAccessibility() -> updateHomeAccessibility
    611:614:void updateNavigationIcon() -> updateNavigationIcon
    323:330:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:188:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:586:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:580:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:574:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    41:44:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    108:116:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:224:void cancelPendingShow() -> cancelPendingShow
    250:251:void clearAnchorPos() -> clearAnchorPos
    192:206:void hide() -> hide
    129:140:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:123:boolean onLongClick(android.view.View) -> onLongClick
    159:159:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:220:void scheduleShow() -> scheduleShow
    210:215:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:104:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:188:void show(boolean) -> show
    235:242:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:57:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:63:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    58:71:void <init>(android.content.Context) -> <init>
    104:181:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    187:202:android.view.View getAppRootView(android.view.View) -> getAppRootView
    90:95:void hide() -> hide
    99:99:boolean isShowing() -> isShowing
    77:86:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    55:56:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    196:235:android.view.View inflate() -> inflate
    149:149:void onMeasure(int,int) -> onMeasure
    97:97:void setInflatedId(int) -> setInflatedId
    137:137:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:129:void setLayoutResource(int) -> setLayoutResource
    248:248:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:183:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:50:void <clinit>() -> <clinit>
    66:70:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:90:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> getIOThreadExecutor
    69:76:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:45:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:53:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> createAsync
    59:59:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:72:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:49:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:76:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:50:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:57:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    150:151:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    184:201:boolean equals(java.lang.Object) -> equals
    46:51:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    207:209:int hashCode() -> hashCode
    140:141:java.util.Iterator iterator() -> iterator
    160:161:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:85:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:70:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:283:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:300:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:364:void <init>(java.lang.Object,java.lang.Object) -> <init>
    395:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    318:316:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:326:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:236:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:272:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:257:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.cardview.R$styleable -> androidx.cardview.R$styleable:
    54:54:void <clinit>() -> <clinit>
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
    81:92:void <clinit>() -> <clinit>
    113:113:void <init>(android.content.Context) -> <init>
    117:117:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    121:162:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> access$001
    79:79:void access$101(androidx.cardview.widget.CardView,int) -> access$101
    79:79:void access$201(androidx.cardview.widget.CardView,int) -> access$201
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:260:void onMeasure(int,int) -> onMeasure
    283:283:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:293:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:376:void setCardElevation(float) -> setCardElevation
    402:402:void setMaxCardElevation(float) -> setMaxCardElevation
    272:273:void setMinimumHeight(int) -> setMinimumHeight
    266:267:void setMinimumWidth(int) -> setMinimumWidth
    441:443:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:354:void setRadius(float) -> setRadius
    203:205:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$1:
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    485:485:android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    490:490:android.view.View getCardView() -> getCardView
    463:463:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    458:458:boolean getUseCompatPadding() -> getUseCompatPadding
    452:453:void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    475:479:void setMinWidthHeightInternal(int,int) -> setMinWidthHeightInternal
    468:469:void setShadowPadding(int,int,int,int) -> setShadowPadding
androidx.cardview.widget.CardViewApi17Impl -> androidx.cardview.widget.CardViewApi17Impl:
    25:25:void <init>() -> <init>
    29:29:void initStatic() -> initStatic
androidx.cardview.widget.CardViewApi17Impl$1 -> androidx.cardview.widget.CardViewApi17Impl$1:
    30:30:void <init>(androidx.cardview.widget.CardViewApi17Impl) -> <init>
    34:34:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.CardViewApi21Impl:
    26:26:void <init>() -> <init>
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> getCardBackground
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    31:37:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    103:103:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> onCompatPaddingChanged
    108:108:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    113:113:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    78:78:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    51:53:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    42:42:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    88:98:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewBaseImpl -> androidx.cardview.widget.CardViewBaseImpl:
    27:29:void <init>() -> <init>
    93:93:androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float) -> createBackground
    125:125:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    146:146:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    157:157:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    167:167:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    162:162:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    136:136:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    171:171:androidx.cardview.widget.RoundRectDrawableWithShadow getShadowBackground(androidx.cardview.widget.CardViewDelegate) -> getShadowBackground
    37:37:void initStatic() -> initStatic
    83:87:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    114:115:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    120:120:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    141:141:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    151:152:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    130:131:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    99:103:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewBaseImpl$1 -> androidx.cardview.widget.CardViewBaseImpl$1:
    38:38:void <init>(androidx.cardview.widget.CardViewBaseImpl) -> <init>
    43:74:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.RoundRectDrawable:
    55:61:void <init>(android.content.res.ColorStateList,float) -> <init>
    209:210:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:100:void draw(android.graphics.Canvas) -> draw
    164:164:android.content.res.ColorStateList getColor() -> getColor
    127:127:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:122:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:189:boolean onStateChange(int[]) -> onStateChange
    141:141:void setAlpha(int) -> setAlpha
    65:66:void setBackground(android.content.res.ColorStateList) -> setBackground
    159:160:void setColor(android.content.res.ColorStateList) -> setColor
    146:146:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:78:void setPadding(float,boolean,boolean) -> setPadding
    131:136:void setRadius(float) -> setRadius
    169:171:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:178:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    106:115:void updateBounds(android.graphics.Rect) -> updateBounds
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.RoundRectDrawableWithShadow:
    41:41:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float) -> <init>
    334:337:void buildComponents(android.graphics.Rect) -> buildComponents
    297:327:void buildShadowCorners() -> buildShadowCorners
    190:190:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    181:181:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    238:245:void draw(android.graphics.Canvas) -> draw
    249:293:void drawShadow(android.graphics.Canvas) -> drawShadow
    382:382:android.content.res.ColorStateList getColor() -> getColor
    341:341:float getCornerRadius() -> getCornerRadius
    345:345:void getMaxShadowAndCornerPadding(android.graphics.Rect) -> getMaxShadowAndCornerPadding
    361:361:float getMaxShadowSize() -> getMaxShadowSize
    371:373:float getMinHeight() -> getMinHeight
    365:367:float getMinWidth() -> getMinWidth
    170:174:boolean getPadding(android.graphics.Rect) -> getPadding
    357:357:float getShadowSize() -> getShadowSize
    210:210:boolean isStateful() -> isStateful
    137:138:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    198:204:boolean onStateChange(int[]) -> onStateChange
    124:125:void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    130:132:void setAlpha(int) -> setAlpha
    108:109:void setBackground(android.content.res.ColorStateList) -> setBackground
    377:378:void setColor(android.content.res.ColorStateList) -> setColor
    215:215:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    228:225:void setCornerRadius(float) -> setCornerRadius
    353:353:void setMaxShadowSize(float) -> setMaxShadowSize
    150:143:void setShadowSize(float,float) -> setShadowSize
    349:349:void setShadowSize(float) -> setShadowSize
    117:117:int toEven(float) -> toEven
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:57:void <init>() -> <init>
    64:64:void <init>(int) -> <init>
    71:71:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:144:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:119:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:104:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:114:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    50:51:void <clinit>() -> <clinit>
    240:240:void <init>() -> <init>
    247:254:void <init>(int) -> <init>
    361:401:boolean add(java.lang.Object) -> add
    719:722:boolean addAll(java.util.Collection) -> addAll
    161:195:void allocArrays(int) -> allocArrays
    282:286:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:706:boolean containsAll(java.util.Collection) -> containsAll
    295:303:void ensureCapacity(int) -> ensureCapacity
    562:571:boolean equals(java.lang.Object) -> equals
    200:231:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:593:int hashCode() -> hashCode
    83:110:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:148:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:435:boolean remove(java.lang.Object) -> remove
    735:736:boolean removeAll(java.util.Collection) -> removeAll
    447:491:java.lang.Object removeAt(int) -> removeAt
    750:752:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:529:java.lang.Object[] toArray() -> toArray
    536:543:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:678:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:663:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:673:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    72:79:void <init>(int) -> <init>
    456:482:void append(long,java.lang.Object) -> append
    440:448:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    132:132:void delete(long) -> delete
    217:237:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    353:357:long keyAt(int) -> keyAt
    248:290:void put(long,java.lang.Object) -> put
    139:144:void remove(long) -> remove
    171:173:void removeAt(int) -> removeAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:53:void <init>(int) -> <init>
    88:84:java.lang.Object get(java.lang.Object) -> get
    143:139:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    348:350:java.lang.String toString() -> toString
    171:187:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:461:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    518:522:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:493:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:509:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    43:45:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    64:65:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:184:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:204:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    259:263:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:283:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    349:351:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:310:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    79:81:void <init>(androidx.collection.MapCollections) -> <init>
    137:138:boolean equals(java.lang.Object) -> equals
    110:111:java.lang.Object getKey() -> getKey
    119:120:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:152:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:91:java.util.Map$Entry next() -> next
    99:100:void remove() -> remove
    128:129:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:371:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:383:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:404:boolean remove(java.lang.Object) -> remove
    412:417:boolean removeAll(java.util.Collection) -> removeAll
    428:433:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    246:253:void <init>(int) -> <init>
    260:262:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    684:724:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:748:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:482:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:508:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:525:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:540:java.lang.Object remove(java.lang.Object) -> remove
    553:557:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:623:java.lang.Object removeAt(int) -> removeAt
    637:639:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:657:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    410:411:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    72:79:void <init>(int) -> <init>
    460:486:void append(int,java.lang.Object) -> append
    444:452:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    230:250:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    401:405:int indexOfKey(int) -> indexOfKey
    419:424:int indexOfValue(java.lang.Object) -> indexOfValue
    361:365:int keyAt(int) -> keyAt
    261:303:void put(int,java.lang.Object) -> put
    139:144:void remove(int) -> remove
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.constraintlayout.motion.utils.Easing -> androidx.constraintlayout.motion.utils.Easing:
    29:40:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    73:73:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.Debug -> androidx.constraintlayout.motion.widget.Debug:
    84:85:java.lang.String getName(android.view.View) -> getName
androidx.constraintlayout.solver.ArrayLinkedVariables -> androidx.constraintlayout.solver.ArrayLinkedVariables:
    100:102:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    229:333:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> add
    512:565:androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> chooseSubject
    385:398:void clear() -> clear
    408:417:boolean containsKey(androidx.constraintlayout.solver.SolverVariable) -> containsKey
    458:462:void divideByAmount(float) -> divideByAmount
    759:765:float get(androidx.constraintlayout.solver.SolverVariable) -> get
    691:712:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(boolean[],androidx.constraintlayout.solver.SolverVariable) -> getPivotCandidate
    724:730:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> getVariable
    742:748:float getVariableValue(int) -> getVariableValue
    443:447:void invert() -> invert
    491:491:boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem) -> isNew
    118:211:void put(androidx.constraintlayout.solver.SolverVariable,float) -> put
    345:376:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> remove
    799:805:java.lang.String toString() -> toString
    583:612:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
    626:658:void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[]) -> updateFromSystem
androidx.constraintlayout.solver.ArrayRow -> androidx.constraintlayout.solver.ArrayRow:
    33:34:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    324:325:androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int) -> addError
    481:492:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    153:153:androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int) -> addSingleError
    408:416:boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> chooseSubject
    455:457:void clear() -> clear
    282:317:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowCentering
    114:117:androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int) -> createRowDefinition
    331:333:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionPercent
    351:354:androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionRatio
    215:222:androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> createRowEqualMatchDimensions
    123:127:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    140:147:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    167:176:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowGreaterThan
    196:205:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowLowerThan
    369:373:androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowWithAngle
    391:394:void ensurePositiveConstant() -> ensurePositiveConstant
    497:497:androidx.constraintlayout.solver.SolverVariable getKey() -> getKey
    450:450:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    38:38:boolean hasKeyVariable() -> hasKeyVariable
    110:110:boolean hasVariable(androidx.constraintlayout.solver.SolverVariable) -> hasVariable
    466:473:void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> initFromRow
    445:445:boolean isEmpty() -> isEmpty
    422:422:androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable) -> pickPivot
    426:438:void pivot(androidx.constraintlayout.solver.SolverVariable) -> pivot
    103:106:void reset() -> reset
    51:94:java.lang.String toReadableString() -> toReadableString
    46:46:java.lang.String toString() -> toString
androidx.constraintlayout.solver.Cache -> androidx.constraintlayout.solver.Cache:
    21:24:void <init>() -> <init>
androidx.constraintlayout.solver.GoalRow -> androidx.constraintlayout.solver.GoalRow:
    22:22:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    27:30:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
androidx.constraintlayout.solver.LinearSystem -> androidx.constraintlayout.solver.LinearSystem:
    79:84:void <init>() -> <init>
    306:318:androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> acquireSolverVariable
    1342:1359:void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> addCenterPoint
    1111:1116:void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addCentering
    465:534:void addConstraint(androidx.constraintlayout.solver.ArrayRow) -> addConstraint
    1141:1146:androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addEquality
    1159:1177:void addEquality(androidx.constraintlayout.solver.SolverVariable,int) -> addEquality
    242:242:void addError(androidx.constraintlayout.solver.ArrayRow) -> addError
    1036:1048:void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addGreaterBarrier
    1010:1018:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addGreaterThan
    1077:1089:void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addLowerBarrier
    1062:1070:void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addLowerThan
    1123:1128:void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int) -> addRatio
    539:545:void addRow(androidx.constraintlayout.solver.ArrayRow) -> addRow
    259:260:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int) -> addSingleError
    854:856:void computeValues() -> computeValues
    284:296:androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String) -> createErrorVariable
    227:237:androidx.constraintlayout.solver.SolverVariable createExtraVariable() -> createExtraVariable
    174:194:androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    201:207:androidx.constraintlayout.solver.ArrayRow createRow() -> createRow
    1243:1247:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean) -> createRowDimensionPercent
    212:222:androidx.constraintlayout.solver.SolverVariable createSlackVariable() -> createSlackVariable
    720:815:int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row) -> enforceBFS
    974:974:androidx.constraintlayout.solver.Cache getCache() -> getCache
    92:92:androidx.constraintlayout.solver.Metrics getMetrics() -> getMetrics
    345:347:int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    113:122:void increaseTableSize() -> increaseTableSize
    378:402:void minimize() -> minimize
    417:441:void minimizeGoal(androidx.constraintlayout.solver.LinearSystem$Row) -> minimizeGoal
    560:667:int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean) -> optimize
    130:135:void releaseRows() -> releaseRows
    143:163:void reset() -> reset
    449:452:void updateRowFromVariables(androidx.constraintlayout.solver.ArrayRow) -> updateRowFromVariables
androidx.constraintlayout.solver.Pools$SimplePool -> androidx.constraintlayout.solver.Pools$SimplePool:
    96:98:void <init>(int) -> <init>
    106:110:java.lang.Object acquire() -> acquire
    123:125:boolean release(java.lang.Object) -> release
    133:145:void releaseAll(java.lang.Object[],int) -> releaseAll
androidx.constraintlayout.solver.SolverVariable -> androidx.constraintlayout.solver.SolverVariable:
    119:120:void <init>(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> <init>
    163:172:void addToRow(androidx.constraintlayout.solver.ArrayRow) -> addToRow
    89:89:void increaseErrorId() -> increaseErrorId
    176:182:void removeFromRow(androidx.constraintlayout.solver.ArrayRow) -> removeFromRow
    197:204:void reset() -> reset
    218:218:void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> setType
    233:233:java.lang.String toString() -> toString
    189:193:void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow) -> updateReferencesWithNewDefinition
androidx.constraintlayout.solver.SolverVariable$Type -> androidx.constraintlayout.solver.SolverVariable$Type:
    69:65:void <clinit>() -> <clinit>
    65:65:void <init>(java.lang.String,int) -> <init>
    65:65:androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    65:65:androidx.constraintlayout.solver.SolverVariable$Type[] values() -> values
androidx.constraintlayout.solver.widgets.Barrier -> androidx.constraintlayout.solver.widgets.Barrier:
    29:39:void <init>() -> <init>
    73:144:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    54:54:boolean allowsGoneWidget() -> allowsGoneWidget
    46:46:int getBarrierType() -> getBarrierType
    154:154:int getMargin() -> getMargin
    52:52:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    49:49:void setBarrierType(int) -> setBarrierType
    150:150:void setMargin(int) -> setMargin
androidx.constraintlayout.solver.widgets.Chain -> androidx.constraintlayout.solver.widgets.Chain:
    51:64:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int) -> applyChainConstraints
    80:447:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> applyChainConstraints
androidx.constraintlayout.solver.widgets.ChainHead -> androidx.constraintlayout.solver.widgets.ChainHead:
    62:65:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> <init>
    232:235:void define() -> define
    83:196:void defineChainProperties() -> defineChainProperties
    76:76:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> isMatchConstraintEqualityCandidate
androidx.constraintlayout.solver.widgets.ConstraintAnchor -> androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    66:68:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> <init>
    142:156:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,boolean) -> connect
    105:112:int getMargin() -> getMargin
    92:92:androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner() -> getOwner
    75:75:androidx.constraintlayout.solver.SolverVariable getSolverVariable() -> getSolverVariable
    119:119:androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget() -> getTarget
    98:98:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType() -> getType
    176:176:boolean isConnected() -> isConnected
    188:199:boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> isValidConnection
    125:127:void reset() -> reset
    81:84:void resetSolverVariable(androidx.constraintlayout.solver.Cache) -> resetSolverVariable
    331:331:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1 -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$1:
    196:196:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type:
    37:37:void <clinit>() -> <clinit>
    37:37:void <init>(java.lang.String,int) -> <init>
    37:37:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    37:37:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidget -> androidx.constraintlayout.solver.widgets.ConstraintWidget:
    354:355:void <init>() -> <init>
    402:409:void addAnchors() -> addAnchors
    1972:2208:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    1409:1409:boolean allowedInBarrier() -> allowedInBarrier
    2310:2459:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    483:485:void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> connectCircularConstraint
    579:584:void createObjectVariables(androidx.constraintlayout.solver.LinearSystem) -> createObjectVariables
    1735:1737:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    864:864:int getBaselineDistance() -> getBaselineDistance
    841:843:float getBiasPercent(int) -> getBiasPercent
    781:781:int getBottom() -> getBottom
    874:874:java.lang.Object getCompanionWidget() -> getCompanionWidget
    530:530:java.lang.String getDebugName() -> getDebugName
    1792:1794:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> getDimensionBehaviour
    1111:1111:float getDimensionRatio() -> getDimensionRatio
    1120:1120:int getDimensionRatioSide() -> getDimensionRatioSide
    688:691:int getHeight() -> getHeight
    819:819:float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    1382:1382:int getHorizontalChainStyle() -> getHorizontalChainStyle
    1772:1772:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    789:793:int getHorizontalMargin() -> getHorizontalMargin
    702:704:int getLength(int) -> getLength
    135:135:int getMaxHeight() -> getMaxHeight
    139:139:int getMaxWidth() -> getMaxWidth
    745:745:int getMinHeight() -> getMinHeight
    736:736:int getMinWidth() -> getMinWidth
    1858:1863:androidx.constraintlayout.solver.widgets.ConstraintWidget getNextChainMember(int) -> getNextChainMember
    427:427:androidx.constraintlayout.solver.widgets.ConstraintWidget getParent() -> getParent
    1839:1844:androidx.constraintlayout.solver.widgets.ConstraintWidget getPreviousChainMember(int) -> getPreviousChainMember
    772:772:int getRight() -> getRight
    69:71:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun getRun(int) -> getRun
    829:829:float getVerticalBiasPercent() -> getVerticalBiasPercent
    1402:1402:int getVerticalChainStyle() -> getVerticalChainStyle
    1781:1781:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    803:807:int getVerticalMargin() -> getVerticalMargin
    521:521:int getVisibility() -> getVisibility
    640:643:int getWidth() -> getWidth
    616:619:int getX() -> getX
    628:631:int getY() -> getY
    855:855:boolean hasBaseline() -> hasBaseline
    1427:1429:void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    1949:1949:boolean isChainHead(int) -> isChainHead
    1824:1824:boolean isInHorizontalChain() -> isInHorizontalChain
    1905:1905:boolean isInVerticalChain() -> isInVerticalChain
    289:343:void reset() -> reset
    388:395:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
    1309:1309:void setBaselineDistance(int) -> setBaselineDistance
    1319:1319:void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    537:537:void setDebugName(java.lang.String) -> setDebugName
    1039:1040:void setDimensionRatio(java.lang.String) -> setDimensionRatio
    1198:1222:void setFrame(int,int,int,int) -> setFrame
    167:167:void setHasBaseline(boolean) -> setHasBaseline
    977:979:void setHeight(int) -> setHeight
    1130:1130:void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    1372:1372:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    1252:1255:void setHorizontalDimension(int,int) -> setHorizontalDimension
    1806:1806:void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    1006:1011:void setHorizontalMatchStyle(int,int,int,float) -> setHorizontalMatchStyle
    1353:1353:void setHorizontalWeight(float) -> setHorizontalWeight
    147:147:void setMaxHeight(int) -> setMaxHeight
    143:143:void setMaxWidth(int) -> setMaxWidth
    1163:1165:void setMinHeight(int) -> setMinHeight
    1150:1152:void setMinWidth(int) -> setMinWidth
    911:912:void setOrigin(int,int) -> setOrigin
    436:436:void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> setParent
    1140:1140:void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    1392:1392:void setVerticalChainStyle(int) -> setVerticalChainStyle
    1266:1269:void setVerticalDimension(int,int) -> setVerticalDimension
    1815:1815:void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    1024:1029:void setVerticalMatchStyle(int,int,int,float) -> setVerticalMatchStyle
    1362:1362:void setVerticalWeight(float) -> setVerticalWeight
    512:512:void setVisibility(int) -> setVisibility
    965:967:void setWidth(int) -> setWidth
    892:892:void setX(int) -> setX
    901:901:void setY(int) -> setY
    2228:2274:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> setupDimensionRatio
    595:595:java.lang.String toString() -> toString
    2740:2792:void updateFromRuns(boolean,boolean) -> updateFromRuns
    2611:2637:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.ConstraintWidget$1 -> androidx.constraintlayout.solver.widgets.ConstraintWidget$1:
    2339:933:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour -> androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour:
    186:185:void <clinit>() -> <clinit>
    185:185:void <init>(java.lang.String,int) -> <init>
    185:185:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    185:185:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer -> androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    170:161:void <init>() -> <init>
    665:667:void addChain(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> addChain
    273:313:boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem) -> addChildrenToSolver
    678:683:void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addHorizontalChain
    693:698:void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addVerticalChain
    66:66:boolean directMeasure(boolean) -> directMeasure
    85:85:boolean directMeasureSetup(boolean) -> directMeasureSetup
    89:89:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    129:129:androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer getMeasurer() -> getMeasurer
    210:210:int getOptimizationLevel() -> getOptimizationLevel
    54:54:void invalidateGraph() -> invalidateGraph
    61:61:void invalidateMeasures() -> invalidateMeasures
    255:255:boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    373:373:boolean isRtl() -> isRtl
    248:248:boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    392:586:void layout() -> layout
    111:113:void measure(int,int,int,int,int,int,int,int,int) -> measure
    220:220:boolean optimizeFor(int) -> optimizeFor
    235:241:void reset() -> reset
    652:653:void resetChains() -> resetChains
    124:125:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
    201:201:void setOptimizationLevel(int) -> setOptimizationLevel
    364:364:void setRtl(boolean) -> setRtl
    324:329:void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> updateChildrenFromSolver
    335:339:void updateFromRuns(boolean,boolean) -> updateFromRuns
    118:118:void updateHierarchy() -> updateHierarchy
androidx.constraintlayout.solver.widgets.Guideline -> androidx.constraintlayout.solver.widgets.Guideline:
    48:53:void <init>() -> <init>
    206:237:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    134:156:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    118:118:int getOrientation() -> getOrientation
    197:197:int getRelativeBegin() -> getRelativeBegin
    201:201:int getRelativeEnd() -> getRelativeEnd
    193:193:float getRelativePercent() -> getRelativePercent
    178:180:void setGuideBegin(int) -> setGuideBegin
    186:188:void setGuideEnd(int) -> setGuideEnd
    170:172:void setGuidePercent(float) -> setGuidePercent
    86:99:void setOrientation(int) -> setOrientation
    245:258:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.Guideline$1 -> androidx.constraintlayout.solver.widgets.Guideline$1:
    134:134:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.HelperWidget -> androidx.constraintlayout.solver.widgets.HelperWidget:
    9:11:void <init>() -> <init>
    24:28:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    47:48:void removeAllIds() -> removeAllIds
androidx.constraintlayout.solver.widgets.Optimizer -> androidx.constraintlayout.solver.widgets.Optimizer:
    49:49:void <clinit>() -> <clinit>
    62:92:void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> checkMatchParent
androidx.constraintlayout.solver.widgets.VirtualLayout -> androidx.constraintlayout.solver.widgets.VirtualLayout:
    26:37:void <init>() -> <init>
    100:103:void captureWidgets() -> captureWidgets
    83:83:boolean needSolverPass() -> needSolverPass
    96:96:void updateConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.solver.widgets.WidgetContainer -> androidx.constraintlayout.solver.widgets.WidgetContainer:
    35:26:void <init>() -> <init>
    72:77:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    108:108:java.util.ArrayList getChildren() -> getChildren
    158:165:void layout() -> layout
    98:99:void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> remove
    181:181:void removeAllChildren() -> removeAllChildren
    62:63:void reset() -> reset
    172:176:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency:
    22:22:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure:
    74:75:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    371:400:boolean measure(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> measure
    79:107:void measureChildren(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> measureChildren
    111:122:void solveLinearSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,java.lang.String,int,int) -> solveLinearSystem
    144:358:void solverMeasure(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int) -> solverMeasure
    54:65:void updateHierarchy(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateHierarchy
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure:
    408:408:void <init>() -> <init>
androidx.constraintlayout.solver.widgets.analyzer.ChainRun -> androidx.constraintlayout.solver.widgets.analyzer.ChainRun:
    36:38:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> <init>
    523:579:void apply() -> apply
    494:496:void applyToWidget() -> applyToWidget
    77:102:void build() -> build
    108:110:void clear() -> clear
    501:504:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    511:514:androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    65:71:long getWrapDimension() -> getWrapDimension
    54:57:boolean supportsWrapComputation() -> supportsWrapComputation
    43:47:java.lang.String toString() -> toString
    122:486:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph -> androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph:
    51:53:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    719:762:void applyGroup(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,int,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,java.util.ArrayList,androidx.constraintlayout.solver.widgets.analyzer.RunGroup) -> applyGroup
    391:454:boolean basicMeasureWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> basicMeasureWidgets
    637:646:void buildGraph() -> buildGraph
    650:701:void buildGraph(java.util.ArrayList) -> buildGraph
    64:69:int computeWrap(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrap
    111:232:boolean directMeasure(boolean) -> directMeasure
    238:266:boolean directMeasureSetup(boolean) -> directMeasureSetup
    273:362:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    768:790:void findGroup(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int,java.util.ArrayList) -> findGroup
    623:623:void invalidateGraph() -> invalidateGraph
    630:630:void invalidateMeasures() -> invalidateMeasures
    379:387:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    572:614:void measureWidgets() -> measureWidgets
    60:60:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode:
    37:38:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    100:102:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> addDependency
    119:124:void clear() -> clear
    50:57:void resolve(int) -> resolve
    45:46:java.lang.String toString() -> toString
    62:95:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type:
    27:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String) -> valueOf
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values() -> values
androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency:
    24:28:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    33:39:void resolve(int) -> resolve
androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference -> androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference:
    25:28:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    48:49:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    69:106:void apply() -> apply
    112:116:void applyToWidget() -> applyToWidget
    33:33:void clear() -> clear
    54:64:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HelperReferences -> androidx.constraintlayout.solver.widgets.analyzer.HelperReferences:
    24:24:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    44:45:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    50:69:void apply() -> apply
    144:149:void applyToWidget() -> applyToWidget
    29:30:void clear() -> clear
    122:137:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun:
    37:37:void <clinit>() -> <clinit>
    40:43:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    81:262:void apply() -> apply
    546:547:void applyToWidget() -> applyToWidget
    53:57:void clear() -> clear
    294:282:void computeInsetRatio(int[],int,int,int,int,float,int) -> computeInsetRatio
    62:65:void reset() -> reset
    70:71:boolean supportsWrapComputation() -> supportsWrapComputation
    48:48:java.lang.String toString() -> toString
    303:542:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1:
    303:303:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.RunGroup -> androidx.constraintlayout.solver.widgets.analyzer.RunGroup:
    43:46:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int) -> <init>
    52:52:void add(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> add
    121:179:long computeWrapSize(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrapSize
    89:114:long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseEnd
    57:82:long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseStart
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun:
    38:42:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    197:415:void apply() -> apply
    421:422:void applyToWidget() -> applyToWidget
    52:57:void clear() -> clear
    62:66:void reset() -> reset
    71:72:boolean supportsWrapComputation() -> supportsWrapComputation
    47:47:java.lang.String toString() -> toString
    82:191:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1:
    82:82:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun:
    43:44:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    280:282:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int) -> addTarget
    286:291:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency) -> addTarget
    234:248:int getLimitedDimension(int,int) -> getLimitedDimension
    95:104:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> getTarget
    258:269:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> getTarget
    295:296:long getWrapDimension() -> getWrapDimension
    301:301:boolean isResolved() -> isResolved
    171:173:void resolveDimension(int,int) -> resolveDimension
    127:167:void updateRunCenter(androidx.constraintlayout.solver.widgets.analyzer.Dependency,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> updateRunCenter
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1:
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType:
    303:303:void <clinit>() -> <clinit>
    303:303:void <init>(java.lang.String,int) -> <init>
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String) -> valueOf
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values() -> values
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
    118:119:void <init>(android.content.Context) -> <init>
    219:219:boolean allowsGoneWidget() -> allowsGoneWidget
    239:239:int getMargin() -> getMargin
    138:138:int getType() -> getType
    193:211:void init(android.util.AttributeSet) -> init
    184:184:void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> resolveRtl
    215:215:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    228:230:void setDpMargin(int) -> setDpMargin
    248:248:void setMargin(int) -> setMargin
    147:147:void setType(int) -> setType
    151:178:void updateType(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> updateType
androidx.constraintlayout.widget.ConstraintAttribute -> androidx.constraintlayout.widget.ConstraintAttribute:
    211:214:void <init>(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType,java.lang.Object) -> <init>
    217:220:void <init>(androidx.constraintlayout.widget.ConstraintAttribute,java.lang.Object) -> <init>
    250:267:java.util.HashMap extractAttributes(java.util.HashMap,android.view.View) -> extractAttributes
    399:444:void parse(android.content.Context,org.xmlpull.v1.XmlPullParser,java.util.HashMap) -> parse
    278:319:void setAttributes(android.view.View,java.util.HashMap) -> setAttributes
    225:234:void setValue(java.lang.Object) -> setValue
androidx.constraintlayout.widget.ConstraintAttribute$1 -> androidx.constraintlayout.widget.ConstraintAttribute$1:
    88:88:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType -> androidx.constraintlayout.widget.ConstraintAttribute$AttributeType:
    52:51:void <clinit>() -> <clinit>
    51:51:void <init>(java.lang.String,int) -> <init>
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String) -> valueOf
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values() -> values
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
    78:80:void <init>(android.content.Context) -> <init>
    226:262:void addID(java.lang.String) -> addID
    180:184:void addRscID(int) -> addRscID
    278:293:int findId(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String) -> findId
    161:161:int[] getReferencedIds() -> getReferencedIds
    100:106:void init(android.util.AttributeSet) -> init
    200:203:void onMeasure(int,int) -> onMeasure
    304:316:void setIds(java.lang.String) -> setIds
    169:172:void setReferencedIds(int[]) -> setReferencedIds
    328:356:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
    212:218:void validateParams() -> validateParams
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
    564:565:void <init>(android.content.Context) -> <init>
    569:570:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    574:575:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    580:581:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    479:479:int access$000(androidx.constraintlayout.widget.ConstraintLayout) -> access$000
    479:479:int access$100(androidx.constraintlayout.widget.ConstraintLayout) -> access$100
    479:479:java.util.ArrayList access$200(androidx.constraintlayout.widget.ConstraintLayout) -> access$200
    874:876:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1157:1380:void applyConstraintsFromLayoutParams(boolean,android.view.View,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyConstraintsFromLayoutParams
    1741:1741:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1767:1800:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    479:479:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1725:1725:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    479:479:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1717:1717:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1733:1733:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    554:557:java.lang.Object getDesignInformation(int,java.lang.Object) -> getDesignInformation
    1027:1027:int getMaxHeight() -> getMaxHeight
    1017:1017:int getMaxWidth() -> getMaxWidth
    980:980:int getMinHeight() -> getMinHeight
    970:970:int getMinWidth() -> getMinWidth
    1709:1709:int getOptimizationLevel() -> getOptimizationLevel
    1388:1400:androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int) -> getTargetWidget
    1759:1759:android.view.View getViewById(int) -> getViewById
    1411:1413:androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    816:857:void init(android.util.AttributeSet,int,int) -> init
    1632:1670:void onLayout(boolean,int,int,int,int) -> onLayout
    1518:1540:void onMeasure(int,int) -> onMeasure
    896:918:void onViewAdded(android.view.View) -> onViewAdded
    926:934:void onViewRemoved(android.view.View) -> onViewRemoved
    866:866:void parseLayoutDescription(int) -> parseLayoutDescription
    885:887:void removeView(android.view.View) -> removeView
    3028:3032:void requestLayout() -> requestLayout
    1478:1504:void resolveMeasuredDimension(int,int,int,int,boolean,boolean) -> resolveMeasuredDimension
    1438:1460:void resolveSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> resolveSystem
    1049:1147:void setChildrenConstraints() -> setChildrenConstraints
    1750:1750:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    536:546:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> setDesignInformation
    589:591:void setId(int) -> setId
    1002:1006:void setMaxHeight(int) -> setMaxHeight
    989:993:void setMaxWidth(int) -> setMaxWidth
    956:960:void setMinHeight(int) -> setMinHeight
    943:947:void setMinWidth(int) -> setMinWidth
    1851:1852:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    1698:1699:void setOptimizationLevel(int) -> setOptimizationLevel
    1554:1606:void setSelfDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int) -> setSelfDimensionBehaviour
    1031:1043:boolean updateHierarchy() -> updateHierarchy
androidx.constraintlayout.widget.ConstraintLayout$1 -> androidx.constraintlayout.widget.ConstraintLayout$1:
    637:637:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    2483:2833:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2884:2278:void <init>(int,int) -> <init>
    2888:2278:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2897:3006:void resolveLayoutDirection(int) -> resolveLayoutDirection
    2837:2879:void validate() -> validate
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
    2425:2478:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$Measurer -> androidx.constraintlayout.widget.ConstraintLayout$Measurer:
    604:605:void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout) -> <init>
    795:807:void didMeasures() -> didMeasures
    615:790:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure) -> measure
androidx.constraintlayout.widget.ConstraintLayoutStates -> androidx.constraintlayout.widget.ConstraintLayoutStates:
    48:50:void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    285:340:void load(android.content.Context,int) -> load
    347:370:void parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
androidx.constraintlayout.widget.ConstraintLayoutStates$State -> androidx.constraintlayout.widget.ConstraintLayoutStates$State:
    145:167:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    171:171:void add(androidx.constraintlayout.widget.ConstraintLayoutStates$Variant) -> add
androidx.constraintlayout.widget.ConstraintLayoutStates$Variant -> androidx.constraintlayout.widget.ConstraintLayoutStates$Variant:
    193:235:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.ConstraintSet:
    220:399:void <clinit>() -> <clinit>
    74:223:void <init>() -> <init>
    74:74:int access$100(android.content.res.TypedArray,int,int) -> access$100
    74:74:int[] access$200() -> access$200
    1649:1759:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean) -> applyToInternal
    1466:1466:void clone(android.content.Context,int) -> clone
    1487:1534:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> clone
    1545:1563:void clone(androidx.constraintlayout.widget.Constraints) -> clone
    3695:3725:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    3374:3377:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    3233:3262:void load(android.content.Context,int) -> load
    3278:3359:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    3366:3368:int lookupID(android.content.res.TypedArray,int,int) -> lookupID
    3382:3459:void populateConstraint(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> populateConstraint
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.ConstraintSet$Constraint:
    1244:1251:void <init>() -> <init>
    1244:1244:void access$000(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> access$000
    1244:1244:void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$300
    1244:1244:void access$400(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$400
    1389:1454:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyTo
    1244:1244:java.lang.Object clone() -> clone
    1285:1290:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
    1324:1384:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> fillFrom
    1296:1302:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
    1307:1320:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
androidx.constraintlayout.widget.ConstraintSet$Layout -> androidx.constraintlayout.widget.ConstraintSet$Layout:
    654:767:void <clinit>() -> <clinit>
    517:581:void <init>() -> <init>
    584:651:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Layout) -> copyFrom
    771:960:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Motion -> androidx.constraintlayout.widget.ConstraintSet$Motion:
    1186:1200:void <clinit>() -> <clinit>
    1167:1174:void <init>() -> <init>
    1177:1183:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Motion) -> copyFrom
    1204:1236:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$PropertySet -> androidx.constraintlayout.widget.ConstraintSet$PropertySet:
    1128:1133:void <init>() -> <init>
    1136:1139:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$PropertySet) -> copyFrom
    1143:1160:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Transform -> androidx.constraintlayout.widget.ConstraintSet$Transform:
    1046:1070:void <clinit>() -> <clinit>
    1016:1029:void <init>() -> <init>
    1032:1043:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Transform) -> copyFrom
    1074:1121:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.Constraints -> androidx.constraintlayout.widget.Constraints:
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    135:135:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    147:147:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    151:156:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
androidx.constraintlayout.widget.Constraints$LayoutParams -> androidx.constraintlayout.widget.Constraints$LayoutParams:
    82:79:void <init>(int,int) -> <init>
    90:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
    55:56:void <init>(android.content.Context) -> <init>
    60:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    93:93:void onMeasure(int,int) -> onMeasure
    102:104:void setGuidelineBegin(int) -> setGuidelineBegin
    113:115:void setGuidelineEnd(int) -> setGuidelineEnd
    123:125:void setGuidelinePercent(float) -> setGuidelinePercent
androidx.constraintlayout.widget.Placeholder -> androidx.constraintlayout.widget.Placeholder:
    111:111:android.view.View getContent() -> getContent
    103:103:int getEmptyVisibility() -> getEmptyVisibility
    119:136:void onDraw(android.graphics.Canvas) -> onDraw
    167:182:void setContentId(int) -> setContentId
    94:94:void setEmptyVisibility(int) -> setEmptyVisibility
    192:201:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    145:157:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
androidx.constraintlayout.widget.R$id -> androidx.constraintlayout.widget.R$id:
    835:835:void <init>() -> <init>
androidx.constraintlayout.widget.R$styleable -> androidx.constraintlayout.widget.R$styleable:
    1501:2536:void <clinit>() -> <clinit>
androidx.coordinatorlayout.R$styleable -> androidx.coordinatorlayout.R$styleable:
    201:247:void <clinit>() -> <clinit>
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    118:152:void <clinit>() -> <clinit>
    207:207:void <init>(android.content.Context) -> <init>
    211:211:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    216:252:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:158:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1615:1626:void addPreDrawListener() -> addPreDrawListener
    1760:1760:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1066:1077:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    854:867:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1523:1531:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1253:1277:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    332:343:void drawableStateChanged() -> drawableStateChanged
    1585:1598:void ensurePreDrawListener() -> ensurePreDrawListener
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1755:1755:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1740:1740:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1745:1750:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    979:980:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1547:1552:java.util.List getDependencies(android.view.View) -> getDependencies
    1576:1577:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1566:1571:java.util.List getDependents(android.view.View) -> getDependents
    732:732:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1090:1095:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    992:1062:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    600:606:int getKeyline(int) -> getKeyline
    965:966:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    401:401:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    2017:2017:int getNestedScrollAxes() -> getNestedScrollAxes
    654:682:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    327:327:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    742:742:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    737:737:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    444:455:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1607:1607:boolean hasDependencies(android.view.View) -> hasDependencies
    1704:1710:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1193:1216:void layoutChild(android.view.View,int) -> layoutChild
    1106:1115:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1130:1182:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1413:1490:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1653:1690:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    264:278:void onAttachedToWindow() -> onAttachedToWindow
    1307:1408:void onChildViewsChanged(int) -> onChildViewsChanged
    283:292:void onDetachedFromWindow() -> onDetachedFromWindow
    926:931:void onDraw(android.graphics.Canvas) -> onDraw
    532:542:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    906:919:void onLayout(boolean,int,int,int,int) -> onLayout
    889:891:void onLayoutChild(android.view.View,int) -> onLayoutChild
    767:849:void onMeasure(int,int) -> onMeasure
    760:760:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1964:1984:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1994:2009:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1913:1913:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1923:1955:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1852:1852:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1859:1859:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1868:1907:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1796:1796:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1802:1815:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3241:3260:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3269:3286:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1765:1765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1773:1788:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1823:1823:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1829:1846:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    555:584:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    615:649:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    466:525:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    689:721:void prepareChildren() -> prepareChildren
    953:954:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    164:165:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1634:1640:void removePreDrawListener() -> removePreDrawListener
    3293:3301:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    592:595:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    412:436:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    938:939:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1494:1498:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1503:1507:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    259:259:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    302:316:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    380:380:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    369:369:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    354:358:void setVisibility(int) -> setVisibility
    384:391:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3305:3327:void setupForInsets() -> setupForInsets
    349:349:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
    3312:3312:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3316:3316:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    2091:2091:void <init>() -> <init>
    2102:2102:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2229:2229:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2634:2634:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2541:2541:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2583:2585:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    2470:2470:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2778:2778:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2427:2427:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2510:2510:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
    3218:3218:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3223:3224:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3230:3233:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    2869:2864:void <init>(int,int) -> <init>
    2873:2903:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2908:2864:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2912:2864:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2916:2864:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3003:3003:boolean checkAnchorChanged() -> checkAnchorChanged
    3100:3102:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    3014:3017:boolean didBlockInteraction() -> didBlockInteraction
    3125:3133:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2926:2926:int getAnchorId() -> getAnchorId
    2952:2952:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    3079:3079:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2995:2995:android.graphics.Rect getLastChildRect() -> getLastChildRect
    3033:3038:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    3073:3071:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    3087:3087:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    3054:3054:void resetNestedScroll(int) -> resetNestedScroll
    3050:3050:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3141:3175:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2965:2977:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    3083:3083:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2987:2987:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    3063:3060:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3210:3213:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3186:3202:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
    2020:2020:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    2023:2023:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3373:3373:void <clinit>() -> <clinit>
    3335:3346:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3351:3351:void <init>(android.os.Parcelable) -> <init>
    3356:3369:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    3374:3374:void <init>() -> <init>
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3377:3377:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3382:3382:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object[] newArray(int) -> newArray
    3387:3387:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    2031:2031:void <init>() -> <init>
    2031:2031:int compare(java.lang.Object,java.lang.Object) -> compare
    2034:2035:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    39:44:void <init>() -> <init>
    76:77:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:55:void addNode(java.lang.Object) -> addNode
    143:149:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:179:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:207:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    110:116:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:132:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:214:void poolList(java.util.ArrayList) -> poolList
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
    35:36:void <clinit>() -> <clinit>
    77:78:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:92:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:65:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.R$styleable -> androidx.core.R$styleable:
    184:219:void <clinit>() -> <clinit>
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    287:290:void finishAffinity(android.app.Activity) -> finishAffinity
    304:307:void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    169:169:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    411:412:void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    577:582:void recreate(android.app.Activity) -> recreate
    491:505:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    383:387:void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    402:406:void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    548:549:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    233:236:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    270:274:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    417:418:void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
    505:505:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    508:519:void run() -> run
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl:
    591:592:void <init>(androidx.core.app.SharedElementCallback) -> <init>
    622:622:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    628:628:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    616:616:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    611:611:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    605:605:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    598:598:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    635:635:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1 -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1:
    636:636:void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    90:98:void <clinit>() -> <clinit>
    361:361:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    341:342:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    303:305:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    289:291:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    317:332:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    351:352:java.lang.reflect.Field getTokenField() -> getTokenField
    313:313:boolean needsRelaunchCall() -> needsRelaunchCall
    244:279:boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity) -> queueOnStopIfNecessary
    108:158:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    142:142:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    145:145:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    158:158:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    165:165:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    252:252:void <init>(java.lang.Object,java.lang.Object) -> <init>
    256:268:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    182:183:void <init>(android.app.Activity) -> <init>
    228:233:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    206:213:void onActivityPaused(android.app.Activity) -> onActivityPaused
    195:196:void onActivityStarted(android.app.Activity) -> onActivityStarted
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    175:177:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:76:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    105:108:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    48:64:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:62:void <init>() -> <init>
    129:133:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    120:124:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    100:100:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class) -> getExtraData
    81:82:void onCreate(android.os.Bundle) -> onCreate
    88:89:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    75:75:void putExtraData(androidx.core.app.ComponentActivity$ExtraData) -> putExtraData
    115:115:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$ExtraData:
    140:140:void <init>() -> <init>
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    37:37:void <init>() -> <init>
    70:71:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    41:41:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    47:47:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    60:60:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    54:54:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    66:66:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    129:148:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    195:204:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:264:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    108:113:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    5129:5132:android.os.Bundle getExtras(android.app.Notification) -> getExtras
androidx.core.app.NotificationCompat$Action -> androidx.core.app.NotificationCompat$Action:
    3162:3162:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3168:3177:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean) -> <init>
    3189:3189:android.app.PendingIntent getActionIntent() -> getActionIntent
    3204:3204:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    3238:3238:androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    3196:3196:android.os.Bundle getExtras() -> getExtras
    3181:3181:int getIcon() -> getIcon
    3213:3213:androidx.core.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    3224:3224:int getSemanticAction() -> getSemanticAction
    3246:3246:boolean getShowsUserInterface() -> getShowsUserInterface
    3185:3185:java.lang.CharSequence getTitle() -> getTitle
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.NotificationCompat$Builder:
    739:747:void <init>(android.content.Context,java.lang.String) -> <init>
    756:756:void <init>(android.content.Context) -> <init>
    1379:1379:androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    1590:1590:android.app.Notification build() -> build
    1573:1573:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender) -> extend
    1337:1340:android.os.Bundle getExtras() -> getExtras
    1595:1596:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    916:916:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    833:833:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    825:825:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    928:928:androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    1191:1193:void setFlag(int,boolean) -> setFlag
    1258:1258:androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    1079:1083:androidx.core.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    1100:1100:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1215:1215:androidx.core.app.NotificationCompat$Builder setPriority(int) -> setPriority
    773:773:androidx.core.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    801:801:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    1023:1029:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    764:764:androidx.core.app.NotificationCompat$Builder setWhen(long) -> setWhen
androidx.core.app.NotificationCompat$WearableExtender -> androidx.core.app.NotificationCompat$WearableExtender:
    3906:3897:void <init>() -> <init>
    4086:4086:androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    3762:3762:java.lang.Object clone() -> clone
    4055:4069:androidx.core.app.NotificationCompat$WearableExtender clone() -> clone
    3962:4022:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> extend
    4028:4050:android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action) -> getActionFromActionCompat
    4243:4243:androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
androidx.core.app.NotificationCompatBuilder -> androidx.core.app.NotificationCompatBuilder:
    62:205:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    255:287:void addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    216:247:android.app.Notification build() -> build
    293:413:android.app.Notification buildInternal() -> buildInternal
    418:421:void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.NotificationCompatJellybean:
    58:58:void <clinit>() -> <clinit>
    72:78:android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    248:263:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> getBundleForAction
    89:117:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    285:286:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> toBundle
    318:320:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> toBundleArray
    140:150:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action) -> writeActionAndGetExtras
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
    100:109:void <clinit>() -> <clinit>
    159:161:void <init>(android.content.Context) -> <init>
    170:170:void cancel(int) -> cancel
    179:181:void cancel(java.lang.String,int) -> cancel
    156:156:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> from
    421:439:java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    199:199:void notify(int,android.app.Notification) -> notify
    209:215:void notify(java.lang.String,int,android.app.Notification) -> notify
    454:459:void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    446:447:boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
androidx.core.app.NotificationManagerCompat$CancelTask -> androidx.core.app.NotificationManagerCompat$CancelTask:
    789:793:void <init>(java.lang.String,int,java.lang.String) -> <init>
    798:801:void send(android.support.v4.app.INotificationSideChannel) -> send
    807:813:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$NotifyTask -> androidx.core.app.NotificationManagerCompat$NotifyTask:
    753:757:void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    762:762:void send(android.support.v4.app.INotificationSideChannel) -> send
    767:772:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent -> androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent:
    737:739:void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
androidx.core.app.NotificationManagerCompat$SideChannelManager -> androidx.core.app.NotificationManagerCompat$SideChannelManager:
    479:483:void <init>(android.content.Context) -> <init>
    619:631:boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    638:642:void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    496:498:boolean handleMessage(android.os.Message) -> handleMessage
    515:518:void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task) -> handleQueueTask
    539:541:void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    523:527:void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    532:534:void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    547:552:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    557:560:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    674:683:void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
    491:491:void queueTask(androidx.core.app.NotificationManagerCompat$Task) -> queueTask
    651:666:void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    568:609:void updateListenerMap() -> updateListenerMap
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    726:727:void <init>(android.content.ComponentName) -> <init>
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.RemoteInput -> androidx.core.app.RemoteInput:
    504:506:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> fromCompat
    513:513:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> fromCompat
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    82:83:void <init>(android.content.Context) -> <init>
    121:121:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    139:146:androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    160:175:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    312:312:android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    331:332:android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    256:256:java.util.Iterator iterator() -> iterator
    268:268:void startActivities() -> startActivities
    283:284:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    153:153:void <clinit>() -> <clinit>
    535:532:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    633:634:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    513:516:int getColor(android.content.Context,int) -> getColor
    491:494:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    453:469:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    433:436:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    380:383:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    223:226:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    340:360:void <clinit>() -> <clinit>
    339:339:void <init>() -> <init>
    382:386:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    820:822:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    829:830:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    835:836:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    541:542:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    575:589:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    493:498:java.lang.String getType(android.net.Uri) -> getType
    417:418:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    513:513:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    795:813:int modeToMode(java.lang.String) -> modeToMode
    564:566:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    601:606:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    454:477:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    523:523:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    700:701:void <init>(java.lang.String) -> <init>
    709:710:void addRoot(java.lang.String,java.io.File) -> addRoot
    764:772:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    728:730:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    97:114:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:134:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    86:95:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    113:116:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    65:68:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    128:186:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    198:198:int modulateColorAlpha(int,float) -> modulateColorAlpha
    191:192:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:64:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:160:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:142:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    109:114:boolean onStateChanged(int[]) -> onStateChanged
    90:90:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    230:235:int getType(android.content.res.TypedArray,int) -> getType
    168:174:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    247:270:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    181:186:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    193:225:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    285:313:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    320:320:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    276:278:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    153:154:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    113:119:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> getFileName
    143:143:int getResourceId() -> getResourceId
    139:139:int getTtcIndex() -> getTtcIndex
    135:135:java.lang.String getVariationSettings() -> getVariationSettings
    127:127:int getWeight() -> getWeight
    131:131:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    82:85:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> getFetchStrategy
    89:89:androidx.core.provider.FontRequest getRequest() -> getRequest
    97:97:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    195:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:93:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:185:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    209:204:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:223:void <init>(java.util.List,java.util.List) -> <init>
    227:229:void <init>(int,int) -> <init>
    232:234:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    43:49:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    59:64:int[] append(int[],int,int) -> append
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    145:148:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    82:85:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    227:230:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    318:324:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    336:339:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    359:365:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
    379:381:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    237:237:void <init>() -> <init>
    287:289:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    268:270:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    270:270:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    273:273:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    289:289:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    292:292:void run() -> run
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    354:356:int getAttr(android.content.Context,int,int) -> getAttr
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    275:277:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:172:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    310:312:java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    326:328:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    342:344:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    253:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    136:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    366:366:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    190:190:void addNode(java.util.ArrayList,char,float[]) -> addNode
    141:146:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    57:55:float[] copyOfRange(float[],int,int) -> copyOfRange
    97:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:79:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    123:125:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    260:299:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    174:175:int nextStart(java.lang.String,int) -> nextStart
    163:166:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    199:199:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:354:void <init>(char,float[]) -> <init>
    357:359:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    399:642:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:780:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:719:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    388:390:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    371:373:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    46:63:void <clinit>() -> <clinit>
    195:191:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    160:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    105:129:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    143:147:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    88:88:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    76:76:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
    169:174:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int) -> getBestFontFromFamily
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:168:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:104:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:96:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:87:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:114:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:124:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:103:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:107:void <init>() -> <init>
    194:194:void abortCreation(java.lang.Object) -> abortCreation
    140:140:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:155:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:171:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    204:222:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    230:282:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    292:308:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:183:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:127:java.lang.Object newFamily() -> newFamily
    342:342:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    332:332:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    347:350:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    317:317:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    338:338:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:64:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    219:221:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) -> addFontFamily
    169:176:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    137:148:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    114:129:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    187:202:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    153:153:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    67:69:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    99:99:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    211:215:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface) -> getFontFamily
    85:90:long getUniqueKey(android.graphics.Typeface) -> getUniqueKey
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    99:99:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    99:99:int getWeight(java.lang.Object) -> getWeight
    102:102:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    99:99:boolean isItalic(java.lang.Object) -> isItalic
    107:107:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.graphics.TypefaceCompatBaseImpl$2:
    153:153:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    153:153:int getWeight(java.lang.Object) -> getWeight
    156:156:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    153:153:boolean isItalic(java.lang.Object) -> isItalic
    161:161:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    177:177:void closeQuietly(java.io.Closeable) -> closeQuietly
    124:134:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    143:157:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    167:170:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    63:72:java.io.File getTempFile(android.content.Context) -> getTempFile
    88:92:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    103:113:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    188:189:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:198:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    221:250:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    177:178:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:211:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:410:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:271:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:62:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:79:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:111:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:124:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:374:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:138:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:152:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:166:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:335:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:316:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    177:177:void <clinit>() -> <clinit>
    308:183:void <init>() -> <init>
    357:361:int getResId() -> getResId
    973:979:int getResId(android.graphics.drawable.Icon) -> getResId
    339:343:java.lang.String getResPackage() -> getResPackage
    944:950:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    785:791:void onPostParceling() -> onPostParceling
    749:754:void onPreParceling(boolean) -> onPreParceling
    708:744:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:22:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    28:49:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:65:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    210:212:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    322:322:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    251:251:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:81:void jumpToCurrentState() -> jumpToCurrentState
    220:228:android.graphics.drawable.Drawable mutate() -> mutate
    243:243:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> mutateConstantState
    91:92:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    272:272:boolean onLevelChange(int) -> onLevelChange
    259:259:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:120:void setAlpha(int) -> setAlpha
    198:198:void setAutoMirrored(boolean) -> setAutoMirrored
    98:98:void setChangingConfigurations(int) -> setChangingConfigurations
    125:125:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:110:void setDither(boolean) -> setDither
    115:115:void setFilterBitmap(boolean) -> setFilterBitmap
    138:139:boolean setState(int[]) -> setState
    277:277:void setTint(int) -> setTint
    282:283:void setTintList(android.content.res.ColorStateList) -> setTintList
    288:289:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    330:348:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    267:267:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:75:void updateLocalState(android.content.res.Resources) -> updateLocalState
    293:312:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    43:44:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:49:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    140:144:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:64:void getOutline(android.graphics.Outline) -> getOutline
    113:115:boolean isCompatTintEnabled() -> isCompatTintEnabled
    128:132:boolean isProjected() -> isProjected
    54:54:void setHotspot(float,float) -> setHotspot
    59:59:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:105:boolean setState(int[]) -> setState
    84:87:void setTint(int) -> setTint
    75:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:96:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.WrappedDrawableState:
    35:40:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> canConstantState
    61:62:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:56:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    37:37:void <init>() -> <init>
    69:77:void cancel() -> cancel
    46:48:boolean isCanceled() -> isCanceled
    111:121:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    153:155:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.ParcelableCompat -> androidx.core.os.ParcelableCompat:
    41:41:android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks) -> newCreator
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2 -> androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2:
    48:49:void <init>(androidx.core.os.ParcelableCompatCreatorCallbacks) -> <init>
    54:54:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    64:64:java.lang.Object[] newArray(int) -> newArray
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    46:47:void beginSection(java.lang.String) -> beginSection
    59:60:void endSection() -> endSection
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    56:63:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    125:125:java.util.List getCertificates() -> getCertificates
    137:137:int getCertificatesArrayResId() -> getCertificatesArrayResId
    143:143:java.lang.String getIdentifier() -> getIdentifier
    95:95:java.lang.String getProviderAuthority() -> getProviderAuthority
    104:104:java.lang.String getProviderPackage() -> getProviderPackage
    113:113:java.lang.String getQuery() -> getQuery
    148:167:java.lang.String toString() -> toString
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    172:784:void <clinit>() -> <clinit>
    813:815:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    801:805:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    728:735:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    777:781:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    824:878:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    184:186:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int) -> getFontInternal
    232:302:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    744:747:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    689:704:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
androidx.core.provider.FontsContractCompat$1 -> androidx.core.provider.FontsContractCompat$1:
    254:254:void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String) -> <init>
    254:254:java.lang.Object call() -> call
    257:259:androidx.core.provider.FontsContractCompat$TypefaceResult call() -> call
androidx.core.provider.FontsContractCompat$2 -> androidx.core.provider.FontsContractCompat$2:
    273:273:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    273:273:void onReply(java.lang.Object) -> onReply
    277:282:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$3 -> androidx.core.provider.FontsContractCompat$3:
    303:303:void <init>(java.lang.String) -> <init>
    303:303:void onReply(java.lang.Object) -> onReply
    307:313:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$5 -> androidx.core.provider.FontsContractCompat$5:
    784:784:void <init>() -> <init>
    784:784:int compare(java.lang.Object,java.lang.Object) -> compare
    787:792:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    427:429:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    437:437:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    433:433:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    346:351:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    388:388:int getResultCode() -> getResultCode
    365:365:int getTtcIndex() -> getTtcIndex
    358:358:android.net.Uri getUri() -> getUri
    372:372:int getWeight() -> getWeight
    379:379:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$TypefaceResult -> androidx.core.provider.FontsContractCompat$TypefaceResult:
    211:213:void <init>(android.graphics.Typeface,int) -> <init>
androidx.core.provider.SelfDestructiveThread -> androidx.core.provider.SelfDestructiveThread:
    79:83:void <init>(java.lang.String,int,int) -> <init>
    223:232:void onDestruction() -> onDestruction
    214:219:void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    107:116:void post(java.lang.Runnable) -> post
    136:137:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    166:209:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
androidx.core.provider.SelfDestructiveThread$1 -> androidx.core.provider.SelfDestructiveThread$1:
    58:58:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    61:66:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> androidx.core.provider.SelfDestructiveThread$2:
    137:137:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:147:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> androidx.core.provider.SelfDestructiveThread$2$1:
    147:147:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:150:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> androidx.core.provider.SelfDestructiveThread$3:
    171:171:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:184:void run() -> run
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:265:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:306:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:334:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    412:426:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:140:void <init>() -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:169:void initialize(boolean) -> initialize
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:586:void <clinit>() -> <clinit>
    628:631:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:859:byte dirTypeBackward() -> dirTypeBackward
    816:829:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:707:int getEntryDir() -> getEntryDir
    744:748:int getExitDir() -> getExitDir
    944:955:byte skipEntityBackward() -> skipEntityBackward
    929:929:byte skipEntityForward() -> skipEntityForward
    901:919:byte skipTagBackward() -> skipTagBackward
    872:887:byte skipTagForward() -> skipTagForward
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
    36:59:void <clinit>() -> <clinit>
    129:137:java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    114:120:java.lang.String getScript(java.lang.String) -> getScript
    89:105:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    712:712:char charAt(int) -> charAt
    512:512:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    687:687:int getSpanEnd(java.lang.Object) -> getSpanEnd
    692:692:int getSpanFlags(java.lang.Object) -> getSpanFlags
    682:682:int getSpanStart(java.lang.Object) -> getSpanStart
    677:677:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    707:707:int length() -> length
    697:697:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    663:664:void removeSpan(java.lang.Object) -> removeSpan
    651:652:void setSpan(java.lang.Object,int,int,int) -> setSpan
    717:717:java.lang.CharSequence subSequence(int,int) -> subSequence
    722:722:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    195:200:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    204:209:void <init>(android.text.PrecomputedText$Params) -> <init>
    330:338:boolean equals(java.lang.Object) -> equals
    266:313:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    243:243:int getBreakStrategy() -> getBreakStrategy
    255:255:int getHyphenationFrequency() -> getHyphenationFrequency
    231:231:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    218:218:android.text.TextPaint getTextPaint() -> getTextPaint
    347:366:int hashCode() -> hashCode
    374:395:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    115:126:void <init>(android.text.TextPaint) -> <init>
    190:190:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    144:144:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    162:162:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    180:180:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:235:void <clinit>() -> <clinit>
    231:232:void <init>(boolean) -> <init>
    208:226:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:190:void <init>() -> <init>
    185:185:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:115:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    130:131:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:157:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    253:253:void <clinit>() -> <clinit>
    244:244:void <init>() -> <init>
    249:249:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    119:119:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    90:100:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    33:45:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.LogWriter -> androidx.core.util.LogWriter:
    43:44:void <init>(java.lang.String) -> <init>
    48:48:void close() -> close
    52:52:void flush() -> flush
    68:70:void flushBuilder() -> flushBuilder
    57:62:void write(char[],int,int) -> write
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    50:53:boolean equals(java.lang.Object,java.lang.Object) -> equals
    92:95:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pair -> androidx.core.util.Pair:
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    71:71:java.lang.String toString() -> toString
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:96:void <init>(int) -> <init>
    104:108:java.lang.Object acquire() -> acquire
    128:129:boolean isInPool(java.lang.Object) -> isInPool
    116:117:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    153:143:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    50:50:void checkArgument(boolean,java.lang.Object) -> checkArgument
    138:138:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    64:64:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    81:81:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    130:130:void <clinit>() -> <clinit>
    139:139:void <init>() -> <init>
    146:148:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    216:216:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    318:321:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    394:396:java.util.List getActionList(android.view.View) -> getActionList
    155:155:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    382:385:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    256:256:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    275:275:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    236:236:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    300:300:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    345:357:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    364:372:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    173:173:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    195:195:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    64:65:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    118:121:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:76:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:90:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    96:96:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    102:102:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    126:126:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    107:107:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    112:112:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    139:139:void <init>(android.content.Context) -> <init>
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    312:312:void reset() -> reset
    299:304:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.core.view.GestureDetectorCompat -> androidx.core.view.GestureDetectorCompat:
    506:506:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    519:523:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    543:543:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    62:64:void <clinit>() -> <clinit>
    152:162:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    414:425:void cancel() -> cancel
    430:438:void cancelTaps() -> cancelTaps
    458:461:void dispatchLongPress() -> dispatchLongPress
    169:167:void init(android.content.Context) -> init
    444:454:boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    228:325:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    193:193:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    103:104:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    107:108:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    113:115:void handleMessage(android.os.Message) -> handleMessage
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    469:470:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    480:480:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    64:67:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    96:106:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:137:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:173:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    83:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:153:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    71:86:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    139:149:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    207:211:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    463:466:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:325:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:506:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:537:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:421:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    351:354:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:57:void <init>(android.view.View) -> <init>
    348:351:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:371:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:329:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    218:218:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    231:231:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:265:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    408:406:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:73:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    419:416:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:161:boolean startNestedScroll(int,int) -> startNestedScroll
    175:175:void stopNestedScroll() -> stopNestedScroll
    186:189:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:50:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:63:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:79:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    115:117:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:46:void <init>(android.view.View,java.lang.Runnable) -> <init>
    62:59:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:71:boolean onPreDraw() -> onPreDraw
    90:90:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:95:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:85:void removeListener() -> removeListener
androidx.core.view.PointerIconCompat -> androidx.core.view.PointerIconCompat:
    107:108:void <init>(java.lang.Object) -> <init>
    116:116:java.lang.Object getPointerIcon() -> getPointerIcon
    130:133:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    458:4051:void <clinit>() -> <clinit>
    3935:3935:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1263:1267:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    1972:1978:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    3255:3261:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    3207:3213:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2477:2483:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    3758:3761:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    3750:3753:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    884:891:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    907:927:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    1693:1694:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    3874:3874:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1298:1302:java.util.List getActionList(android.view.View) -> getActionList
    2573:2577:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2618:2622:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3299:3300:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3420:3426:android.view.Display getDisplay(android.view.View) -> getDisplay
    2256:2257:float getElevation(android.view.View) -> getElevation
    479:487:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2382:2383:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1054:1055:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    744:745:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1515:1516:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1938:1954:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1904:1920:int getMinimumWidth(android.view.View) -> getMinimumWidth
    896:900:androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View) -> getOrCreateAccessibilityDelegateCompat
    1760:1763:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1744:1747:int getPaddingStart(android.view.View) -> getPaddingStart
    2313:2319:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2326:2327:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    3146:3147:float getZ(android.view.View) -> getZ
    3321:3322:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2533:2534:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    941:942:boolean hasTransientState(android.view.View) -> hasTransientState
    3914:3915:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3309:3312:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3115:3118:boolean isLaidOut(android.view.View) -> isLaidOut
    2697:2701:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    2546:2547:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    3801:3802:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    4027:4040:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3224:3250:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3176:3202:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2452:2458:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    656:656:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3878:3878:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1154:1155:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    970:973:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1010:1013:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1032:1035:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1280:1282:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1288:1291:void removeActionWithId(int,android.view.View) -> removeActionWithId
    1258:1258:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2337:2340:void requestApplyInsets(android.view.View) -> requestApplyInsets
    3806:3806:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    687:690:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    3931:3931:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1729:1730:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    2559:2562:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2589:2606:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2636:2653:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3284:3285:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2245:2246:void setElevation(android.view.View,float) -> setElevation
    2398:2398:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    955:956:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1081:1091:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    788:789:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    2421:2427:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1781:1784:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    3402:3403:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> setPointerIcon
    3373:3374:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2291:2297:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2738:2741:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3267:3269:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2427:2427:void <init>(androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    2430:2432:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    3807:3807:void <init>(int,java.lang.Class,int) -> <init>
    3807:3807:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    3812:3812:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    3807:3807:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    3818:3818:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    3807:3807:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    3823:3823:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    3879:3879:void <init>(int,java.lang.Class,int,int) -> <init>
    3879:3879:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    3884:3884:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    3879:3879:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    3890:3890:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    3879:3879:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    3895:3895:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$5 -> androidx.core.view.ViewCompat$5:
    3936:3936:void <init>(int,java.lang.Class,int) -> <init>
    3936:3936:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    3941:3941:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    3936:3936:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    3947:3947:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    3936:3936:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    3952:3952:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4054:4056:void <init>() -> <init>
    4096:4102:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4061:4062:void onGlobalLayout() -> onGlobalLayout
    4070:4070:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4108:4108:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    3965:3965:void <init>(int,java.lang.Class,int) -> <init>
    3970:3974:void <init>(int,java.lang.Class,int,int) -> <init>
    4018:4019:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4007:4007:boolean extrasAvailable() -> extrasAvailable
    4003:4003:boolean frameworkAvailable() -> frameworkAvailable
    3992:3996:java.lang.Object get(android.view.View) -> get
    3978:3986:void set(android.view.View,java.lang.Object) -> set
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4121:4121:void <clinit>() -> <clinit>
    4117:4136:void <init>() -> <init>
    4146:4150:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4156:4167:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4175:4189:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4139:4142:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4234:4239:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4201:4224:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4274:4298:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:44:void <clinit>() -> <clinit>
    106:117:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    424:432:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    461:469:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    384:397:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    329:353:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    248:262:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    207:221:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    282:295:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
    66:66:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    36:37:void <init>(android.view.View) -> <init>
    136:137:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    462:463:void cancel() -> cancel
    235:236:long getDuration() -> getDuration
    121:122:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    252:253:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    726:731:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    739:756:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    284:285:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    773:784:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    642:643:void start() -> start
    181:182:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    739:739:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    742:742:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    747:747:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    752:752:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    777:777:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    780:780:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    44:45:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    99:105:void onAnimationCancel(android.view.View) -> onAnimationCancel
    73:93:void onAnimationEnd(android.view.View) -> onAnimationEnd
    51:67:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    35:36:void <init>(java.lang.Object) -> <init>
    380:384:boolean equals(java.lang.Object) -> equals
    113:114:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    62:63:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    96:97:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    79:80:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    389:389:int hashCode() -> hashCode
    164:165:boolean isConsumed() -> isConsumed
    213:215:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    397:397:java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat) -> unwrap
    393:393:androidx.core.view.WindowInsetsCompat wrap(java.lang.Object) -> wrap
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    54:57:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    68:70:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    307:308:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    288:289:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1481:1482:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1778:1778:void addAction(int) -> addAction
    1824:1825:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1708:1709:void addChild(android.view.View,int) -> addChild
    2553:2556:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2483:2494:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    2544:2548:void clearExtrasSpans() -> clearExtrasSpans
    3775:3789:boolean equals(java.lang.Object) -> equals
    1795:1802:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    1763:1763:int getActions() -> getActions
    3850:3852:boolean getBooleanProperty(int) -> getBooleanProperty
    2014:2014:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2038:2038:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1658:1658:int getChildCount() -> getChildCount
    2421:2421:java.lang.CharSequence getClassName() -> getClassName
    2519:2521:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2766:2769:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    2580:2580:java.lang.CharSequence getContentDescription() -> getContentDescription
    3148:3151:android.os.Bundle getExtras() -> getExtras
    2501:2504:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2397:2397:java.lang.CharSequence getPackageName() -> getPackageName
    2510:2510:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2445:2459:java.lang.CharSequence getText() -> getText
    2639:2640:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2540:2540:boolean hasSpans() -> hasSpans
    3764:3764:int hashCode() -> hashCode
    2529:2536:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2062:2062:boolean isCheckable() -> isCheckable
    2086:2086:boolean isChecked() -> isChecked
    2244:2244:boolean isClickable() -> isClickable
    2292:2292:boolean isEnabled() -> isEnabled
    2110:2110:boolean isFocusable() -> isFocusable
    2134:2134:boolean isFocused() -> isFocused
    2268:2268:boolean isLongClickable() -> isLongClickable
    2316:2316:boolean isPassword() -> isPassword
    2340:2340:boolean isScrollable() -> isScrollable
    2220:2220:boolean isSelected() -> isSelected
    3615:3618:boolean isShowingHintText() -> isShowingHintText
    1520:1520:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1548:1548:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1559:1559:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    1886:1887:boolean performAction(int,android.os.Bundle) -> performAction
    2606:2606:void recycle() -> recycle
    2560:2569:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2209:2210:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    3840:3845:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2029:2029:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2053:2053:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    2077:2077:void setCheckable(boolean) -> setCheckable
    2101:2101:void setChecked(boolean) -> setChecked
    2436:2436:void setClassName(java.lang.CharSequence) -> setClassName
    2259:2259:void setClickable(boolean) -> setClickable
    2743:2744:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    2752:2753:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2595:2595:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    2847:2848:void setContentInvalid(boolean) -> setContentInvalid
    3434:3435:void setDismissable(boolean) -> setDismissable
    2307:2307:void setEnabled(boolean) -> setEnabled
    2945:2946:void setError(java.lang.CharSequence) -> setError
    2125:2125:void setFocusable(boolean) -> setFocusable
    2149:2149:void setFocused(boolean) -> setFocused
    3671:3674:void setHeading(boolean) -> setHeading
    2924:2927:void setHintText(java.lang.CharSequence) -> setHintText
    2412:2412:void setPackageName(java.lang.CharSequence) -> setPackageName
    3548:3551:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    1974:1976:void setParent(android.view.View) -> setParent
    2001:2004:void setParent(android.view.View,int) -> setParent
    3600:3603:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2355:2355:void setScrollable(boolean) -> setScrollable
    3635:3638:void setShowingHintText(boolean) -> setShowingHintText
    1595:1598:void setSource(android.view.View,int) -> setSource
    2475:2475:void setText(java.lang.CharSequence) -> setText
    2178:2179:void setVisibleToUser(boolean) -> setVisibleToUser
    3797:3836:java.lang.String toString() -> toString
    1499:1499:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1492:1492:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    99:502:void <clinit>() -> <clinit>
    525:525:void <init>(int,java.lang.CharSequence) -> <init>
    548:548:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    553:562:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    626:626:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    571:572:int getId() -> getId
    601:615:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    701:702:void <init>(java.lang.Object) -> <init>
    671:678:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    825:826:void <init>(java.lang.Object) -> <init>
    835:836:int getColumnIndex() -> getColumnIndex
    848:849:int getColumnSpan() -> getColumnSpan
    861:862:int getRowIndex() -> getRowIndex
    874:875:int getRowSpan() -> getRowSpan
    903:904:boolean isSelected() -> isSelected
    792:799:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    104:110:void <init>() -> <init>
    120:121:void <init>(java.lang.Object) -> <init>
    128:128:java.lang.Object getProvider() -> getProvider
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    38:39:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    44:49:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    56:65:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    73:73:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    80:80:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    85:89:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    506:507:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    556:557:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    137:138:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    66:66:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    100:100:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    185:185:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    150:150:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    171:171:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    115:115:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    135:135:void <init>() -> <init>
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    210:225:void <init>(android.view.View) -> <init>
    687:691:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    638:645:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:543:void requestStop() -> requestStop
    420:420:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:359:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:240:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:403:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:297:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:316:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:452:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:436:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:380:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:338:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:529:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:761:void <init>() -> <init>
    831:832:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:804:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    795:796:boolean isFinished() -> isFinished
    788:791:void requestStop() -> requestStop
    769:769:void setRampDownDuration(int) -> setRampDownDuration
    765:765:void setRampUpDuration(int) -> setRampUpDuration
    852:853:void setTargetVelocity(float,float) -> setTargetVelocity
    776:781:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:695:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:711:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    39:39:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    123:142:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    71:75:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    57:60:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:96:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    152:155:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    37:41:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    74:78:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:65:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    88:103:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:35:void <init>(android.widget.ListView) -> <init>
    51:73:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:40:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    37:53:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    175:177:void <clinit>() -> <clinit>
    189:189:void <init>(android.content.Context) -> <init>
    193:193:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:214:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1606:1607:void abortAnimatedScroll() -> abortAnimatedScroll
    468:469:void addView(android.view.View) -> addView
    477:478:void addView(android.view.View,int) -> addView
    486:487:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    495:496:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1319:1363:boolean arrowScroll(int) -> arrowScroll
    519:523:boolean canScroll() -> canScroll
    1504:1504:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1497:1497:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1490:1490:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1540:1591:void computeScroll() -> computeScroll
    1658:1717:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1483:1483:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1476:1476:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1452:1462:int computeVerticalScrollRange() -> computeVerticalScrollRange
    617:617:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    297:297:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    302:302:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    253:253:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    292:292:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    222:222:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    286:286:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1395:1398:void doScrollY(int) -> doScrollY
    1931:1975:void draw(android.graphics.Canvas) -> draw
    1882:1889:void endDrag() -> endDrag
    1917:1925:void ensureGlows() -> ensureGlows
    629:651:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1140:1173:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1870:1877:void fling(int) -> fling
    1256:1271:boolean fullScroll(int) -> fullScroll
    431:439:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    452:452:int getMaxScrollAmount() -> getMaxScrollAmount
    404:404:int getNestedScrollAxes() -> getNestedScrollAxes
    1113:1118:int getScrollRange() -> getScrollRange
    416:421:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1033:1044:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    240:240:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    280:280:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    671:677:boolean inChild(int,int) -> inChild
    683:686:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    456:463:void initScrollView() -> initScrollView
    691:692:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    265:265:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1373:1373:boolean isOffScreen(android.view.View) -> isOffScreen
    1858:1859:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1381:1385:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1510:1520:void measureChild(android.view.View,int,int) -> measureChild
    1526:1534:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1825:1827:void onAttachedToWindow() -> onAttachedToWindow
    1005:1021:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    724:819:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1787:1820:void onLayout(boolean,int,int,int,int) -> onLayout
    581:609:void onMeasure(int,int) -> onMeasure
    390:391:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    399:399:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    356:356:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    384:384:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    310:310:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    350:350:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    379:379:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    337:338:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    368:368:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    314:323:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1050:1050:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1754:1766:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2012:2020:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2025:2027:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    572:575:void onScrollChanged(int,int,int,int) -> onScrollChanged
    988:998:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1832:1846:void onSizeChanged(int,int,int,int) -> onSizeChanged
    363:363:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    343:344:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    373:373:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    824:982:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1058:1106:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1218:1239:boolean pageScroll(int) -> pageScroll
    697:699:void recycleVelocityTracker() -> recycleVelocityTracker
    1724:1730:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1773:1776:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    706:708:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1781:1782:void requestLayout() -> requestLayout
    1597:1602:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1289:1306:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1901:1911:void scrollTo(int,int) -> scrollTo
    1616:1624:void scrollToChild(android.view.View) -> scrollToChild
    1637:1643:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    549:551:void setFillViewport(boolean) -> setFillViewport
    260:260:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    512:512:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    567:567:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    1410:1431:void smoothScrollBy(int,int) -> smoothScrollBy
    1441:1441:void smoothScrollTo(int,int) -> smoothScrollTo
    230:230:boolean startNestedScroll(int,int) -> startNestedScroll
    270:270:boolean startNestedScroll(int) -> startNestedScroll
    235:235:void stopNestedScroll(int) -> stopNestedScroll
    275:275:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2070:2070:void <init>() -> <init>
    2127:2135:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2108:2119:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2073:2087:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2056:2056:void <clinit>() -> <clinit>
    2035:2035:void <init>(android.os.Parcelable) -> <init>
    2039:2040:void <init>(android.os.Parcel) -> <init>
    2051:2052:java.lang.String toString() -> toString
    2045:2046:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2057:2057:void <init>() -> <init>
    2057:2057:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2060:2060:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2057:2057:java.lang.Object[] newArray(int) -> newArray
    2065:2065:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    90:106:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:170:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:79:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    295:310:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    768:768:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    778:778:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    957:971:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    901:935:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    815:827:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    987:991:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1021:1025:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    151:157:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    693:715:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    738:756:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    796:802:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    884:886:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    283:286:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    842:867:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    519:529:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    549:552:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    671:671:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    659:661:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    630:639:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    665:667:boolean isEditable(android.widget.TextView) -> isEditable
    646:653:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    568:568:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    557:557:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    573:573:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    562:563:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    577:624:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    150:151:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:336:void changeCursor(android.database.Cursor) -> changeCursor
    216:217:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:288:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:230:java.lang.Object getItem(int) -> getItem
    241:243:long getItemId(int) -> getItemId
    262:263:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    179:198:void init(android.content.Context,android.database.Cursor,int) -> init
    469:471:void onContentChanged() -> onContentChanged
    351:371:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:477:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    487:487:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:492:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:498:void onChanged() -> onChanged
    503:504:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:40:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:58:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:68:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    82:84:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:38:void <init>() -> <init>
    46:48:void <init>(android.os.Parcelable) -> <init>
    68:70:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:93:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    135:137:void <init>(android.view.View) -> <init>
    998:1001:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1046:1054:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    481:481:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    641:639:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    677:700:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    653:654:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    791:812:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    734:747:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:190:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    218:251:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:433:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:329:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    450:455:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    932:948:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    720:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:280:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    660:663:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    755:758:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    899:897:boolean performAction(int,int,android.os.Bundle) -> performAction
    918:914:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    904:904:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    968:983:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1016:1033:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    505:515:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    612:622:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:339:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1238:1238:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    334:329:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:178:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:53:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:69:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:84:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    203:228:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    308:299:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    351:345:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    378:372:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    406:400:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    435:427:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    101:103:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:129:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    332:332:void <clinit>() -> <clinit>
    383:385:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    511:516:void cancel() -> cancel
    471:472:void captureChildView(android.view.View,int) -> captureChildView
    1276:1289:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1306:1314:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    670:670:int clampMag(int,int,int) -> clampMag
    687:687:float clampMag(float,float,float) -> clampMag
    790:800:void clearMotionHistory() -> clearMotionHistory
    804:814:void clearMotionHistory(int) -> clearMotionHistory
    642:656:int computeAxisDuration(int,int,int) -> computeAxisDuration
    617:632:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    369:370:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    779:785:void dispatchViewReleased(float,float) -> dispatchViewReleased
    696:696:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1426:1440:void dragTo(int,int,int,int) -> dragTo
    818:843:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1487:1491:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    597:612:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    1501:1504:int getEdgesTouched(int,int) -> getEdgesTouched
    503:503:int getTouchSlop() -> getTouchSlop
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    884:884:boolean isPointerDown(int) -> isPointerDown
    1510:1511:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1471:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1127:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1413:1420:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1256:1271:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    848:852:void saveInitialMotion(float,float,int) -> saveInitialMotion
    856:866:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    888:893:void setDragState(int) -> setDragState
    577:578:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:559:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    908:914:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    332:332:void <init>() -> <init>
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:343:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
androidx.fragment.R$styleable -> androidx.fragment.R$styleable:
    197:239:void <clinit>() -> <clinit>
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    139:142:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    256:268:void bumpBackStackNesting(int) -> bumpBackStackNesting
    286:286:int commit() -> commit
    291:291:int commitAllowingStateLoss() -> commitAllowingStateLoss
    307:307:int commitInternal(boolean) -> commitInternal
    302:303:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    220:225:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    180:181:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    59:59:void dump(java.lang.String,java.io.PrintWriter) -> dump
    64:131:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    394:447:void executeOps() -> executeOps
    459:510:void executePopOps(boolean) -> executePopOps
    538:543:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    337:344:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    670:670:java.lang.String getName() -> getName
    350:353:boolean interactsWith(int) -> interactsWith
    365:377:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    662:664:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    643:645:boolean isPostponed() -> isPostponed
    187:192:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    276:280:void runOnCommitRunnables() -> runOnCommitRunnables
    244:245:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    653:656:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    43:55:java.lang.String toString() -> toString
    617:622:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    169:169:void <clinit>() -> <clinit>
    48:53:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:97:void <init>(android.os.Parcel) -> <init>
    101:142:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    153:166:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    170:170:void <init>() -> <init>
    170:170:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    173:173:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:java.lang.Object[] newArray(int) -> newArray
    178:178:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    132:125:void <init>() -> <init>
    222:222:void dismiss() -> dismiss
    236:270:void dismissInternal(boolean,boolean) -> dismissInternal
    282:282:android.app.Dialog getDialog() -> getDialog
    303:303:int getTheme() -> getTheme
    476:500:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    358:362:void onAttach(android.content.Context) -> onAttach
    381:392:void onCreate(android.os.Bundle) -> onCreate
    455:455:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    558:574:void onDestroyView() -> onDestroyView
    369:374:void onDetach() -> onDetach
    464:469:void onDismiss(android.content.DialogInterface) -> onDismiss
    399:411:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    519:539:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    508:512:void onStart() -> onStart
    546:548:void onStop() -> onStop
    420:426:void setupDialog(android.app.Dialog,int) -> setupDialog
    171:175:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
    94:94:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    97:97:void run() -> run
androidx.fragment.app.DialogFragment$2 -> androidx.fragment.app.DialogFragment$2:
    102:102:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    105:106:void onCancel(android.content.DialogInterface) -> onCancel
androidx.fragment.app.DialogFragment$3 -> androidx.fragment.app.DialogFragment$3:
    112:112:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    115:116:void onDismiss(android.content.DialogInterface) -> onDismiss
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    101:101:void <clinit>() -> <clinit>
    475:476:void <init>() -> <init>
    488:489:void <init>(int) -> <init>
    2551:2559:void callStartTransitionListener() -> callStartTransitionListener
    2574:2643:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2971:2974:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    595:595:boolean equals(java.lang.Object) -> equals
    2648:2651:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    819:819:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2415:2416:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2440:2441:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3021:3024:android.view.View getAnimatingAway() -> getAnimatingAway
    3036:3039:android.animation.Animator getAnimator() -> getAnimator
    666:666:android.os.Bundle getArguments() -> getArguments
    979:980:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    792:792:android.content.Context getContext() -> getContext
    380:381:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    2198:2201:java.lang.Object getEnterTransition() -> getEnterTransition
    3007:3010:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2277:2280:java.lang.Object getExitTransition() -> getExitTransition
    3014:3017:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    926:926:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    846:846:java.lang.Object getHost() -> getHost
    635:635:int getId() -> getId
    1468:1469:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    1502:1503:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    286:286:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    1237:1237:androidx.loader.app.LoaderManager getLoaderManager() -> getLoaderManager
    2978:2981:int getNextAnim() -> getNextAnim
    2992:2995:int getNextTransition() -> getNextTransition
    991:991:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    943:945:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    2315:2318:java.lang.Object getReenterTransition() -> getReenterTransition
    869:869:android.content.res.Resources getResources() -> getResources
    1142:1142:boolean getRetainInstance() -> getRetainInstance
    2237:2240:java.lang.Object getReturnTransition() -> getReturnTransition
    395:395:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2348:2351:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2386:2390:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3043:3046:int getStateAfterAnimating() -> getStateAfterAnimating
    891:891:java.lang.String getString(int) -> getString
    904:904:java.lang.String getString(int,java.lang.Object[]) -> getString
    643:643:java.lang.String getTag() -> getTag
    767:773:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    782:782:int getTargetRequestCode() -> getTargetRequestCode
    880:880:java.lang.CharSequence getText(int) -> getText
    1225:1225:boolean getUserVisibleHint() -> getUserVisibleHint
    1767:1767:android.view.View getView() -> getView
    327:328:androidx.lifecycle.LifecycleOwner getViewLifecycleOwner() -> getViewLifecycleOwner
    348:348:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    364:365:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1096:1096:boolean hasOptionsMenu() -> hasOptionsMenu
    602:602:int hashCode() -> hashCode
    493:496:void initLifecycle() -> initLifecycle
    1969:1984:void initState() -> initState
    520:520:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    547:555:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    1021:1021:boolean isAdded() -> isAdded
    1030:1030:boolean isDetached() -> isDetached
    1089:1089:boolean isHidden() -> isHidden
    3061:3064:boolean isHideReplaced() -> isHideReplaced
    588:588:boolean isInBackStack() -> isInBackStack
    1060:1060:boolean isInLayout() -> isInLayout
    1102:1102:boolean isMenuVisible() -> isMenuVisible
    3054:3057:boolean isPostponed() -> isPostponed
    1039:1039:boolean isRemoving() -> isRemoving
    1048:1049:boolean isRemovingParent() -> isRemovingParent
    1068:1068:boolean isResumed() -> isResumed
    693:696:boolean isStateSaved() -> isStateSaved
    1077:1078:boolean isVisible() -> isVisible
    2760:2760:void noteStateNotSaved() -> noteStateNotSaved
    1802:1802:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1598:1602:void onAttach(android.content.Context) -> onAttach
    1616:1616:void onAttach(android.app.Activity) -> onAttach
    1890:1890:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1682:1685:void onCreate(android.os.Bundle) -> onCreate
    2098:2098:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1739:1740:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1959:1959:void onDestroy() -> onDestroy
    1949:1949:void onDestroyView() -> onDestroyView
    1994:1994:void onDetach() -> onDetach
    1452:1452:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1556:1560:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1575:1575:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1934:1934:void onLowMemory() -> onLowMemory
    1916:1916:void onPause() -> onPause
    1842:1842:void onResume() -> onResume
    1830:1830:void onStart() -> onStart
    1927:1927:void onStop() -> onStop
    1819:1819:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2714:2719:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2655:2674:void performAttach() -> performAttach
    2785:2786:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    2842:2846:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2680:2687:void performCreate(android.os.Bundle) -> performCreate
    2805:2810:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2695:2706:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    2922:2929:void performDestroy() -> performDestroy
    2902:2910:void performDestroyView() -> performDestroyView
    2935:2940:void performDetach() -> performDetach
    1484:1486:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    2790:2791:void performLowMemory() -> performLowMemory
    2775:2776:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    2828:2834:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    2854:2858:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    2872:2881:void performPause() -> performPause
    2780:2781:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    2817:2822:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    2764:2770:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    2743:2749:void performResume() -> performResume
    2863:2867:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    2726:2732:void performStart() -> performStart
    2887:2896:void performStop() -> performStop
    2475:2475:void postponeEnterTransition() -> postponeEnterTransition
    2509:2517:void postponeEnterTransition(long,java.util.concurrent.TimeUnit) -> postponeEnterTransition
    2112:2112:void registerForContextMenu(android.view.View) -> registerForContextMenu
    1386:1387:void requestPermissions(java.lang.String[],int) -> requestPermissions
    831:833:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    677:679:android.os.Bundle requireArguments() -> requireArguments
    803:805:android.content.Context requireContext() -> requireContext
    970:970:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    857:859:java.lang.Object requireHost() -> requireHost
    1003:1011:androidx.fragment.app.Fragment requireParentFragment() -> requireParentFragment
    1778:1780:android.view.View requireView() -> requireView
    1703:1707:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    572:579:void restoreViewState(android.os.Bundle) -> restoreViewState
    2403:2403:void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    2428:2428:void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    3028:3028:void setAnimatingAway(android.view.View) -> setAnimatingAway
    3032:3032:void setAnimator(android.animation.Animator) -> setAnimator
    654:657:void setArguments(android.os.Bundle) -> setArguments
    2156:2156:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    2184:2184:void setEnterTransition(java.lang.Object) -> setEnterTransition
    2167:2167:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    2260:2260:void setExitTransition(java.lang.Object) -> setExitTransition
    1153:1156:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    3068:3068:void setHideReplaced(boolean) -> setHideReplaced
    708:709:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1171:1174:void setMenuVisibility(boolean) -> setMenuVisibility
    2985:2988:void setNextAnim(int) -> setNextAnim
    2999:3003:void setNextTransition(int) -> setNextTransition
    2954:2966:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    2299:2299:void setReenterTransition(java.lang.Object) -> setReenterTransition
    1129:1137:void setRetainInstance(boolean) -> setRetainInstance
    2220:2220:void setReturnTransition(java.lang.Object) -> setReturnTransition
    2334:2334:void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    2369:2369:void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    3050:3050:void setStateAfterAnimating(int) -> setStateAfterAnimating
    732:759:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1203:1212:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1435:1436:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    1245:1245:void startActivity(android.content.Intent) -> startActivity
    1254:1255:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1266:1266:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1275:1276:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    1288:1289:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    2531:2532:void startPostponedEnterTransition() -> startPostponedEnterTransition
    608:626:java.lang.String toString() -> toString
    2123:2123:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    231:231:void <init>(androidx.fragment.app.Fragment) -> <init>
    234:234:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    496:496:void <init>(androidx.fragment.app.Fragment) -> <init>
    500:502:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2534:2534:void <init>(androidx.fragment.app.Fragment) -> <init>
    2537:2537:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2655:2655:void <init>(androidx.fragment.app.Fragment) -> <init>
    2659:2660:android.view.View onFindViewById(int) -> onFindViewById
    2667:2667:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    3085:3115:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    455:455:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    429:429:void <clinit>() -> <clinit>
    411:414:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    425:425:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    430:430:void <init>() -> <init>
    430:430:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    430:430:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    433:433:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    438:438:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    430:430:java.lang.Object[] newArray(int) -> newArray
    443:443:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    127:93:void <init>() -> <init>
    142:93:void <init>(int) -> <init>
    829:830:int allocateRequestIndex(androidx.fragment.app.Fragment) -> allocateRequestIndex
    714:714:void checkForValidRequestCode(int) -> checkForValidRequestCode
    356:356:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    598:611:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    635:635:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    645:645:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    989:989:void markFragmentsCreated() -> markFragmentsCreated
    995:1005:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    155:181:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    273:275:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    283:315:void onCreate(android.os.Bundle) -> onCreate
    324:328:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    335:337:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    346:348:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    364:366:void onDestroy() -> onDestroy
    374:375:void onLowMemory() -> onLowMemory
    383:389:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    250:250:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    436:437:void onNewIntent(android.content.Intent) -> onNewIntent
    406:409:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    417:420:void onPause() -> onPause
    265:265:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    466:467:void onPostResume() -> onPostResume
    501:501:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    487:491:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    753:768:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    455:458:void onResume() -> onResume
    477:478:void onResumeFragments() -> onResumeFragments
    509:526:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    535:550:void onStart() -> onStart
    445:445:void onStateNotSaved() -> onStateNotSaved
    558:564:void onStop() -> onStop
    853:864:void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> requestPermissionsFromFragment
    206:206:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    219:219:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    657:662:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    670:675:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    778:778:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    787:799:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> startActivityFromFragment
    684:689:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    699:704:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    809:823:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderFromFragment
    194:194:void supportFinishAfterTransition() -> supportFinishAfterTransition
    582:582:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    227:227:void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    235:235:void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    727:729:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    870:871:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    881:881:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    893:893:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    887:887:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    970:970:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    976:976:android.view.View onFindViewById(int) -> onFindViewById
    867:867:java.lang.Object onGetHost() -> onGetHost
    915:915:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    910:910:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    981:982:boolean onHasView() -> onHasView
    947:947:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    904:904:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    953:953:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    932:932:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    940:940:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    920:920:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
    140:203:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback) -> animateRemoveFragment
    47:124:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment,boolean) -> loadAnimation
    215:212:int transitToAnimResourceId(int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$1 -> androidx.fragment.app.FragmentAnim$1:
    144:144:void <init>(androidx.fragment.app.Fragment) -> <init>
    147:152:void onCancel() -> onCancel
androidx.fragment.app.FragmentAnim$2 -> androidx.fragment.app.FragmentAnim$2:
    160:160:void <init>(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    170:170:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$2$1 -> androidx.fragment.app.FragmentAnim$2$1:
    170:170:void <init>(androidx.fragment.app.FragmentAnim$2) -> <init>
    173:175:void run() -> run
androidx.fragment.app.FragmentAnim$3 -> androidx.fragment.app.FragmentAnim$3:
    189:189:void <init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    192:198:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
    231:235:void <init>(android.view.animation.Animation) -> <init>
    239:243:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
    263:269:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    274:281:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    289:296:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    303:309:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
    108:105:void <init>(android.content.Context) -> <init>
    116:117:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    129:130:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:166:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    362:367:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    275:276:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    293:294:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    218:223:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    228:235:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    251:258:void endViewTransition(android.view.View) -> endViewTransition
    208:211:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    340:344:void removeAllViewsInLayout() -> removeAllViewsInLayout
    350:352:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    316:317:void removeView(android.view.View) -> removeView
    303:305:void removeViewAt(int) -> removeViewAt
    310:311:void removeViewInLayout(android.view.View) -> removeViewInLayout
    323:326:void removeViews(int,int) -> removeViews
    332:335:void removeViewsInLayout(int,int) -> removeViewsInLayout
    263:263:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    186:194:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    240:246:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:61:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:116:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    247:247:void dispatchActivityCreated() -> dispatchActivityCreated
    363:363:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    425:425:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    236:236:void dispatchCreate() -> dispatchCreate
    387:387:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    330:330:void dispatchDestroy() -> dispatchDestroy
    375:375:void dispatchLowMemory() -> dispatchLowMemory
    341:341:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    412:412:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    436:436:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    280:280:void dispatchPause() -> dispatchPause
    352:352:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    399:399:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    269:269:void dispatchResume() -> dispatchResume
    258:258:void dispatchStart() -> dispatchStart
    291:291:void dispatchStop() -> dispatchStop
    447:447:boolean execPendingActions() -> execPendingActions
    92:92:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    142:142:void noteStateNotSaved() -> noteStateNotSaved
    134:135:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    191:192:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    152:152:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    64:65:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    44:48:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    88:91:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    58:58:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    62:65:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    195:195:android.app.Activity getActivity() -> getActivity
    200:200:android.content.Context getContext() -> getContext
    205:205:android.os.Handler getHandler() -> getHandler
    95:95:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    133:130:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    148:145:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
    35:36:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    43:43:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    50:116:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    53:54:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    154:162:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    107:115:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    138:146:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    271:279:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    285:293:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    213:221:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    92:100:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    122:130:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    199:207:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    242:250:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    185:193:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    227:235:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    170:178:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    257:265:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    75:410:void <init>() -> <init>
    2215:2224:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2298:2301:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    710:713:void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> addCancellationSignal
    1560:1569:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    898:906:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    1765:1765:int allocBackStackIndex() -> allocBackStackIndex
    2521:2521:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1639:1646:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    464:464:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    1317:1324:void cancelExitAnimation(androidx.fragment.app.Fragment) -> cancelExitAnimation
    2863:2865:boolean checkForMenus() -> checkForMenus
    1688:1689:void checkStateLoss() -> checkStateLoss
    1832:1834:void cleanupExec() -> cleanupExec
    2110:2139:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1368:1415:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1342:1350:void destroyFragmentView(androidx.fragment.app.Fragment) -> destroyFragmentView
    1623:1633:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    2567:2569:void dispatchActivityCreated() -> dispatchActivityCreated
    2641:2643:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    2718:2723:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    2561:2563:void dispatchCreate() -> dispatchCreate
    2657:2683:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    2598:2609:void dispatchDestroy() -> dispatchDestroy
    2594:2594:void dispatchDestroyView() -> dispatchDestroyView
    2649:2651:void dispatchLowMemory() -> dispatchLowMemory
    2625:2627:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    2704:2709:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    2732:2737:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    2755:2756:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    2585:2585:void dispatchPause() -> dispatchPause
    2633:2635:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    2689:2695:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    2761:2763:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    2579:2581:void dispatchResume() -> dispatchResume
    2573:2575:void dispatchStart() -> dispatchStart
    2615:2620:void dispatchStateChange(int) -> dispatchStateChange
    2589:2590:void dispatchStop() -> dispatchStop
    2283:2285:void doPendingDeferredStart() -> doPendingDeferredStart
    1018:1070:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2246:2249:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1721:1741:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> enqueueAction
    1775:1776:void ensureExecReady(boolean) -> ensureExecReady
    1841:1856:boolean execPendingActions(boolean) -> execPendingActions
    1808:1824:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    2157:2167:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    1965:2017:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    1867:1893:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1684:1684:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    1662:1662:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1675:1675:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1679:1679:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2234:2236:void forcePostponedTransactions() -> forcePostponedTransactions
    2267:2278:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    674:674:int getBackStackEntryCount() -> getBackStackEntryCount
    894:894:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2191:2202:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    2817:2827:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    884:884:java.util.List getFragments() -> getFragments
    2897:2897:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    2832:2832:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2516:2516:androidx.fragment.app.Fragment getParent() -> getParent
    2780:2780:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    825:827:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    889:889:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    538:549:void handleOnBackPressed() -> handleOnBackPressed
    1596:1602:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    981:981:boolean isDestroyed() -> isDestroyed
    93:93:boolean isLoggingEnabled(int) -> isLoggingEnabled
    2875:2875:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    522:529:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1114:1114:boolean isStateAtLeast(int) -> isStateAtLeast
    1709:1709:boolean isStateSaved() -> isStateSaved
    1523:1542:void makeActive(androidx.fragment.app.Fragment) -> makeActive
    1546:1556:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    2029:2035:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1425:1469:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1118:1310:void moveToState(androidx.fragment.app.Fragment,int) -> moveToState
    1354:1354:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1483:1510:void moveToState(int,boolean) -> moveToState
    2551:2555:void noteStateNotSaved() -> noteStateNotSaved
    1102:1109:void performPendingDeferredStart(androidx.fragment.app.Fragment) -> performPendingDeferredStart
    617:615:void popBackStack(int,int) -> popBackStack
    569:569:boolean popBackStackImmediate() -> popBackStackImmediate
    641:666:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2307:2355:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2057:2085:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    724:731:void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> removeCancellationSignal
    1575:1585:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    1915:1920:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    911:919:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    2290:2292:void reportBackStackChanged() -> reportBackStackChanged
    2433:2510:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    2377:2416:android.os.Parcelable saveAllState() -> saveAllState
    1752:1761:void scheduleCommit() -> scheduleCommit
    1333:1336:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    2784:2786:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    2743:2751:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2179:2185:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1613:1618:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1515:1517:void startPendingDeferredFragments() -> startPendingDeferredFragments
    987:1005:java.lang.String toString() -> toString
    498:503:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
    347:347:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    350:350:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
    360:360:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    369:370:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onComplete
    364:364:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onStart
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
    385:385:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    390:390:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
    410:410:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    413:413:void run() -> run
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
    1382:1382:void <init>(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1385:1388:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManager$PopBackStackState -> androidx.fragment.app.FragmentManager$PopBackStackState:
    2929:2932:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int) -> <init>
    2938:2948:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
    2963:2965:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3022:3022:void cancelTransaction() -> cancelTransaction
    3006:3014:void completeTransaction() -> completeTransaction
    2996:2996:boolean isReady() -> isReady
    2975:2979:void onStartEnterTransition() -> onStartEnterTransition
    2989:2989:void startListening() -> startListening
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    58:58:void <clinit>() -> <clinit>
    33:31:void <init>() -> <init>
    36:41:void <init>(android.os.Parcel) -> <init>
    51:55:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    67:67:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    82:83:void <init>(boolean) -> <init>
    99:102:boolean addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    157:170:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    244:250:boolean equals(java.lang.Object) -> equals
    108:108:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    138:141:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    113:113:java.util.Collection getRetainedFragments() -> getRetainedFragments
    148:151:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    255:257:int hashCode() -> hashCode
    95:95:boolean isCleared() -> isCleared
    88:91:void onCleared() -> onCleared
    133:133:boolean removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    117:128:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    264:291:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:45:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.FragmentPagerAdapter:
    118:118:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    134:136:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    191:200:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    236:245:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    157:180:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    251:251:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    278:278:java.lang.String makeFragmentName(int,long) -> makeFragmentName
    207:230:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    147:148:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    131:131:void <clinit>() -> <clinit>
    43:55:void <init>(androidx.fragment.app.Fragment) -> <init>
    58:71:void <init>(android.os.Parcel) -> <init>
    77:106:java.lang.String toString() -> toString
    116:128:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
    56:58:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.Fragment) -> <init>
    72:99:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    113:128:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    333:337:void activityCreated() -> activityCreated
    248:259:void attach(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> attach
    155:193:int computeMaxState() -> computeMaxState
    264:275:void create() -> create
    280:327:void createView(androidx.fragment.app.FragmentContainer) -> createView
    464:485:void destroy(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentManagerViewModel) -> destroy
    490:505:void detach(androidx.fragment.app.FragmentManagerViewModel) -> detach
    205:215:void ensureInflatedView() -> ensureInflatedView
    134:134:androidx.fragment.app.Fragment getFragment() -> getFragment
    370:374:void pause() -> pause
    222:242:void restoreState(java.lang.ClassLoader) -> restoreState
    342:348:void restoreViewState() -> restoreViewState
    360:366:void resume() -> resume
    422:445:android.os.Bundle saveBasicState() -> saveBasicState
    387:407:androidx.fragment.app.FragmentState saveState() -> saveState
    452:458:void saveViewState() -> saveViewState
    144:144:void setFragmentManagerState(int) -> setFragmentManagerState
    352:356:void start() -> start
    378:382:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
    188:188:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
    35:39:void <init>() -> <init>
    66:67:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    130:133:void burpActive() -> burpActive
    246:246:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    77:88:void dispatchStateChange(int) -> dispatchStateChange
    313:339:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    269:271:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    202:212:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    224:236:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    256:259:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    293:303:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment) -> findFragmentUnder
    184:189:java.util.List getActiveFragments() -> getActiveFragments
    251:251:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    174:179:java.util.List getFragments() -> getFragments
    62:62:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    101:120:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    94:96:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    42:42:void resetActiveFragments() -> resetActiveFragments
    46:51:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    138:147:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    156:169:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    126:111:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    171:171:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    234:234:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    240:241:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    132:136:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    651:652:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    424:424:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> attach
    407:407:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    678:679:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    245:249:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    357:357:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    293:293:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    343:341:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    468:468:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    778:778:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    73:73:void <init>() -> <init>
    76:80:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    83:87:void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    47:80:void <clinit>() -> <clinit>
    704:707:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1183:1268:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1135:1138:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    180:205:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1152:1158:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    1039:1052:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    527:528:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    898:901:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    840:841:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    481:521:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1063:1073:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    747:792:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    618:680:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    357:423:void configureTransitionsOrdered(androidx.fragment.app.FragmentManager,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsOrdered
    232:295:void configureTransitionsReordered(androidx.fragment.app.FragmentManager,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsReordered
    1281:1282:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    949:952:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    567:566:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    580:579:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    971:978:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    553:555:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1102:1118:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    308:329:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    85:87:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    1016:1019:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    450:450:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    995:1004:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1087:1089:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    124:155:void startTransitions(androidx.fragment.app.FragmentManager,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    276:276:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    279:279:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    329:329:void <init>(java.util.ArrayList) -> <init>
    332:332:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    405:405:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    408:408:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    450:450:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    453:469:void run() -> run
androidx.fragment.app.FragmentTransition$5 -> androidx.fragment.app.FragmentTransition$5:
    680:680:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    683:686:void run() -> run
androidx.fragment.app.FragmentTransition$6 -> androidx.fragment.app.FragmentTransition$6:
    792:792:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    795:813:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1291:1291:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    34:34:void <init>() -> <init>
    332:333:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:111:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:216:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    45:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    189:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    340:341:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    305:323:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:146:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:225:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    79:83:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    348:349:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:271:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:73:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:298:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    55:56:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:165:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    155:156:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    241:241:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    228:235:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    277:277:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    43:43:void <init>() -> <init>
    333:346:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    194:207:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    359:359:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    378:380:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    217:227:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    81:82:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    370:370:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    135:140:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    314:314:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    277:277:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    238:238:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    154:174:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    174:174:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    177:179:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    238:238:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    241:247:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    314:314:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    317:322:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    24:25:void <init>() -> <init>
    46:47:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    51:51:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    31:32:void initialize() -> initialize
    40:40:boolean isInitialized() -> isInitialized
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:23:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:32:void <init>(float[]) -> <init>
    46:54:float getInterpolation(float) -> getInterpolation
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    105:160:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    81:85:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:64:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    91:100:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    169:179:void <init>(java.util.Map) -> <init>
    185:186:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    193:194:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    205:208:void <init>(int,java.lang.reflect.Method) -> <init>
    237:242:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
    214:226:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    26:27:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    32:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.EmptyActivityLifecycleCallbacks:
    23:23:void <init>() -> <init>
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    27:29:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    34:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    78:85:void <init>() -> <init>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    132:127:void <clinit>() -> <clinit>
    128:128:void <init>(java.lang.String,int) -> <init>
    127:127:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    127:127:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    170:163:void <clinit>() -> <clinit>
    164:164:void <init>(java.lang.String,int) -> <init>
    212:212:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    163:163:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    163:163:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.LifecycleDispatcher:
    37:37:void <clinit>() -> <clinit>
    40:44:void init(android.content.Context) -> init
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback:
    49:49:void <init>() -> <init>
    53:53:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    94:96:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    169:198:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    307:317:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    159:164:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    261:263:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> downEvent
    292:301:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    239:239:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    243:246:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> getStateAfter
    130:131:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    150:155:boolean isSynced() -> isSynced
    108:108:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    346:346:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    135:140:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    202:202:void popParentState() -> popParentState
    206:206:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    223:223:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    118:118:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    325:327:void sync() -> sync
    277:280:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> upEvent
androidx.lifecycle.LifecycleRegistry$1 -> androidx.lifecycle.LifecycleRegistry$1:
    261:243:void <clinit>() -> <clinit>
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    353:355:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    359:362:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    105:107:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    118:137:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    206:206:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    142:147:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    199:199:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    68:98:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    153:191:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    61:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    108:110:void <init>() -> <init>
    461:462:void assertMainThread(java.lang.String) -> assertMainThread
    115:131:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    136:156:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    189:203:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    242:248:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    304:307:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    82:82:void <init>(androidx.lifecycle.LiveData) -> <init>
    87:90:void run() -> run
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    378:380:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    405:405:void detachObserver() -> detachObserver
    400:400:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    391:395:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    385:385:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    414:415:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    428:443:void activeStateChanged(boolean) -> activeStateChanged
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    40:40:void <init>() -> <init>
    50:50:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.ProcessLifecycleOwner:
    91:91:void <clinit>() -> <clinit>
    154:74:void <init>() -> <init>
    129:131:void activityPaused() -> activityPaused
    117:123:void activityResumed() -> activityResumed
    109:112:void activityStarted() -> activityStarted
    136:137:void activityStopped() -> activityStopped
    158:161:void attach(android.content.Context) -> attach
    141:143:void dispatchPauseIfNeeded() -> dispatchPauseIfNeeded
    148:150:void dispatchStopIfNeeded() -> dispatchStopIfNeeded
    209:209:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    105:105:void init(android.content.Context) -> init
androidx.lifecycle.ProcessLifecycleOwner$1 -> androidx.lifecycle.ProcessLifecycleOwner$1:
    66:66:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    69:70:void run() -> run
androidx.lifecycle.ProcessLifecycleOwner$2 -> androidx.lifecycle.ProcessLifecycleOwner$2:
    75:75:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    87:87:void onResume() -> onResume
    82:82:void onStart() -> onStart
androidx.lifecycle.ProcessLifecycleOwner$3 -> androidx.lifecycle.ProcessLifecycleOwner$3:
    161:161:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    189:190:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    196:196:void onActivityPaused(android.app.Activity) -> onActivityPaused
    171:171:void onActivityPreCreated(android.app.Activity,android.os.Bundle) -> onActivityPreCreated
    201:201:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwner$3$1 -> androidx.lifecycle.ProcessLifecycleOwner$3$1:
    171:171:void <init>(androidx.lifecycle.ProcessLifecycleOwner$3) -> <init>
    179:179:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    174:174:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
androidx.lifecycle.ProcessLifecycleOwnerInitializer -> androidx.lifecycle.ProcessLifecycleOwnerInitializer:
    34:34:void <init>() -> <init>
    37:38:boolean onCreate() -> onCreate
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    30:32:void <init>(java.lang.Object) -> <init>
    37:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    36:36:void <init>() -> <init>
    60:68:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch
    140:144:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    82:82:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    94:94:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    88:88:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    74:74:androidx.lifecycle.ReportFragment get(android.app.Activity) -> get
    41:54:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    100:102:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    133:136:void onDestroy() -> onDestroy
    121:122:void onPause() -> onPause
    114:116:void onResume() -> onResume
    107:109:void onStart() -> onStart
    127:128:void onStop() -> onStop
    149:149:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> setProcessListener
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
    161:161:void <init>() -> <init>
    170:170:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    188:188:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    179:179:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    216:216:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    193:193:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    202:202:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
androidx.lifecycle.SavedStateHandle -> androidx.lifecycle.SavedStateHandle:
    315:315:void <clinit>() -> <clinit>
    88:89:void <init>(java.util.Map) -> <init>
    95:96:void <init>() -> <init>
    102:119:androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle) -> createHandle
    129:129:androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider() -> savedStateProvider
androidx.lifecycle.SavedStateHandle$1 -> androidx.lifecycle.SavedStateHandle$1:
    63:63:void <init>(androidx.lifecycle.SavedStateHandle) -> <init>
    68:79:android.os.Bundle saveState() -> saveState
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    35:37:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle) -> <init>
    98:102:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    45:46:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    67:71:androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle) -> create
    62:62:androidx.lifecycle.SavedStateHandle getHandle() -> getHandle
    41:41:boolean isAttached() -> isAttached
    55:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    107:109:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
    111:111:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    115:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$OnRecreation:
    75:75:void <init>() -> <init>
    79:80:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.SavedStateViewModelFactory -> androidx.lifecycle.SavedStateViewModelFactory:
    143:145:void <clinit>() -> <clinit>
    86:91:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    97:121:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    136:138:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    150:152:java.lang.reflect.Constructor findMatchingConstructor(java.lang.Class,java.lang.Class[]) -> findMatchingConstructor
    161:161:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    25:26:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    31:32:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    108:112:void <init>() -> <init>
    126:139:void clear() -> clear
    187:191:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    178:183:java.lang.Object getTag(java.lang.String) -> getTag
    157:162:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object) -> setTagIfAbsent
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    99:99:void <init>(androidx.lifecycle.ViewModelStoreOwner) -> <init>
    125:127:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    146:148:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    171:189:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
    257:258:void <init>(android.app.Application) -> <init>
    264:278:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    244:247:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> getInstance
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    65:65:void <init>() -> <init>
    81:81:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
    196:196:void <init>() -> <init>
    219:221:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    207:210:androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance() -> getInstance
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
    54:54:void <init>() -> <init>
androidx.lifecycle.ViewModelProviders -> androidx.lifecycle.ViewModelProviders:
    60:60:androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment) -> of
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:64:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:45:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:40:void <init>() -> <init>
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    371:373:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    498:498:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:481:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    149:151:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:215:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    111:119:void markForRedelivery() -> markForRedelivery
    76:77:void onActive() -> onActive
    82:83:void onInactive() -> onInactive
    134:137:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    189:192:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:295:void <init>() -> <init>
    354:361:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    335:338:void markForRedelivery() -> markForRedelivery
    344:348:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    175:183:void <clinit>() -> <clinit>
    252:252:void <init>() -> <init>
    766:773:boolean equals(java.lang.Object) -> equals
    606:606:int hashCode() -> hashCode
    611:611:java.lang.String toString() -> toString
    756:756:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    649:649:java.lang.String usageToString(int) -> usageToString
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    9:9:void <init>() -> <init>
    11:12:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21 -> androidx.media.AudioAttributesImplApi21:
    49:43:void <init>() -> <init>
    150:154:boolean equals(java.lang.Object) -> equals
    145:145:int hashCode() -> hashCode
    159:159:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    9:9:void <init>() -> <init>
    11:13:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    18:20:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> androidx.media.AudioAttributesImplBase:
    50:44:void <init>() -> <init>
    128:134:boolean equals(java.lang.Object) -> equals
    86:86:int getContentType() -> getContentType
    96:97:int getFlags() -> getFlags
    73:76:int getLegacyStreamType() -> getLegacyStreamType
    91:91:int getUsage() -> getUsage
    123:123:int hashCode() -> hashCode
    140:151:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    9:9:void <init>() -> <init>
    11:15:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    20:24:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.preference.CheckBoxPreference -> androidx.preference.CheckBoxPreference:
    62:62:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    67:82:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    86:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:100:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    109:110:void performClick(android.view.View) -> performClick
    128:135:void syncCheckboxView(android.view.View) -> syncCheckboxView
    115:124:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.CheckBoxPreference$Listener -> androidx.preference.CheckBoxPreference$Listener:
    46:46:void <init>(androidx.preference.CheckBoxPreference) -> <init>
    51:57:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.CollapsiblePreferenceGroupController -> androidx.preference.CollapsiblePreferenceGroupController:
    41:43:void <init>(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroupAdapter) -> <init>
    142:144:androidx.preference.CollapsiblePreferenceGroupController$ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List) -> createExpandButton
    57:114:java.util.List createInnerVisiblePreferencesList(androidx.preference.PreferenceGroup) -> createInnerVisiblePreferencesList
    53:53:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup) -> createVisiblePreferencesList
    125:134:boolean onPreferenceVisibilityChange(androidx.preference.Preference) -> onPreferenceVisibilityChange
androidx.preference.CollapsiblePreferenceGroupController$1 -> androidx.preference.CollapsiblePreferenceGroupController$1:
    144:144:void <init>(androidx.preference.CollapsiblePreferenceGroupController,androidx.preference.PreferenceGroup) -> <init>
    147:152:boolean onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
androidx.preference.CollapsiblePreferenceGroupController$ExpandButton -> androidx.preference.CollapsiblePreferenceGroupController$ExpandButton:
    168:174:void <init>(android.content.Context,java.util.List,long) -> <init>
    225:225:long getId() -> getId
    178:182:void initLayout() -> initLayout
    219:220:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    192:214:void setSummary(java.util.List) -> setSummary
androidx.preference.DialogPreference -> androidx.preference.DialogPreference:
    55:86:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    90:90:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    94:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    181:181:android.graphics.drawable.Drawable getDialogIcon() -> getDialogIcon
    258:258:int getDialogLayoutResource() -> getDialogLayoutResource
    154:154:java.lang.CharSequence getDialogMessage() -> getDialogMessage
    124:124:java.lang.CharSequence getDialogTitle() -> getDialogTitle
    237:237:java.lang.CharSequence getNegativeButtonText() -> getNegativeButtonText
    209:209:java.lang.CharSequence getPositiveButtonText() -> getPositiveButtonText
    263:263:void onClick() -> onClick
androidx.preference.DropDownPreference -> androidx.preference.DropDownPreference:
    48:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    57:61:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    86:86:android.widget.ArrayAdapter createAdapter() -> createAdapter
    108:111:int findSpinnerIndexOfValue(java.lang.String) -> findSpinnerIndexOfValue
    121:122:void notifyChanged() -> notifyChanged
    127:131:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    66:66:void onClick() -> onClick
    71:72:void setEntries(java.lang.CharSequence[]) -> setEntries
    90:93:void updateEntries() -> updateEntries
androidx.preference.DropDownPreference$1 -> androidx.preference.DropDownPreference$1:
    134:134:void <init>(androidx.preference.DropDownPreference) -> <init>
    138:140:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.preference.EditTextPreference -> androidx.preference.EditTextPreference:
    43:43:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    47:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    83:83:java.lang.String getText() -> getText
    88:88:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    116:118:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    103:110:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    93:93:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    65:73:void setText(java.lang.String) -> setText
    98:98:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.EditTextPreference$SavedState -> androidx.preference.EditTextPreference$SavedState:
    145:145:void <clinit>() -> <clinit>
    131:132:void <init>(android.os.Parcel) -> <init>
    142:142:void <init>(android.os.Parcelable) -> <init>
    137:138:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.EditTextPreference$SavedState$1 -> androidx.preference.EditTextPreference$SavedState$1:
    146:146:void <init>() -> <init>
    146:146:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    149:149:androidx.preference.EditTextPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    146:146:java.lang.Object[] newArray(int) -> newArray
    154:154:androidx.preference.EditTextPreference$SavedState[] newArray(int) -> newArray
androidx.preference.EditTextPreferenceDialogFragmentCompat -> androidx.preference.EditTextPreferenceDialogFragmentCompat:
    28:28:void <init>() -> <init>
    79:79:androidx.preference.EditTextPreference getEditTextPreference() -> getEditTextPreference
    38:41:androidx.preference.EditTextPreferenceDialogFragmentCompat newInstance(java.lang.String) -> newInstance
    63:69:void onBindDialogView(android.view.View) -> onBindDialogView
    47:51:void onCreate(android.os.Bundle) -> onCreate
    94:96:void onDialogClosed(boolean) -> onDialogClosed
    57:58:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.ListPreference -> androidx.preference.ListPreference:
    48:70:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    74:74:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    78:78:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    239:241:int findIndexOfValue(java.lang.String) -> findIndexOfValue
    114:114:java.lang.CharSequence[] getEntries() -> getEntries
    228:229:java.lang.CharSequence getEntry() -> getEntry
    142:142:java.lang.CharSequence[] getEntryValues() -> getEntryValues
    174:178:java.lang.CharSequence getSummary() -> getSummary
    219:219:java.lang.String getValue() -> getValue
    250:250:int getValueIndex() -> getValueIndex
    255:255:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    278:280:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    265:272:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    260:260:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    97:97:void setEntries(java.lang.CharSequence[]) -> setEntries
    125:125:void setEntryValues(java.lang.CharSequence[]) -> setEntryValues
    193:197:void setSummary(java.lang.CharSequence) -> setSummary
    153:159:void setValue(java.lang.String) -> setValue
androidx.preference.ListPreference$SavedState -> androidx.preference.ListPreference$SavedState:
    307:307:void <clinit>() -> <clinit>
    293:294:void <init>(android.os.Parcel) -> <init>
    304:304:void <init>(android.os.Parcelable) -> <init>
    299:300:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.ListPreference$SavedState$1 -> androidx.preference.ListPreference$SavedState$1:
    308:308:void <init>() -> <init>
    308:308:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    311:311:androidx.preference.ListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    308:308:java.lang.Object[] newArray(int) -> newArray
    316:316:androidx.preference.ListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.ListPreferenceDialogFragmentCompat -> androidx.preference.ListPreferenceDialogFragmentCompat:
    25:25:void <init>() -> <init>
    76:76:androidx.preference.ListPreference getListPreference() -> getListPreference
    38:42:androidx.preference.ListPreferenceDialogFragmentCompat newInstance(java.lang.String) -> newInstance
    48:63:void onCreate(android.os.Bundle) -> onCreate
    109:113:void onDialogClosed(boolean) -> onDialogClosed
    81:104:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    69:72:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.ListPreferenceDialogFragmentCompat$1 -> androidx.preference.ListPreferenceDialogFragmentCompat$1:
    84:84:void <init>(androidx.preference.ListPreferenceDialogFragmentCompat) -> <init>
    87:95:void onClick(android.content.DialogInterface,int) -> onClick
androidx.preference.MultiSelectListPreference -> androidx.preference.MultiSelectListPreference:
    52:66:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    70:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    112:112:java.lang.CharSequence[] getEntries() -> getEntries
    141:141:java.lang.CharSequence[] getEntryValues() -> getEntryValues
    163:163:java.util.Set getValues() -> getValues
    198:202:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    229:231:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    216:223:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    211:211:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    152:155:void setValues(java.util.Set) -> setValues
androidx.preference.MultiSelectListPreference$SavedState -> androidx.preference.MultiSelectListPreference$SavedState:
    264:264:void <clinit>() -> <clinit>
    244:250:void <init>(android.os.Parcel) -> <init>
    254:254:void <init>(android.os.Parcelable) -> <init>
    259:261:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.MultiSelectListPreference$SavedState$1 -> androidx.preference.MultiSelectListPreference$SavedState$1:
    265:265:void <init>() -> <init>
    265:265:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    268:268:androidx.preference.MultiSelectListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    265:265:java.lang.Object[] newArray(int) -> newArray
    273:273:androidx.preference.MultiSelectListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat -> androidx.preference.MultiSelectListPreferenceDialogFragmentCompat:
    30:41:void <init>() -> <init>
    96:96:androidx.preference.internal.AbstractMultiSelectListPreference getListPreference() -> getListPreference
    51:55:androidx.preference.MultiSelectListPreferenceDialogFragmentCompat newInstance(java.lang.String) -> newInstance
    61:82:void onCreate(android.os.Bundle) -> onCreate
    125:132:void onDialogClosed(boolean) -> onDialogClosed
    101:108:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    88:92:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat$1 -> androidx.preference.MultiSelectListPreferenceDialogFragmentCompat$1:
    109:109:void <init>(androidx.preference.MultiSelectListPreferenceDialogFragmentCompat) -> <init>
    113:116:void onClick(android.content.DialogInterface,int,boolean) -> onClick
androidx.preference.Preference -> androidx.preference.Preference:
    261:331:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    355:355:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    373:373:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    383:383:void <init>(android.content.Context) -> <init>
    1318:1318:void assignParent(androidx.preference.PreferenceGroup) -> assignParent
    1101:1101:boolean callChangeListener(java.lang.Object) -> callChangeListener
    90:90:int compareTo(java.lang.Object) -> compareTo
    1225:1237:int compareTo(androidx.preference.Preference) -> compareTo
    2053:2059:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    2000:2004:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    1554:1563:void dispatchSetInitialValue() -> dispatchSetInitialValue
    1396:1400:androidx.preference.Preference findPreferenceInHierarchy(java.lang.String) -> findPreferenceInHierarchy
    1193:1193:android.content.Context getContext() -> getContext
    484:487:android.os.Bundle getExtras() -> getExtras
    1961:1972:java.lang.StringBuilder getFilterableStringBuilder() -> getFilterableStringBuilder
    437:437:java.lang.String getFragment() -> getFragment
    948:948:long getId() -> getId
    419:419:android.content.Intent getIntent() -> getIntent
    981:981:java.lang.String getKey() -> getKey
    524:524:int getLayoutResource() -> getLayoutResource
    680:680:int getOrder() -> getOrder
    1531:1531:androidx.preference.PreferenceGroup getParent() -> getParent
    1932:1941:boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    1767:1776:int getPersistedInt(int) -> getPersistedInt
    1659:1668:java.lang.String getPersistedString(java.lang.String) -> getPersistedString
    1712:1721:java.util.Set getPersistedStringSet(java.util.Set) -> getPersistedStringSet
    469:472:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    1277:1277:androidx.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    1209:1213:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    775:775:java.lang.CharSequence getSummary() -> getSummary
    725:725:java.lang.CharSequence getTitle() -> getTitle
    549:549:int getWidgetLayoutResource() -> getWidgetLayoutResource
    1004:1004:boolean hasKey() -> hasKey
    824:824:boolean isEnabled() -> isEnabled
    1015:1015:boolean isPersistent() -> isPersistent
    845:845:boolean isSelectable() -> isSelectable
    906:906:boolean isVisible() -> isVisible
    1255:1256:void notifyChanged() -> notifyChanged
    1442:1450:void notifyDependencyChange(boolean) -> notifyDependencyChange
    1266:1267:void notifyHierarchyChanged() -> notifyHierarchyChanged
    1330:1330:void onAttached() -> onAttached
    1287:1293:void onAttachedToHierarchy(androidx.preference.PreferenceManager) -> onAttachedToHierarchy
    1302:1307:void onAttachedToHierarchy(androidx.preference.PreferenceManager,long) -> onAttachedToHierarchy
    565:633:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    1461:1467:void onDependencyChanged(androidx.preference.Preference,boolean) -> onDependencyChanged
    1340:1340:void onDetached() -> onDetached
    1478:1484:void onParentChanged(androidx.preference.Preference,boolean) -> onParentChanged
    1540:1540:void onPrepareForRemoval() -> onPrepareForRemoval
    2077:2079:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2026:2027:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1594:1594:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    1148:1148:void performClick(android.view.View) -> performClick
    1159:1180:void performClick() -> performClick
    1901:1916:boolean persistBoolean(boolean) -> persistBoolean
    1736:1751:boolean persistInt(int) -> persistInt
    1628:1644:boolean persistString(java.lang.String) -> persistString
    1682:1698:boolean persistStringSet(java.util.Set) -> persistStringSet
    1365:1371:void registerDependency() -> registerDependency
    1413:1419:void registerDependent(androidx.preference.Preference) -> registerDependent
    2039:2039:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    1986:1986:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    1550:1550:void setDefaultValue(java.lang.Object) -> setDefaultValue
    640:645:void setEnabledStateOnViews(android.view.View,boolean) -> setEnabledStateOnViews
    737:740:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    751:752:void setIcon(int) -> setIcon
    410:410:void setIntent(android.content.Intent) -> setIntent
    515:515:void setLayoutResource(int) -> setLayoutResource
    1248:1248:void setOnPreferenceChangeInternalListener(androidx.preference.Preference$OnPreferenceChangeInternalListener) -> setOnPreferenceChangeInternalListener
    1131:1131:void setOnPreferenceClickListener(androidx.preference.Preference$OnPreferenceClickListener) -> setOnPreferenceClickListener
    664:668:void setOrder(int) -> setOrder
    784:787:void setSummary(java.lang.CharSequence) -> setSummary
    702:704:void setTitle(java.lang.CharSequence) -> setTitle
    715:715:void setTitle(int) -> setTitle
    887:890:void setVisible(boolean) -> setVisible
    1495:1495:boolean shouldDisableDependents() -> shouldDisableDependents
    1027:1027:boolean shouldPersist() -> shouldPersist
    1946:1946:java.lang.String toString() -> toString
    1612:1613:void tryCommit(android.content.SharedPreferences$Editor) -> tryCommit
    1377:1380:void unregisterDependency() -> unregisterDependency
    1429:1430:void unregisterDependent(androidx.preference.Preference) -> unregisterDependent
androidx.preference.Preference$1 -> androidx.preference.Preference$1:
    169:169:void <init>(androidx.preference.Preference) -> <init>
    172:172:void onClick(android.view.View) -> onClick
androidx.preference.Preference$BaseSavedState -> androidx.preference.Preference$BaseSavedState:
    2103:2103:void <clinit>() -> <clinit>
    2096:2096:void <init>(android.os.Parcel) -> <init>
    2100:2100:void <init>(android.os.Parcelable) -> <init>
androidx.preference.Preference$BaseSavedState$1 -> androidx.preference.Preference$BaseSavedState$1:
    2104:2104:void <init>() -> <init>
    2104:2104:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2107:2107:androidx.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2104:2104:java.lang.Object[] newArray(int) -> newArray
    2112:2112:androidx.preference.Preference$BaseSavedState[] newArray(int) -> newArray
androidx.preference.PreferenceCategory -> androidx.preference.PreferenceCategory:
    43:43:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    47:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:73:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    79:93:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    66:66:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.PreferenceDialogFragmentCompat -> androidx.preference.PreferenceDialogFragmentCompat:
    50:50:void <init>() -> <init>
    174:180:androidx.preference.DialogPreference getPreference() -> getPreference
    242:257:void onBindDialogView(android.view.View) -> onBindDialogView
    264:264:void onClick(android.content.DialogInterface,int) -> onClick
    77:81:void onCreate(android.os.Bundle) -> onCreate
    138:160:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    225:231:android.view.View onCreateDialogView(android.content.Context) -> onCreateDialogView
    269:270:void onDismiss(android.content.DialogInterface) -> onDismiss
    123:131:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    212:213:void requestInputMethod(android.app.Dialog) -> requestInputMethod
androidx.preference.PreferenceFragmentCompat -> androidx.preference.PreferenceFragmentCompat:
    109:152:void <init>() -> <init>
    427:429:void addPreferencesFromResource(int) -> addPreferencesFromResource
    533:538:void bindPreferences() -> bindPreferences
    514:517:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    560:560:androidx.recyclerview.widget.RecyclerView getListView() -> getListView
    392:392:androidx.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    417:417:androidx.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    209:228:void onCreate(android.os.Bundle) -> onCreate
    614:614:androidx.recyclerview.widget.RecyclerView$Adapter onCreateAdapter(androidx.preference.PreferenceScreen) -> onCreateAdapter
    604:604:androidx.recyclerview.widget.RecyclerView$LayoutManager onCreateLayoutManager() -> onCreateLayoutManager
    580:591:androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateRecyclerView
    247:270:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    366:372:void onDestroyView() -> onDestroyView
    628:654:void onDisplayPreferenceDialog(androidx.preference.Preference) -> onDisplayPreferenceDialog
    495:501:void onNavigateToScreen(androidx.preference.PreferenceScreen) -> onNavigateToScreen
    467:475:boolean onPreferenceTreeClick(androidx.preference.Preference) -> onPreferenceTreeClick
    377:383:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    352:354:void onStart() -> onStart
    359:361:void onStop() -> onStop
    327:347:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    527:528:void postBindPreferences() -> postBindPreferences
    521:522:void requirePreferenceManager() -> requirePreferenceManager
    311:311:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    322:322:void setDividerHeight(int) -> setDividerHeight
    401:405:void setPreferenceScreen(androidx.preference.PreferenceScreen) -> setPreferenceScreen
    542:546:void unbindPreferences() -> unbindPreferences
androidx.preference.PreferenceFragmentCompat$1 -> androidx.preference.PreferenceFragmentCompat$1:
    140:140:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    143:146:void handleMessage(android.os.Message) -> handleMessage
androidx.preference.PreferenceFragmentCompat$2 -> androidx.preference.PreferenceFragmentCompat$2:
    152:152:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    155:155:void run() -> run
androidx.preference.PreferenceFragmentCompat$DividerDecoration -> androidx.preference.PreferenceFragmentCompat$DividerDecoration:
    784:782:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    807:808:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    789:799:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    846:846:void setAllowDividerAfterLastItem(boolean) -> setAllowDividerAfterLastItem
    832:837:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    841:842:void setDividerHeight(int) -> setDividerHeight
    813:825:boolean shouldDrawDividerBelow(android.view.View,androidx.recyclerview.widget.RecyclerView) -> shouldDrawDividerBelow
androidx.preference.PreferenceGroup -> androidx.preference.PreferenceGroup:
    89:105:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    109:109:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    113:113:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    181:181:void addItemFromInflater(androidx.preference.Preference) -> addItemFromInflater
    210:249:boolean addPreference(androidx.preference.Preference) -> addPreference
    487:492:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    476:481:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    356:370:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    174:174:int getInitialExpandedChildrenCount() -> getInitialExpandedChildrenCount
    424:424:androidx.preference.PreferenceGroup$OnExpandButtonClickListener getOnExpandButtonClickListener() -> getOnExpandButtonClickListener
    199:199:androidx.preference.Preference getPreference(int) -> getPreference
    189:189:int getPreferenceCount() -> getPreferenceCount
    458:464:void notifyDependencyChange(boolean) -> notifyDependencyChange
    429:438:void onAttached() -> onAttached
    444:452:void onDetached() -> onDetached
    338:338:boolean onPrepareAddPreference(androidx.preference.Preference) -> onPrepareAddPreference
    504:506:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    498:499:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    322:327:void removeAll() -> removeAll
    285:315:boolean removePreferenceInt(androidx.preference.Preference) -> removePreferenceInt
    159:163:void setInitialExpandedChildrenCount(int) -> setInitialExpandedChildrenCount
    128:128:void setOrderingAsAdded(boolean) -> setOrderingAsAdded
    469:471:void sortPreferences() -> sortPreferences
androidx.preference.PreferenceGroup$1 -> androidx.preference.PreferenceGroup$1:
    79:79:void <init>(androidx.preference.PreferenceGroup) -> <init>
    82:84:void run() -> run
androidx.preference.PreferenceGroup$SavedState -> androidx.preference.PreferenceGroup$SavedState:
    578:578:void <clinit>() -> <clinit>
    563:564:void <init>(android.os.Parcel) -> <init>
    568:569:void <init>(android.os.Parcelable,int) -> <init>
    574:575:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.PreferenceGroup$SavedState$1 -> androidx.preference.PreferenceGroup$SavedState$1:
    579:579:void <init>() -> <init>
    579:579:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    582:582:androidx.preference.PreferenceGroup$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    579:579:java.lang.Object[] newArray(int) -> newArray
    587:587:androidx.preference.PreferenceGroup$SavedState[] newArray(int) -> newArray
androidx.preference.PreferenceGroupAdapter -> androidx.preference.PreferenceGroupAdapter:
    122:122:void <init>(androidx.preference.PreferenceGroup) -> <init>
    125:143:void <init>(androidx.preference.PreferenceGroup,android.os.Handler) -> <init>
    246:248:void addPreferenceClassName(androidx.preference.Preference) -> addPreferenceClassName
    238:241:androidx.preference.PreferenceGroupAdapter$PreferenceLayout createPreferenceLayout(androidx.preference.Preference,androidx.preference.PreferenceGroupAdapter$PreferenceLayout) -> createPreferenceLayout
    211:228:void flattenPreferenceGroup(java.util.List,androidx.preference.PreferenceGroup) -> flattenPreferenceGroup
    258:259:androidx.preference.Preference getItem(int) -> getItem
    254:254:int getItemCount() -> getItemCount
    264:267:long getItemId(int) -> getItemId
    333:342:int getItemViewType(int) -> getItemViewType
    45:45:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    380:381:void onBindViewHolder(androidx.preference.PreferenceViewHolder,int) -> onBindViewHolder
    45:45:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    349:375:androidx.preference.PreferenceViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    272:276:void onPreferenceChange(androidx.preference.Preference) -> onPreferenceChange
    282:283:void onPreferenceHierarchyChange(androidx.preference.Preference) -> onPreferenceHierarchyChange
    288:327:void onPreferenceVisibilityChange(androidx.preference.Preference) -> onPreferenceVisibilityChange
    154:206:void syncMyPreferences() -> syncMyPreferences
androidx.preference.PreferenceGroupAdapter$1 -> androidx.preference.PreferenceGroupAdapter$1:
    80:80:void <init>(androidx.preference.PreferenceGroupAdapter) -> <init>
    83:83:void run() -> run
androidx.preference.PreferenceGroupAdapter$2 -> androidx.preference.PreferenceGroupAdapter$2:
    174:174:void <init>(androidx.preference.PreferenceGroupAdapter,java.util.List,java.util.List,androidx.preference.PreferenceManager$PreferenceComparisonCallback) -> <init>
    194:194:boolean areContentsTheSame(int,int) -> areContentsTheSame
    187:187:boolean areItemsTheSame(int,int) -> areItemsTheSame
    182:182:int getNewListSize() -> getNewListSize
    177:177:int getOldListSize() -> getOldListSize
androidx.preference.PreferenceGroupAdapter$PreferenceLayout -> androidx.preference.PreferenceGroupAdapter$PreferenceLayout:
    92:92:void <init>() -> <init>
    94:97:void <init>(androidx.preference.PreferenceGroupAdapter$PreferenceLayout) -> <init>
    102:108:boolean equals(java.lang.Object) -> equals
    114:116:int hashCode() -> hashCode
androidx.preference.PreferenceInflater -> androidx.preference.PreferenceInflater:
    43:46:void <clinit>() -> <clinit>
    59:61:void <init>(android.content.Context,androidx.preference.PreferenceManager) -> <init>
    222:263:androidx.preference.Preference createItem(java.lang.String,java.lang.String[],android.util.AttributeSet) -> createItem
    292:301:androidx.preference.Preference createItemFromTag(java.lang.String,android.util.AttributeSet) -> createItemFromTag
    103:103:android.content.Context getContext() -> getContext
    118:122:androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup) -> inflate
    146:187:androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup) -> inflate
    65:69:void init(androidx.preference.PreferenceManager) -> init
    284:284:androidx.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet) -> onCreateItem
    195:195:androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup) -> onMergeRoots
    325:364:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet) -> rInflate
    85:85:void setDefaultPackages(java.lang.String[]) -> setDefaultPackages
    372:377:void skipCurrentTag(org.xmlpull.v1.XmlPullParser) -> skipCurrentTag
androidx.preference.PreferenceManager -> androidx.preference.PreferenceManager:
    113:116:void <init>(android.content.Context) -> <init>
    394:398:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    352:352:java.lang.String getDefaultSharedPreferencesName(android.content.Context) -> getDefaultSharedPreferencesName
    483:494:android.content.SharedPreferences$Editor getEditor() -> getEditor
    159:161:long getNextId() -> getNextId
    584:584:androidx.preference.PreferenceManager$OnNavigateToScreenListener getOnNavigateToScreenListener() -> getOnNavigateToScreenListener
    567:567:androidx.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener() -> getOnPreferenceTreeClickListener
    528:528:androidx.preference.PreferenceManager$PreferenceComparisonCallback getPreferenceComparisonCallback() -> getPreferenceComparisonCallback
    304:304:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    365:365:androidx.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    316:335:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    135:142:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen) -> inflateFromResource
    512:515:void setNoCommit(boolean) -> setNoCommit
    542:542:void setOnDisplayPreferenceDialogListener(androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener) -> setOnDisplayPreferenceDialogListener
    577:577:void setOnNavigateToScreenListener(androidx.preference.PreferenceManager$OnNavigateToScreenListener) -> setOnNavigateToScreenListener
    563:563:void setOnPreferenceTreeClickListener(androidx.preference.PreferenceManager$OnPreferenceTreeClickListener) -> setOnPreferenceTreeClickListener
    375:379:boolean setPreferences(androidx.preference.PreferenceScreen) -> setPreferences
    186:187:void setSharedPreferencesName(java.lang.String) -> setSharedPreferencesName
    508:508:boolean shouldCommit() -> shouldCommit
    551:552:void showDialog(androidx.preference.Preference) -> showDialog
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate -> androidx.preference.PreferenceRecyclerViewAccessibilityDelegate:
    42:43:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    48:48:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1 -> androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1:
    51:51:void <init>(androidx.preference.PreferenceRecyclerViewAccessibilityDelegate) -> <init>
    54:68:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    74:74:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.preference.PreferenceScreen -> androidx.preference.PreferenceScreen:
    90:82:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:102:void onClick() -> onClick
    117:117:boolean shouldUseGeneratedIds() -> shouldUseGeneratedIds
androidx.preference.PreferenceViewHolder -> androidx.preference.PreferenceViewHolder:
    37:44:void <init>(android.view.View) -> <init>
    62:68:android.view.View findViewById(int) -> findViewById
    81:81:boolean isDividerAllowedAbove() -> isDividerAllowedAbove
    105:105:boolean isDividerAllowedBelow() -> isDividerAllowedBelow
    95:95:void setDividerAllowedAbove(boolean) -> setDividerAllowedAbove
    119:119:void setDividerAllowedBelow(boolean) -> setDividerAllowedBelow
androidx.preference.R$styleable -> androidx.preference.R$styleable:
    1310:1938:void <clinit>() -> <clinit>
androidx.preference.SeekBarPreference -> androidx.preference.SeekBarPreference:
    122:137:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    141:141:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    145:145:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:185:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    198:198:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    321:333:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    305:315:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    191:193:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    216:221:void setMax(int) -> setMax
    241:243:void setSeekBarIncrement(int) -> setSeekBarIncrement
    260:260:void setValue(int) -> setValue
    264:278:void setValueInternal(int,boolean) -> setValueInternal
    293:298:void syncValueInternal(android.widget.SeekBar) -> syncValueInternal
androidx.preference.SeekBarPreference$1 -> androidx.preference.SeekBarPreference$1:
    66:66:void <init>(androidx.preference.SeekBarPreference) -> <init>
    69:70:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    76:76:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    81:83:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
androidx.preference.SeekBarPreference$2 -> androidx.preference.SeekBarPreference$2:
    93:93:void <init>(androidx.preference.SeekBarPreference) -> <init>
    96:116:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.preference.SeekBarPreference$SavedState -> androidx.preference.SeekBarPreference$SavedState:
    371:371:void <clinit>() -> <clinit>
    348:353:void <init>(android.os.Parcel) -> <init>
    367:367:void <init>(android.os.Parcelable) -> <init>
    358:363:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.SeekBarPreference$SavedState$1 -> androidx.preference.SeekBarPreference$SavedState$1:
    372:372:void <init>() -> <init>
    372:372:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    375:375:androidx.preference.SeekBarPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    372:372:java.lang.Object[] newArray(int) -> newArray
    380:380:androidx.preference.SeekBarPreference$SavedState[] newArray(int) -> newArray
androidx.preference.SwitchPreference -> androidx.preference.SwitchPreference:
    83:106:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    119:119:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    129:129:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    145:148:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    213:214:void performClick(android.view.View) -> performClick
    169:170:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    158:159:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    233:244:void syncSwitchView(android.view.View) -> syncSwitchView
    220:229:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreference$Listener -> androidx.preference.SwitchPreference$Listener:
    52:52:void <init>(androidx.preference.SwitchPreference) -> <init>
    57:64:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.SwitchPreferenceCompat -> androidx.preference.SwitchPreferenceCompat:
    83:106:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    119:119:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    129:129:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    143:146:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    211:212:void performClick(android.view.View) -> performClick
    167:168:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    156:157:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    230:241:void syncSwitchView(android.view.View) -> syncSwitchView
    217:226:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreferenceCompat$Listener -> androidx.preference.SwitchPreferenceCompat$Listener:
    52:52:void <init>(androidx.preference.SwitchPreferenceCompat) -> <init>
    57:64:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.TwoStatePreference -> androidx.preference.TwoStatePreference:
    47:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    97:97:boolean isChecked() -> isChecked
    64:68:void onClick() -> onClick
    185:185:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    255:257:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    242:249:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    191:193:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    79:86:void setChecked(boolean) -> setChecked
    180:180:void setDisableDependentsState(boolean) -> setDisableDependentsState
    140:142:void setSummaryOff(java.lang.CharSequence) -> setSummaryOff
    112:114:void setSummaryOn(java.lang.CharSequence) -> setSummaryOn
    102:103:boolean shouldDisableDependents() -> shouldDisableDependents
    202:203:void syncSummaryView(androidx.preference.PreferenceViewHolder) -> syncSummaryView
    211:236:void syncSummaryView(android.view.View) -> syncSummaryView
androidx.preference.TwoStatePreference$SavedState -> androidx.preference.TwoStatePreference$SavedState:
    284:284:void <clinit>() -> <clinit>
    270:271:void <init>(android.os.Parcel) -> <init>
    281:281:void <init>(android.os.Parcelable) -> <init>
    276:277:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.TwoStatePreference$SavedState$1 -> androidx.preference.TwoStatePreference$SavedState$1:
    285:285:void <init>() -> <init>
    285:285:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    288:288:androidx.preference.TwoStatePreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    285:285:java.lang.Object[] newArray(int) -> newArray
    293:293:androidx.preference.TwoStatePreference$SavedState[] newArray(int) -> newArray
androidx.preference.UnPressableLinearLayout -> androidx.preference.UnPressableLinearLayout:
    36:36:void <init>(android.content.Context) -> <init>
    40:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.preference.internal.AbstractMultiSelectListPreference -> androidx.preference.internal.AbstractMultiSelectListPreference:
    40:40:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    48:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.preference.internal.PreferenceImageView -> androidx.preference.internal.PreferenceImageView:
    40:40:void <init>(android.content.Context) -> <init>
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:59:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:86:int getMaxHeight() -> getMaxHeight
    75:75:int getMaxWidth() -> getMaxWidth
    91:111:void onMeasure(int,int) -> onMeasure
    80:81:void setMaxHeight(int) -> setMaxHeight
    69:70:void setMaxWidth(int) -> setMaxWidth
androidx.recyclerview.R$styleable -> androidx.recyclerview.R$styleable:
    201:239:void <clinit>() -> <clinit>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:72:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    75:78:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:432:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:130:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:594:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:183:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:223:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:422:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:124:void consumePostponedUpdates() -> consumePostponedUpdates
    557:584:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:232:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:318:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:493:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:734:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    507:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    519:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    546:544:boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    531:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:442:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:115:void preProcess() -> preProcess
    741:743:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:752:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:89:void reset() -> reset
    330:404:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:655:void <init>(int,int,int,java.lang.Object) -> <init>
    659:659:java.lang.String cmdToString() -> cmdToString
    684:709:boolean equals(java.lang.Object) -> equals
    718:720:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.AdapterListUpdateCallback:
    35:36:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    60:60:void onChanged(int,int,java.lang.Object) -> onChanged
    42:42:void onInserted(int,int) -> onInserted
    54:54:void onMoved(int,int) -> onMoved
    48:48:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.BatchingListUpdateCallback:
    46:47:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    56:71:void dispatchLastEvent() -> dispatchLastEvent
    110:123:void onChanged(int,int,java.lang.Object) -> onChanged
    76:85:void onInserted(int,int) -> onInserted
    104:105:void onMoved(int,int) -> onMoved
    90:99:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:51:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:85:void addView(android.view.View,boolean) -> addView
    99:107:void addView(android.view.View,int,boolean) -> addView
    231:239:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:284:void detachViewFromParent(int) -> detachViewFromParent
    206:212:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    117:123:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:330:void hide(android.view.View) -> hide
    60:61:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:193:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:147:void removeView(android.view.View) -> removeView
    160:168:void removeViewAt(int) -> removeViewAt
    373:386:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:352:void unhide(android.view.View) -> unhide
    70:71:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    422:426:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:416:void ensureNext() -> ensureNext
    433:436:boolean get(int) -> get
    449:464:void insert(int,boolean) -> insert
    471:486:boolean remove(int) -> remove
    441:443:void reset() -> reset
    407:410:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:55:void <init>() -> <init>
    222:224:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:251:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    324:343:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:395:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:273:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:315:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:194:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:217:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:642:void cancelAll(java.util.List) -> cancelAll
    550:551:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:518:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:637:void endAnimations() -> endAnimations
    400:404:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:415:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    420:431:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:526:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:184:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:129:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:152:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:175:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:215:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:206:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:241:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:249:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:236:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:304:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:313:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:295:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:372:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:361:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:393:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:383:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:75:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:84:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:66:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.DiffUtil:
    84:84:void <clinit>() -> <clinit>
    105:105:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> calculateDiff
    123:198:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> calculateDiff
    212:287:androidx.recyclerview.widget.DiffUtil$Snake diffPartial(androidx.recyclerview.widget.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> diffPartial
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.DiffUtil$1:
    84:84:void <init>() -> <init>
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
    87:88:int compare(androidx.recyclerview.widget.DiffUtil$Snake,androidx.recyclerview.widget.DiffUtil$Snake) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.DiffUtil$Callback:
    295:295:void <init>() -> <init>
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.DiffUtil$DiffResult:
    567:578:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    586:594:void addRootSnake() -> addRootSnake
    873:883:void dispatchAdditions(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> dispatchAdditions
    913:923:void dispatchRemovals(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> dispatchRemovals
    802:802:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> dispatchUpdatesTo
    816:852:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> dispatchUpdatesTo
    646:649:void findAddition(int,int,int) -> findAddition
    733:764:boolean findMatchingItem(int,int,int,boolean) -> findMatchingItem
    610:641:void findMatchingItems() -> findMatchingItems
    653:656:void findRemoval(int,int,int) -> findRemoval
    857:863:androidx.recyclerview.widget.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> removePostponedUpdate
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.DiffUtil$PostponedUpdate:
    973:976:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.DiffUtil$Range:
    482:482:void <init>() -> <init>
    485:489:void <init>(int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.DiffUtil$Snake:
    442:442:void <init>() -> <init>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    141:160:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:172:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:258:void cancelHide() -> cancelHide
    183:186:void destroyCallbacks() -> destroyCallbacks
    316:328:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:311:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:543:int[] getHorizontalRange() -> getHorizontalRange
    533:534:int[] getVerticalRange() -> getVerticalRange
    244:252:void hide(int) -> hide
    461:474:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    268:276:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:394:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    409:437:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:191:void requestRedraw() -> requestRedraw
    262:263:void resetHideDelay(int) -> resetHideDelay
    479:479:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:212:void setState(int) -> setState
    177:179:void setupCallbacks() -> setupCallbacks
    228:237:void show() -> show
    339:373:void updateScrollPosition(int,int) -> updateScrollPosition
    446:457:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:126:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:133:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    551:549:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:572:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:566:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    577:577:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:585:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:163:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:261:void buildTaskList() -> buildTaskList
    344:351:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:362:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:270:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:187:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:368:void prefetch(long) -> prefetch
    316:339:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:306:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:167:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:405:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:208:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    65:65:void <init>() -> <init>
    121:113:void addPosition(int,int) -> addPosition
    152:155:void clearPrefetchPositions() -> clearPrefetchPositions
    79:105:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:142:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:75:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    38:38:void <init>() -> <init>
    46:50:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    73:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    98:99:void <init>(android.content.Context,int,int,boolean) -> <init>
    786:790:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    189:194:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    314:314:void calculateItemBorders(int) -> calculateItemBorders
    325:342:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    184:185:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    515:522:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1213:1216:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1195:1198:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1304:1341:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1271:1295:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1222:1225:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1204:1207:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    393:414:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    368:369:void ensureViewSet() -> ensureViewSet
    421:441:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    348:352:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    801:801:int getSpanCount() -> getSpanCount
    455:467:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    471:488:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    492:509:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    750:752:void guessMeasurement(float,int) -> guessMeasurement
    530:703:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    716:736:void measureChild(android.view.View,int,boolean) -> measureChild
    757:765:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    359:364:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1068:1181:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    147:159:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:201:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:207:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:226:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:213:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:220:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    167:174:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    179:180:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    290:307:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    814:819:void setSpanCount(int) -> setSpanCount
    113:109:void setStackFromEnd(boolean) -> setStackFromEnd
    1190:1190:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    280:285:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1348:1348:void <init>() -> <init>
    1357:1357:int getSpanIndex(int,int) -> getSpanIndex
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1380:1377:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1384:1377:void <init>(int,int) -> <init>
    1388:1377:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1392:1377:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1414:1414:int getSpanIndex() -> getSpanIndex
    1424:1424:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    834:840:void <init>() -> <init>
    998:1013:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    930:938:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    917:925:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1032:1047:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    895:895:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    887:887:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.ItemTouchHelper -> androidx.recyclerview.widget.ItemTouchHelper:
    446:447:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    1290:1312:void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    467:480:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    1238:1256:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    980:1033:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    1265:1282:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    494:507:void destroyCallbacks() -> destroyCallbacks
    914:922:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    1155:1161:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    1039:1054:android.view.View findChildView(android.view.MotionEvent) -> findChildView
    800:845:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> findSwapTargets
    950:972:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    931:931:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    527:535:void getSelectedDxDy(float[]) -> getSelectedDxDy
    723:725:boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    452:454:boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    853:883:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    936:939:void obtainVelocityTracker() -> obtainVelocityTracker
    894:904:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    554:561:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    542:547:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    700:700:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    943:945:void releaseVelocityTracker() -> releaseVelocityTracker
    1317:1321:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    737:792:boolean scrollIfNecessary() -> scrollIfNecessary
    574:694:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> select
    485:490:void setupCallbacks() -> setupCallbacks
    1092:1103:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startDrag
    511:512:void startGestureDetection() -> startGestureDetection
    517:522:void stopGestureDetection() -> stopGestureDetection
    1191:1227:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    1170:1186:void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
androidx.recyclerview.widget.ItemTouchHelper$1 -> androidx.recyclerview.widget.ItemTouchHelper$1:
    257:257:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    260:265:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> androidx.recyclerview.widget.ItemTouchHelper$2:
    313:313:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    317:357:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    423:423:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    362:401:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.ItemTouchHelper$3 -> androidx.recyclerview.widget.ItemTouchHelper$3:
    635:635:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    638:658:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> androidx.recyclerview.widget.ItemTouchHelper$4:
    700:700:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    703:714:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$5 -> androidx.recyclerview.widget.ItemTouchHelper$5:
    1294:1294:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    1297:1303:int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
androidx.recyclerview.widget.ItemTouchHelper$Callback -> androidx.recyclerview.widget.ItemTouchHelper$Callback:
    1401:1408:void <clinit>() -> <clinit>
    1385:1421:void <init>() -> <init>
    1802:1845:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    2038:2038:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    1593:1594:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    2132:2138:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> getAnimationDuration
    1901:1905:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> getMaxDragScroll
    1598:1598:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasDragFlag
    2166:2180:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    1512:1514:int makeMovementFlags(int,int) -> makeMovementFlags
    2071:2071:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    2105:2105:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    1978:1990:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    1997:2020:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    1944:1970:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    1896:1896:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$1:
    1401:1401:void <init>() -> <init>
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$2:
    1408:1408:void <init>() -> <init>
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener:
    2316:2314:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2324:2324:void doNotReactToLongPress() -> doNotReactToLongPress
    2334:2360:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation:
    2401:2419:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2432:2432:void cancel() -> cancel
    2471:2471:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2463:2466:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2423:2423:void setDuration(long) -> setDuration
    2436:2436:void setFraction(float) -> setFraction
    2427:2428:void start() -> start
    2444:2452:void update() -> update
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1:
    2411:2411:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2414:2414:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> androidx.recyclerview.widget.ItemTouchUIUtilImpl:
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    75:84:void clearView(android.view.View) -> clearView
    53:60:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> findMaxElevation
    36:49:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:99:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    159:159:void <init>(android.content.Context) -> <init>
    169:171:void <init>(android.content.Context,int,boolean) -> <init>
    183:187:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1409:1410:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    488:496:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    295:295:boolean canScrollHorizontally() -> canScrollHorizontally
    303:303:boolean canScrollVertically() -> canScrollVertically
    1368:1378:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1288:1308:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1277:1279:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1143:1143:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1133:1133:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1153:1153:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1173:1177:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1162:1166:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1184:1188:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    510:518:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1148:1148:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1138:1138:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1158:1158:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1737:1720:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1051:1051:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1040:1041:void ensureLayoutState() -> ensureLayoutState
    1572:1622:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1897:1897:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1845:1845:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    1801:1805:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1783:1787:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1923:1924:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1901:1901:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    1849:1849:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    1963:1964:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2012:2034:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1990:2007:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1885:1886:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1892:1893:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1855:1870:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1823:1824:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1840:1841:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    407:420:android.view.View findViewByPosition(int) -> findViewByPosition
    961:974:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    986:999:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1771:1771:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1761:1761:android.view.View getChildClosestToStart() -> getChildClosestToStart
    447:448:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    330:330:int getOrientation() -> getOrientation
    1036:1036:boolean isLayoutRTL() -> isLayoutRTL
    1223:1223:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1627:1695:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    755:801:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    234:237:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2041:2075:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    243:246:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    537:717:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    725:729:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    279:281:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    252:272:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2160:2182:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1546:1554:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1429:1433:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1502:1527:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1462:1479:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1271:1272:boolean resolveIsInfinite() -> resolveIsInfinite
    362:363:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1382:1403:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1113:1116:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1070:1075:void scrollToPosition(int) -> scrollToPosition
    1098:1103:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1125:1128:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    341:351:void setOrientation(int) -> setOrientation
    394:399:void setReverseLayout(boolean) -> setReverseLayout
    310:315:void setStackFromEnd(boolean) -> setStackFromEnd
    1700:1702:boolean shouldMeasureTwice() -> shouldMeasureTwice
    502:505:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2150:2150:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    834:862:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    875:881:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    806:823:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1229:1267:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1007:1007:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1011:1017:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1021:1021:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1025:1031:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2453:2454:void <init>() -> <init>
    2469:2471:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2538:2545:void assignFromView(android.view.View,int) -> assignFromView
    2491:2531:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2485:2487:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2458:2461:void reset() -> reset
    2476:2476:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2549:2549:void <init>() -> <init>
    2556:2559:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2193:2279:void <init>() -> <init>
    2332:2332:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2336:2341:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2290:2290:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2300:2304:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2316:2324:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2346:2358:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2429:2429:void <clinit>() -> <clinit>
    2393:2393:void <init>() -> <init>
    2397:2400:void <init>(android.os.Parcel) -> <init>
    2403:2406:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2410:2410:boolean hasValidAnchor() -> hasValidAnchor
    2414:2414:void invalidateAnchor() -> invalidateAnchor
    2424:2426:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2430:2430:void <init>() -> <init>
    2430:2430:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2433:2433:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2430:2430:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    93:94:void <init>(android.content.Context) -> <init>
    296:296:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    339:349:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    314:324:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    191:191:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    205:205:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    218:218:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    170:174:float getSpeedPerPixel() -> getSpeedPerPixel
    232:232:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:141:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    151:152:void onStop() -> onStop
    110:115:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    244:248:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.LinearSnapHelper -> androidx.recyclerview.widget.LinearSnapHelper:
    33:33:void <init>() -> <init>
    47:55:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    227:252:float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> computeDistancePerChild
    143:145:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    162:169:int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int) -> estimateNextPositionDiffForFling
    184:197:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    133:136:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    66:116:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    272:275:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    263:266:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:26:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    214:216:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:34:void reorderOps(java.util.List) -> reorderOps
    157:171:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:46:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    61:149:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    179:208:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    46:47:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    245:243:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:64:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    298:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    282:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    290:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    305:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:271:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    396:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    380:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    388:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    403:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:369:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    219:598:void <clinit>() -> <clinit>
    646:646:void <init>(android.content.Context) -> <init>
    650:650:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    654:725:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2604:2628:void absorbGlows(int,int) -> absorbGlows
    210:210:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    210:210:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    210:210:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    210:210:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1431:1440:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2943:2944:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1568:1581:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1597:1597:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1273:1276:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    3079:3079:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1706:1709:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4363:4365:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4381:4397:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4371:4374:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3030:3035:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    3048:3056:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4674:4674:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3443:3444:void cancelScroll() -> cancelScroll
    4500:4500:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5851:5865:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4554:4561:void clearOldPositions() -> clearOldPositions
    1297:1298:void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    1727:1728:void clearOnScrollListeners() -> clearOnScrollListeners
    2024:2027:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1999:2002:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2047:2050:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2096:2099:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2072:2075:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2119:2122:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2581:2598:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1865:1868:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    783:815:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3607:3613:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4327:4328:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7553:7561:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7538:7546:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3675:3681:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3837:3862:void dispatchLayout() -> dispatchLayout
    4033:4117:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4125:4143:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4151:4234:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11601:11601:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11606:11606:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11589:11589:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11595:11595:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11569:11569:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11576:11576:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    11583:11583:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5196:5210:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5154:5176:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11480:11493:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    3741:3741:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1419:1419:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1411:1411:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3118:3127:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4429:4484:void draw(android.graphics.Canvas) -> draw
    5030:5030:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2673:2681:void ensureBottomGlow() -> ensureBottomGlow
    2633:2641:void ensureLeftGlow() -> ensureLeftGlow
    2646:2654:void ensureRightGlow() -> ensureRightGlow
    2659:2667:void ensureTopGlow() -> ensureTopGlow
    733:736:java.lang.String exceptionLabel() -> exceptionLabel
    4015:4021:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    5013:5021:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    4792:4795:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4810:4811:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3147:3152:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4301:4323:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5829:5839:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3902:3922:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4924:4934:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4986:4994:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4902:4902:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    4878:4878:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    4946:4958:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2438:2481:boolean fling(int,int) -> fling
    2748:2822:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4505:4506:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4513:4514:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4521:4522:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1226:1226:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11497:11502:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1253:1256:int getBaseline() -> getBaseline
    4358:4358:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    4838:4839:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    13465:13468:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4864:4868:long getChildItemId(android.view.View) -> getChildItemId
    4853:4854:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4828:4828:int getChildPosition(android.view.View) -> getChildPosition
    4769:4774:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4819:4819:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1099:1099:boolean getClipToPadding() -> getClipToPadding
    759:759:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5092:5092:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    5096:5098:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4003:4008:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2713:2713:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    835:841:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3756:3756:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5105:5125:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1609:1611:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    1623:1623:int getItemDecorationCount() -> getItemDecorationCount
    1474:1474:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2523:2523:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2513:2513:int getMinFlingVelocity() -> getMinFlingVelocity
    5876:5877:long getNanoTime() -> getNanoTime
    1375:1375:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4741:4741:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1487:1487:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1535:1535:int getScrollState() -> getScrollState
    13495:13498:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4255:4279:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    1070:1070:boolean hasFixedSize() -> hasFixedSize
    11558:11558:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11563:11563:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5229:5230:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1906:1912:boolean hasUpdatedView() -> hasUpdatedView
    968:968:void initAdapterManager() -> initAdapterManager
    747:748:void initAutofill() -> initAutofill
    845:845:void initChildrenHelper() -> initChildrenHelper
    11516:11513:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2686:2686:void invalidateGlows() -> invalidateGlows
    4718:4726:void invalidateItemDecorations() -> invalidateItemDecorations
    3671:3671:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    4536:4536:boolean isAnimating() -> isAnimating
    3019:3019:boolean isAttachedToWindow() -> isAttachedToWindow
    3705:3705:boolean isComputingLayout() -> isComputingLayout
    2281:2281:boolean isLayoutFrozen() -> isLayoutFrozen
    2242:2242:boolean isLayoutSuppressed() -> isLayoutSuppressed
    11533:11533:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2838:2888:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1755:1763:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4419:4424:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4702:4710:void markKnownViewsInvalid() -> markKnownViewsInvalid
    5078:5080:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5040:5042:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4599:4612:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4565:4595:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4618:4642:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2960:2988:void onAttachedToWindow() -> onAttachedToWindow
    2994:3010:void onDetachedFromWindow() -> onDetachedFromWindow
    4490:4494:void onDraw(android.graphics.Canvas) -> onDraw
    3648:3648:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3652:3652:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3656:3665:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3460:3501:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3161:3265:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4403:4406:void onLayout(boolean,int,int,int,int) -> onLayout
    3510:3595:void onMeasure(int,int) -> onMeasure
    3448:3454:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2950:2955:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1394:1402:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1380:1386:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    3618:3620:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3280:3429:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3764:3766:void postAnimationRunner() -> postAnimationRunner
    3771:3771:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3781:3808:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4692:4694:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2532:2552:void pullGlows(float,float,float,float) -> pullGlows
    4291:4297:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3929:3998:void recoverFocusFromState() -> recoverFocusFromState
    2558:2575:void releaseGlows() -> releaseGlows
    1171:1183:void removeAndRecycleViews() -> removeAndRecycleViews
    1451:1462:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4334:4350:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1650:1659:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1632:1634:void removeItemDecorationAt(int) -> removeItemDecorationAt
    1286:1289:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    3088:3090:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1718:1719:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5513:5522:void repositionShadowingViews() -> repositionShadowingViews
    2893:2896:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2910:2932:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2938:2938:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3270:3275:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4411:4414:void requestLayout() -> requestLayout
    3887:3889:void resetFocusInfo() -> resetFocusInfo
    3435:3439:void resetScroll() -> resetScroll
    3867:3882:void saveFocusInfo() -> saveFocusInfo
    4540:4548:void saveOldPositions() -> saveOldPositions
    1801:1812:void scrollBy(int,int) -> scrollBy
    1936:1974:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1829:1852:void scrollStep(int,int,int[]) -> scrollStep
    1795:1795:void scrollTo(int,int) -> scrollTo
    1741:1751:void scrollToPosition(int) -> scrollToPosition
    3733:3736:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    768:769:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1160:1163:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1197:1215:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1676:1680:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11470:11475:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1075:1081:void setClipToPadding(boolean) -> setClipToPadding
    2699:2701:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1062:1062:void setHasFixedSize(boolean) -> setHasFixedSize
    3637:3643:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1525:1525:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2271:2271:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1315:1353:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2290:2313:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    11528:11528:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1365:1365:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1693:1693:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4759:4759:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1499:1499:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1240:1240:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1539:1550:void setScrollState(int) -> setScrollState
    1112:1119:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1510:1510:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3717:3725:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2326:2326:void smoothScrollBy(int,int) -> smoothScrollBy
    2338:2338:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2356:2356:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2390:2419:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1782:1790:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2137:2139:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11538:11538:boolean startNestedScroll(int) -> startNestedScroll
    11543:11543:boolean startNestedScroll(int,int) -> startNestedScroll
    2154:2184:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11548:11548:void stopNestedScroll() -> stopNestedScroll
    11553:11553:void stopNestedScroll(int) -> stopNestedScroll
    2493:2494:void stopScroll() -> stopScroll
    2501:2503:void stopScrollersInternal() -> stopScrollersInternal
    2214:2229:void suppressLayout(boolean) -> suppressLayout
    1144:1147:void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    4652:4670:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    398:398:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    401:414:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    588:588:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    591:594:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    598:598:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    610:610:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    620:620:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    614:615:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    626:636:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    641:641:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    845:845:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    856:860:void addView(android.view.View,int) -> addView
    916:927:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    932:946:void detachViewFromParent(int) -> detachViewFromParent
    890:890:android.view.View getChildAt(int) -> getChildAt
    848:848:int getChildCount() -> getChildCount
    910:910:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    865:865:int indexOfChild(android.view.View) -> indexOfChild
    951:953:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    959:961:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    895:905:void removeAllViews() -> removeAllViews
    870:882:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    968:968:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1013:1015:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    971:977:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1003:1004:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1037:1038:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1043:1045:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    988:990:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    996:997:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1009:1009:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1032:1032:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    6984:6986:void <init>() -> <init>
    7099:7113:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    7077:7088:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7267:7267:boolean hasObservers() -> hasObservers
    7175:7175:boolean hasStableIds() -> hasStableIds
    7354:7354:void notifyDataSetChanged() -> notifyDataSetChanged
    7370:7370:void notifyItemChanged(int) -> notifyItemChanged
    7398:7398:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    7464:7464:void notifyItemInserted(int) -> notifyItemInserted
    7479:7479:void notifyItemMoved(int,int) -> notifyItemMoved
    7447:7447:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    7498:7498:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7532:7532:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7515:7515:void notifyItemRemoved(int) -> notifyItemRemoved
    7065:7065:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7287:7287:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7141:7142:void setHasStableIds(boolean) -> setHasStableIds
    7301:7301:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    12242:12242:void <init>() -> <init>
    12244:12244:boolean hasObservers() -> hasObservers
    12252:12253:void notifyChanged() -> notifyChanged
    12293:12294:void notifyItemMoved(int,int) -> notifyItemMoved
    12258:12258:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    12267:12268:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    12277:12278:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    12287:12288:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    11721:11721:void <init>() -> <init>
    11733:11733:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5592:5592:void <init>() -> <init>
    5623:5623:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    12728:12791:void <init>() -> <init>
    13113:13119:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13332:13332:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    13197:13199:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13340:13344:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12817:12817:long getAddDuration() -> getAddDuration
    12853:12853:long getChangeDuration() -> getChangeDuration
    12799:12799:long getMoveDuration() -> getMoveDuration
    12835:12835:long getRemoveDuration() -> getRemoveDuration
    13269:13274:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    13358:13358:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    12942:12942:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12913:12913:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12874:12874:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13425:13425:void <init>() -> <init>
    13437:13437:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13453:13457:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    12686:12686:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12691:12700:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10705:10705:void <init>() -> <init>
    10757:10757:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10782:10782:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10716:10716:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10738:10738:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    7582:7688:void <init>() -> <init>
    8518:8518:void addDisappearingView(android.view.View) -> addDisappearingView
    8536:8536:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8547:8547:void addView(android.view.View) -> addView
    8559:8559:void addView(android.view.View,int) -> addView
    8563:8612:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7897:7898:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8804:8810:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8825:8825:void attachView(android.view.View,int) -> attachView
    9707:9712:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    7876:7882:int chooseSize(int,int,int) -> chooseSize
    9192:9195:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8784:8784:void detachViewAt(int) -> detachViewAt
    8791:8791:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8113:8114:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8118:8119:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8703:8710:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8731:8739:android.view.View findViewByPosition(int) -> findViewByPosition
    8347:8352:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8371:8371:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    9742:9742:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8933:8933:android.view.View getChildAt(int) -> getChildAt
    8923:8923:int getChildCount() -> getChildCount
    9446:9487:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9835:9864:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8230:8230:boolean getClipToPadding() -> getClipToPadding
    10528:10531:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9686:9686:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9638:9638:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9650:9650:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9514:9515:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9500:9501:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9674:9674:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9662:9662:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9089:9093:android.view.View getFocusedChild() -> getFocusedChild
    8999:8999:int getHeight() -> getHeight
    8967:8967:int getHeightMode() -> getHeightMode
    9112:9113:int getItemCount() -> getItemCount
    8489:8489:int getLayoutDirection() -> getLayoutDirection
    9757:9757:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10283:10283:int getMinimumHeight() -> getMinimumHeight
    10275:10275:int getMinimumWidth() -> getMinimumWidth
    9039:9039:int getPaddingBottom() -> getPaddingBottom
    9009:9009:int getPaddingLeft() -> getPaddingLeft
    9029:9029:int getPaddingRight() -> getPaddingRight
    9019:9019:int getPaddingTop() -> getPaddingTop
    8673:8673:int getPosition(android.view.View) -> getPosition
    10635:10643:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9772:9772:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10508:10511:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    9727:9727:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9606:9627:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8983:8983:int getWidth() -> getWidth
    8950:8950:int getWidthMode() -> getWidthMode
    10669:10673:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    8130:8130:boolean isAttachedToWindow() -> isAttachedToWindow
    7991:7991:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9966:9977:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8058:8058:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    9340:9341:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8477:8477:boolean isSmoothScrolling() -> isSmoothScrolling
    9946:9948:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9585:9587:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9369:9384:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8856:8859:void moveView(int,int) -> moveView
    9123:9124:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9135:9136:void offsetChildrenVertical(int) -> offsetChildrenVertical
    8221:8221:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    10397:10397:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10413:10422:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10348:10348:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10378:10392:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10428:10431:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10453:10458:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10120:10120:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8285:8285:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    10256:10256:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9991:9991:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10013:10013:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10312:10313:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10550:10550:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10566:10591:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10598:10598:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10338:10341:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9228:9253:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8900:8901:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8911:8913:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8164:8165:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8625:8625:void removeView(android.view.View) -> removeView
    8637:8639:void removeViewAt(int) -> removeViewAt
    9886:9886:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9906:9915:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7847:7848:void requestLayout() -> requestLayout
    10472:10472:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9200:9214:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    10649:10648:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    7757:7766:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7836:7840:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10267:10267:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7784:7812:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    7742:7753:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9307:9310:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    9293:9295:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8451:8451:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8465:8470:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    10306:10307:void stopSmoothScroller() -> stopSmoothScroller
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    7591:7591:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7594:7594:android.view.View getChildAt(int) -> getChildAt
    7617:7618:int getChildEnd(android.view.View) -> getChildEnd
    7610:7611:int getChildStart(android.view.View) -> getChildStart
    7604:7604:int getParentEnd() -> getParentEnd
    7599:7599:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    7627:7627:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7630:7630:android.view.View getChildAt(int) -> getChildAt
    7654:7655:int getChildEnd(android.view.View) -> getChildEnd
    7647:7648:int getChildStart(android.view.View) -> getChildStart
    7640:7641:int getParentEnd() -> getParentEnd
    7635:7635:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    10683:10683:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    11625:11622:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11629:11622:void <init>(int,int) -> <init>
    11633:11622:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11637:11622:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11641:11622:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11701:11701:int getViewLayoutPosition() -> getViewLayoutPosition
    11683:11683:boolean isItemChanged() -> isItemChanged
    11672:11672:boolean isItemRemoved() -> isItemRemoved
    11661:11661:boolean isViewInvalid() -> isViewInvalid
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    12663:12663:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    10870:10870:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5635:5660:void <init>() -> <init>
    5782:5782:void attach() -> attach
    5666:5668:void clear() -> clear
    5786:5786:void detach() -> detach
    5766:5767:void factorInBindTime(int,long) -> factorInBindTime
    5760:5761:void factorInCreateTime(int,long) -> factorInCreateTime
    5704:5709:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5815:5818:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5804:5810:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5740:5749:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5756:5756:long runningAverage(long,long) -> runningAverage
    5777:5777:boolean willBindInTime(int,long,long) -> willBindInTime
    5772:5772:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5652:5656:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    5896:5906:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6524:6541:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6299:6316:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    5919:5920:void clear() -> clear
    6911:6923:void clearOldPositions() -> clearOldPositions
    6612:6614:void clearScrap() -> clearScrap
    6088:6090:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6765:6772:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6621:6640:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    6869:6872:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6604:6604:int getScrapCount() -> getScrapCount
    5951:5951:java.util.List getScrapList() -> getScrapList
    6712:6755:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6657:6698:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6608:6608:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6114:6114:android.view.View getViewForPosition(int) -> getViewForPosition
    6118:6118:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6321:6322:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6327:6343:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    6929:6934:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    6895:6906:void markKnownViewsInvalid() -> markKnownViewsInvalid
    6813:6821:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6794:6803:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    6834:6848:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6779:6780:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6550:6554:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6390:6396:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6415:6420:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6360:6385:void recycleView(android.view.View) -> recycleView
    6429:6433:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6567:6576:void scrapView(android.view.View) -> scrapView
    6859:6864:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    6855:6855:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    5929:5930:void setViewCacheSize(int) -> setViewCacheSize
    6004:6017:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6142:6145:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6593:6600:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    5934:5940:void updateViewCacheSize() -> updateViewCacheSize
    5965:5974:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    6877:6887:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5531:5531:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5536:5541:void onChanged() -> onChanged
    5547:5549:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5555:5557:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5571:5573:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    5563:5565:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    5578:5582:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12334:12334:void <clinit>() -> <clinit>
    12312:12313:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12321:12321:void <init>(android.os.Parcelable) -> <init>
    12331:12331:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12326:12327:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12334:12334:void <init>() -> <init>
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12337:12337:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12342:12342:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object[] newArray(int) -> newArray
    12347:12347:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    11776:11777:void <init>() -> <init>
    11835:11840:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    11972:11972:android.view.View findViewByPosition(int) -> findViewByPosition
    11965:11965:int getChildCount() -> getChildCount
    11958:11958:int getChildPosition(android.view.View) -> getChildPosition
    11851:11851:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    11903:11903:int getTargetPosition() -> getTargetPosition
    11885:11885:boolean isPendingInitialRun() -> isPendingInitialRun
    11893:11893:boolean isRunning() -> isRunning
    11998:12001:void normalize(android.graphics.PointF) -> normalize
    11907:11948:void onAnimation(int,int) -> onAnimation
    11985:11986:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    11820:11820:void setTargetPosition(int) -> setTargetPosition
    11795:11807:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    11861:11874:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    12070:12070:void <init>(int,int) -> <init>
    12090:12094:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12117:12117:boolean hasJumpTarget() -> hasJumpTarget
    12113:12113:void jumpTo(int) -> jumpTo
    12121:12140:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    12208:12212:void update(int,int,int,android.view.animation.Interpolator) -> update
    12145:12149:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12362:12433:void <init>() -> <init>
    12368:12371:void assertLayoutStep(int) -> assertLayoutStep
    12611:12611:int getItemCount() -> getItemCount
    12566:12566:int getTargetScrollPosition() -> getTargetScrollPosition
    12575:12575:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12490:12490:boolean isPreLayout() -> isPreLayout
    12459:12463:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12640:12640:java.lang.String toString() -> toString
    12501:12501:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5246:5247:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5483:5501:int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    5479:5479:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    5416:5427:void fling(int,int) -> fling
    5411:5412:void internalPostOnAnimation() -> internalPostOnAnimation
    5403:5406:void postOnAnimation() -> postOnAnimation
    5252:5398:void run() -> run
    5446:5473:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5505:5506:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    11059:11059:void <clinit>() -> <clinit>
    11086:11088:void <init>(android.view.View) -> <init>
    11301:11304:void addChangePayload(java.lang.Object) -> addChangePayload
    11296:11296:void addFlags(int) -> addFlags
    11116:11117:void clearOldPosition() -> clearOldPosition
    11316:11319:void clearPayload() -> clearPayload
    11243:11243:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    11247:11247:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11309:11311:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11456:11456:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11094:11096:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11192:11195:int getAdapterPosition() -> getAdapterPosition
    11220:11220:long getItemId() -> getItemId
    11227:11227:int getItemViewType() -> getItemViewType
    11166:11166:int getLayoutPosition() -> getLayoutPosition
    11210:11210:int getOldPosition() -> getOldPosition
    11323:11332:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11276:11276:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11288:11288:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11284:11284:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    11268:11268:boolean isBound() -> isBound
    11260:11260:boolean isInvalid() -> isInvalid
    11439:11440:boolean isRecyclable() -> isRecyclable
    11272:11272:boolean isRemoved() -> isRemoved
    11231:11231:boolean isScrap() -> isScrap
    11280:11280:boolean isTmpDetached() -> isTmpDetached
    11460:11460:boolean isUpdated() -> isUpdated
    11264:11264:boolean needsUpdate() -> needsUpdate
    11100:11111:void offsetPosition(int,boolean) -> offsetPosition
    11356:11362:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11370:11372:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11337:11348:void resetInternal() -> resetInternal
    11121:11122:void saveOldPosition() -> saveOldPosition
    11292:11292:void setFlags(int,int) -> setFlags
    11414:11426:void setIsRecyclable(boolean) -> setIsRecyclable
    11255:11256:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11448:11448:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11127:11127:boolean shouldIgnore() -> shouldIgnore
    11378:11397:java.lang.String toString() -> toString
    11235:11235:void unScrap() -> unScrap
    11239:11239:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    44:50:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:84:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:74:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:64:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    119:120:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    223:227:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:154:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:216:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    128:130:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    179:183:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:194:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:52:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:138:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:302:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:344:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:317:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:357:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:292:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:335:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:277:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:326:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    34:42:void <init>() -> <init>
    93:104:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    138:141:int[] calculateScrollDistance(int,int) -> calculateScrollDistance
    209:209:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    224:227:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    123:124:void destroyCallbacks() -> destroyCallbacks
    65:75:boolean onFling(int,int) -> onFling
    112:113:void setupCallbacks() -> setupCallbacks
    157:172:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    182:195:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:51:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    58:58:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.SnapHelper$2 -> androidx.recyclerview.widget.SnapHelper$2:
    227:227:void <init>(androidx.recyclerview.widget.SnapHelper,android.content.Context) -> <init>
    246:246:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    230:240:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    229:235:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1806:1807:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    786:817:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1865:1867:boolean areAllEndsEqual() -> areAllEndsEqual
    1875:1877:boolean areAllStartsEqual() -> areAllStartsEqual
    528:529:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1750:1760:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2043:2047:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2027:2027:boolean canScrollHorizontally() -> canScrollHorizontally
    2022:2022:boolean canScrollVertically() -> canScrollVertically
    270:310:boolean checkForGaps() -> checkForGaps
    2273:2273:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    403:414:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2123:2153:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1095:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1072:1075:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1112:1115:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2052:2062:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2413:2396:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1732:1735:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1741:1744:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    258:260:void createOrientationHelpers() -> createOrientationHelpers
    1575:1728:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2218:2221:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1387:1393:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1357:1364:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1327:1329:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2235:2237:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1411:1424:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1430:1443:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2248:2252:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2259:2259:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2264:2267:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1344:1347:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2208:2209:int getFirstChildPosition() -> getFirstChildPosition
    2203:2204:int getLastChildPosition() -> getLastChildPosition
    1885:1887:int getMaxEnd(int) -> getMaxEnd
    1843:1845:int getMaxStart(int) -> getMaxStart
    1896:1898:int getMinEnd(int) -> getMinEnd
    1854:1856:int getMinStart(int) -> getMinStart
    1980:2010:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1335:1338:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    1531:1569:void handleUpdate(int,int,int) -> handleUpdate
    340:392:android.view.View hasGapsToFix() -> hasGapsToFix
    549:550:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1128:1172:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1193:1203:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1486:1488:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1494:1496:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:330:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2284:2370:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1302:1316:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1294:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1507:1507:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1512:1513:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1518:1518:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1502:1502:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1524:1524:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:605:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    611:720:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    726:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1224:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1272:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    317:317:void onScrollStateChanged(int) -> onScrollStateChanged
    1970:1973:boolean preferLastSpan(int) -> preferLastSpan
    2162:2171:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1813:1814:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1766:1798:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1936:1959:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1907:1928:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    734:776:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    560:561:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2175:2198:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2033:2033:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2077:2082:void scrollToPosition(int) -> scrollToPosition
    2039:2039:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1479:1480:void setLayoutStateDirection(int) -> setLayoutStateDirection
    587:600:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    450:460:void setOrientation(int) -> setOrientation
    477:482:void setReverseLayout(boolean) -> setReverseLayout
    429:438:void setSpanCount(int) -> setSpanCount
    2070:2072:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1819:1823:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    840:843:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    849:855:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    822:832:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1448:1475:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    927:929:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1828:1837:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1212:1214:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:219:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3267:3268:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3294:3295:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3299:3302:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3272:3278:void reset() -> reset
    3283:3289:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2450:2450:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2454:2454:void <init>(int,int) -> <init>
    2458:2458:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2462:2462:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2498:2501:int getSpanIndex() -> getSpanIndex
    2488:2488:boolean isFullSpan() -> isFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2838:2838:void <init>() -> <init>
    3007:3026:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2915:2918:void clear() -> clear
    2903:2910:void ensureSize(int) -> ensureSize
    2849:2857:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3051:3060:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3030:3035:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2882:2885:int getSpan(int) -> getSpan
    2864:2876:int invalidateAfter(int) -> invalidateAfter
    2981:3001:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2952:2960:void offsetForAddition(int,int) -> offsetForAddition
    2922:2930:void offsetForRemoval(int,int) -> offsetForRemoval
    2964:2972:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2934:2946:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2890:2891:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2895:2895:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3129:3129:void <clinit>() -> <clinit>
    3083:3090:void <init>(android.os.Parcel) -> <init>
    3094:3094:void <init>() -> <init>
    3098:3098:int getGapForSpan(int) -> getGapForSpan
    3121:3125:java.lang.String toString() -> toString
    3108:3115:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3130:3130:void <init>() -> <init>
    3130:3130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3133:3133:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3130:3130:java.lang.Object[] newArray(int) -> newArray
    3138:3138:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3239:3239:void <clinit>() -> <clinit>
    3162:3162:void <init>() -> <init>
    3165:3185:void <init>(android.os.Parcel) -> <init>
    3188:3198:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3210:3213:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3202:3206:void invalidateSpanInfo() -> invalidateSpanInfo
    3223:3236:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3240:3240:void <init>() -> <init>
    3240:3240:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3243:3243:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3240:3240:java.lang.Object[] newArray(int) -> newArray
    3248:3248:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2515:2516:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2600:2608:void appendToSpan(android.view.View) -> appendToSpan
    2616:2631:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2565:2572:void calculateCachedEnd() -> calculateCachedEnd
    2531:2538:void calculateCachedStart() -> calculateCachedStart
    2635:2637:void clear() -> clear
    2700:2702:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2718:2720:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2756:2779:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2793:2793:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2677:2677:int getDeletedSize() -> getDeletedSize
    2553:2561:int getEndLine(int) -> getEndLine
    2579:2583:int getEndLine() -> getEndLine
    2803:2823:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2681:2681:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2520:2527:int getStartLine(int) -> getStartLine
    2545:2549:int getStartLine() -> getStartLine
    2641:2642:void invalidateCache() -> invalidateCache
    2685:2689:void onOffset(int) -> onOffset
    2650:2660:void popEnd() -> popEnd
    2664:2673:void popStart() -> popStart
    2587:2595:void prependToSpan(android.view.View) -> prependToSpan
    2646:2646:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:133:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:233:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:253:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    148:148:void addFlags(int) -> addFlags
    166:185:boolean boundsMatch() -> boundsMatch
    152:152:void resetFlags() -> resetFlags
    141:144:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    36:47:void <init>() -> <init>
    145:151:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:203:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:132:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:188:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:70:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:55:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:273:void onDetach() -> onDetach
    277:277:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:114:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:251:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:215:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:268:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    307:307:void <clinit>() -> <clinit>
    309:309:void <init>() -> <init>
    326:326:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:321:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.room.DatabaseConfiguration -> androidx.room.DatabaseConfiguration:
    240:253:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File) -> <init>
    283:292:boolean isMigrationRequired(int,int) -> isMigrationRequired
androidx.room.EntityDeletionOrUpdateAdapter -> androidx.room.EntityDeletionOrUpdateAdapter:
    40:40:void <init>(androidx.room.RoomDatabase) -> <init>
androidx.room.EntityInsertionAdapter -> androidx.room.EntityInsertionAdapter:
    43:43:void <init>(androidx.room.RoomDatabase) -> <init>
    76:84:void insert(java.lang.Object[]) -> insert
    93:101:void insert(java.lang.Iterable) -> insert
androidx.room.IMultiInstanceInvalidationCallback$Stub -> androidx.room.IMultiInstanceInvalidationCallback$Stub:
    18:19:void <init>() -> <init>
    30:34:androidx.room.IMultiInstanceInvalidationCallback asInterface(android.os.IBinder) -> asInterface
    60:55:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy -> androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy:
    68:69:void <init>(android.os.IBinder) -> <init>
    73:73:android.os.IBinder asBinder() -> asBinder
    86:94:void onInvalidation(java.lang.String[]) -> onInvalidation
androidx.room.IMultiInstanceInvalidationService$Stub -> androidx.room.IMultiInstanceInvalidationService$Stub:
    18:19:void <init>() -> <init>
    30:34:androidx.room.IMultiInstanceInvalidationService asInterface(android.os.IBinder) -> asInterface
    85:59:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy -> androidx.room.IMultiInstanceInvalidationService$Stub$Proxy:
    93:94:void <init>(android.os.IBinder) -> <init>
    98:98:android.os.IBinder asBinder() -> asBinder
    160:169:void broadcastInvalidation(int,java.lang.String[]) -> broadcastInvalidation
    106:120:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> registerCallback
    134:146:void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int) -> unregisterCallback
androidx.room.InvalidationLiveDataContainer -> androidx.room.InvalidationLiveDataContainer:
    42:37:void <init>(androidx.room.RoomDatabase) -> <init>
androidx.room.InvalidationTracker -> androidx.room.InvalidationTracker:
    65:65:void <clinit>() -> <clinit>
    134:158:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]) -> <init>
    259:274:void addObserver(androidx.room.InvalidationTracker$Observer) -> addObserver
    200:205:void appendTriggerName(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTriggerName
    344:352:boolean ensureInitialization() -> ensureInitialization
    169:183:void internalInit(androidx.sqlite.db.SupportSQLiteDatabase) -> internalInit
    471:477:void notifyObserversByTableNames(java.lang.String[]) -> notifyObserversByTableNames
    442:443:void refreshVersionsAsync() -> refreshVersionsAsync
    334:336:void removeObserver(androidx.room.InvalidationTracker$Observer) -> removeObserver
    297:306:java.lang.String[] resolveViews(java.lang.String[]) -> resolveViews
    187:188:void startMultiInstanceInvalidation(android.content.Context,java.lang.String) -> startMultiInstanceInvalidation
    220:238:void startTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int) -> startTrackingTable
    209:215:void stopTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int) -> stopTrackingTable
    481:522:void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> syncTriggers
    536:539:void syncTriggers() -> syncTriggers
androidx.room.InvalidationTracker$1 -> androidx.room.InvalidationTracker$1:
    359:359:void <init>(androidx.room.InvalidationTracker) -> <init>
    414:424:java.util.Set checkUpdatedTable() -> checkUpdatedTable
    362:403:void run() -> run
androidx.room.InvalidationTracker$ObservedTableTracker -> androidx.room.InvalidationTracker$ObservedTableTracker:
    745:750:void <init>(int) -> <init>
    797:814:int[] getTablesToSync() -> getTablesToSync
    758:767:boolean onAdded(int[]) -> onAdded
    776:785:boolean onRemoved(int[]) -> onRemoved
    822:824:void onSyncCompleted() -> onSyncCompleted
androidx.room.InvalidationTracker$Observer -> androidx.room.InvalidationTracker$Observer:
    698:700:void <init>(java.lang.String[]) -> <init>
androidx.room.InvalidationTracker$ObserverWrapper -> androidx.room.InvalidationTracker$ObserverWrapper:
    598:607:void <init>(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[]) -> <init>
    619:635:void notifyByTableInvalidStatus(java.util.Set) -> notifyByTableInvalidStatus
    647:670:void notifyByTableNames(java.lang.String[]) -> notifyByTableNames
androidx.room.MultiInstanceInvalidationClient -> androidx.room.MultiInstanceInvalidationClient:
    165:192:void <init>(android.content.Context,java.lang.String,androidx.room.InvalidationTracker,java.util.concurrent.Executor) -> <init>
androidx.room.MultiInstanceInvalidationClient$1 -> androidx.room.MultiInstanceInvalidationClient$1:
    81:81:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    84:84:void onInvalidation(java.lang.String[]) -> onInvalidation
androidx.room.MultiInstanceInvalidationClient$1$1 -> androidx.room.MultiInstanceInvalidationClient$1$1:
    84:84:void <init>(androidx.room.MultiInstanceInvalidationClient$1,java.lang.String[]) -> <init>
    87:87:void run() -> run
androidx.room.MultiInstanceInvalidationClient$2 -> androidx.room.MultiInstanceInvalidationClient$2:
    99:99:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    103:104:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    109:110:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
androidx.room.MultiInstanceInvalidationClient$3 -> androidx.room.MultiInstanceInvalidationClient$3:
    117:117:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    121:127:void run() -> run
androidx.room.MultiInstanceInvalidationClient$4 -> androidx.room.MultiInstanceInvalidationClient$4:
    134:134:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    137:137:void run() -> run
androidx.room.MultiInstanceInvalidationClient$5 -> androidx.room.MultiInstanceInvalidationClient$5:
    141:141:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    144:153:void run() -> run
androidx.room.MultiInstanceInvalidationClient$6 -> androidx.room.MultiInstanceInvalidationClient$6:
    170:170:void <init>(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]) -> <init>
    173:182:void onInvalidated(java.util.Set) -> onInvalidated
androidx.room.MultiInstanceInvalidationService -> androidx.room.MultiInstanceInvalidationService:
    39:60:void <init>() -> <init>
    132:132:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.room.MultiInstanceInvalidationService$1 -> androidx.room.MultiInstanceInvalidationService$1:
    52:52:void <init>(androidx.room.MultiInstanceInvalidationService) -> <init>
    52:52:void onCallbackDied(android.os.IInterface,java.lang.Object) -> onCallbackDied
    56:56:void onCallbackDied(androidx.room.IMultiInstanceInvalidationCallback,java.lang.Object) -> onCallbackDied
androidx.room.MultiInstanceInvalidationService$2 -> androidx.room.MultiInstanceInvalidationService$2:
    61:61:void <init>(androidx.room.MultiInstanceInvalidationService) -> <init>
    99:125:void broadcastInvalidation(int,java.lang.String[]) -> broadcastInvalidation
    70:80:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> registerCallback
    89:92:void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int) -> unregisterCallback
androidx.room.Room -> androidx.room.Room:
    51:52:androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String) -> databaseBuilder
    79:94:java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String) -> getGeneratedImplementation
androidx.room.RoomDatabase -> androidx.room.RoomDatabase:
    150:151:void <init>() -> <init>
    263:267:void assertNotMainThread() -> assertNotMainThread
    281:282:void assertNotSuspendingTransaction() -> assertNotSuspendingTransaction
    351:354:void beginTransaction() -> beginTransaction
    339:341:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> compileStatement
    364:368:void endTransaction() -> endTransaction
    111:111:java.util.concurrent.locks.Lock getCloseLock() -> getCloseLock
    189:189:androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper() -> getOpenHelper
    377:377:java.util.concurrent.Executor getQueryExecutor() -> getQueryExecutor
    476:476:boolean inTransaction() -> inTransaction
    161:177:void init(androidx.room.DatabaseConfiguration) -> init
    452:452:void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase) -> internalInitInvalidationTracker
    1051:1051:boolean isMainThread() -> isMainThread
    234:235:boolean isOpen() -> isOpen
    311:311:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> query
    323:328:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> query
    395:395:void setTransactionSuccessful() -> setTransactionSuccessful
androidx.room.RoomDatabase$Builder -> androidx.room.RoomDatabase$Builder:
    569:575:void <init>(android.content.Context,java.lang.Class,java.lang.String) -> <init>
    687:687:androidx.room.RoomDatabase$Builder allowMainThreadQueries() -> allowMainThreadQueries
    888:889:androidx.room.RoomDatabase build() -> build
androidx.room.RoomDatabase$Callback -> androidx.room.RoomDatabase$Callback:
    1057:1057:void <init>() -> <init>
androidx.room.RoomDatabase$JournalMode -> androidx.room.RoomDatabase$JournalMode:
    493:484:void <clinit>() -> <clinit>
    484:484:void <init>(java.lang.String,int) -> <init>
    526:527:boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
    512:522:androidx.room.RoomDatabase$JournalMode resolve(android.content.Context) -> resolve
    484:484:androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String) -> valueOf
    484:484:androidx.room.RoomDatabase$JournalMode[] values() -> values
androidx.room.RoomDatabase$MigrationContainer -> androidx.room.RoomDatabase$MigrationContainer:
    962:963:void <init>() -> <init>
    1005:1009:java.util.List findMigrationPath(int,int) -> findMigrationPath
    1015:1035:java.util.List findUpMigrationPath(java.util.List,boolean,int,int) -> findUpMigrationPath
androidx.room.RoomMasterTable -> androidx.room.RoomMasterTable:
    51:51:java.lang.String createInsertQuery(java.lang.String) -> createInsertQuery
androidx.room.RoomOpenHelper -> androidx.room.RoomOpenHelper:
    54:58:void <init>(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String) -> <init>
    142:163:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> checkIdentity
    177:177:void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase) -> createMasterTableIfNotExists
    192:199:boolean hasEmptySchema(androidx.sqlite.db.SupportSQLiteDatabase) -> hasEmptySchema
    181:188:boolean hasRoomMasterTable(androidx.sqlite.db.SupportSQLiteDatabase) -> hasRoomMasterTable
    68:68:void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase) -> onConfigure
    73:87:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> onCreate
    129:129:void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> onDowngrade
    134:138:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
    93:117:void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> onUpgrade
    172:173:void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> updateIdentity
androidx.room.RoomOpenHelper$Delegate -> androidx.room.RoomOpenHelper$Delegate:
    209:210:void <init>(int) -> <init>
androidx.room.RoomOpenHelper$ValidationResult -> androidx.room.RoomOpenHelper$ValidationResult:
    272:274:void <init>(boolean,java.lang.String) -> <init>
androidx.room.RoomSQLiteQuery -> androidx.room.RoomSQLiteQuery:
    79:79:void <clinit>() -> <clinit>
    156:165:void <init>(int) -> <init>
    141:150:androidx.room.RoomSQLiteQuery acquire(java.lang.String,int) -> acquire
    257:258:void bindBlob(int,byte[]) -> bindBlob
    245:246:void bindDouble(int,double) -> bindDouble
    239:240:void bindLong(int,long) -> bindLong
    234:234:void bindNull(int) -> bindNull
    251:252:void bindString(int,java.lang.String) -> bindString
    211:214:void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> bindTo
    201:201:java.lang.String getSql() -> getSql
    170:171:void init(java.lang.String,int) -> init
    189:194:void prunePoolLocked() -> prunePoolLocked
    182:185:void release() -> release
androidx.room.SQLiteCopyOpenHelper -> androidx.room.SQLiteCopyOpenHelper:
    65:70:void <init>(android.content.Context,java.lang.String,java.io.File,int,androidx.sqlite.db.SupportSQLiteOpenHelper) -> <init>
    177:182:void copyDatabaseFile(java.io.File) -> copyDatabaseFile
    75:75:java.lang.String getDatabaseName() -> getDatabaseName
    86:90:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> getWritableDatabase
    111:111:void setDatabaseConfiguration(androidx.room.DatabaseConfiguration) -> setDatabaseConfiguration
    81:81:void setWriteAheadLoggingEnabled(boolean) -> setWriteAheadLoggingEnabled
    115:172:void verifyDatabaseFile() -> verifyDatabaseFile
androidx.room.SQLiteCopyOpenHelperFactory -> androidx.room.SQLiteCopyOpenHelperFactory:
    41:44:void <init>(java.lang.String,java.io.File,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory) -> <init>
    49:54:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.room.SharedSQLiteStatement -> androidx.room.SharedSQLiteStatement:
    48:49:void <init>(androidx.room.RoomDatabase) -> <init>
    86:87:androidx.sqlite.db.SupportSQLiteStatement acquire() -> acquire
    60:60:void assertNotMainThread() -> assertNotMainThread
    64:65:androidx.sqlite.db.SupportSQLiteStatement createNewStatement() -> createNewStatement
    71:77:androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean) -> getStmt
    96:97:void release(androidx.sqlite.db.SupportSQLiteStatement) -> release
androidx.room.TransactionExecutor -> androidx.room.TransactionExecutor:
    37:38:void <init>(java.util.concurrent.Executor) -> <init>
    42:54:void execute(java.lang.Runnable) -> execute
    58:61:void scheduleNext() -> scheduleNext
androidx.room.TransactionExecutor$1 -> androidx.room.TransactionExecutor$1:
    42:42:void <init>(androidx.room.TransactionExecutor,java.lang.Runnable) -> <init>
    45:48:void run() -> run
androidx.room.util.CopyLock -> androidx.room.util.CopyLock:
    55:55:void <clinit>() -> <clinit>
    69:72:void <init>(java.lang.String,java.io.File,boolean) -> <init>
    103:110:java.util.concurrent.locks.Lock getThreadLock(java.lang.String) -> getThreadLock
    79:85:void lock() -> lock
    94:99:void unlock() -> unlock
androidx.room.util.CursorUtil -> androidx.room.util.CursorUtil:
    46:74:android.database.Cursor copyAndClose(android.database.Cursor) -> copyAndClose
    104:108:int getColumnIndexOrThrow(android.database.Cursor,java.lang.String) -> getColumnIndexOrThrow
androidx.room.util.DBUtil -> androidx.room.util.DBUtil:
    110:119:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> dropFtsSyncTriggers
    83:94:android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal) -> query
    142:156:int readVersion(java.io.File) -> readVersion
androidx.room.util.FileUtil -> androidx.room.util.FileUtil:
    51:66:void copy(java.nio.channels.ReadableByteChannel,java.nio.channels.FileChannel) -> copy
androidx.room.util.TableInfo -> androidx.room.util.TableInfo:
    103:107:void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set) -> <init>
    121:138:boolean equals(java.lang.Object) -> equals
    143:145:int hashCode() -> hashCode
    169:172:androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> read
    240:265:java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readColumns
    219:234:java.util.List readForeignKeyFieldMappings(android.database.Cursor) -> readForeignKeyFieldMappings
    177:214:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readForeignKeys
    310:336:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean) -> readIndex
    274:302:java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> readIndices
    152:152:java.lang.String toString() -> toString
androidx.room.util.TableInfo$Column -> androidx.room.util.TableInfo$Column:
    396:403:void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int) -> <init>
    442:472:boolean equals(java.lang.Object) -> equals
    417:431:int findAffinity(java.lang.String) -> findAffinity
    486:489:int hashCode() -> hashCode
    481:481:boolean isPrimaryKey() -> isPrimaryKey
    498:498:java.lang.String toString() -> toString
androidx.room.util.TableInfo$ForeignKey -> androidx.room.util.TableInfo$ForeignKey:
    529:534:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List) -> <init>
    540:549:boolean equals(java.lang.Object) -> equals
    554:558:int hashCode() -> hashCode
    564:564:java.lang.String toString() -> toString
androidx.room.util.TableInfo$ForeignKeyWithSequence -> androidx.room.util.TableInfo$ForeignKeyWithSequence:
    587:591:void <init>(int,int,java.lang.String,java.lang.String) -> <init>
    580:580:int compareTo(java.lang.Object) -> compareTo
    596:598:int compareTo(androidx.room.util.TableInfo$ForeignKeyWithSequence) -> compareTo
androidx.room.util.TableInfo$Index -> androidx.room.util.TableInfo$Index:
    618:621:void <init>(java.lang.String,boolean,java.util.List) -> <init>
    627:639:boolean equals(java.lang.Object) -> equals
    646:652:int hashCode() -> hashCode
    658:658:java.lang.String toString() -> toString
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:43:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:49:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:74:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
    99:100:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    112:112:void add(java.lang.String) -> add
    106:107:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    52:50:void <init>() -> <init>
    76:77:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    190:191:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:229:void performSave(android.os.Bundle) -> performSave
    109:111:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    167:168:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:203:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:38:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:58:void performRestore(android.os.Bundle) -> performRestore
    74:74:void performSave(android.os.Bundle) -> performSave
androidx.sqlite.db.SimpleSQLiteQuery -> androidx.sqlite.db.SimpleSQLiteQuery:
    36:38:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    47:47:void <init>(java.lang.String) -> <init>
    75:78:void bind(androidx.sqlite.db.SupportSQLiteProgram,java.lang.Object[]) -> bind
    85:105:void bind(androidx.sqlite.db.SupportSQLiteProgram,int,java.lang.Object) -> bind
    57:57:void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> bindTo
    52:52:java.lang.String getSql() -> getSql
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback -> androidx.sqlite.db.SupportSQLiteOpenHelper$Callback:
    127:128:void <init>(int) -> <init>
    274:293:void deleteDatabaseFile(java.lang.String) -> deleteDatabaseFile
    232:268:void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase) -> onCorruption
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration -> androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration:
    319:322:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> <init>
    331:331:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context) -> builder
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder -> androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder:
    354:355:void <init>(android.content.Context) -> <init>
    343:344:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build() -> build
    372:372:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> callback
    363:363:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String) -> name
androidx.sqlite.db.framework.FrameworkSQLiteDatabase -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase:
    47:49:void <clinit>() -> <clinit>
    58:59:void <init>(android.database.sqlite.SQLiteDatabase) -> <init>
    69:69:void beginTransaction() -> beginTransaction
    315:315:void close() -> close
    64:64:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> compileStatement
    90:90:void endTransaction() -> endTransaction
    242:242:void execSQL(java.lang.String) -> execSQL
    305:305:java.util.List getAttachedDbs() -> getAttachedDbs
    267:267:java.lang.String getPath() -> getPath
    100:100:boolean inTransaction() -> inTransaction
    322:322:boolean isDelegate(android.database.sqlite.SQLiteDatabase) -> isDelegate
    257:257:boolean isOpen() -> isOpen
    150:150:android.database.Cursor query(java.lang.String) -> query
    161:161:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> query
    175:175:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> query
    95:95:void setTransactionSuccessful() -> setTransactionSuccessful
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$1 -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase$1:
    161:161:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteDatabase,androidx.sqlite.db.SupportSQLiteQuery) -> <init>
    165:166:android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> newCursor
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$2 -> androidx.sqlite.db.framework.FrameworkSQLiteDatabase$2:
    175:175:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteDatabase,androidx.sqlite.db.SupportSQLiteQuery) -> <init>
    179:180:android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> newCursor
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper:
    31:32:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> <init>
    37:37:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper createDelegate(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> createDelegate
    42:42:java.lang.String getDatabaseName() -> getDatabaseName
    53:53:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> getWritableDatabase
    48:48:void setWriteAheadLoggingEnabled(boolean) -> setWriteAheadLoggingEnabled
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper:
    79:87:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.framework.FrameworkSQLiteDatabase[],androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> <init>
    148:150:void close() -> close
    113:113:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase) -> getWrappedDb
    154:158:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(androidx.sqlite.db.framework.FrameworkSQLiteDatabase[],android.database.sqlite.SQLiteDatabase) -> getWrappedDb
    91:98:androidx.sqlite.db.SupportSQLiteDatabase getWritableSupportDatabase() -> getWritableSupportDatabase
    129:129:void onConfigure(android.database.sqlite.SQLiteDatabase) -> onConfigure
    118:118:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    134:135:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    140:142:void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    123:124:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$1 -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$1:
    80:80:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteDatabase[]) -> <init>
    83:83:void onCorruption(android.database.sqlite.SQLiteDatabase) -> onCorruption
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory -> androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory:
    26:26:void <init>() -> <init>
    29:29:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> create
androidx.sqlite.db.framework.FrameworkSQLiteProgram -> androidx.sqlite.db.framework.FrameworkSQLiteProgram:
    29:30:void <init>(android.database.sqlite.SQLiteProgram) -> <init>
    55:55:void bindBlob(int,byte[]) -> bindBlob
    45:45:void bindDouble(int,double) -> bindDouble
    40:40:void bindLong(int,long) -> bindLong
    35:35:void bindNull(int) -> bindNull
    50:50:void bindString(int,java.lang.String) -> bindString
    65:65:void close() -> close
androidx.sqlite.db.framework.FrameworkSQLiteStatement -> androidx.sqlite.db.framework.FrameworkSQLiteStatement:
    35:36:void <init>(android.database.sqlite.SQLiteStatement) -> <init>
    51:51:long executeInsert() -> executeInsert
    46:46:int executeUpdateDelete() -> executeUpdateDelete
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
    31:32:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    37:45:void pause(android.animation.Animator) -> pause
    53:61:void resume(android.animation.Animator) -> resume
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
    37:38:void <init>() -> <init>
    47:50:void init() -> init
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
    61:168:void <clinit>() -> <clinit>
    170:166:void <init>() -> <init>
    244:244:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    239:239:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    220:232:void captureValues(androidx.transition.TransitionValues) -> captureValues
    267:448:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    188:188:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    249:254:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
    70:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    70:70:java.lang.Object get(java.lang.Object) -> get
    82:83:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
    75:77:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
    448:448:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    451:452:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
    88:88:void <init>(java.lang.Class,java.lang.String) -> <init>
    88:88:java.lang.Object get(java.lang.Object) -> get
    88:88:void set(java.lang.Object,java.lang.Object) -> set
    91:91:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
    101:101:void <init>(java.lang.Class,java.lang.String) -> <init>
    101:101:java.lang.Object get(java.lang.Object) -> get
    101:101:void set(java.lang.Object,java.lang.Object) -> set
    104:104:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
    114:114:void <init>(java.lang.Class,java.lang.String) -> <init>
    114:114:java.lang.Object get(java.lang.Object) -> get
    114:114:void set(java.lang.Object,java.lang.Object) -> set
    117:121:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
    131:131:void <init>(java.lang.Class,java.lang.String) -> <init>
    131:131:java.lang.Object get(java.lang.Object) -> get
    131:131:void set(java.lang.Object,java.lang.Object) -> set
    134:138:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
    148:148:void <init>(java.lang.Class,java.lang.String) -> <init>
    148:148:java.lang.Object get(java.lang.Object) -> get
    148:148:void set(java.lang.Object,java.lang.Object) -> set
    151:155:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
    326:329:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
    370:370:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    375:375:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    380:382:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
    394:395:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    399:400:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    405:408:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    413:413:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    418:418:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
    471:472:void <init>(android.view.View) -> <init>
    485:489:void setBottomRight(android.graphics.PointF) -> setBottomRight
    494:496:void setLeftTopRightBottom() -> setLeftTopRightBottom
    476:480:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.Fade -> androidx.transition.Fade:
    91:92:void <init>(int) -> <init>
    115:116:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    127:135:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    173:175:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    155:159:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    165:167:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
    135:135:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    138:140:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
    186:187:void <init>(android.view.View) -> <init>
    201:203:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    192:195:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
    42:42:void <init>() -> <init>
    284:285:void addTarget(java.lang.Object,android.view.View) -> addTarget
    102:119:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    213:213:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    46:46:boolean canHandle(java.lang.Object) -> canHandle
    53:53:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    126:128:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    186:204:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    134:142:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    292:293:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    257:275:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    150:151:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    221:222:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    87:91:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    300:301:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    71:81:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    246:250:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    63:64:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
    91:91:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
    151:151:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    158:162:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
    222:222:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    238:238:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    225:232:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
    301:301:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
    28:31:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
    43:43:void <init>() -> <init>
androidx.transition.PathProperty -> androidx.transition.PathProperty:
    45:48:void <init>(android.util.Property,android.graphics.Path) -> <init>
    35:35:java.lang.Object get(java.lang.Object) -> get
    53:53:java.lang.Float get(java.lang.Object) -> get
    35:35:void set(java.lang.Object,java.lang.Object) -> set
    58:62:void set(java.lang.Object,java.lang.Float) -> set
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
    38:41:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
    39:39:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
    149:151:void exit() -> exit
    209:209:androidx.transition.Scene getCurrentScene(android.view.ViewGroup) -> getCurrentScene
    196:196:void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene) -> setCurrentScene
androidx.transition.Transition -> androidx.transition.Transition:
    164:205:void <clinit>() -> <clinit>
    263:255:void <init>() -> <init>
    2042:2045:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    1000:1000:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    647:660:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1532:1565:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    1900:1918:void animate(android.animation.Animator) -> animate
    2017:2027:void cancel() -> cancel
    1602:1650:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2189:2202:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    1471:1524:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1578:1584:void clearValues(boolean) -> clearValues
    120:120:java.lang.Object clone() -> clone
    2224:2229:androidx.transition.Transition clone() -> clone
    710:800:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1958:1980:void end() -> end
    357:357:long getDuration() -> getDuration
    2133:2133:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    412:412:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1682:1705:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2250:2250:java.lang.String getName() -> getName
    2103:2103:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    2181:2181:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    859:862:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    384:384:long getStartDelay() -> getStartDelay
    1415:1415:java.util.List getTargetIds() -> getTargetIds
    1444:1444:java.util.List getTargetNames() -> getTargetNames
    1459:1459:java.util.List getTargetTypes() -> getTargetTypes
    1429:1429:java.util.List getTargets() -> getTargets
    1663:1667:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1844:1854:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    816:850:boolean isValidTarget(android.view.View) -> isValidTarget
    1866:1877:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    594:606:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    546:553:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    567:579:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    621:633:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    667:689:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    1719:1738:void pause(android.view.View) -> pause
    1782:1822:void playTransition(android.view.ViewGroup) -> playTransition
    2058:2063:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1098:1098:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1751:1772:void resume(android.view.View) -> resume
    898:910:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    878:891:void runAnimators() -> runAnimators
    344:344:androidx.transition.Transition setDuration(long) -> setDuration
    2118:2118:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    398:398:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    2086:2088:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    2164:2164:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    371:371:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1931:1942:void start() -> start
    2218:2218:java.lang.String toString() -> toString
    2254:2283:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
    171:171:void <init>() -> <init>
    174:176:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
    898:898:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    906:907:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    901:901:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
    1911:1911:void <init>(androidx.transition.Transition) -> <init>
    1914:1915:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
    2368:2373:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
    2431:2431:void <init>() -> <init>
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
    27:27:void <init>() -> <init>
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
    83:90:void <clinit>() -> <clinit>
    408:420:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    200:210:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    217:219:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    309:324:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
    238:240:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    268:301:boolean onPreDraw() -> onPreDraw
    254:263:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    244:245:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
    287:287:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    290:292:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
    110:88:void <init>() -> <init>
    62:62:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    307:307:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    62:62:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    271:274:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    179:193:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    199:200:void addTransitionInternal(androidx.transition.Transition) -> addTransitionInternal
    536:540:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    548:551:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    524:528:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    62:62:java.lang.Object clone() -> clone
    649:653:androidx.transition.Transition clone() -> clone
    466:480:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    223:226:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    211:211:int getTransitionCount() -> getTransitionCount
    559:562:void pause(android.view.View) -> pause
    62:62:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    385:385:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    62:62:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    322:325:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    570:573:void resume(android.view.View) -> resume
    491:517:void runAnimators() -> runAnimators
    62:62:androidx.transition.Transition setDuration(long) -> setDuration
    239:243:androidx.transition.TransitionSet setDuration(long) -> setDuration
    630:634:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    62:62:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    258:265:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    137:140:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    390:394:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    620:624:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    62:62:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    252:252:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    418:422:void setupStartEndListeners() -> setupStartEndListeners
    640:642:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
    503:503:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    506:507:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
    433:434:void <init>(androidx.transition.TransitionSet) -> <init>
    447:453:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    439:441:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
    35:39:void <clinit>() -> <clinit>
    51:71:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:138:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    149:150:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
    49:70:void <init>() -> <init>
    52:53:void <init>(android.view.View) -> <init>
    74:76:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    91:95:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
    25:33:void <init>() -> <init>
androidx.transition.ViewGroupOverlayApi14 -> androidx.transition.ViewGroupOverlayApi14:
    28:28:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    37:37:void add(android.view.View) -> add
    32:32:androidx.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup) -> createFrom
    42:42:void remove(android.view.View) -> remove
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
    32:33:void <init>(android.view.ViewGroup) -> <init>
    38:38:void add(android.graphics.drawable.Drawable) -> add
    48:48:void add(android.view.View) -> add
    43:43:void remove(android.graphics.drawable.Drawable) -> remove
    53:53:void remove(android.view.View) -> remove
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
    46:49:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    68:74:void hiddenSuppressLayout(android.view.ViewGroup,boolean) -> hiddenSuppressLayout
    56:61:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtilsApi14 -> androidx.transition.ViewGroupUtilsApi14:
    109:122:void cancelLayoutTransition(android.animation.LayoutTransition) -> cancelLayoutTransition
    45:103:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtilsApi14$1 -> androidx.transition.ViewGroupUtilsApi14$1:
    46:46:void <init>() -> <init>
androidx.transition.ViewOverlayApi14 -> androidx.transition.ViewOverlayApi14:
    47:48:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    81:81:void add(android.graphics.drawable.Drawable) -> add
    65:74:androidx.transition.ViewOverlayApi14 createFrom(android.view.View) -> createFrom
    54:58:android.view.ViewGroup getContentView(android.view.View) -> getContentView
    86:86:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewOverlayApi14$OverlayViewGroup -> androidx.transition.ViewOverlayApi14$OverlayViewGroup:
    116:116:void <clinit>() -> <clinit>
    142:148:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,androidx.transition.ViewOverlayApi14) -> <init>
    158:167:void add(android.graphics.drawable.Drawable) -> add
    186:210:void add(android.view.View) -> add
    219:220:void assertNotDisposed() -> assertNotDisposed
    241:250:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    226:228:void disposeIfEmpty() -> disposeIfEmpty
    271:274:void getOffset(int[]) -> getOffset
    299:310:android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect) -> invalidateChildInParent
    234:234:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    172:176:void remove(android.graphics.drawable.Drawable) -> remove
    214:215:void remove(android.view.View) -> remove
    182:182:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
    31:32:void <init>(android.view.View) -> <init>
    37:37:void add(android.graphics.drawable.Drawable) -> add
    42:42:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
    38:71:void <clinit>() -> <clinit>
    128:128:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    90:93:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    111:111:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    100:103:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    119:119:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    199:199:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    107:107:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    145:145:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    161:161:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    177:177:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
    57:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    57:57:java.lang.Object get(java.lang.Object) -> get
    61:61:java.lang.Float get(android.view.View) -> get
    57:57:void set(java.lang.Object,java.lang.Object) -> set
    66:66:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
    72:72:void <init>(java.lang.Class,java.lang.String) -> <init>
    72:72:java.lang.Object get(java.lang.Object) -> get
    76:76:android.graphics.Rect get(android.view.View) -> get
    72:72:void set(java.lang.Object,java.lang.Object) -> set
    81:81:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
    26:26:void <init>() -> <init>
    52:61:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    36:46:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
    28:28:void <init>() -> <init>
    46:52:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    60:66:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
    26:26:void <init>() -> <init>
    36:42:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsApi23 -> androidx.transition.ViewUtilsApi23:
    27:27:void <init>() -> <init>
    38:47:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.ViewUtilsApi29 -> androidx.transition.ViewUtilsApi29:
    27:27:void <init>() -> <init>
    36:36:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    46:46:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    31:31:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    41:41:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    51:51:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    56:56:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
    32:32:void <init>() -> <init>
    72:73:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    176:184:void fetchSetFrame() -> fetchSetFrame
    55:59:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    64:65:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    142:149:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    46:50:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    155:167:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    78:87:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    92:103:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.Visibility -> androidx.transition.Visibility:
    81:81:void <clinit>() -> <clinit>
    100:98:void <init>() -> <init>
    165:165:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    160:160:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    150:155:void captureValues(androidx.transition.TransitionValues) -> captureValues
    250:257:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    146:146:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    195:241:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    510:518:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    283:297:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    340:477:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    129:127:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
    438:438:void <init>(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View) -> <init>
    456:458:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    442:442:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    447:450:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
    533:539:void <init>(android.view.View,int,boolean) -> <init>
    604:612:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    562:562:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    575:575:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    546:547:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    555:556:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    585:586:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    595:595:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    600:600:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    616:618:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
    87:87:void <init>() -> <init>
androidx.transition.WindowIdApi14 -> androidx.transition.WindowIdApi14:
    25:26:void <init>(android.os.IBinder) -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
    29:30:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    22:134:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    57:57:void <init>() -> <init>
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    168:168:void <init>() -> <init>
    172:172:void <init>(android.content.Context) -> <init>
    177:182:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    522:523:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    532:533:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    253:254:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:290:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:266:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:511:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:517:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:194:android.graphics.drawable.Drawable mutate() -> mutate
    296:300:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    329:333:void setAlpha(int) -> setAlpha
    436:440:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:342:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:360:void setTint(int) -> setTint
    365:370:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:380:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    682:692:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    661:676:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    709:720:void start() -> start
    725:730:void stop() -> stop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:736:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:741:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:746:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    599:627:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    648:651:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    548:549:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:557:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:566:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:575:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    109:143:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    67:96:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    514:568:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:783:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    809:809:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    207:327:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:664:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:649:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    100:103:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    131:148:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:911:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:864:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:874:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    696:771:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    579:624:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:376:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:425:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:493:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    166:166:void <init>() -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:186:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    68:68:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:76:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    202:222:float getInterpolation(float) -> getInterpolation
    130:133:void initCubic(float,float,float,float) -> initCubic
    137:143:void initPath(android.graphics.Path) -> initPath
    123:126:void initQuad(float,float) -> initQuad
    82:93:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    29:29:void <init>() -> <init>
    95:96:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:107:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:87:void jumpToCurrentState() -> jumpToCurrentState
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:165:void setChangingConfigurations(int) -> setChangingConfigurations
    36:40:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:79:void setFilterBitmap(boolean) -> setFilterBitmap
    62:63:void setHotspot(float,float) -> setHotspot
    70:71:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    321:322:void <init>() -> <init>
    325:327:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    687:687:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:588:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:666:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    681:682:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:427:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:560:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:701:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:725:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    816:877:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    933:937:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:534:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:339:android.graphics.drawable.Drawable mutate() -> mutate
    907:909:boolean needMirroring() -> needMirroring
    918:919:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:551:boolean onStateChange(int[]) -> onStateChange
    746:736:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    942:946:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    902:902:void setAllowCaching(boolean) -> setAllowCaching
    441:448:void setAlpha(int) -> setAlpha
    604:608:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:460:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:493:void setTint(int) -> setTint
    498:507:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:522:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:963:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    754:783:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    482:483:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1768:1768:void <init>() -> <init>
    1773:1773:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1785:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1793:1803:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1835:1833:void <init>() -> <init>
    1840:1855:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1865:1861:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1878:1874:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    1890:1893:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1960:1960:boolean isStateful() -> isStateful
    1965:1966:boolean onStateChanged(int[]) -> onStateChanged
    2033:2033:void setFillAlpha(float) -> setFillAlpha
    2023:2023:void setFillColor(int) -> setFillColor
    2012:2012:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1992:void setStrokeColor(int) -> setStrokeColor
    2002:2002:void setStrokeWidth(float) -> setStrokeWidth
    2053:2053:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2063:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2043:void setTrimPathStart(float) -> setTrimPathStart
    1901:1953:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1466:1496:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1506:1464:void <init>() -> <init>
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1518:1521:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1664:1665:boolean isStateful() -> isStateful
    1675:1676:boolean onStateChanged(int[]) -> onStateChanged
    1591:1593:void setPivotX(float) -> setPivotX
    1604:1606:void setPivotY(float) -> setPivotY
    1578:1580:void setRotation(float) -> setRotation
    1617:1619:void setScaleX(float) -> setScaleX
    1630:1632:void setScaleY(float) -> setScaleY
    1643:1645:void setTranslateX(float) -> setTranslateX
    1656:1658:void setTranslateY(float) -> setTranslateY
    1563:1567:void updateLocalMatrix() -> updateLocalMatrix
    1529:1557:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1693:1690:void <init>() -> <init>
    1719:1722:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1755:1759:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1726:1728:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1170:1170:void <clinit>() -> <clinit>
    1191:1194:void <init>() -> <init>
    1216:1230:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1264:1264:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1239:1259:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1269:1373:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1213:1213:float getAlpha() -> getAlpha
    1393:1403:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1202:1202:int getRootAlpha() -> getRootAlpha
    1412:1415:boolean isStateful() -> isStateful
    1419:1419:boolean onStateChanged(int[]) -> onStateChanged
    1208:1208:void setAlpha(float) -> setAlpha
    1198:1198:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1033:1045:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1121:1122:void <init>() -> <init>
    1093:1094:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1101:1105:boolean canReuseCache() -> canReuseCache
    1084:1087:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1052:1053:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1057:1057:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1143:1143:boolean isStateful() -> isStateful
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1147:1148:boolean onStateChanged(int[]) -> onStateChanged
    1114:1118:void updateCacheStates() -> updateCacheStates
    1078:1080:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    975:976:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:982:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:989:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:997:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    38:39:void <init>(android.os.Parcel) -> <init>
    56:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:89:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1628:1633:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1609:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1616:1621:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1565:1568:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    294:295:void writeBoolean(boolean,int) -> writeBoolean
    304:305:void writeByteArray(byte[],int) -> writeByteArray
    325:326:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    334:335:void writeInt(int,int) -> writeInt
    391:392:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    370:371:void writeString(java.lang.String,int) -> writeString
    1586:1589:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1022:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1029:1036:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1042:1044:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:51:void <init>(android.os.Parcel) -> <init>
    60:65:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:109:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:241:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:94:void setOutputField(int) -> setOutputField
    181:181:void writeBoolean(boolean) -> writeBoolean
    127:130:void writeByteArray(byte[]) -> writeByteArray
    196:196:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:146:void writeInt(int) -> writeInt
    176:176:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:166:void writeString(java.lang.String) -> writeString
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    154:154:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    289:293:void notifyDataSetChanged() -> notifyDataSetChanged
    303:303:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    143:143:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:99:void startUpdate(android.view.ViewGroup) -> startUpdate
    312:312:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    122:251:void <clinit>() -> <clinit>
    391:392:void <init>(android.content.Context) -> <init>
    396:397:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2937:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1013:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    581:584:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:726:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2955:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1485:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2853:boolean arrowScroll(int) -> arrowScroll
    2528:2543:boolean beginFakeDrag() -> beginFakeDrag
    1298:1380:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2701:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    745:746:void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    1974:2005:void completeScroll(boolean) -> completeScroll
    1793:1814:void computeScroll() -> computeScroll
    1023:1087:void dataSetChanged() -> dataSetChanged
    2406:2418:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1935:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1952:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1969:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3008:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    929:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2462:void draw(android.graphics.Canvas) -> draw
    915:918:void drawableStateChanged() -> drawableStateChanged
    2015:2019:void enableLayers(boolean) -> enableLayers
    2659:2664:void endDrag() -> endDrag
    2554:2555:void endFakeDrag() -> endFakeDrag
    2757:2763:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    2586:2587:void fakeDragBy(float) -> fakeDragBy
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:804:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2860:2879:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1514:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2397:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1535:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:427:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2640:2640:boolean isFakeDragging() -> isFakeDragging
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1545:void onAttachedToWindow() -> onAttachedToWindow
    479:484:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2500:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2037:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1788:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1638:void onMeasure(int,int) -> onMeasure
    1865:1919:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2985:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1466:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1445:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2653:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1650:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2287:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2886:boolean pageLeft() -> pageLeft
    2893:2894:boolean pageRight() -> pageRight
    1818:1844:boolean pageScrolled(int) -> pageScrolled
    2312:2353:boolean performDrag(float) -> performDrag
    1092:1092:void populate() -> populate
    1097:1143:void populate(int) -> populate
    1655:1675:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:559:void removeNonDecorViews() -> removeNonDecorViews
    594:595:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:737:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1507:void removeView(android.view.View) -> removeView
    2303:2305:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2298:boolean resetTouch() -> resetTouch
    676:694:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:549:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:612:void setCurrentItem(int) -> setCurrentItem
    622:623:void setCurrentItem(int,boolean) -> setCurrentItem
    631:631:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:636:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    815:816:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    850:856:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:709:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:875:void setPageMargin(int) -> setPageMargin
    893:896:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:905:void setPageMarginDrawable(int) -> setPageMarginDrawable
    769:769:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer) -> setPageTransformer
    788:797:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int) -> setPageTransformer
    488:497:void setScrollState(int) -> setScrollState
    2669:2670:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    939:939:void smoothScrollTo(int,int) -> smoothScrollTo
    950:1004:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1293:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
    147:147:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:273:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    436:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    3145:3126:void <init>() -> <init>
    3149:3153:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3047:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3060:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3072:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
    3092:3092:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3097:void onChanged() -> onChanged
    3101:3101:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1395:void <init>(android.os.Parcelable) -> <init>
    1429:1435:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1402:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
androidx.viewpager2.adapter.FragmentStateAdapter$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$2:
    351:355:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$5 -> androidx.viewpager2.adapter.FragmentStateAdapter$5:
    588:590:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    657:657:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
butterknife.BuildConfig -> butterknife.BuildConfig:
    6:6:void <init>() -> <init>
butterknife.ButterKnife -> butterknife.ButterKnife:
    108:108:void <clinit>() -> <clinit>
    86:87:void <init>() -> <init>
    135:135:butterknife.Unbinder bind(android.view.View) -> bind
    146:147:butterknife.Unbinder bind(android.app.Dialog) -> bind
    172:172:butterknife.Unbinder bind(java.lang.Object,android.view.View) -> bind
    189:201:butterknife.Unbinder createBinding(java.lang.Object,android.view.View) -> createBinding
    218:225:java.lang.reflect.Constructor findBindingConstructorForClass(java.lang.Class) -> findBindingConstructorForClass
butterknife.OnItemSelected$Callback -> butterknife.OnItemSelected$Callback:
    57:52:void <clinit>() -> <clinit>
    52:52:void <init>(java.lang.String,int) -> <init>
    52:52:butterknife.OnItemSelected$Callback valueOf(java.lang.String) -> valueOf
    52:52:butterknife.OnItemSelected$Callback[] values() -> values
butterknife.OnPageChange$Callback -> butterknife.OnPageChange$Callback:
    49:47:void <clinit>() -> <clinit>
    47:47:void <init>(java.lang.String,int) -> <init>
    47:47:butterknife.OnPageChange$Callback valueOf(java.lang.String) -> valueOf
    47:47:butterknife.OnPageChange$Callback[] values() -> values
butterknife.OnTextChanged$Callback -> butterknife.OnTextChanged$Callback:
    53:51:void <clinit>() -> <clinit>
    51:51:void <init>(java.lang.String,int) -> <init>
    51:51:butterknife.OnTextChanged$Callback valueOf(java.lang.String) -> valueOf
    51:51:butterknife.OnTextChanged$Callback[] values() -> values
butterknife.R -> butterknife.R:
    10:10:void <init>() -> <init>
butterknife.Unbinder -> butterknife.Unbinder:
    9:9:void <clinit>() -> <clinit>
butterknife.Unbinder$1 -> butterknife.Unbinder$1:
    9:9:void <init>() -> <init>
butterknife.internal.DebouncingOnClickListener -> butterknife.internal.DebouncingOnClickListener:
    12:12:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    19:22:void onClick(android.view.View) -> onClick
butterknife.internal.DebouncingOnClickListener$1 -> butterknife.internal.DebouncingOnClickListener$1:
    12:12:void <init>() -> <init>
    14:14:void run() -> run
butterknife.internal.Utils -> butterknife.internal.Utils:
    20:20:void <clinit>() -> <clinit>
    110:113:java.lang.Object castView(android.view.View,int,java.lang.String,java.lang.Class) -> castView
    87:92:android.view.View findRequiredView(android.view.View,int,java.lang.String) -> findRequiredView
    104:105:java.lang.Object findRequiredViewAsType(android.view.View,int,java.lang.String,java.lang.Class) -> findRequiredViewAsType
    141:144:java.lang.String getResourceEntryName(android.view.View,int) -> getResourceEntryName
com.android.colorpicker.ColorPickerDialog -> com.android.colorpicker.ColorPickerDialog:
    57:47:void <init>() -> <init>
    69:70:void initialize(int,int[],int,int,int) -> initialize
    124:140:void onColorSelected(int) -> onColorSelected
    87:97:void onCreate(android.os.Bundle) -> onCreate
    103:119:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    196:198:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    181:182:void refreshPalette() -> refreshPalette
    74:78:void setArguments(int,int,int) -> setArguments
    159:162:void setColors(int[],int) -> setColors
    82:82:void setOnColorSelectedListener(com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener) -> setOnColorSelectedListener
    144:147:void showPaletteView() -> showPaletteView
com.android.colorpicker.ColorPickerPalette -> com.android.colorpicker.ColorPickerPalette:
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:48:void <init>(android.content.Context) -> <init>
    126:129:void addSwatchToRow(android.widget.TableRow,android.view.View,int) -> addSwatchToRow
    164:167:android.widget.ImageView createBlankSpace() -> createBlankSpace
    175:179:com.android.colorpicker.ColorPickerSwatch createColorSwatch(int,int) -> createColorSwatch
    72:75:android.widget.TableRow createTableRow() -> createTableRow
    87:117:void drawPalette(int[],int) -> drawPalette
    56:68:void init(int,int,com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener) -> init
    142:157:void setSwatchDescription(int,int,int,boolean,android.view.View) -> setSwatchDescription
com.android.colorpicker.ColorPickerSwatch -> com.android.colorpicker.ColorPickerSwatch:
    48:57:void <init>(android.content.Context,int,boolean,com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener) -> <init>
    76:77:void onClick(android.view.View) -> onClick
    68:70:void setChecked(boolean) -> setChecked
    62:63:void setColor(int) -> setColor
com.android.colorpicker.ColorStateDrawable -> com.android.colorpicker.ColorStateDrawable:
    35:36:void <init>(android.graphics.drawable.Drawable[],int) -> <init>
    63:65:int getPressedColor(int) -> getPressedColor
    42:55:boolean onStateChange(int[]) -> onStateChange
com.android.datetimepicker.AccessibleLinearLayout -> com.android.datetimepicker.AccessibleLinearLayout:
    32:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:38:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    43:44:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.android.datetimepicker.AccessibleTextView -> com.android.datetimepicker.AccessibleTextView:
    32:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:38:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    43:44:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.android.datetimepicker.HapticFeedbackController -> com.android.datetimepicker.HapticFeedbackController:
    30:32:void <init>(android.content.Context) -> <init>
    14:14:boolean access$002(com.android.datetimepicker.HapticFeedbackController,boolean) -> access$002
    14:14:android.content.Context access$100(com.android.datetimepicker.HapticFeedbackController) -> access$100
    14:14:boolean access$200(android.content.Context) -> access$200
    19:19:boolean checkGlobalSetting(android.content.Context) -> checkGlobalSetting
    44:49:void start() -> start
    56:57:void stop() -> stop
    65:70:void tryVibrate() -> tryVibrate
com.android.datetimepicker.HapticFeedbackController$1 -> com.android.datetimepicker.HapticFeedbackController$1:
    32:32:void <init>(com.android.datetimepicker.HapticFeedbackController,android.os.Handler) -> <init>
    35:35:void onChange(boolean) -> onChange
com.android.datetimepicker.Utils -> com.android.datetimepicker.Utils:
    127:136:android.animation.ObjectAnimator getPulseAnimator(android.view.View,float,float) -> getPulseAnimator
    47:47:boolean isJellybeanOrLater() -> isJellybeanOrLater
    56:57:void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence) -> tryAccessibilityAnnounce
com.android.datetimepicker.date.AccessibleDateAnimator -> com.android.datetimepicker.date.AccessibleDateAnimator:
    29:29:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:51:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    33:33:void setDateMillis(long) -> setDateMillis
com.android.datetimepicker.date.TextViewWithCircularIndicator -> com.android.datetimepicker.date.TextViewWithCircularIndicator:
    44:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:81:java.lang.CharSequence getContentDescription() -> getContentDescription
    54:59:void init() -> init
    68:73:void onDraw(android.graphics.Canvas) -> onDraw
com.android.datetimepicker.time.AmPmCirclesView -> com.android.datetimepicker.time.AmPmCirclesView:
    64:65:void <init>(android.content.Context) -> <init>
    126:140:int getIsTouchingAmOrPm(float,float) -> getIsTouchingAmOrPm
    69:96:void initialize(android.content.Context,int) -> initialize
    150:207:void onDraw(android.graphics.Canvas) -> onDraw
    115:115:void setAmOrPm(int) -> setAmOrPm
    119:119:void setAmOrPmPressed(int) -> setAmOrPmPressed
    100:110:void setTheme(android.content.Context,boolean) -> setTheme
com.android.datetimepicker.time.CircleView -> com.android.datetimepicker.time.CircleView:
    48:55:void <init>(android.content.Context) -> <init>
    59:76:void initialize(android.content.Context,boolean) -> initialize
    93:120:void onDraw(android.graphics.Canvas) -> onDraw
    80:86:void setTheme(android.content.Context,boolean) -> setTheme
com.android.datetimepicker.time.RadialPickerLayout -> com.android.datetimepicker.time.RadialPickerLayout:
    92:131:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:int access$000(com.android.datetimepicker.time.RadialPickerLayout) -> access$000
    39:39:com.android.datetimepicker.time.AmPmCirclesView access$100(com.android.datetimepicker.time.RadialPickerLayout) -> access$100
    39:39:boolean access$202(com.android.datetimepicker.time.RadialPickerLayout,boolean) -> access$202
    39:39:int access$300(com.android.datetimepicker.time.RadialPickerLayout) -> access$300
    39:39:int access$400(com.android.datetimepicker.time.RadialPickerLayout,int,boolean,boolean,boolean) -> access$400
    39:39:int access$502(com.android.datetimepicker.time.RadialPickerLayout,int) -> access$502
    39:39:com.android.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener access$600(com.android.datetimepicker.time.RadialPickerLayout) -> access$600
    745:760:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    502:506:int getCurrentItemShowing() -> getCurrentItemShowing
    265:269:int getCurrentlyShowingValue() -> getCurrentlyShowingValue
    486:491:int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[]) -> getDegreesFromCoords
    253:253:int getHours() -> getHours
    276:276:int getIsCurrentlyAmOrPm() -> getIsCurrentlyAmOrPm
    257:257:int getMinutes() -> getMinutes
    162:209:void initialize(android.content.Context,com.android.datetimepicker.HapticFeedbackController,int,int,boolean) -> initialize
    249:249:boolean isHourInnerCircle(int) -> isHourInnerCircle
    735:737:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    139:145:void onMeasure(int,int) -> onMeasure
    555:585:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    770:814:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    335:355:void preparePrefer30sMap() -> preparePrefer30sMap
    429:466:int reselectSelector(int,boolean,boolean,boolean) -> reselectSelector
    306:308:void setAmOrPm(int) -> setAmOrPm
    515:548:void setCurrentItemShowing(int,boolean) -> setCurrentItemShowing
    231:239:void setItem(int,int) -> setItem
    150:150:void setOnValueSelectedListener(com.android.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener) -> setOnValueSelectedListener
    213:218:void setTheme(android.content.Context,boolean) -> setTheme
    222:223:void setTime(int,int) -> setTime
    289:296:void setValueForItem(int,int) -> setValueForItem
    392:392:int snapOnly30s(int,int) -> snapOnly30s
    375:378:int snapPrefer30s(int) -> snapPrefer30s
    719:725:boolean trySettingInputEnabled(boolean) -> trySettingInputEnabled
com.android.datetimepicker.time.RadialPickerLayout$1 -> com.android.datetimepicker.time.RadialPickerLayout$1:
    585:585:void <init>(com.android.datetimepicker.time.RadialPickerLayout) -> <init>
    588:589:void run() -> run
com.android.datetimepicker.time.RadialPickerLayout$2 -> com.android.datetimepicker.time.RadialPickerLayout$2:
    602:602:void <init>(com.android.datetimepicker.time.RadialPickerLayout,java.lang.Boolean[]) -> <init>
    605:609:void run() -> run
com.android.datetimepicker.time.RadialSelectorView -> com.android.datetimepicker.time.RadialSelectorView:
    73:74:void <init>(android.content.Context) -> <init>
    193:254:int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[]) -> getDegreesFromCoords
    321:322:android.animation.ObjectAnimator getDisappearAnimator() -> getDisappearAnimator
    348:349:android.animation.ObjectAnimator getReappearAnimator() -> getReappearAnimator
    92:137:void initialize(android.content.Context,boolean,boolean,boolean,int,boolean) -> initialize
    269:317:void onDraw(android.graphics.Canvas) -> onDraw
    188:188:void setAnimationRadiusMultiplier(float) -> setAnimationRadiusMultiplier
    163:171:void setSelection(int,boolean,boolean) -> setSelection
    141:150:void setTheme(android.content.Context,boolean) -> setTheme
com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener -> com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener:
    388:388:void <init>(com.android.datetimepicker.time.RadialSelectorView) -> <init>
    388:388:void <init>(com.android.datetimepicker.time.RadialSelectorView,com.android.datetimepicker.time.RadialSelectorView$1) -> <init>
    391:391:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.datetimepicker.time.RadialTextsView -> com.android.datetimepicker.time.RadialTextsView:
    73:74:void <init>(android.content.Context) -> <init>
    237:257:void calculateGridSizes(float,float,float,float,float[],float[]) -> calculateGridSizes
    265:278:void drawTexts(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[]) -> drawTexts
    331:332:android.animation.ObjectAnimator getDisappearAnimator() -> getDisappearAnimator
    340:341:android.animation.ObjectAnimator getReappearAnimator() -> getReappearAnimator
    79:138:void initialize(android.content.res.Resources,java.lang.String[],java.lang.String[],boolean,boolean) -> initialize
    170:220:void onDraw(android.graphics.Canvas) -> onDraw
    290:327:void renderAnimations() -> renderAnimations
    164:165:void setAnimationRadiusMultiplier(float) -> setAnimationRadiusMultiplier
    142:149:void setTheme(android.content.Context,boolean) -> setTheme
com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener -> com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener:
    348:348:void <init>(com.android.datetimepicker.time.RadialTextsView) -> <init>
    348:348:void <init>(com.android.datetimepicker.time.RadialTextsView,com.android.datetimepicker.time.RadialTextsView$1) -> <init>
    351:351:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.datetimepicker.time.TimePickerDialog -> com.android.datetimepicker.time.TimePickerDialog:
    123:123:void <init>() -> <init>
    42:42:void access$100(com.android.datetimepicker.time.TimePickerDialog,int,boolean,boolean,boolean) -> access$100
    42:42:boolean access$200(com.android.datetimepicker.time.TimePickerDialog) -> access$200
    42:42:boolean access$300(com.android.datetimepicker.time.TimePickerDialog) -> access$300
    42:42:void access$400(com.android.datetimepicker.time.TimePickerDialog,boolean) -> access$400
    42:42:com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener access$500(com.android.datetimepicker.time.TimePickerDialog) -> access$500
    42:42:com.android.datetimepicker.time.RadialPickerLayout access$600(com.android.datetimepicker.time.TimePickerDialog) -> access$600
    42:42:void access$700(com.android.datetimepicker.time.TimePickerDialog,int) -> access$700
    42:42:boolean access$800(com.android.datetimepicker.time.TimePickerDialog,int) -> access$800
    591:610:boolean addKeyIfLegal(int) -> addKeyIfLegal
    649:651:int deleteLastTypedKey() -> deleteLastTypedKey
    661:672:void finishKbMode(boolean) -> finishKbMode
    839:949:void generateLegalTimesTree() -> generateLegalTimesTree
    792:816:int getAmOrPmKeyCode(int) -> getAmOrPmKeyCode
    753:778:int[] getEnteredTime(java.lang.Boolean[]) -> getEnteredTime
    142:148:void initialize(com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener,int,int,boolean) -> initialize
    635:644:boolean isTypedTimeFullyLegal() -> isTypedTimeFullyLegal
    621:623:boolean isTypedTimeLegalSoFar() -> isTypedTimeLegalSoFar
    135:136:com.android.datetimepicker.time.TimePickerDialog newInstance(com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener,int,int,boolean) -> newInstance
    174:182:void onCreate(android.os.Bundle) -> onCreate
    189:189:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    195:355:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1009:1011:void onDismiss(android.content.DialogInterface) -> onDismiss
    367:368:void onPause() -> onPause
    361:362:void onResume() -> onResume
    391:400:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    410:429:void onValueSelected(int,int,boolean) -> onValueSelected
    510:507:boolean processKeyUp(int) -> processKeyUp
    466:497:void setCurrentItemShowing(int,boolean,boolean,boolean) -> setCurrentItemShowing
    435:449:void setHour(int,boolean) -> setHour
    457:460:void setMinute(int) -> setMinute
    580:584:void tryStartingKbMode(int) -> tryStartingKbMode
    372:372:void tryVibrate() -> tryVibrate
    377:385:void updateAmPmDisplay(int) -> updateAmPmDisplay
    684:710:void updateDisplay(boolean) -> updateDisplay
com.android.datetimepicker.time.TimePickerDialog$1 -> com.android.datetimepicker.time.TimePickerDialog$1:
    237:237:void <init>(com.android.datetimepicker.time.TimePickerDialog) -> <init>
    240:241:void onClick(android.view.View) -> onClick
com.android.datetimepicker.time.TimePickerDialog$2 -> com.android.datetimepicker.time.TimePickerDialog$2:
    244:244:void <init>(com.android.datetimepicker.time.TimePickerDialog) -> <init>
    247:248:void onClick(android.view.View) -> onClick
com.android.datetimepicker.time.TimePickerDialog$3 -> com.android.datetimepicker.time.TimePickerDialog$3:
    253:253:void <init>(com.android.datetimepicker.time.TimePickerDialog) -> <init>
    256:265:void onClick(android.view.View) -> onClick
com.android.datetimepicker.time.TimePickerDialog$4 -> com.android.datetimepicker.time.TimePickerDialog$4:
    272:272:void <init>(com.android.datetimepicker.time.TimePickerDialog) -> <init>
    276:279:void onClick(android.view.View) -> onClick
com.android.datetimepicker.time.TimePickerDialog$5 -> com.android.datetimepicker.time.TimePickerDialog$5:
    297:297:void <init>(com.android.datetimepicker.time.TimePickerDialog) -> <init>
    300:308:void onClick(android.view.View) -> onClick
com.android.datetimepicker.time.TimePickerDialog$KeyboardListener -> com.android.datetimepicker.time.TimePickerDialog$KeyboardListener:
    993:993:void <init>(com.android.datetimepicker.time.TimePickerDialog) -> <init>
    993:993:void <init>(com.android.datetimepicker.time.TimePickerDialog,com.android.datetimepicker.time.TimePickerDialog$1) -> <init>
    996:997:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.android.datetimepicker.time.TimePickerDialog$Node -> com.android.datetimepicker.time.TimePickerDialog$Node:
    962:964:void <init>(com.android.datetimepicker.time.TimePickerDialog,int[]) -> <init>
    968:968:void addChild(com.android.datetimepicker.time.TimePickerDialog$Node) -> addChild
    981:985:com.android.datetimepicker.time.TimePickerDialog$Node canReach(int) -> canReach
    972:973:boolean containsKey(int) -> containsKey
com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener$-CC -> com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener$-CC:
    void com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener.onTimeCleared(com.android.datetimepicker.time.RadialPickerLayout) -> $default$onTimeCleared
com.android.volley.AuthFailureError -> com.android.volley.AuthFailureError:
    34:34:void <init>(com.android.volley.NetworkResponse) -> <init>
    51:54:java.lang.String getMessage() -> getMessage
com.android.volley.Cache$Entry -> com.android.volley.Cache$Entry:
    66:93:void <init>() -> <init>
    103:103:boolean isExpired() -> isExpired
    108:108:boolean refreshNeeded() -> refreshNeeded
com.android.volley.CacheDispatcher -> com.android.volley.CacheDispatcher:
    37:37:void <clinit>() -> <clinit>
    70:75:void <init>(java.util.concurrent.BlockingQueue,java.util.concurrent.BlockingQueue,com.android.volley.Cache,com.android.volley.ResponseDelivery) -> <init>
    35:35:java.util.concurrent.BlockingQueue access$100(com.android.volley.CacheDispatcher) -> access$100
    35:35:com.android.volley.ResponseDelivery access$200(com.android.volley.CacheDispatcher) -> access$200
    118:119:void processRequest() -> processRequest
    124:192:void processRequest(com.android.volley.Request) -> processRequest
    83:84:void quit() -> quit
    89:104:void run() -> run
com.android.volley.CacheDispatcher$1 -> com.android.volley.CacheDispatcher$1:
    178:178:void <init>(com.android.volley.CacheDispatcher,com.android.volley.Request) -> <init>
    182:185:void run() -> run
com.android.volley.CacheDispatcher$WaitingRequestManager -> com.android.volley.CacheDispatcher$WaitingRequestManager:
    213:214:void <init>(com.android.volley.CacheDispatcher) -> <init>
    197:197:boolean access$000(com.android.volley.CacheDispatcher$WaitingRequestManager,com.android.volley.Request) -> access$000
    277:301:boolean maybeAddToWaitingRequests(com.android.volley.Request) -> maybeAddToWaitingRequests
    245:266:void onNoUsableResponseReceived(com.android.volley.Request) -> onNoUsableResponseReceived
    220:221:void onResponseReceived(com.android.volley.Request,com.android.volley.Response) -> onResponseReceived
com.android.volley.ClientError -> com.android.volley.ClientError:
    28:28:void <init>(com.android.volley.NetworkResponse) -> <init>
com.android.volley.DefaultRetryPolicy -> com.android.volley.DefaultRetryPolicy:
    44:44:void <init>() -> <init>
    54:57:void <init>(int,int,float) -> <init>
    69:69:int getCurrentRetryCount() -> getCurrentRetryCount
    63:63:int getCurrentTimeout() -> getCurrentTimeout
    93:93:boolean hasAttemptRemaining() -> hasAttemptRemaining
    84:87:void retry(com.android.volley.VolleyError) -> retry
com.android.volley.ExecutorDelivery -> com.android.volley.ExecutorDelivery:
    32:34:void <init>(android.os.Handler) -> <init>
    66:68:void postError(com.android.volley.Request,com.android.volley.VolleyError) -> postError
    54:54:void postResponse(com.android.volley.Request,com.android.volley.Response) -> postResponse
    59:61:void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> postResponse
com.android.volley.ExecutorDelivery$1 -> com.android.volley.ExecutorDelivery$1:
    35:35:void <init>(com.android.volley.ExecutorDelivery,android.os.Handler) -> <init>
    38:38:void execute(java.lang.Runnable) -> execute
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable -> com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable:
    78:81:void <init>(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> <init>
    95:117:void run() -> run
com.android.volley.Header -> com.android.volley.Header:
    25:27:void <init>(java.lang.String,java.lang.String) -> <init>
    41:45:boolean equals(java.lang.Object) -> equals
    31:31:java.lang.String getName() -> getName
    35:35:java.lang.String getValue() -> getValue
    50:51:int hashCode() -> hashCode
    57:57:java.lang.String toString() -> toString
com.android.volley.NetworkDispatcher -> com.android.volley.NetworkDispatcher:
    61:65:void <init>(java.util.concurrent.BlockingQueue,com.android.volley.Network,com.android.volley.Cache,com.android.volley.ResponseDelivery) -> <init>
    80:81:void addTrafficStatsTag(com.android.volley.Request) -> addTrafficStatsTag
    171:172:void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError) -> parseAndDeliverNetworkError
    110:111:void processRequest() -> processRequest
    116:160:void processRequest(com.android.volley.Request) -> processRequest
    73:74:void quit() -> quit
    87:97:void run() -> run
com.android.volley.NetworkError -> com.android.volley.NetworkError:
    23:23:void <init>() -> <init>
    27:27:void <init>(java.lang.Throwable) -> <init>
com.android.volley.NetworkResponse -> com.android.volley.NetworkResponse:
    48:48:void <init>(int,byte[],java.util.Map,boolean,long) -> <init>
    66:66:void <init>(int,byte[],boolean,long,java.util.List) -> <init>
    111:111:void <init>(byte[],java.util.Map) -> <init>
    125:134:void <init>(int,byte[],java.util.Map,java.util.List,boolean,long) -> <init>
    183:188:java.util.List toAllHeaderList(java.util.Map) -> toAllHeaderList
    168:174:java.util.Map toHeaderMap(java.util.List) -> toHeaderMap
com.android.volley.NoConnectionError -> com.android.volley.NoConnectionError:
    27:27:void <init>(java.lang.Throwable) -> <init>
com.android.volley.Request -> com.android.volley.Request:
    145:151:void <init>(int,java.lang.String,com.android.volley.Response$ErrorListener) -> <init>
    38:38:com.android.volley.VolleyLog$MarkerLog access$000(com.android.volley.Request) -> access$000
    218:219:void addMarker(java.lang.String) -> addMarker
    38:38:int compareTo(java.lang.Object) -> compareTo
    668:673:int compareTo(com.android.volley.Request) -> compareTo
    613:615:void deliverError(com.android.volley.VolleyError) -> deliverError
    473:491:byte[] encodeParameters(java.util.Map,java.lang.String) -> encodeParameters
    194:199:int findDefaultTrafficStatsTag(java.lang.String) -> findDefaultTrafficStatsTag
    229:250:void finish(java.lang.String) -> finish
    464:466:byte[] getBody() -> getBody
    451:451:java.lang.String getBodyContentType() -> getBodyContentType
    317:317:com.android.volley.Cache$Entry getCacheEntry() -> getCacheEntry
    290:301:java.lang.String getCacheKey() -> getCacheKey
    357:357:java.util.Map getHeaders() -> getHeaders
    156:156:int getMethod() -> getMethod
    413:415:byte[] getPostBody() -> getPostBody
    398:398:java.lang.String getPostBodyContentType() -> getPostBodyContentType
    372:372:java.util.Map getPostParams() -> getPostParams
    392:392:java.lang.String getPostParamsEncoding() -> getPostParamsEncoding
    540:540:com.android.volley.Request$Priority getPriority() -> getPriority
    554:554:com.android.volley.RetryPolicy getRetryPolicy() -> getRetryPolicy
    549:549:int getTimeoutMs() -> getTimeoutMs
    189:189:int getTrafficStatsTag() -> getTrafficStatsTag
    285:285:java.lang.String getUrl() -> getUrl
    569:571:boolean hasHadResponseDelivered() -> hasHadResponseDelivered
    345:347:boolean isCanceled() -> isCanceled
    562:564:void markDelivered() -> markDelivered
    654:656:void notifyListenerResponseNotUsable() -> notifyListenerResponseNotUsable
    640:642:void notifyListenerResponseReceived(com.android.volley.Response) -> notifyListenerResponseReceived
    311:311:com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry) -> setCacheEntry
    627:629:void setNetworkRequestCompleteListener(com.android.volley.Request$NetworkRequestCompleteListener) -> setNetworkRequestCompleteListener
    261:261:com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue) -> setRequestQueue
    212:212:com.android.volley.Request setRetryPolicy(com.android.volley.RetryPolicy) -> setRetryPolicy
    271:271:com.android.volley.Request setSequence(int) -> setSequence
    507:507:boolean shouldCache() -> shouldCache
    524:524:boolean shouldRetryServerErrors() -> shouldRetryServerErrors
    678:684:java.lang.String toString() -> toString
com.android.volley.Request$1 -> com.android.volley.Request$1:
    239:239:void <init>(com.android.volley.Request,java.lang.String,long) -> <init>
    242:243:void run() -> run
com.android.volley.Request$Priority -> com.android.volley.Request$Priority:
    532:531:void <clinit>() -> <clinit>
    531:531:void <init>(java.lang.String,int) -> <init>
    531:531:com.android.volley.Request$Priority valueOf(java.lang.String) -> valueOf
    531:531:com.android.volley.Request$Priority[] values() -> values
com.android.volley.RequestQueue -> com.android.volley.RequestQueue:
    90:94:void <init>(com.android.volley.Cache,com.android.volley.Network,int,com.android.volley.ResponseDelivery) -> <init>
    105:105:void <init>(com.android.volley.Cache,com.android.volley.Network,int) -> <init>
    119:119:void <init>(com.android.volley.Cache,com.android.volley.Network) -> <init>
    208:211:com.android.volley.Request add(com.android.volley.Request) -> add
    233:235:void finish(com.android.volley.Request) -> finish
    152:152:int getSequenceNumber() -> getSequenceNumber
    124:134:void start() -> start
    140:145:void stop() -> stop
com.android.volley.Response -> com.android.volley.Response:
    71:74:void <init>(java.lang.Object,com.android.volley.Cache$Entry) -> <init>
    77:80:void <init>(com.android.volley.VolleyError) -> <init>
    51:51:com.android.volley.Response error(com.android.volley.VolleyError) -> error
    68:68:boolean isSuccess() -> isSuccess
    43:43:com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry) -> success
com.android.volley.ServerError -> com.android.volley.ServerError:
    23:23:void <init>(com.android.volley.NetworkResponse) -> <init>
    27:27:void <init>() -> <init>
com.android.volley.TimeoutError -> com.android.volley.TimeoutError:
    21:21:void <init>() -> <init>
com.android.volley.VolleyError -> com.android.volley.VolleyError:
    25:25:void <init>() -> <init>
    29:29:void <init>(com.android.volley.NetworkResponse) -> <init>
    44:44:void <init>(java.lang.Throwable) -> <init>
com.android.volley.VolleyLog -> com.android.volley.VolleyLog:
    34:40:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    87:104:java.lang.String buildMessage(java.lang.String,java.lang.Object[]) -> buildMessage
    63:63:void d(java.lang.String,java.lang.Object[]) -> d
    67:67:void e(java.lang.String,java.lang.Object[]) -> e
    71:71:void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    57:58:void v(java.lang.String,java.lang.Object[]) -> v
com.android.volley.VolleyLog$MarkerLog -> com.android.volley.VolleyLog$MarkerLog:
    109:109:void <clinit>() -> <clinit>
    108:127:void <init>() -> <init>
    131:132:void add(java.lang.String,long) -> add
    165:167:void finalize() -> finalize
    145:159:void finish(java.lang.String) -> finish
    173:178:long getTotalDuration() -> getTotalDuration
com.android.volley.VolleyLog$MarkerLog$Marker -> com.android.volley.VolleyLog$MarkerLog$Marker:
    119:122:void <init>(java.lang.String,long,long) -> <init>
com.android.volley.toolbox.AdaptedHttpStack -> com.android.volley.toolbox.AdaptedHttpStack:
    39:40:void <init>(com.android.volley.toolbox.HttpStack) -> <init>
    48:52:com.android.volley.toolbox.HttpResponse executeRequest(com.android.volley.Request,java.util.Map) -> executeRequest
com.android.volley.toolbox.BaseHttpStack -> com.android.volley.toolbox.BaseHttpStack:
    36:36:void <init>() -> <init>
    68:87:org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
com.android.volley.toolbox.BasicNetwork -> com.android.volley.toolbox.BasicNetwork:
    51:51:void <clinit>() -> <clinit>
    76:76:void <init>(com.android.volley.toolbox.HttpStack) -> <init>
    86:89:void <init>(com.android.volley.toolbox.HttpStack,com.android.volley.toolbox.ByteArrayPool) -> <init>
    96:96:void <init>(com.android.volley.toolbox.BaseHttpStack) -> <init>
    103:109:void <init>(com.android.volley.toolbox.BaseHttpStack,com.android.volley.toolbox.ByteArrayPool) -> <init>
    241:249:void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError) -> attemptRetryOnException
    339:362:java.util.List combineHeaders(java.util.List,com.android.volley.Cache$Entry) -> combineHeaders
    257:267:java.util.Map getCacheHeaders(com.android.volley.Cache$Entry) -> getCacheHeaders
    282:306:byte[] inputStreamToBytes(java.io.InputStream,int) -> inputStreamToBytes
    221:222:void logSlowRequests(long,com.android.volley.Request,byte[],int) -> logSlowRequests
    114:173:com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> performRequest
com.android.volley.toolbox.ByteArrayPool -> com.android.volley.toolbox.ByteArrayPool:
    68:68:void <clinit>() -> <clinit>
    77:78:void <init>(int) -> <init>
    90:99:byte[] getBuf(int) -> getBuf
    109:110:void returnBuf(byte[]) -> returnBuf
    124:129:void trim() -> trim
com.android.volley.toolbox.ByteArrayPool$1 -> com.android.volley.toolbox.ByteArrayPool$1:
    69:69:void <init>() -> <init>
    69:69:int compare(java.lang.Object,java.lang.Object) -> compare
    72:72:int compare(byte[],byte[]) -> compare
com.android.volley.toolbox.DiskBasedCache -> com.android.volley.toolbox.DiskBasedCache:
    79:81:void <init>(java.io.File,int) -> <init>
    91:91:void <init>(java.io.File) -> <init>
    348:348:java.io.InputStream createInputStream(java.io.File) -> createInputStream
    353:353:java.io.OutputStream createOutputStream(java.io.File) -> createOutputStream
    111:141:com.android.volley.Cache$Entry get(java.lang.String) -> get
    256:256:java.io.File getFileForKey(java.lang.String) -> getFileForKey
    248:250:java.lang.String getFilenameForKey(java.lang.String) -> getFilenameForKey
    151:183:void initialize() -> initialize
    265:297:void pruneIfNeeded(int) -> pruneIfNeeded
    206:227:void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    310:316:void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader) -> putEntry
    537:539:int read(java.io.InputStream) -> read
    609:611:java.util.List readHeaderList(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> readHeaderList
    553:556:int readInt(java.io.InputStream) -> readInt
    573:580:long readLong(java.io.InputStream) -> readLong
    591:593:java.lang.String readString(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> readString
    232:239:void remove(java.lang.String) -> remove
    321:323:void removeEntry(java.lang.String) -> removeEntry
    336:339:byte[] streamToBytes(com.android.volley.toolbox.DiskBasedCache$CountingInputStream,long) -> streamToBytes
    598:604:void writeHeaderList(java.util.List,java.io.OutputStream) -> writeHeaderList
    545:548:void writeInt(java.io.OutputStream,int) -> writeInt
    561:568:void writeLong(java.io.OutputStream,long) -> writeLong
    585:587:void writeString(java.io.OutputStream,java.lang.String) -> writeString
com.android.volley.toolbox.DiskBasedCache$CacheHeader -> com.android.volley.toolbox.DiskBasedCache$CacheHeader:
    390:397:void <init>(java.lang.String,java.lang.String,long,long,long,long,java.util.List) -> <init>
    407:415:void <init>(java.lang.String,com.android.volley.Cache$Entry) -> <init>
    420:425:java.util.List getAllResponseHeaders(com.android.volley.Cache$Entry) -> getAllResponseHeaders
    435:438:com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> readHeader
    453:461:com.android.volley.Cache$Entry toCacheEntry(byte[]) -> toCacheEntry
    468:479:boolean writeHeader(java.io.OutputStream) -> writeHeader
com.android.volley.toolbox.DiskBasedCache$CountingInputStream -> com.android.volley.toolbox.DiskBasedCache$CountingInputStream:
    491:492:void <init>(java.io.InputStream,long) -> <init>
    519:519:long bytesRemaining() -> bytesRemaining
    497:499:int read() -> read
    506:508:int read(byte[],int,int) -> read
com.android.volley.toolbox.HttpClientStack -> com.android.volley.toolbox.HttpClientStack:
    57:58:void <init>(org.apache.http.client.HttpClient) -> <init>
    98:116:org.apache.http.client.methods.HttpUriRequest createHttpRequest(com.android.volley.Request,java.util.Map) -> createHttpRequest
    79:91:org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
    158:161:void setEntityIfNonEmptyBody(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.Request) -> setEntityIfNonEmptyBody
    62:63:void setHeaders(org.apache.http.client.methods.HttpUriRequest,java.util.Map) -> setHeaders
com.android.volley.toolbox.HttpClientStack$HttpPatch -> com.android.volley.toolbox.HttpClientStack$HttpPatch:
    192:193:void <init>(java.lang.String) -> <init>
com.android.volley.toolbox.HttpHeaderParser -> com.android.volley.toolbox.HttpHeaderParser:
    145:145:java.lang.String formatEpochAsRfc1123(long) -> formatEpochAsRfc1123
    149:150:java.text.SimpleDateFormat newRfc1123Formatter() -> newRfc1123Formatter
    49:126:com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse) -> parseCacheHeaders
    163:170:java.lang.String parseCharset(java.util.Map,java.lang.String) -> parseCharset
    184:184:java.lang.String parseCharset(java.util.Map) -> parseCharset
    135:138:long parseDateAsEpoch(java.lang.String) -> parseDateAsEpoch
    202:204:java.util.List toAllHeaderList(java.util.Map) -> toAllHeaderList
    193:196:java.util.Map toHeaderMap(java.util.List) -> toHeaderMap
com.android.volley.toolbox.HttpResponse -> com.android.volley.toolbox.HttpResponse:
    38:38:void <init>(int,java.util.List) -> <init>
    51:55:void <init>(int,java.util.List,int,java.io.InputStream) -> <init>
    78:78:java.io.InputStream getContent() -> getContent
    70:70:int getContentLength() -> getContentLength
    65:65:java.util.List getHeaders() -> getHeaders
    60:60:int getStatusCode() -> getStatusCode
com.android.volley.toolbox.HurlStack -> com.android.volley.toolbox.HurlStack:
    55:55:void <init>() -> <init>
    60:60:void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter) -> <init>
    67:69:void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter,javax.net.ssl.SSLSocketFactory) -> <init>
    38:38:java.io.InputStream access$000(java.net.HttpURLConnection) -> access$000
    286:294:void addBody(java.net.HttpURLConnection,com.android.volley.Request,byte[]) -> addBody
    275:277:void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request) -> addBodyIfExists
    124:130:java.util.List convertHeaders(java.util.Map) -> convertHeaders
    189:194:java.net.HttpURLConnection createConnection(java.net.URL) -> createConnection
    75:117:com.android.volley.toolbox.HttpResponse executeRequest(com.android.volley.Request,java.util.Map) -> executeRequest
    180:182:java.io.InputStream inputStreamFromConnection(java.net.HttpURLConnection) -> inputStreamFromConnection
    207:217:java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request) -> openConnection
    228:236:void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request) -> setConnectionParametersForRequest
com.android.volley.toolbox.HurlStack$UrlConnectionInputStream -> com.android.volley.toolbox.HurlStack$UrlConnectionInputStream:
    160:161:void <init>(java.net.HttpURLConnection) -> <init>
    166:167:void close() -> close
com.android.volley.toolbox.PoolingByteArrayOutputStream -> com.android.volley.toolbox.PoolingByteArrayOutputStream:
    51:53:void <init>(com.android.volley.toolbox.ByteArrayPool,int) -> <init>
    58:60:void close() -> close
    72:78:void expand(int) -> expand
    65:65:void finalize() -> finalize
    83:85:void write(byte[],int,int) -> write
    89:91:void write(int) -> write
com.android.volley.toolbox.StringRequest -> com.android.volley.toolbox.StringRequest:
    51:52:void <init>(int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    29:29:void deliverResponse(java.lang.Object) -> deliverResponse
    78:80:void deliverResponse(java.lang.String) -> deliverResponse
    91:98:com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
com.android.volley.toolbox.Volley -> com.android.volley.toolbox.Volley:
    43:67:com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.BaseHttpStack) -> newRequestQueue
    89:91:com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.Network) -> newRequestQueue
    102:102:com.android.volley.RequestQueue newRequestQueue(android.content.Context) -> newRequestQueue
com.bumptech.glide.GeneratedAppGlideModule -> com.bumptech.glide.GeneratedAppGlideModule:
    15:15:void <init>() -> <init>
com.bumptech.glide.GenericTransitionOptions -> com.bumptech.glide.GenericTransitionOptions:
    15:15:void <init>() -> <init>
com.bumptech.glide.Glide -> com.bumptech.glide.Glide:
    326:514:void <init>(android.content.Context,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.manager.RequestManagerRetriever,com.bumptech.glide.manager.ConnectivityMonitorFactory,int,com.bumptech.glide.request.RequestOptions,java.util.Map,java.util.List,boolean) -> <init>
    179:180:void checkAndInitializeGlide(android.content.Context) -> checkAndInitializeGlide
    612:616:void clearMemory() -> clearMemory
    165:173:com.bumptech.glide.Glide get(android.content.Context) -> get
    286:290:com.bumptech.glide.GeneratedAppGlideModule getAnnotationGeneratedGlideModules() -> getAnnotationGeneratedGlideModules
    554:554:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    549:549:com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool() -> getBitmapPool
    566:566:com.bumptech.glide.manager.ConnectivityMonitorFactory getConnectivityMonitorFactory() -> getConnectivityMonitorFactory
    562:562:android.content.Context getContext() -> getContext
    571:571:com.bumptech.glide.GlideContext getGlideContext() -> getGlideContext
    806:806:com.bumptech.glide.Registry getRegistry() -> getRegistry
    652:652:com.bumptech.glide.manager.RequestManagerRetriever getRequestManagerRetriever() -> getRequestManagerRetriever
    684:689:com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context) -> getRetriever
    223:223:void initializeGlide(android.content.Context) -> initializeGlide
    228:276:void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder) -> initializeGlide
    851:851:void onLowMemory() -> onLowMemory
    841:841:void onTrimMemory(int) -> onTrimMemory
    822:827:void registerRequestManager(com.bumptech.glide.RequestManager) -> registerRequestManager
    810:816:boolean removeFromManagers(com.bumptech.glide.request.target.Target) -> removeFromManagers
    309:309:void throwIncorrectGlideModule(java.lang.Exception) -> throwIncorrectGlideModule
    626:630:void trimMemory(int) -> trimMemory
    831:836:void unregisterRequestManager(com.bumptech.glide.RequestManager) -> unregisterRequestManager
    716:716:com.bumptech.glide.RequestManager with(android.content.Context) -> with
    801:801:com.bumptech.glide.RequestManager with(android.view.View) -> with
com.bumptech.glide.GlideBuilder -> com.bumptech.glide.GlideBuilder:
    39:51:void <init>() -> <init>
    438:509:com.bumptech.glide.Glide build(android.content.Context) -> build
    427:427:void setRequestManagerFactory(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory) -> setRequestManagerFactory
com.bumptech.glide.GlideContext -> com.bumptech.glide.GlideContext:
    24:24:void <clinit>() -> <clinit>
    47:56:void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.Registry,com.bumptech.glide.request.target.ImageViewTargetFactory,com.bumptech.glide.request.RequestOptions,java.util.Map,java.util.List,com.bumptech.glide.load.engine.Engine,boolean,int) -> <init>
    87:87:com.bumptech.glide.request.target.ViewTarget buildImageViewTarget(android.widget.ImageView,java.lang.Class) -> buildImageViewTarget
    106:106:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    60:60:java.util.List getDefaultRequestListeners() -> getDefaultRequestListeners
    64:64:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions() -> getDefaultRequestOptions
    70:79:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class) -> getDefaultTransitionOptions
    92:92:com.bumptech.glide.load.engine.Engine getEngine() -> getEngine
    101:101:int getLogLevel() -> getLogLevel
    97:97:com.bumptech.glide.Registry getRegistry() -> getRegistry
    116:116:boolean isLoggingRequestOriginsEnabled() -> isLoggingRequestOriginsEnabled
com.bumptech.glide.MemoryCategory -> com.bumptech.glide.MemoryCategory:
    10:6:void <clinit>() -> <clinit>
    23:23:void <init>(java.lang.String,int,float) -> <init>
    6:6:com.bumptech.glide.MemoryCategory valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.MemoryCategory[] values() -> values
com.bumptech.glide.Priority -> com.bumptech.glide.Priority:
    9:8:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:com.bumptech.glide.Priority valueOf(java.lang.String) -> valueOf
    8:8:com.bumptech.glide.Priority[] values() -> values
com.bumptech.glide.Registry -> com.bumptech.glide.Registry:
    59:67:void <init>() -> <init>
    109:109:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.Encoder) -> append
    155:155:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> append
    186:186:com.bumptech.glide.Registry append(java.lang.String,java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> append
    319:319:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> append
    406:406:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    502:520:java.util.List getDecodePaths(java.lang.Class,java.lang.Class,java.lang.Class) -> getDecodePaths
    595:597:java.util.List getImageHeaderParsers() -> getImageHeaderParsers
    477:493:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class,java.lang.Class,java.lang.Class) -> getLoadPath
    586:588:java.util.List getModelLoaders(java.lang.Object) -> getModelLoaders
    531:548:java.util.List getRegisteredResourceClasses(java.lang.Class,java.lang.Class,java.lang.Class) -> getRegisteredResourceClasses
    562:566:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource) -> getResultEncoder
    581:581:com.bumptech.glide.load.data.DataRewinder getRewinder(java.lang.Object) -> getRewinder
    572:576:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object) -> getSourceEncoder
    556:556:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource) -> isResourceEncoderAvailable
    348:348:com.bumptech.glide.Registry register(com.bumptech.glide.load.data.DataRewinder$Factory) -> register
    366:366:com.bumptech.glide.Registry register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> register
    376:376:com.bumptech.glide.Registry register(com.bumptech.glide.load.ImageHeaderParser) -> register
    269:273:com.bumptech.glide.Registry setResourceDecoderBucketPriorityList(java.util.List) -> setResourceDecoderBucketPriorityList
com.bumptech.glide.Registry$MissingComponentException -> com.bumptech.glide.Registry$MissingComponentException:
    651:651:void <init>(java.lang.String) -> <init>
com.bumptech.glide.Registry$NoImageHeaderParserException -> com.bumptech.glide.Registry$NoImageHeaderParserException:
    662:662:void <init>() -> <init>
com.bumptech.glide.Registry$NoModelLoaderAvailableException -> com.bumptech.glide.Registry$NoModelLoaderAvailableException:
    610:610:void <init>(java.lang.Object) -> <init>
    615:615:void <init>(java.lang.Class,java.lang.Class) -> <init>
com.bumptech.glide.Registry$NoResultEncoderAvailableException -> com.bumptech.glide.Registry$NoResultEncoderAvailableException:
    626:626:void <init>(java.lang.Class) -> <init>
com.bumptech.glide.Registry$NoSourceEncoderAvailableException -> com.bumptech.glide.Registry$NoSourceEncoderAvailableException:
    640:640:void <init>(java.lang.Class) -> <init>
com.bumptech.glide.RequestBuilder -> com.bumptech.glide.RequestBuilder:
    56:58:void <clinit>() -> <clinit>
    88:97:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.RequestManager,java.lang.Class,android.content.Context) -> <init>
    190:193:com.bumptech.glide.RequestBuilder addListener(com.bumptech.glide.request.RequestListener) -> addListener
    51:51:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    136:137:com.bumptech.glide.RequestBuilder apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    876:876:com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildRequest
    901:941:com.bumptech.glide.request.Request buildRequestRecursive(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildRequestRecursive
    955:1043:com.bumptech.glide.request.Request buildThumbnailRequestRecursive(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildThumbnailRequestRecursive
    51:51:com.bumptech.glide.request.BaseRequestOptions clone() -> clone
    51:51:java.lang.Object clone() -> clone
    599:600:com.bumptech.glide.RequestBuilder clone() -> clone
    858:860:com.bumptech.glide.Priority getThumbnailPriority(com.bumptech.glide.Priority) -> getThumbnailPriority
    116:117:void initRequestListeners(java.util.List) -> initRequestListeners
    613:613:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target) -> into
    622:622:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.concurrent.Executor) -> into
    630:632:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> into
    684:716:com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView) -> into
    668:668:boolean isSkipMemoryCacheWithCompletePreviousRequest(com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.Request) -> isSkipMemoryCacheWithCompletePreviousRequest
    368:368:com.bumptech.glide.RequestBuilder load(java.lang.Object) -> load
    454:454:com.bumptech.glide.RequestBuilder load(java.lang.String) -> load
    373:374:com.bumptech.glide.RequestBuilder loadGeneric(java.lang.Object) -> loadGeneric
    1066:1066:com.bumptech.glide.request.Request obtainRequest(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,java.util.concurrent.Executor) -> obtainRequest
com.bumptech.glide.RequestBuilder$1 -> com.bumptech.glide.RequestBuilder$1:
    858:694:void <clinit>() -> <clinit>
com.bumptech.glide.RequestManager -> com.bumptech.glide.RequestManager:
    59:63:void <clinit>() -> <clinit>
    94:94:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context) -> <init>
    111:138:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory,android.content.Context) -> <init>
    564:564:com.bumptech.glide.RequestBuilder as(java.lang.Class) -> as
    358:358:com.bumptech.glide.RequestBuilder asBitmap() -> asBitmap
    393:393:com.bumptech.glide.RequestBuilder asDrawable() -> asDrawable
    591:595:void clear(com.bumptech.glide.request.target.Target) -> clear
    645:645:java.util.List getDefaultRequestListeners() -> getDefaultRequestListeners
    649:649:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions() -> getDefaultRequestOptions
    654:654:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class) -> getDefaultTransitionOptions
    429:429:com.bumptech.glide.RequestBuilder load(java.lang.String) -> load
    337:347:void onDestroy() -> onDestroy
    317:319:void onStart() -> onStart
    327:329:void onStop() -> onStop
    239:240:void pauseRequests() -> pauseRequests
    292:293:void resumeRequests() -> resumeRequests
    142:143:void setRequestOptions(com.bumptech.glide.request.RequestOptions) -> setRequestOptions
    659:659:java.lang.String toString() -> toString
    640:642:void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request) -> track
    624:635:boolean untrack(com.bumptech.glide.request.target.Target) -> untrack
    598:619:void untrackOrDelegate(com.bumptech.glide.request.target.Target) -> untrackOrDelegate
com.bumptech.glide.RequestManager$1 -> com.bumptech.glide.RequestManager$1:
    75:75:void <init>(com.bumptech.glide.RequestManager) -> <init>
    78:78:void run() -> run
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener -> com.bumptech.glide.RequestManager$RequestManagerConnectivityListener:
    667:668:void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.manager.RequestTracker) -> <init>
    674:676:void onConnectivityChanged(boolean) -> onConnectivityChanged
com.bumptech.glide.TransitionOptions -> com.bumptech.glide.TransitionOptions:
    17:19:void <init>() -> <init>
    17:17:java.lang.Object clone() -> clone
    85:87:com.bumptech.glide.TransitionOptions clone() -> clone
    92:92:com.bumptech.glide.request.transition.TransitionFactory getTransitionFactory() -> getTransitionFactory
com.bumptech.glide.disklrucache.DiskLruCache -> com.bumptech.glide.disklrucache.DiskLruCache:
    178:185:void <init>(java.io.File,int,int,long) -> <init>
    86:86:java.io.Writer access$100(com.bumptech.glide.disklrucache.DiskLruCache) -> access$100
    86:86:int access$1900(com.bumptech.glide.disklrucache.DiskLruCache) -> access$1900
    86:86:void access$200(com.bumptech.glide.disklrucache.DiskLruCache) -> access$200
    86:86:java.io.File access$2000(com.bumptech.glide.disklrucache.DiskLruCache) -> access$2000
    86:86:void access$2100(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> access$2100
    86:86:boolean access$300(com.bumptech.glide.disklrucache.DiskLruCache) -> access$300
    86:86:void access$400(com.bumptech.glide.disklrucache.DiskLruCache) -> access$400
    86:86:int access$502(com.bumptech.glide.disklrucache.DiskLruCache,int) -> access$502
    619:620:void checkNotClosed() -> checkNotClosed
    633:644:void close() -> close
    504:506:void completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> completeEdit
    659:660:void delete() -> delete
    389:390:void deleteIfExists(java.io.File) -> deleteIfExists
    443:443:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String) -> edit
    447:469:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    409:435:com.bumptech.glide.disklrucache.DiskLruCache$Value get(java.lang.String) -> get
    572:573:boolean journalRebuildRequired() -> journalRebuildRequired
    207:200:com.bumptech.glide.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> open
    327:340:void processJournal() -> processJournal
    244:280:void readJournal() -> readJournal
    284:286:void readJournalLine(java.lang.String) -> readJournalLine
    350:376:void rebuildJournal() -> rebuildJournal
    583:586:boolean remove(java.lang.String) -> remove
    396:399:void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    647:649:void trimToSize() -> trimToSize
com.bumptech.glide.disklrucache.DiskLruCache$1 -> com.bumptech.glide.disklrucache.DiskLruCache$1:
    162:162:void <init>(com.bumptech.glide.disklrucache.DiskLruCache) -> <init>
    162:162:java.lang.Object call() -> call
    164:173:java.lang.Void call() -> call
com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory -> com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory:
    882:882:void <init>() -> <init>
    882:882:void <init>(com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    885:887:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.disklrucache.DiskLruCache$Editor -> com.bumptech.glide.disklrucache.DiskLruCache$Editor:
    707:707:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    712:714:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> <init>
    792:792:void abort() -> abort
    796:798:void abortUnlessCommitted() -> abortUnlessCommitted
    707:707:com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1500
    707:707:boolean[] access$1600(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1600
    783:784:void commit() -> commit
    747:759:java.io.File getFile(int) -> getFile
com.bumptech.glide.disklrucache.DiskLruCache$Entry -> com.bumptech.glide.disklrucache.DiskLruCache$Entry:
    805:805:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    824:838:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String) -> <init>
    805:805:long[] access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1100
    805:805:java.lang.String access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1200
    805:805:long access$1300(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1300
    805:805:long access$1302(com.bumptech.glide.disklrucache.DiskLruCache$Entry,long) -> access$1302
    805:805:boolean access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$700
    805:805:boolean access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry,boolean) -> access$702
    805:805:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$800
    805:805:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$802(com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$802
    805:805:void access$900(com.bumptech.glide.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> access$900
    870:870:java.io.File getCleanFile(int) -> getCleanFile
    874:874:java.io.File getDirtyFile(int) -> getDirtyFile
    843:847:java.lang.String getLengths() -> getLengths
    866:866:java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    852:853:void setLengths(java.lang.String[]) -> setLengths
com.bumptech.glide.disklrucache.DiskLruCache$Value -> com.bumptech.glide.disklrucache.DiskLruCache$Value:
    668:668:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[],com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    674:677:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[]) -> <init>
    691:691:java.io.File getFile(int) -> getFile
com.bumptech.glide.disklrucache.StrictLineReader -> com.bumptech.glide.disklrucache.StrictLineReader:
    72:72:void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    86:88:void <init>(java.io.InputStream,int,java.nio.charset.Charset) -> <init>
    45:45:java.nio.charset.Charset access$000(com.bumptech.glide.disklrucache.StrictLineReader) -> access$000
    109:114:void close() -> close
    188:190:void fillBuf() -> fillBuf
    180:180:boolean hasUnterminatedLine() -> hasUnterminatedLine
    126:176:java.lang.String readLine() -> readLine
com.bumptech.glide.disklrucache.StrictLineReader$1 -> com.bumptech.glide.disklrucache.StrictLineReader$1:
    148:148:void <init>(com.bumptech.glide.disklrucache.StrictLineReader,int) -> <init>
    151:155:java.lang.String toString() -> toString
com.bumptech.glide.disklrucache.Util -> com.bumptech.glide.disklrucache.Util:
    28:29:void <clinit>() -> <clinit>
    70:72:void closeQuietly(java.io.Closeable) -> closeQuietly
    53:55:void deleteContents(java.io.File) -> deleteContents
com.bumptech.glide.gifdecoder.GifFrame -> com.bumptech.glide.gifdecoder.GifFrame:
    13:13:void <init>() -> <init>
com.bumptech.glide.gifdecoder.GifHeader -> com.bumptech.glide.gifdecoder.GifHeader:
    15:29:void <init>() -> <init>
    54:54:int getHeight() -> getHeight
    62:62:int getNumFrames() -> getNumFrames
    70:70:int getStatus() -> getStatus
    58:58:int getWidth() -> getWidth
com.bumptech.glide.gifdecoder.GifHeaderParser -> com.bumptech.glide.gifdecoder.GifHeaderParser:
    21:125:void <init>() -> <init>
    146:147:void clear() -> clear
    513:513:boolean err() -> err
    159:160:com.bumptech.glide.gifdecoder.GifHeader parseHeader() -> parseHeader
    497:499:int read() -> read
    303:343:void readBitmap() -> readBitmap
    470:486:void readBlock() -> readBlock
    418:438:int[] readColorTable(int) -> readColorTable
    193:193:void readContents() -> readContents
    202:240:void readContents(int) -> readContents
    264:295:void readGraphicControlExt() -> readGraphicControlExt
    366:377:void readHeader() -> readHeader
    386:405:void readLSD() -> readLSD
    351:358:void readNetscapeExt() -> readNetscapeExt
    509:509:int readShort() -> readShort
    151:154:void reset() -> reset
    128:131:com.bumptech.glide.gifdecoder.GifHeaderParser setData(java.nio.ByteBuffer) -> setData
    460:462:void skip() -> skip
    449:451:void skipImageData() -> skipImageData
com.bumptech.glide.gifdecoder.StandardGifDecoder -> com.bumptech.glide.gifdecoder.StandardGifDecoder:
    132:133:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> <init>
    137:139:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider) -> <init>
    165:165:void advance() -> advance
    653:681:int averageColorsNear(int,int,int) -> averageColorsNear
    321:335:void clear() -> clear
    547:636:void copyCopyIntoScratchRobust(com.bumptech.glide.gifdecoder.GifFrame) -> copyCopyIntoScratchRobust
    501:543:void copyIntoScratchFast(com.bumptech.glide.gifdecoder.GifFrame) -> copyIntoScratchFast
    694:817:void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame) -> decodeBitmapData
    228:228:int getByteSize() -> getByteSize
    193:193:int getCurrentFrameIndex() -> getCurrentFrameIndex
    155:155:java.nio.ByteBuffer getData() -> getData
    171:172:int getDelay(int) -> getDelay
    188:188:int getFrameCount() -> getFrameCount
    842:845:android.graphics.Bitmap getNextBitmap() -> getNextBitmap
    179:183:int getNextDelay() -> getNextDelay
    234:247:android.graphics.Bitmap getNextFrame() -> getNextFrame
    833:837:int readBlock() -> readBlock
    824:824:int readByte() -> readByte
    198:198:void resetFrameIndex() -> resetFrameIndex
    356:353:void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> setData
    404:409:void setDefaultBitmapConfig(android.graphics.Bitmap$Config) -> setDefaultBitmapConfig
    418:496:android.graphics.Bitmap setPixels(com.bumptech.glide.gifdecoder.GifFrame,com.bumptech.glide.gifdecoder.GifFrame) -> setPixels
com.bumptech.glide.load.DataSource -> com.bumptech.glide.load.DataSource:
    11:6:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:com.bumptech.glide.load.DataSource valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.load.DataSource[] values() -> values
com.bumptech.glide.load.DecodeFormat -> com.bumptech.glide.load.DecodeFormat:
    28:45:void <clinit>() -> <clinit>
    12:12:void <init>(java.lang.String,int) -> <init>
    12:12:com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String) -> valueOf
    12:12:com.bumptech.glide.load.DecodeFormat[] values() -> values
com.bumptech.glide.load.EncodeStrategy -> com.bumptech.glide.load.EncodeStrategy:
    11:6:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.load.EncodeStrategy[] values() -> values
com.bumptech.glide.load.HttpException -> com.bumptech.glide.load.HttpException:
    22:22:void <init>(int) -> <init>
    26:26:void <init>(java.lang.String) -> <init>
    30:30:void <init>(java.lang.String,int) -> <init>
    34:34:void <init>(java.lang.String,int,java.lang.Throwable) -> <init>
com.bumptech.glide.load.ImageHeaderParser$ImageType -> com.bumptech.glide.load.ImageHeaderParser$ImageType:
    25:24:void <clinit>() -> <clinit>
    41:42:void <init>(java.lang.String,int,boolean) -> <init>
    46:46:boolean hasAlpha() -> hasAlpha
    24:24:com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String) -> valueOf
    24:24:com.bumptech.glide.load.ImageHeaderParser$ImageType[] values() -> values
com.bumptech.glide.load.ImageHeaderParserUtils -> com.bumptech.glide.load.ImageHeaderParserUtils:
    82:96:int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    28:49:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getType
    58:70:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.nio.ByteBuffer) -> getType
com.bumptech.glide.load.Key -> com.bumptech.glide.load.Key:
    17:17:void <clinit>() -> <clinit>
com.bumptech.glide.load.Option -> com.bumptech.glide.load.Option:
    28:28:void <clinit>() -> <clinit>
    93:96:void <init>(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater) -> <init>
    89:89:com.bumptech.glide.load.Option disk(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater) -> disk
    143:143:com.bumptech.glide.load.Option$CacheKeyUpdater emptyUpdater() -> emptyUpdater
    128:130:boolean equals(java.lang.Object) -> equals
    106:106:java.lang.Object getDefaultValue() -> getDefaultValue
    120:123:byte[] getKeyBytes() -> getKeyBytes
    137:137:int hashCode() -> hashCode
    50:50:com.bumptech.glide.load.Option memory(java.lang.String) -> memory
    62:62:com.bumptech.glide.load.Option memory(java.lang.String,java.lang.Object) -> memory
    148:148:java.lang.String toString() -> toString
    115:115:void update(java.lang.Object,java.security.MessageDigest) -> update
com.bumptech.glide.load.Option$1 -> com.bumptech.glide.load.Option$1:
    28:28:void <init>() -> <init>
com.bumptech.glide.load.Options -> com.bumptech.glide.load.Options:
    13:14:void <init>() -> <init>
    34:36:boolean equals(java.lang.Object) -> equals
    29:29:java.lang.Object get(com.bumptech.glide.load.Option) -> get
    43:43:int hashCode() -> hashCode
    17:17:void putAll(com.bumptech.glide.load.Options) -> putAll
    22:22:com.bumptech.glide.load.Options set(com.bumptech.glide.load.Option,java.lang.Object) -> set
    57:57:java.lang.String toString() -> toString
    48:51:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
    65:65:void updateDiskCacheKey(com.bumptech.glide.load.Option,java.lang.Object,java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher:
    16:16:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    13:13:void close(java.lang.Object) -> close
    31:31:void close(android.content.res.AssetFileDescriptor) -> close
    37:37:java.lang.Class getDataClass() -> getDataClass
    13:13:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    22:24:android.content.res.AssetFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.data.AssetPathFetcher -> com.bumptech.glide.load.data.AssetPathFetcher:
    24:26:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    45:49:void cleanup() -> cleanup
    63:63:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    32:37:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.data.BufferedOutputStream -> com.bumptech.glide.load.data.BufferedOutputStream:
    21:21:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    25:28:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int) -> <init>
    89:91:void close() -> close
    69:70:void flush() -> flush
    74:76:void flushBuffer() -> flushBuffer
    81:82:void maybeFlushBuffer() -> maybeFlushBuffer
    97:99:void release() -> release
    33:34:void write(int) -> write
    39:39:void write(byte[]) -> write
    50:63:void write(byte[],int,int) -> write
com.bumptech.glide.load.data.DataRewinderRegistry -> com.bumptech.glide.load.data.DataRewinderRegistry:
    14:14:void <clinit>() -> <clinit>
    12:13:void <init>() -> <init>
    36:50:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    30:31:void register(com.bumptech.glide.load.data.DataRewinder$Factory) -> register
com.bumptech.glide.load.data.DataRewinderRegistry$1 -> com.bumptech.glide.load.data.DataRewinderRegistry$1:
    15:15:void <init>() -> <init>
    19:19:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    25:25:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder -> com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder:
    56:57:void <init>(java.lang.Object) -> <init>
    63:63:java.lang.Object rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.ExifOrientationStream -> com.bumptech.glide.load.data.ExifOrientationStream:
    18:62:void <clinit>() -> <clinit>
    67:69:void <init>(java.io.InputStream,int) -> <init>
    83:83:void mark(int) -> mark
    89:97:int read() -> read
    105:117:int read(byte[],int,int) -> read
    136:136:void reset() -> reset
    124:127:long skip(long) -> skip
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher -> com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher:
    13:13:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    11:11:void close(java.lang.Object) -> close
    24:24:void close(android.os.ParcelFileDescriptor) -> close
    30:30:java.lang.Class getDataClass() -> getDataClass
    11:11:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    19:19:android.os.ParcelFileDescriptor loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher:
    16:16:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    14:14:void close(java.lang.Object) -> close
    31:31:void close(android.os.ParcelFileDescriptor) -> close
    37:37:java.lang.Class getDataClass() -> getDataClass
    14:14:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    22:24:android.os.ParcelFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.data.HttpUrlFetcher -> com.bumptech.glide.load.data.HttpUrlFetcher:
    28:28:void <clinit>() -> <clinit>
    44:44:void <init>(com.bumptech.glide.load.model.GlideUrl,int) -> <init>
    48:51:void <init>(com.bumptech.glide.load.model.GlideUrl,int,com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory) -> <init>
    173:173:void cancel() -> cancel
    156:166:void cleanup() -> cleanup
    179:179:java.lang.Class getDataClass() -> getDataClass
    185:185:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    142:151:java.io.InputStream getStreamForSuccessfulRequest(java.net.HttpURLConnection) -> getStreamForSuccessfulRequest
    132:132:boolean isHttpOk(int) -> isHttpOk
    137:137:boolean isHttpRedirect(int) -> isHttpRedirect
    57:68:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    81:76:java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map) -> loadDataWithRedirects
com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory -> com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory:
    195:195:void <init>() -> <init>
    199:199:java.net.HttpURLConnection build(java.net.URL) -> build
com.bumptech.glide.load.data.InputStreamRewinder -> com.bumptech.glide.load.data.InputStreamRewinder:
    21:23:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    35:35:void cleanup() -> cleanup
    14:14:java.lang.Object rewindAndGet() -> rewindAndGet
    29:30:java.io.InputStream rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.InputStreamRewinder$Factory -> com.bumptech.glide.load.data.InputStreamRewinder$Factory:
    45:46:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    42:42:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    52:52:com.bumptech.glide.load.data.DataRewinder build(java.io.InputStream) -> build
    58:58:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.LocalUriFetcher -> com.bumptech.glide.load.data.LocalUriFetcher:
    35:37:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    57:59:void cleanup() -> cleanup
    74:74:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    44:49:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.data.StreamAssetPathFetcher -> com.bumptech.glide.load.data.StreamAssetPathFetcher:
    13:13:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    11:11:void close(java.lang.Object) -> close
    23:23:void close(java.io.InputStream) -> close
    29:29:java.lang.Class getDataClass() -> getDataClass
    11:11:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    18:18:java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.StreamLocalUriFetcher -> com.bumptech.glide.load.data.StreamLocalUriFetcher:
    44:50:void <clinit>() -> <clinit>
    54:54:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    15:15:void close(java.lang.Object) -> close
    96:96:void close(java.io.InputStream) -> close
    102:102:java.lang.Class getDataClass() -> getDataClass
    15:15:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    60:62:java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    70:78:java.io.InputStream loadResourceFromUri(android.net.Uri,android.content.ContentResolver) -> loadResourceFromUri
    90:90:java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri) -> openContactPhotoInputStream
com.bumptech.glide.load.data.mediastore.FileService -> com.bumptech.glide.load.data.mediastore.FileService:
    5:5:void <init>() -> <init>
    7:7:boolean exists(java.io.File) -> exists
    15:15:java.io.File get(java.lang.String) -> get
    11:11:long length(java.io.File) -> length
com.bumptech.glide.load.data.mediastore.MediaStoreUtil -> com.bumptech.glide.load.data.mediastore.MediaStoreUtil:
    33:33:boolean isMediaStoreImageUri(android.net.Uri) -> isMediaStoreImageUri
    20:21:boolean isMediaStoreUri(android.net.Uri) -> isMediaStoreUri
    29:29:boolean isMediaStoreVideoUri(android.net.Uri) -> isMediaStoreVideoUri
    25:25:boolean isVideoUri(android.net.Uri) -> isVideoUri
com.bumptech.glide.load.data.mediastore.ThumbFetcher -> com.bumptech.glide.load.data.mediastore.ThumbFetcher:
    49:51:void <init>(android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener) -> <init>
    41:45:com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery) -> build
    33:33:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri) -> buildImageFetcher
    37:37:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri) -> buildVideoFetcher
    86:88:void cleanup() -> cleanup
    103:103:java.lang.Class getDataClass() -> getDataClass
    109:109:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    58:63:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    71:79:java.io.InputStream openThumbInputStream() -> openThumbInputStream
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery -> com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery:
    148:148:void <clinit>() -> <clinit>
    144:145:void <init>(android.content.ContentResolver) -> <init>
    157:158:android.database.Cursor query(android.net.Uri) -> query
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery -> com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery:
    120:120:void <clinit>() -> <clinit>
    116:117:void <init>(android.content.ContentResolver) -> <init>
    129:130:android.database.Cursor query(android.net.Uri) -> query
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener -> com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener:
    21:21:void <clinit>() -> <clinit>
    32:32:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver) -> <init>
    40:45:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.FileService,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver) -> <init>
    51:64:int getOrientation(android.net.Uri) -> getOrientation
    93:102:java.lang.String getPath(android.net.Uri) -> getPath
    108:108:boolean isValid(java.io.File) -> isValid
    71:87:java.io.InputStream open(android.net.Uri) -> open
com.bumptech.glide.load.engine.ActiveResources -> com.bumptech.glide.load.engine.ActiveResources:
    34:34:void <init>(boolean) -> <init>
    55:59:void <init>(boolean,java.util.concurrent.Executor) -> <init>
    77:85:void activate(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> activate
    130:142:void cleanReferenceQueue() -> cleanReferenceQueue
    113:125:void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference) -> cleanupActiveReference
    88:92:void deactivate(com.bumptech.glide.load.Key) -> deactivate
    96:105:com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key) -> get
    69:73:void setListener(com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> setListener
com.bumptech.glide.load.engine.ActiveResources$1 -> com.bumptech.glide.load.engine.ActiveResources$1:
    37:37:void <init>() -> <init>
    40:40:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.ActiveResources$1$1 -> com.bumptech.glide.load.engine.ActiveResources$1$1:
    41:41:void <init>(com.bumptech.glide.load.engine.ActiveResources$1,java.lang.Runnable) -> <init>
    44:45:void run() -> run
com.bumptech.glide.load.engine.ActiveResources$2 -> com.bumptech.glide.load.engine.ActiveResources$2:
    60:60:void <init>(com.bumptech.glide.load.engine.ActiveResources) -> <init>
    63:63:void run() -> run
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference -> com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference:
    180:185:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource,java.lang.ref.ReferenceQueue,boolean) -> <init>
    189:190:void reset() -> reset
com.bumptech.glide.load.engine.CallbackException -> com.bumptech.glide.load.engine.CallbackException:
    13:13:void <init>(java.lang.Throwable) -> <init>
com.bumptech.glide.load.engine.DataCacheGenerator -> com.bumptech.glide.load.engine.DataCacheGenerator:
    34:34:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    39:42:void <init>(java.util.List,com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    87:89:void cancel() -> cancel
    82:82:boolean hasNextModelLoader() -> hasNextModelLoader
    95:95:void onDataReady(java.lang.Object) -> onDataReady
    100:100:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    47:62:boolean startNext() -> startNext
com.bumptech.glide.load.engine.DataCacheKey -> com.bumptech.glide.load.engine.DataCacheKey:
    15:17:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.Key) -> <init>
    26:28:boolean equals(java.lang.Object) -> equals
    35:36:int hashCode() -> hashCode
    42:42:java.lang.String toString() -> toString
    50:51:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.DataCacheWriter -> com.bumptech.glide.load.engine.DataCacheWriter:
    23:26:void <init>(com.bumptech.glide.load.Encoder,java.lang.Object,com.bumptech.glide.load.Options) -> <init>
    31:31:boolean write(java.io.File) -> write
com.bumptech.glide.load.engine.DecodeHelper -> com.bumptech.glide.load.engine.DecodeHelper:
    23:26:void <init>() -> <init>
    79:92:void clear() -> clear
    124:124:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    220:237:java.util.List getCacheKeys() -> getCacheKeys
    96:96:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache() -> getDiskCache
    100:100:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy() -> getDiskCacheStrategy
    120:120:int getHeight() -> getHeight
    202:216:java.util.List getLoadData() -> getLoadData
    145:145:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class) -> getLoadPath
    132:132:java.lang.Class getModelClass() -> getModelClass
    186:186:java.util.List getModelLoaders(java.io.File) -> getModelLoaders
    108:108:com.bumptech.glide.load.Options getOptions() -> getOptions
    104:104:com.bumptech.glide.Priority getPriority() -> getPriority
    136:137:java.util.List getRegisteredResourceClasses() -> getRegisteredResourceClasses
    181:181:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource) -> getResultEncoder
    112:112:com.bumptech.glide.load.Key getSignature() -> getSignature
    241:241:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object) -> getSourceEncoder
    128:128:java.lang.Class getTranscodeClass() -> getTranscodeClass
    154:170:com.bumptech.glide.load.Transformation getTransformation(java.lang.Class) -> getTransformation
    116:116:int getWidth() -> getWidth
    141:141:boolean hasLoadPath(java.lang.Class) -> hasLoadPath
    61:74:void init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.Options,java.util.Map,boolean,boolean,com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider) -> init
    177:177:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource) -> isResourceEncoderAvailable
    149:149:boolean isScaleOnlyOrNoTransform() -> isScaleOnlyOrNoTransform
    190:194:boolean isSourceKey(com.bumptech.glide.load.Key) -> isSourceKey
com.bumptech.glide.load.engine.DecodeJob -> com.bumptech.glide.load.engine.DecodeJob:
    79:81:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,androidx.core.util.Pools$Pool) -> <init>
    212:215:void cancel() -> cancel
    38:38:int compareTo(java.lang.Object) -> compareTo
    200:202:int compareTo(com.bumptech.glide.load.engine.DecodeJob) -> compareTo
    472:472:com.bumptech.glide.load.engine.Resource decodeFromData(com.bumptech.glide.load.data.DataFetcher,java.lang.Object,com.bumptech.glide.load.DataSource) -> decodeFromData
    479:480:com.bumptech.glide.load.engine.Resource decodeFromFetcher(java.lang.Object,com.bumptech.glide.load.DataSource) -> decodeFromFetcher
    410:426:void decodeFromRetrievedData() -> decodeFromRetrievedData
    290:292:com.bumptech.glide.load.engine.DataFetcherGenerator getNextGenerator() -> getNextGenerator
    349:355:com.bumptech.glide.load.engine.DecodeJob$Stage getNextStage(com.bumptech.glide.load.engine.DecodeJob$Stage) -> getNextStage
    485:504:com.bumptech.glide.load.Options getOptionsWithHardwareConfig(com.bumptech.glide.load.DataSource) -> getOptionsWithHardwareConfig
    208:208:int getPriority() -> getPriority
    535:535:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    102:129:com.bumptech.glide.load.engine.DecodeJob init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback,int) -> init
    523:523:void logWithTimeAndKey(java.lang.String,long) -> logWithTimeAndKey
    527:527:void logWithTimeAndKey(java.lang.String,long,java.lang.String) -> logWithTimeAndKey
    335:336:void notifyComplete(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource) -> notifyComplete
    431:451:void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource) -> notifyEncodeAndRelease
    328:331:void notifyFailed() -> notifyFailed
    397:405:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource) -> onDataFetcherFailed
    376:389:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key) -> onDataFetcherReady
    159:160:void onEncodeComplete() -> onEncodeComplete
    168:169:void onLoadFailed() -> onLoadFailed
    543:570:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource) -> onResourceDecoded
    149:150:void release(boolean) -> release
    174:195:void releaseInternal() -> releaseInternal
    369:370:void reschedule() -> reschedule
    226:267:void run() -> run
    305:320:void runGenerators() -> runGenerators
    511:518:com.bumptech.glide.load.engine.Resource runLoadPath(java.lang.Object,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.LoadPath) -> runLoadPath
    272:276:void runWrapped() -> runWrapped
    340:345:void setNotifiedOrThrow() -> setNotifiedOrThrow
    138:139:boolean willDecodeFromCache() -> willDecodeFromCache
com.bumptech.glide.load.engine.DecodeJob$1 -> com.bumptech.glide.load.engine.DecodeJob$1:
    573:272:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback -> com.bumptech.glide.load.engine.DecodeJob$DecodeCallback:
    605:606:void <init>(com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.load.DataSource) -> <init>
    612:612:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource) -> onResourceDecoded
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager -> com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager:
    663:663:void <init>() -> <init>
    689:691:void clear() -> clear
    674:680:void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options) -> encode
    685:685:boolean hasResourceToEncode() -> hasResourceToEncode
    668:670:void init(com.bumptech.glide.load.Key,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.engine.LockedResource) -> init
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager -> com.bumptech.glide.load.engine.DecodeJob$ReleaseManager:
    625:625:void <init>() -> <init>
    649:649:boolean isComplete(boolean) -> isComplete
    633:634:boolean onEncodeComplete() -> onEncodeComplete
    638:639:boolean onFailed() -> onFailed
    628:629:boolean release(boolean) -> release
    643:646:void reset() -> reset
com.bumptech.glide.load.engine.DecodeJob$RunReason -> com.bumptech.glide.load.engine.DecodeJob$RunReason:
    713:711:void <clinit>() -> <clinit>
    711:711:void <init>(java.lang.String,int) -> <init>
    711:711:com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String) -> valueOf
    711:711:com.bumptech.glide.load.engine.DecodeJob$RunReason[] values() -> values
com.bumptech.glide.load.engine.DecodeJob$Stage -> com.bumptech.glide.load.engine.DecodeJob$Stage:
    730:728:void <clinit>() -> <clinit>
    728:728:void <init>(java.lang.String,int) -> <init>
    728:728:com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String) -> valueOf
    728:728:com.bumptech.glide.load.engine.DecodeJob$Stage[] values() -> values
com.bumptech.glide.load.engine.DecodePath -> com.bumptech.glide.load.engine.DecodePath:
    34:40:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,androidx.core.util.Pools$Pool) -> <init>
    45:47:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback) -> decode
    53:57:com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options) -> decodeResource
    66:89:com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List) -> decodeResourceWithList
    96:96:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.DiskCacheStrategy -> com.bumptech.glide.load.engine.DiskCacheStrategy:
    15:123:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
com.bumptech.glide.load.engine.DiskCacheStrategy$1 -> com.bumptech.glide.load.engine.DiskCacheStrategy$1:
    15:15:void <init>() -> <init>
    18:18:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    24:24:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$2 -> com.bumptech.glide.load.engine.DiskCacheStrategy$2:
    41:41:void <init>() -> <init>
com.bumptech.glide.load.engine.DiskCacheStrategy$3 -> com.bumptech.glide.load.engine.DiskCacheStrategy$3:
    67:67:void <init>() -> <init>
    70:70:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$4 -> com.bumptech.glide.load.engine.DiskCacheStrategy$4:
    93:93:void <init>() -> <init>
    102:102:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$5 -> com.bumptech.glide.load.engine.DiskCacheStrategy$5:
    123:123:void <init>() -> <init>
    126:126:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    132:132:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.Engine -> com.bumptech.glide.load.engine.Engine:
    35:35:void <clinit>() -> <clinit>
    53:53:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,boolean) -> <init>
    82:119:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.Jobs,com.bumptech.glide.load.engine.EngineKeyFactory,com.bumptech.glide.load.engine.ActiveResources,com.bumptech.glide.load.engine.Engine$EngineJobFactory,com.bumptech.glide.load.engine.Engine$DecodeJobFactory,com.bumptech.glide.load.engine.ResourceRecycler,boolean) -> <init>
    270:279:com.bumptech.glide.load.engine.EngineResource getEngineResourceFromCache(com.bumptech.glide.load.Key) -> getEngineResourceFromCache
    169:236:com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> load
    248:250:com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key,boolean) -> loadFromActiveResources
    261:264:com.bumptech.glide.load.engine.EngineResource loadFromCache(com.bumptech.glide.load.Key,boolean) -> loadFromCache
    240:240:void logWithTimeAndKey(java.lang.String,long,com.bumptech.glide.load.Key) -> logWithTimeAndKey
    310:311:void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key) -> onEngineJobCancelled
    298:306:void onEngineJobComplete(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onEngineJobComplete
    320:326:void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onResourceReleased
    315:315:void onResourceRemoved(com.bumptech.glide.load.engine.Resource) -> onResourceRemoved
    285:288:void release(com.bumptech.glide.load.engine.Resource) -> release
com.bumptech.glide.load.engine.Engine$DecodeJobFactory -> com.bumptech.glide.load.engine.Engine$DecodeJobFactory:
    410:411:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider) -> <init>
    431:432:com.bumptech.glide.load.engine.DecodeJob build(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback) -> build
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1 -> com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1:
    402:402:void <init>(com.bumptech.glide.load.engine.Engine$DecodeJobFactory) -> <init>
    402:402:java.lang.Object create() -> create
    405:405:com.bumptech.glide.load.engine.DecodeJob create() -> create
com.bumptech.glide.load.engine.Engine$EngineJobFactory -> com.bumptech.glide.load.engine.Engine$EngineJobFactory:
    481:486:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener) -> <init>
    504:505:com.bumptech.glide.load.engine.EngineJob build(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean) -> build
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1 -> com.bumptech.glide.load.engine.Engine$EngineJobFactory$1:
    463:463:void <init>(com.bumptech.glide.load.engine.Engine$EngineJobFactory) -> <init>
    463:463:java.lang.Object create() -> create
    466:466:com.bumptech.glide.load.engine.EngineJob create() -> create
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider -> com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider:
    369:370:void <init>(com.bumptech.glide.load.engine.cache.DiskCache$Factory) -> <init>
    383:393:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache() -> getDiskCache
com.bumptech.glide.load.engine.Engine$LoadStatus -> com.bumptech.glide.load.engine.Engine$LoadStatus:
    348:350:void <init>(com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.ResourceCallback,com.bumptech.glide.load.engine.EngineJob) -> <init>
    358:360:void cancel() -> cancel
com.bumptech.glide.load.engine.EngineJob -> com.bumptech.glide.load.engine.EngineJob:
    27:27:void <clinit>() -> <clinit>
    78:78:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,androidx.core.util.Pools$Pool) -> <init>
    96:103:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,androidx.core.util.Pools$Pool,com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory) -> <init>
    130:143:void addCallback(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> addCallback
    165:167:void callCallbackOnLoadFailed(com.bumptech.glide.request.ResourceCallback) -> callCallbackOnLoadFailed
    152:154:void callCallbackOnResourceReady(com.bumptech.glide.request.ResourceCallback) -> callCallbackOnResourceReady
    194:200:void cancel() -> cancel
    267:278:void decrementPendingCallbacks() -> decrementPendingCallbacks
    188:189:com.bumptech.glide.load.engine.executor.GlideExecutor getActiveSourceExecutor() -> getActiveSourceExecutor
    361:361:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    258:262:void incrementPendingCallbacks(int) -> incrementPendingCallbacks
    113:118:com.bumptech.glide.load.engine.EngineJob init(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean) -> init
    209:209:boolean isDone() -> isDone
    330:348:void notifyCallbacksOfException() -> notifyCallbacksOfException
    221:245:void notifyCallbacksOfResult() -> notifyCallbacksOfResult
    309:311:void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> onLoadFailed
    300:303:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource) -> onResourceReady
    184:184:boolean onlyRetrieveFromCache() -> onlyRetrieveFromCache
    281:282:void release() -> release
    172:181:void removeCallback(com.bumptech.glide.request.ResourceCallback) -> removeCallback
    319:319:void reschedule(com.bumptech.glide.load.engine.DecodeJob) -> reschedule
    122:127:void start(com.bumptech.glide.load.engine.DecodeJob) -> start
com.bumptech.glide.load.engine.EngineJob$CallLoadFailed -> com.bumptech.glide.load.engine.EngineJob$CallLoadFailed:
    368:369:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback) -> <init>
    374:380:void run() -> run
com.bumptech.glide.load.engine.EngineJob$CallResourceReady -> com.bumptech.glide.load.engine.EngineJob$CallResourceReady:
    388:389:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback) -> <init>
    394:402:void run() -> run
com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory -> com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory:
    482:482:void <init>() -> <init>
    484:484:com.bumptech.glide.load.engine.EngineResource build(com.bumptech.glide.load.engine.Resource,boolean) -> build
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor -> com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor:
    461:463:void <init>(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> <init>
    468:470:boolean equals(java.lang.Object) -> equals
    477:477:int hashCode() -> hashCode
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors -> com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors:
    411:411:void <init>() -> <init>
    414:415:void <init>(java.util.List) -> <init>
    419:419:void add(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> add
    439:439:void clear() -> clear
    427:427:boolean contains(com.bumptech.glide.request.ResourceCallback) -> contains
    443:443:com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors copy() -> copy
    447:447:com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor defaultCallbackAndExecutor(com.bumptech.glide.request.ResourceCallback) -> defaultCallbackAndExecutor
    431:431:boolean isEmpty() -> isEmpty
    453:453:java.util.Iterator iterator() -> iterator
    423:423:void remove(com.bumptech.glide.request.ResourceCallback) -> remove
    435:435:int size() -> size
com.bumptech.glide.load.engine.EngineKey -> com.bumptech.glide.load.engine.EngineKey:
    33:43:void <init>(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options) -> <init>
    48:57:boolean equals(java.lang.Object) -> equals
    64:74:int hashCode() -> hashCode
    79:79:java.lang.String toString() -> toString
    94:94:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.EngineKeyFactory -> com.bumptech.glide.load.engine.EngineKeyFactory:
    8:8:void <init>() -> <init>
    14:14:com.bumptech.glide.load.engine.EngineKey buildKey(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options) -> buildKey
com.bumptech.glide.load.engine.EngineResource -> com.bumptech.glide.load.engine.EngineResource:
    27:30:void <init>(com.bumptech.glide.load.engine.Resource,boolean,boolean) -> <init>
    87:88:void acquire() -> acquire
    55:55:java.lang.Object get() -> get
    39:39:com.bumptech.glide.load.engine.Resource getResource() -> getResource
    49:49:java.lang.Class getResourceClass() -> getResourceClass
    60:60:int getSize() -> getSize
    43:43:boolean isCacheable() -> isCacheable
    65:66:void recycle() -> recycle
    107:116:void release() -> release
    34:36:void setResourceListener(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> setResourceListener
    121:121:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.GlideException -> com.bumptech.glide.load.engine.GlideException:
    23:23:void <clinit>() -> <clinit>
    34:34:void <init>(java.lang.String) -> <init>
    38:38:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    41:44:void <init>(java.lang.String,java.util.List) -> <init>
    127:133:void addRootCauses(java.lang.Throwable,java.util.List) -> addRootCauses
    199:201:void appendCauses(java.util.List,java.lang.Appendable) -> appendCauses
    208:221:void appendCausesWrapped(java.util.List,java.lang.Appendable) -> appendCausesWrapped
    188:190:void appendExceptionMessage(java.lang.Throwable,java.lang.Appendable) -> appendExceptionMessage
    95:95:java.util.List getCauses() -> getCauses
    161:180:java.lang.String getMessage() -> getMessage
    107:108:java.util.List getRootCauses() -> getRootCauses
    120:122:void logRootCauses(java.lang.String) -> logRootCauses
    139:139:void printStackTrace() -> printStackTrace
    144:144:void printStackTrace(java.io.PrintStream) -> printStackTrace
    149:149:void printStackTrace(java.io.PrintWriter) -> printStackTrace
    153:154:void printStackTrace(java.lang.Appendable) -> printStackTrace
    48:48:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource) -> setLoggingDetails
    52:54:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource,java.lang.Class) -> setLoggingDetails
com.bumptech.glide.load.engine.GlideException$IndentedAppendable -> com.bumptech.glide.load.engine.GlideException$IndentedAppendable:
    232:233:void <init>(java.lang.Appendable) -> <init>
    238:243:java.lang.Appendable append(char) -> append
    249:250:java.lang.Appendable append(java.lang.CharSequence) -> append
    256:262:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
com.bumptech.glide.load.engine.Jobs -> com.bumptech.glide.load.engine.Jobs:
    9:11:void <init>() -> <init>
    19:19:com.bumptech.glide.load.engine.EngineJob get(com.bumptech.glide.load.Key,boolean) -> get
    34:34:java.util.Map getJobMap(boolean) -> getJobMap
    23:23:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob) -> put
    27:29:void removeIfCurrent(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob) -> removeIfCurrent
com.bumptech.glide.load.engine.LoadPath -> com.bumptech.glide.load.engine.LoadPath:
    31:36:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,androidx.core.util.Pools$Pool) -> <init>
    41:45:com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback) -> load
    55:68:com.bumptech.glide.load.engine.Resource loadWithExceptionList(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback,java.util.List) -> loadWithExceptionList
    80:80:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.LockedResource -> com.bumptech.glide.load.engine.LockedResource:
    19:19:void <clinit>() -> <clinit>
    41:26:void <init>() -> <init>
    75:75:java.lang.Object get() -> get
    69:69:java.lang.Class getResourceClass() -> getResourceClass
    80:80:int getSize() -> getSize
    97:97:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    44:46:void init(com.bumptech.glide.load.engine.Resource) -> init
    34:35:com.bumptech.glide.load.engine.LockedResource obtain(com.bumptech.glide.load.engine.Resource) -> obtain
    85:92:void recycle() -> recycle
    50:51:void release() -> release
    55:58:void unlock() -> unlock
com.bumptech.glide.load.engine.LockedResource$1 -> com.bumptech.glide.load.engine.LockedResource$1:
    20:20:void <init>() -> <init>
    20:20:java.lang.Object create() -> create
    23:23:com.bumptech.glide.load.engine.LockedResource create() -> create
com.bumptech.glide.load.engine.ResourceCacheGenerator -> com.bumptech.glide.load.engine.ResourceCacheGenerator:
    35:37:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    112:114:void cancel() -> cancel
    107:107:boolean hasNextModelLoader() -> hasNextModelLoader
    120:120:void onDataReady(java.lang.Object) -> onDataReady
    126:126:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    44:87:boolean startNext() -> startNext
com.bumptech.glide.load.engine.ResourceCacheKey -> com.bumptech.glide.load.engine.ResourceCacheKey:
    17:17:void <clinit>() -> <clinit>
    35:43:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.Key,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.Transformation,java.lang.Class,com.bumptech.glide.load.Options) -> <init>
    48:55:boolean equals(java.lang.Object) -> equals
    91:94:byte[] getResourceClassBytes() -> getResourceClassBytes
    62:70:int hashCode() -> hashCode
    101:101:java.lang.String toString() -> toString
    77:87:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.ResourceRecycler -> com.bumptech.glide.load.engine.ResourceRecycler:
    11:14:void <init>() -> <init>
    17:27:void recycle(com.bumptech.glide.load.engine.Resource) -> recycle
com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback -> com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback:
    33:33:void <init>() -> <init>
    37:39:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.engine.SourceGenerator -> com.bumptech.glide.load.engine.SourceGenerator:
    36:38:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    73:88:void cacheData(java.lang.Object) -> cacheData
    97:99:void cancel() -> cancel
    69:69:boolean hasNextModelLoader() -> hasNextModelLoader
    141:141:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource) -> onDataFetcherFailed
    135:135:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key) -> onDataFetcherReady
    105:112:void onDataReady(java.lang.Object) -> onDataReady
    119:119:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    126:126:void reschedule() -> reschedule
    43:62:boolean startNext() -> startNext
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy -> com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy:
    12:14:void <init>() -> <init>
    25:27:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    56:56:java.lang.String getBitmapString(android.graphics.Bitmap) -> getBitmapString
    62:62:java.lang.String getBitmapString(int,int,android.graphics.Bitmap$Config) -> getBitmapString
    47:47:int getSize(android.graphics.Bitmap) -> getSize
    37:37:java.lang.String logBitmap(android.graphics.Bitmap) -> logBitmap
    42:42:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> logBitmap
    18:20:void put(android.graphics.Bitmap) -> put
    32:32:android.graphics.Bitmap removeLast() -> removeLast
    52:52:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key -> com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key:
    87:88:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool) -> <init>
    99:101:boolean equals(java.lang.Object) -> equals
    108:110:int hashCode() -> hashCode
    92:94:void init(int,int,android.graphics.Bitmap$Config) -> init
    121:121:void offer() -> offer
    116:116:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool:
    66:66:void <init>() -> <init>
    65:65:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    75:75:com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key create() -> create
    68:69:com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key get(int,int,android.graphics.Bitmap$Config) -> get
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool:
    6:8:void <init>() -> <init>
    11:13:com.bumptech.glide.load.engine.bitmap_recycle.Poolable get() -> get
    19:20:void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> offer
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter:
    11:11:void <init>() -> <init>
    30:30:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    36:36:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> getDirty
    24:24:void put(android.graphics.Bitmap) -> put
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter:
    7:7:void <init>() -> <init>
    6:6:int getArrayLength(java.lang.Object) -> getArrayLength
    17:17:int getArrayLength(byte[]) -> getArrayLength
    6:6:java.lang.Object newArray(int) -> newArray
    22:22:byte[] newArray(int) -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap:
    20:22:void <init>() -> <init>
    40:50:java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> get
    98:101:void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeHead
    106:109:void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeTail
    25:35:void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable,java.lang.Object) -> put
    118:119:void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> removeEntry
    55:74:java.lang.Object removeLast() -> removeLast
    82:93:java.lang.String toString() -> toString
    113:114:void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> updateEntry
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry:
    131:131:void <init>() -> <init>
    134:136:void <init>(java.lang.Object) -> <init>
    150:153:void add(java.lang.Object) -> add
    141:142:java.lang.Object removeLast() -> removeLast
    146:146:int size() -> size
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter:
    7:7:void <init>() -> <init>
    6:6:int getArrayLength(java.lang.Object) -> getArrayLength
    17:17:int getArrayLength(int[]) -> getArrayLength
    6:6:java.lang.Object newArray(int) -> newArray
    22:22:int[] newArray(int) -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool:
    47:48:void <init>(int) -> <init>
    136:137:void clearMemory() -> clearMemory
    167:170:void decrementArrayOfSize(int,java.lang.Class) -> decrementArrayOfSize
    150:150:void evict() -> evict
    154:161:void evictToSize(int) -> evictToSize
    86:93:java.lang.Object get(int,java.lang.Class) -> get
    191:191:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromObject(java.lang.Object) -> getAdapterFromObject
    196:204:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromType(java.lang.Class) -> getAdapterFromType
    118:118:java.lang.Object getArrayForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key) -> getArrayForKey
    80:81:java.lang.Object getExact(int,java.lang.Class) -> getExact
    97:108:java.lang.Object getForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key,java.lang.Class) -> getForKey
    181:184:java.util.NavigableMap getSizesForAdapter(java.lang.Class) -> getSizesForAdapter
    131:131:boolean isNoMoreThanHalfFull() -> isNoMoreThanHalfFull
    122:122:boolean isSmallEnoughForReuse(int) -> isSmallEnoughForReuse
    127:127:boolean mayFillRequest(int,java.lang.Integer) -> mayFillRequest
    60:76:void put(java.lang.Object) -> put
    142:147:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key:
    245:246:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool) -> <init>
    256:258:boolean equals(java.lang.Object) -> equals
    275:276:int hashCode() -> hashCode
    250:251:void init(int,java.lang.Class) -> init
    270:270:void offer() -> offer
    265:265:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool:
    226:226:void <init>() -> <init>
    223:223:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    236:236:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key create() -> create
    229:230:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key get(int,java.lang.Class) -> get
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool:
    25:25:void <clinit>() -> <clinit>
    40:45:void <init>(long,com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy,java.util.Set) -> <init>
    54:54:void <init>(long) -> <init>
    155:160:void assertNotHardwareConfig(android.graphics.Bitmap$Config) -> assertNotHardwareConfig
    208:211:void clearMemory() -> clearMemory
    149:149:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap
    252:253:void dump() -> dump
    258:258:void dumpUnchecked() -> dumpUnchecked
    118:118:void evict() -> evict
    124:131:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    274:284:java.util.Set getDefaultAllowedConfigs() -> getDefaultAllowedConfigs
    264:267:com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy getDefaultStrategy() -> getDefaultStrategy
    140:142:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> getDirty
    169:189:android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config) -> getDirtyOrNull
    73:73:long getMaxSize() -> getMaxSize
    201:202:void maybeSetPreMultiplied(android.graphics.Bitmap) -> maybeSetPreMultiplied
    195:196:void normalize(android.graphics.Bitmap) -> normalize
    87:85:void put(android.graphics.Bitmap) -> put
    217:224:void trimMemory(int) -> trimMemory
    229:249:void trimToSize(long) -> trimToSize
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker:
    320:320:void <init>() -> <init>
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy:
    34:54:void <clinit>() -> <clinit>
    29:59:void <init>() -> <init>
    117:123:void decrementBitmapOfSize(java.lang.Integer,android.graphics.Bitmap) -> decrementBitmapOfSize
    89:97:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key findBestKey(int,android.graphics.Bitmap$Config) -> findBestKey
    76:83:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    243:243:java.lang.String getBitmapString(int,android.graphics.Bitmap$Config) -> getBitmapString
    247:255:android.graphics.Bitmap$Config[] getInConfigs(android.graphics.Bitmap$Config) -> getInConfigs
    157:157:int getSize(android.graphics.Bitmap) -> getSize
    135:138:java.util.NavigableMap getSizesForConfig(android.graphics.Bitmap$Config) -> getSizesForConfig
    145:146:java.lang.String logBitmap(android.graphics.Bitmap) -> logBitmap
    151:152:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> logBitmap
    63:70:void put(android.graphics.Bitmap) -> put
    108:111:android.graphics.Bitmap removeLast() -> removeLast
    162:173:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1 -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1:
    253:253:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key:
    198:199:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool) -> <init>
    225:228:boolean equals(java.lang.Object) -> equals
    235:236:int hashCode() -> hashCode
    209:210:void init(int,android.graphics.Bitmap$Config) -> init
    215:215:void offer() -> offer
    220:220:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool:
    177:177:void <init>() -> <init>
    176:176:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    187:187:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key create() -> create
    180:181:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key get(int,android.graphics.Bitmap$Config) -> get
com.bumptech.glide.load.engine.cache.DiskCacheAdapter -> com.bumptech.glide.load.engine.cache.DiskCacheAdapter:
    9:9:void <init>() -> <init>
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker:
    20:22:void <init>() -> <init>
    26:33:void acquire(java.lang.String) -> acquire
    40:59:void release(java.lang.String) -> release
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock:
    69:65:void <init>() -> <init>
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool:
    77:74:void <init>() -> <init>
    81:83:com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock obtain() -> obtain
    91:95:void offer(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock) -> offer
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory -> com.bumptech.glide.load.engine.cache.DiskLruCacheFactory:
    53:55:void <init>(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter,long) -> <init>
    60:70:com.bumptech.glide.load.engine.cache.DiskCache build() -> build
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper -> com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper:
    73:76:void <init>(java.io.File,long) -> <init>
    64:64:com.bumptech.glide.load.engine.cache.DiskCache create(java.io.File,long) -> create
    88:103:java.io.File get(com.bumptech.glide.load.Key) -> get
    80:83:com.bumptech.glide.disklrucache.DiskLruCache getDiskCache() -> getDiskCache
    113:146:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer) -> put
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory -> com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory:
    15:15:void <init>(android.content.Context) -> <init>
    25:25:void <init>(android.content.Context,java.lang.String,long) -> <init>
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1 -> com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1:
    25:25:void <init>(android.content.Context,java.lang.String) -> <init>
    28:33:java.io.File getCacheDirectory() -> getCacheDirectory
com.bumptech.glide.load.engine.cache.LruResourceCache -> com.bumptech.glide.load.engine.cache.LruResourceCache:
    22:22:void <init>(long) -> <init>
    13:13:int getSize(java.lang.Object) -> getSize
    40:42:int getSize(com.bumptech.glide.load.engine.Resource) -> getSize
    13:13:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    32:33:void onItemEvicted(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> onItemEvicted
    13:13:com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> put
    13:13:com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key) -> remove
    27:27:void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener) -> setResourceRemovedListener
    52:58:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.cache.MemorySizeCalculator -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator:
    35:65:void <init>(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder) -> <init>
    103:103:int getArrayPoolSizeInBytes() -> getArrayPoolSizeInBytes
    96:96:int getBitmapPoolSize() -> getBitmapPoolSize
    108:110:int getMaxSize(android.app.ActivityManager,float,float) -> getMaxSize
    89:89:int getMemoryCacheSize() -> getMemoryCacheSize
    123:124:boolean isLowMemoryDevice(android.app.ActivityManager) -> isLowMemoryDevice
    115:115:java.lang.String toMb(int) -> toMb
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder:
    146:146:void <clinit>() -> <clinit>
    165:177:void <init>(android.content.Context) -> <init>
    260:260:com.bumptech.glide.load.engine.cache.MemorySizeCalculator build() -> build
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions:
    267:268:void <init>(android.util.DisplayMetrics) -> <init>
    278:278:int getHeightPixels() -> getHeightPixels
    273:273:int getWidthPixels() -> getWidthPixels
com.bumptech.glide.load.engine.cache.SafeKeyGenerator -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator:
    21:23:void <init>() -> <init>
    50:56:java.lang.String calculateHexStringDigest(com.bumptech.glide.load.Key) -> calculateHexStringDigest
    37:39:java.lang.String getSafeKey(com.bumptech.glide.load.Key) -> getSafeKey
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1 -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1:
    24:24:void <init>(com.bumptech.glide.load.engine.cache.SafeKeyGenerator) -> <init>
    24:24:java.lang.Object create() -> create
    28:30:com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create() -> create
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer:
    65:66:void <init>(java.security.MessageDigest) -> <init>
    72:72:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
com.bumptech.glide.load.engine.executor.GlideExecutor -> com.bumptech.glide.load.engine.executor.GlideExecutor:
    57:57:void <clinit>() -> <clinit>
    262:263:void <init>(java.util.concurrent.ExecutorService) -> <init>
    343:343:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    357:361:int calculateBestThreadCount() -> calculateBestThreadCount
    268:268:void execute(java.lang.Runnable) -> execute
    281:281:java.util.List invokeAll(java.util.Collection) -> invokeAll
    290:290:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    297:297:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    305:305:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    332:332:boolean isShutdown() -> isShutdown
    337:337:boolean isTerminated() -> isTerminated
    229:237:com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor() -> newAnimationExecutor
    248:248:com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor(int,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy) -> newAnimationExecutor
    78:78:com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor() -> newDiskCacheExecutor
    122:122:com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor(int,java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy) -> newDiskCacheExecutor
    143:142:com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor() -> newSourceExecutor
    187:187:com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor(int,java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy) -> newSourceExecutor
    212:212:com.bumptech.glide.load.engine.executor.GlideExecutor newUnlimitedSourceExecutor() -> newUnlimitedSourceExecutor
    321:321:void shutdown() -> shutdown
    327:327:java.util.List shutdownNow() -> shutdownNow
    274:274:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    311:311:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    316:316:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    348:348:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory:
    425:428:void <init>(java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy,boolean) -> <init>
    433:453:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1 -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1:
    433:433:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory,java.lang.Runnable,java.lang.String) -> <init>
    437:448:void run() -> run
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy:
    374:406:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1:
    374:374:void <init>() -> <init>
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2:
    383:383:void <init>() -> <init>
    386:387:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3:
    396:396:void <init>() -> <init>
    400:400:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.RuntimeCompat -> com.bumptech.glide.load.engine.executor.RuntimeCompat:
    27:29:int availableProcessors() -> availableProcessors
    49:64:int getCoreCountPre17() -> getCoreCountPre17
com.bumptech.glide.load.engine.executor.RuntimeCompat$1 -> com.bumptech.glide.load.engine.executor.RuntimeCompat$1:
    53:53:void <init>(java.util.regex.Pattern) -> <init>
    56:56:boolean accept(java.io.File,java.lang.String) -> accept
com.bumptech.glide.load.engine.prefill.BitmapPreFiller -> com.bumptech.glide.load.engine.prefill.BitmapPreFiller:
    28:23:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat) -> <init>
com.bumptech.glide.load.model.AssetUriLoader -> com.bumptech.glide.load.model.AssetUriLoader:
    31:33:void <init>(android.content.res.AssetManager,com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    39:40:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    45:46:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory:
    96:97:void <init>(android.content.res.AssetManager) -> <init>
    103:103:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    114:114:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String) -> buildFetcher
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory -> com.bumptech.glide.load.model.AssetUriLoader$StreamFactory:
    66:67:void <init>(android.content.res.AssetManager) -> <init>
    73:73:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    83:83:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String) -> buildFetcher
com.bumptech.glide.load.model.ByteArrayLoader -> com.bumptech.glide.load.model.ByteArrayLoader:
    24:25:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$Converter) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:31:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(byte[],int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory -> com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory:
    98:98:void <init>() -> <init>
    103:103:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1 -> com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1:
    103:103:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory) -> <init>
    103:103:java.lang.Object convert(byte[]) -> convert
    106:106:java.nio.ByteBuffer convert(byte[]) -> convert
    111:111:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher -> com.bumptech.glide.load.model.ByteArrayLoader$Fetcher:
    60:62:void <init>(byte[],com.bumptech.glide.load.model.ByteArrayLoader$Converter) -> <init>
    84:84:java.lang.Class getDataClass() -> getDataClass
    90:90:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    67:68:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory -> com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory:
    125:125:void <init>() -> <init>
    130:130:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1 -> com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1:
    130:130:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory) -> <init>
    130:130:java.lang.Object convert(byte[]) -> convert
    133:133:java.io.InputStream convert(byte[]) -> convert
    138:138:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.ByteBufferEncoder -> com.bumptech.glide.load.model.ByteBufferEncoder:
    15:15:void <init>() -> <init>
    15:15:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    22:26:boolean encode(java.nio.ByteBuffer,java.io.File,com.bumptech.glide.load.Options) -> encode
com.bumptech.glide.load.model.ByteBufferFileLoader -> com.bumptech.glide.load.model.ByteBufferFileLoader:
    19:19:void <init>() -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    25:25:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher -> com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher:
    56:57:void <init>(java.io.File) -> <init>
    90:90:java.lang.Class getDataClass() -> getDataClass
    96:96:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    65:70:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ByteBufferFileLoader$Factory -> com.bumptech.glide.load.model.ByteBufferFileLoader$Factory:
    36:36:void <init>() -> <init>
    41:41:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.DataUrlLoader -> com.bumptech.glide.load.model.DataUrlLoader:
    34:35:void <init>(com.bumptech.glide.load.model.DataUrlLoader$DataDecoder) -> <init>
    41:42:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    49:49:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher -> com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher:
    72:74:void <init>(java.lang.String,com.bumptech.glide.load.model.DataUrlLoader$DataDecoder) -> <init>
    90:90:void cleanup() -> cleanup
    104:104:java.lang.Class getDataClass() -> getDataClass
    110:110:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    80:83:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory -> com.bumptech.glide.load.model.DataUrlLoader$StreamFactory:
    123:124:void <init>() -> <init>
    163:163:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1 -> com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1:
    124:124:void <init>(com.bumptech.glide.load.model.DataUrlLoader$StreamFactory) -> <init>
    124:124:void close(java.lang.Object) -> close
    149:149:void close(java.io.InputStream) -> close
    124:124:java.lang.Object decode(java.lang.String) -> decode
    127:128:java.io.InputStream decode(java.lang.String) -> decode
    154:154:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.FileLoader -> com.bumptech.glide.load.model.FileLoader:
    30:31:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    23:23:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    37:37:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    23:23:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.FileLoader$Factory -> com.bumptech.glide.load.model.FileLoader$Factory:
    115:116:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    122:122:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory:
    161:161:void <init>() -> <init>
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1 -> com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1:
    161:161:void <init>() -> <init>
    161:161:void close(java.lang.Object) -> close
    169:169:void close(android.os.ParcelFileDescriptor) -> close
    174:174:java.lang.Class getDataClass() -> getDataClass
    161:161:java.lang.Object open(java.io.File) -> open
    164:164:android.os.ParcelFileDescriptor open(java.io.File) -> open
com.bumptech.glide.load.model.FileLoader$FileFetcher -> com.bumptech.glide.load.model.FileLoader$FileFetcher:
    60:62:void <init>(java.io.File,com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    81:83:void cleanup() -> cleanup
    98:98:java.lang.Class getDataClass() -> getDataClass
    104:104:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    68:73:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.FileLoader$StreamFactory -> com.bumptech.glide.load.model.FileLoader$StreamFactory:
    136:136:void <init>() -> <init>
com.bumptech.glide.load.model.FileLoader$StreamFactory$1 -> com.bumptech.glide.load.model.FileLoader$StreamFactory$1:
    136:136:void <init>() -> <init>
    136:136:void close(java.lang.Object) -> close
    144:144:void close(java.io.InputStream) -> close
    149:149:java.lang.Class getDataClass() -> getDataClass
    136:136:java.lang.Object open(java.io.File) -> open
    139:139:java.io.InputStream open(java.io.File) -> open
com.bumptech.glide.load.model.GlideUrl -> com.bumptech.glide.load.model.GlideUrl:
    42:42:void <init>(java.net.URL) -> <init>
    46:46:void <init>(java.lang.String) -> <init>
    49:52:void <init>(java.net.URL,com.bumptech.glide.load.model.Headers) -> <init>
    55:58:void <init>(java.lang.String,com.bumptech.glide.load.model.Headers) -> <init>
    137:140:boolean equals(java.lang.Object) -> equals
    115:115:java.lang.String getCacheKey() -> getCacheKey
    129:132:byte[] getCacheKeyBytes() -> getCacheKeyBytes
    101:101:java.util.Map getHeaders() -> getHeaders
    87:94:java.lang.String getSafeStringUrl() -> getSafeStringUrl
    70:73:java.net.URL getSafeUrl() -> getSafeUrl
    147:151:int hashCode() -> hashCode
    120:120:java.lang.String toString() -> toString
    62:62:java.net.URL toURL() -> toURL
    125:125:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.model.Headers -> com.bumptech.glide.load.model.Headers:
    19:30:void <clinit>() -> <clinit>
com.bumptech.glide.load.model.Headers$1 -> com.bumptech.glide.load.model.Headers$1:
    19:19:void <init>() -> <init>
    22:22:java.util.Map getHeaders() -> getHeaders
com.bumptech.glide.load.model.LazyHeaders -> com.bumptech.glide.load.model.LazyHeaders:
    26:27:void <init>(java.util.Map) -> <init>
    58:70:java.lang.String buildHeaderValue(java.util.List) -> buildHeaderValue
    82:84:boolean equals(java.lang.Object) -> equals
    44:49:java.util.Map generateHeaders() -> generateHeaders
    32:40:java.util.Map getHeaders() -> getHeaders
    91:91:int hashCode() -> hashCode
    75:75:java.lang.String toString() -> toString
com.bumptech.glide.load.model.LazyHeaders$Builder -> com.bumptech.glide.load.model.LazyHeaders$Builder:
    107:121:void <clinit>() -> <clinit>
    105:125:void <init>() -> <init>
    218:218:com.bumptech.glide.load.model.LazyHeaders build() -> build
    238:253:java.lang.String getSanitizedUserAgent() -> getSanitizedUserAgent
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory -> com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory:
    262:263:void <init>(java.lang.String) -> <init>
    268:268:java.lang.String buildHeader() -> buildHeader
    280:282:boolean equals(java.lang.Object) -> equals
    289:289:int hashCode() -> hashCode
    273:273:java.lang.String toString() -> toString
com.bumptech.glide.load.model.MediaStoreFileLoader -> com.bumptech.glide.load.model.MediaStoreFileLoader:
    27:28:void <init>(android.content.Context) -> <init>
    21:21:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    34:34:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    21:21:boolean handles(java.lang.Object) -> handles
    39:39:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.MediaStoreFileLoader$Factory -> com.bumptech.glide.load.model.MediaStoreFileLoader$Factory:
    108:109:void <init>(android.content.Context) -> <init>
    115:115:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher -> com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher:
    43:43:void <clinit>() -> <clinit>
    50:52:void <init>(android.content.Context,android.net.Uri) -> <init>
    91:91:java.lang.Class getDataClass() -> getDataClass
    97:97:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    57:74:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ModelCache -> com.bumptech.glide.load.model.ModelCache:
    30:31:void <init>(long) -> <init>
    49:51:java.lang.Object get(java.lang.Object,int,int) -> get
    64:65:void put(java.lang.Object,int,int,java.lang.Object) -> put
com.bumptech.glide.load.model.ModelCache$1 -> com.bumptech.glide.load.model.ModelCache$1:
    31:31:void <init>(com.bumptech.glide.load.model.ModelCache,long) -> <init>
    31:31:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    34:34:void onItemEvicted(com.bumptech.glide.load.model.ModelCache$ModelKey,java.lang.Object) -> onItemEvicted
com.bumptech.glide.load.model.ModelCache$ModelKey -> com.bumptech.glide.load.model.ModelCache$ModelKey:
    77:77:void <clinit>() -> <clinit>
    97:97:void <init>() -> <init>
    114:116:boolean equals(java.lang.Object) -> equals
    86:88:com.bumptech.glide.load.model.ModelCache$ModelKey get(java.lang.Object,int,int) -> get
    123:125:int hashCode() -> hashCode
    101:103:void init(java.lang.Object,int,int) -> init
    107:109:void release() -> release
com.bumptech.glide.load.model.ModelLoader$LoadData -> com.bumptech.glide.load.model.ModelLoader$LoadData:
    51:51:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.data.DataFetcher) -> <init>
    55:58:void <init>(com.bumptech.glide.load.Key,java.util.List,com.bumptech.glide.load.data.DataFetcher) -> <init>
com.bumptech.glide.load.model.ModelLoaderRegistry -> com.bumptech.glide.load.model.ModelLoaderRegistry:
    25:25:void <init>(androidx.core.util.Pools$Pool) -> <init>
    28:29:void <init>(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> <init>
    36:38:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    116:116:java.lang.Class getClass(java.lang.Object) -> getClass
    99:99:java.util.List getDataClasses(java.lang.Class) -> getDataClasses
    74:86:java.util.List getModelLoaders(java.lang.Object) -> getModelLoaders
    105:110:java.util.List getModelLoadersForClass(java.lang.Class) -> getModelLoadersForClass
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache -> com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache:
    123:120:void <init>() -> <init>
    126:126:void clear() -> clear
    139:140:java.util.List get(java.lang.Class) -> get
    130:132:void put(java.lang.Class,java.util.List) -> put
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry -> com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry:
    146:147:void <init>(java.util.List) -> <init>
com.bumptech.glide.load.model.MultiModelLoader -> com.bumptech.glide.load.model.MultiModelLoader:
    33:35:void <init>(java.util.List,androidx.core.util.Pools$Pool) -> <init>
    42:56:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    61:62:boolean handles(java.lang.Object) -> handles
    71:71:java.lang.String toString() -> toString
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher -> com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher:
    87:91:void <init>(java.util.List,androidx.core.util.Pools$Pool) -> <init>
    124:126:void cancel() -> cancel
    113:118:void cleanup() -> cleanup
    133:133:java.lang.Class getDataClass() -> getDataClass
    139:139:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    97:107:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    145:147:void onDataReady(java.lang.Object) -> onDataReady
    153:154:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    158:167:void startNextOrFail() -> startNextOrFail
com.bumptech.glide.load.model.MultiModelLoaderFactory -> com.bumptech.glide.load.model.MultiModelLoaderFactory:
    24:25:void <clinit>() -> <clinit>
    32:32:void <init>(androidx.core.util.Pools$Pool) -> <init>
    37:39:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory) -> <init>
    61:62:void add(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory,boolean) -> add
    46:47:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    94:113:java.util.List build(java.lang.Class) -> build
    132:166:com.bumptech.glide.load.model.ModelLoader build(java.lang.Class,java.lang.Class) -> build
    179:179:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry) -> build
    185:185:com.bumptech.glide.load.model.ModelLoader emptyModelLoader() -> emptyModelLoader
    119:125:java.util.List getDataClasses(java.lang.Class) -> getDataClasses
com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader -> com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader:
    222:222:void <init>() -> <init>
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry -> com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry:
    196:199:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> <init>
    203:203:boolean handles(java.lang.Class,java.lang.Class) -> handles
    207:207:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory -> com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory:
    211:211:void <init>() -> <init>
    216:216:com.bumptech.glide.load.model.MultiModelLoader build(java.util.List,androidx.core.util.Pools$Pool) -> build
com.bumptech.glide.load.model.ResourceLoader -> com.bumptech.glide.load.model.ResourceLoader:
    27:29:void <init>(android.content.res.Resources,com.bumptech.glide.load.model.ModelLoader) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    35:36:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Integer,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    42:48:android.net.Uri getResourceUri(java.lang.Integer) -> getResourceUri
    20:20:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory:
    116:117:void <init>(android.content.res.Resources) -> <init>
    122:123:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory:
    91:92:void <init>(android.content.res.Resources) -> <init>
    98:99:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ResourceLoader$StreamFactory -> com.bumptech.glide.load.model.ResourceLoader$StreamFactory:
    67:68:void <init>(android.content.res.Resources) -> <init>
    74:74:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ResourceLoader$UriFactory -> com.bumptech.glide.load.model.ResourceLoader$UriFactory:
    139:140:void <init>(android.content.res.Resources) -> <init>
    146:146:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.StreamEncoder -> com.bumptech.glide.load.model.StreamEncoder:
    22:23:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    18:18:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    28:51:boolean encode(java.io.InputStream,java.io.File,com.bumptech.glide.load.Options) -> encode
com.bumptech.glide.load.model.StringLoader -> com.bumptech.glide.load.model.StringLoader:
    24:25:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:35:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.String,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    48:57:android.net.Uri parseUri(java.lang.String) -> parseUri
    64:64:android.net.Uri toFileUri(java.lang.String) -> toFileUri
com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory:
    107:107:void <init>() -> <init>
    113:113:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory:
    88:88:void <init>() -> <init>
    95:95:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.StringLoader$StreamFactory -> com.bumptech.glide.load.model.StringLoader$StreamFactory:
    70:70:void <init>() -> <init>
    76:76:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.UnitModelLoader -> com.bumptech.glide.load.model.UnitModelLoader:
    18:18:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    38:38:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    22:22:com.bumptech.glide.load.model.UnitModelLoader getInstance() -> getInstance
com.bumptech.glide.load.model.UnitModelLoader$Factory -> com.bumptech.glide.load.model.UnitModelLoader$Factory:
    93:93:void <clinit>() -> <clinit>
    104:104:void <init>() -> <init>
    111:111:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    97:97:com.bumptech.glide.load.model.UnitModelLoader$Factory getInstance() -> getInstance
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher -> com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher:
    50:51:void <init>(java.lang.Object) -> <init>
    74:74:java.lang.Class getDataClass() -> getDataClass
    80:80:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    57:57:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.UriLoader -> com.bumptech.glide.load.model.UriLoader:
    29:29:void <clinit>() -> <clinit>
    43:44:void <init>(com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory) -> <init>
    28:28:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    50:50:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    28:28:boolean handles(java.lang.Object) -> handles
    55:55:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory:
    135:136:void <init>(android.content.ContentResolver) -> <init>
    141:141:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    151:151:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory:
    105:106:void <init>(android.content.ContentResolver) -> <init>
    111:111:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
    117:117:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.UriLoader$StreamFactory -> com.bumptech.glide.load.model.UriLoader$StreamFactory:
    75:76:void <init>(android.content.ContentResolver) -> <init>
    81:81:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
    87:87:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.UrlUriLoader -> com.bumptech.glide.load.model.UrlUriLoader:
    19:19:void <clinit>() -> <clinit>
    31:32:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    18:18:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    38:39:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    18:18:boolean handles(java.lang.Object) -> handles
    44:44:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.UrlUriLoader$StreamFactory -> com.bumptech.glide.load.model.UrlUriLoader$StreamFactory:
    51:51:void <init>() -> <init>
    56:56:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader -> com.bumptech.glide.load.model.stream.HttpGlideUrlLoader:
    29:28:void <clinit>() -> <clinit>
    37:38:void <init>(com.bumptech.glide.load.model.ModelCache) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    47:55:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(com.bumptech.glide.load.model.GlideUrl,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory -> com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory:
    66:67:void <init>() -> <init>
    72:72:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.HttpUriLoader -> com.bumptech.glide.load.model.stream.HttpUriLoader:
    20:21:void <clinit>() -> <clinit>
    27:28:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    34:34:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    39:39:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.stream.HttpUriLoader$Factory -> com.bumptech.glide.load.model.stream.HttpUriLoader$Factory:
    45:45:void <init>() -> <init>
    50:50:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader -> com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader:
    24:25:void <init>(android.content.Context) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:32:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    40:40:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory -> com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory:
    50:51:void <init>(android.content.Context) -> <init>
    57:57:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader -> com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader:
    31:32:void <init>(android.content.Context) -> <init>
    26:26:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    39:40:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    26:26:boolean handles(java.lang.Object) -> handles
    53:53:boolean handles(android.net.Uri) -> handles
    47:48:boolean isRequestingDefaultFrame(com.bumptech.glide.load.Options) -> isRequestingDefaultFrame
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory -> com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory:
    64:65:void <init>(android.content.Context) -> <init>
    71:71:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.UrlLoader -> com.bumptech.glide.load.model.stream.UrlLoader:
    23:24:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    18:18:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    30:30:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.net.URL,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    18:18:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory -> com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory:
    41:41:void <init>() -> <init>
    46:46:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.resource.SimpleResource -> com.bumptech.glide.load.resource.SimpleResource:
    18:19:void <init>(java.lang.Object) -> <init>
    32:32:java.lang.Object get() -> get
    26:26:java.lang.Class getResourceClass() -> getResourceClass
com.bumptech.glide.load.resource.UnitTransformation -> com.bumptech.glide.load.resource.UnitTransformation:
    15:15:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    25:25:com.bumptech.glide.load.resource.UnitTransformation get() -> get
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder:
    44:46:void <init>(android.content.res.Resources,com.bumptech.glide.load.ResourceDecoder) -> <init>
    58:59:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    51:51:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder:
    21:23:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.ResourceEncoder) -> <init>
    16:16:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    29:29:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    35:35:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
com.bumptech.glide.load.resource.bitmap.BitmapEncoder -> com.bumptech.glide.load.resource.bitmap.BitmapEncoder:
    42:51:void <clinit>() -> <clinit>
    58:59:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    35:35:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    73:113:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    131:131:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
    118:124:android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap,com.bumptech.glide.load.Options) -> getFormat
com.bumptech.glide.load.resource.bitmap.BitmapResource -> com.bumptech.glide.load.resource.bitmap.BitmapResource:
    36:38:void <init>(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    15:15:java.lang.Object get() -> get
    50:50:android.graphics.Bitmap get() -> get
    44:44:java.lang.Class getResourceClass() -> getResourceClass
    55:55:int getSize() -> getSize
    65:65:void initialize() -> initialize
    32:32:com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> obtain
    60:60:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.BitmapTransformation -> com.bumptech.glide.load.resource.bitmap.BitmapTransformation:
    66:66:void <init>() -> <init>
    72:73:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder:
    19:20:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler) -> <init>
    16:16:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    32:33:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    16:16:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    25:25:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.CenterCrop -> com.bumptech.glide.load.resource.bitmap.CenterCrop:
    17:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    27:27:boolean equals(java.lang.Object) -> equals
    32:32:int hashCode() -> hashCode
    22:22:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    37:37:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.CenterInside -> com.bumptech.glide.load.resource.bitmap.CenterInside:
    17:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    27:27:boolean equals(java.lang.Object) -> equals
    32:32:int hashCode() -> hashCode
    22:22:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    37:37:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser:
    37:43:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    75:75:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    150:170:int getOrientation(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    63:63:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream) -> getType
    69:69:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer) -> getType
    88:139:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader) -> getType
    199:203:boolean hasJpegExifPreamble(byte[],int) -> hasJpegExifPreamble
    218:242:int moveToExifSegmentAndGetLength(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader) -> moveToExifSegmentAndGetLength
    177:192:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,byte[],int) -> parseExifSegment
    258:292:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader) -> parseExifSegment
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader:
    392:394:void <init>(java.nio.ByteBuffer) -> <init>
    426:429:int getByte() -> getByte
    399:399:int getUInt16() -> getUInt16
    404:404:short getUInt8() -> getUInt8
    416:420:int read(byte[],int) -> read
    409:410:long skip(long) -> skip
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader:
    353:356:void <init>(byte[],int) -> <init>
    372:372:short getInt16(int) -> getInt16
    368:368:int getInt32(int) -> getInt32
    376:376:boolean isAvailable(int,int) -> isAvailable
    364:364:int length() -> length
    360:360:void order(java.nio.ByteOrder) -> order
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader:
    437:438:void <init>(java.io.InputStream) -> <init>
    490:490:int getByte() -> getByte
    443:443:int getUInt16() -> getUInt16
    448:448:short getUInt8() -> getUInt8
    482:482:int read(byte[],int) -> read
    459:467:long skip(long) -> skip
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy:
    37:96:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast:
    175:175:void <init>() -> <init>
    187:187:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    180:181:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost:
    194:194:void <init>() -> <init>
    210:210:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    199:201:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside:
    235:235:void <init>() -> <init>
    248:248:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    241:241:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside:
    155:155:void <init>() -> <init>
    168:168:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    162:162:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter:
    135:135:void <init>() -> <init>
    148:148:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    142:142:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None:
    217:217:void <init>() -> <init>
    228:228:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding:
    261:256:void <clinit>() -> <clinit>
    256:256:void <init>(java.lang.String,int) -> <init>
    256:256:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String) -> valueOf
    256:256:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values() -> values
com.bumptech.glide.load.resource.bitmap.Downsampler -> com.bumptech.glide.load.resource.bitmap.Downsampler:
    47:124:void <clinit>() -> <clinit>
    136:140:void <init>(java.util.List,android.util.DisplayMetrics,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    472:476:int adjustTargetDensityForError(double) -> adjustTargetDensityForError
    513:526:void calculateConfig(java.io.InputStream,com.bumptech.glide.load.DecodeFormat,boolean,boolean,android.graphics.BitmapFactory$Options,int,int) -> calculateConfig
    353:337:void calculateScaling(com.bumptech.glide.load.ImageHeaderParser$ImageType,java.io.InputStream,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,int,int,int,int,int,android.graphics.BitmapFactory$Options) -> calculateScaling
    162:162:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    192:212:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decode
    221:315:android.graphics.Bitmap decodeFromWrappedStreams(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decodeFromWrappedStreams
    565:603:android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> decodeStream
    643:645:java.lang.String getBitmapString(android.graphics.Bitmap) -> getBitmapString
    691:693:android.graphics.BitmapFactory$Options getDefaultOptions() -> getDefaultOptions
    480:480:int getDensityMultiplier(double) -> getDensityMultiplier
    557:560:int[] getDimensions(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> getDimensions
    633:633:java.lang.String getInBitmapString(android.graphics.BitmapFactory$Options) -> getInBitmapString
    614:614:boolean isScaling(android.graphics.BitmapFactory$Options) -> isScaling
    621:621:void logDecode(int,int,java.lang.String,android.graphics.BitmapFactory$Options,android.graphics.Bitmap,int,int,long) -> logDecode
    655:659:java.io.IOException newIoExceptionForInBitmapAssertion(java.lang.IllegalArgumentException,int,int,java.lang.String,android.graphics.BitmapFactory$Options) -> newIoExceptionForInBitmapAssertion
    703:706:void releaseOptions(android.graphics.BitmapFactory$Options) -> releaseOptions
    711:723:void resetOptions(android.graphics.BitmapFactory$Options) -> resetOptions
    668:686:void setInBitmap(android.graphics.BitmapFactory$Options,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int) -> setInBitmap
    494:500:boolean shouldUsePool(com.bumptech.glide.load.ImageHeaderParser$ImageType) -> shouldUsePool
com.bumptech.glide.load.resource.bitmap.Downsampler$1 -> com.bumptech.glide.load.resource.bitmap.Downsampler$1:
    105:105:void <init>() -> <init>
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter -> com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter:
    18:18:void <clinit>() -> <clinit>
    31:43:com.bumptech.glide.load.engine.Resource convert(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int) -> convert
    49:75:android.graphics.Bitmap drawToBitmap(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int) -> drawToBitmap
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1 -> com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1:
    18:18:void <init>() -> <init>
com.bumptech.glide.load.resource.bitmap.DrawableTransformation -> com.bumptech.glide.load.resource.bitmap.DrawableTransformation:
    36:38:void <init>(com.bumptech.glide.load.Transformation,boolean) -> <init>
    83:85:boolean equals(java.lang.Object) -> equals
    92:92:int hashCode() -> hashCode
    77:77:com.bumptech.glide.load.engine.Resource newDrawableResource(android.content.Context,com.bumptech.glide.load.engine.Resource) -> newDrawableResource
    50:68:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    97:97:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser -> com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser:
    23:23:void <init>() -> <init>
    40:41:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    28:28:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream) -> getType
    34:34:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer) -> getType
com.bumptech.glide.load.resource.bitmap.FitCenter -> com.bumptech.glide.load.resource.bitmap.FitCenter:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    25:25:boolean equals(java.lang.Object) -> equals
    30:30:int hashCode() -> hashCode
    20:20:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    35:35:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.HardwareConfigState -> com.bumptech.glide.load.resource.bitmap.HardwareConfigState:
    40:40:void <clinit>() -> <clinit>
    70:55:void <init>() -> <init>
    60:67:com.bumptech.glide.load.resource.bitmap.HardwareConfigState getInstance() -> getInstance
    103:116:boolean isFdSizeBelowHardwareLimit() -> isFdSizeBelowHardwareLimit
    83:97:boolean setHardwareConfigIfAllowed(int,int,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.DecodeFormat,boolean,boolean) -> setHardwareConfigIfAllowed
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource -> com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource:
    60:62:void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.Resource) -> <init>
    19:19:java.lang.Object get() -> get
    74:74:android.graphics.drawable.BitmapDrawable get() -> get
    68:68:java.lang.Class getResourceClass() -> getResourceClass
    79:79:int getSize() -> getSize
    89:90:void initialize() -> initialize
    55:55:com.bumptech.glide.load.engine.Resource obtain(android.content.res.Resources,com.bumptech.glide.load.engine.Resource) -> obtain
    84:84:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream:
    69:69:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    75:77:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int) -> <init>
    91:93:int available() -> available
    130:137:void close() -> close
    142:148:int fillbuf(java.io.InputStream,byte[]) -> fillbuf
    112:113:void fixMarkLimit() -> fixMarkLimit
    200:202:void mark(int) -> mark
    230:233:int read() -> read
    276:278:int read(byte[],int,int) -> read
    116:120:void release() -> release
    350:351:void reset() -> reset
    372:377:long skip(long) -> skip
    99:99:java.io.IOException streamClosed() -> streamClosed
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException:
    417:417:void <init>(java.lang.String) -> <init>
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder:
    36:38:void <init>(com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    31:31:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    50:55:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> decode
    31:31:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    43:43:boolean handles(android.net.Uri,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder:
    23:25:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    18:18:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    41:66:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    18:18:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    30:30:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks:
    80:82:void <init>(com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream,com.bumptech.glide.util.ExceptionCatchingInputStream) -> <init>
    99:104:void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> onDecodeComplete
    90:90:void onObtainBounds() -> onObtainBounds
com.bumptech.glide.load.resource.bitmap.TransformationUtils -> com.bumptech.glide.load.resource.bitmap.TransformationUtils:
    39:95:void <clinit>() -> <clinit>
    523:529:void applyMatrix(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Matrix) -> applyMatrix
    120:145:android.graphics.Bitmap centerCrop(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> centerCrop
    223:232:android.graphics.Bitmap centerInside(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> centerInside
    513:513:void clear(android.graphics.Canvas) -> clear
    162:205:android.graphics.Bitmap fitCenter(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> fitCenter
    104:104:java.util.concurrent.locks.Lock getBitmapDrawableLock() -> getBitmapDrawableLock
    518:518:android.graphics.Bitmap$Config getNonNullConfig(android.graphics.Bitmap) -> getNonNullConfig
    558:537:void initializeMatrixForRotation(int,android.graphics.Matrix) -> initializeMatrixForRotation
    314:335:android.graphics.Bitmap rotateImageExif(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int) -> rotateImageExif
    246:246:void setAlpha(android.graphics.Bitmap,android.graphics.Bitmap) -> setAlpha
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock -> com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock:
    568:568:void <init>() -> <init>
    598:598:java.util.concurrent.locks.Condition newCondition() -> newCondition
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder:
    14:14:void <init>() -> <init>
    14:14:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    24:24:com.bumptech.glide.load.engine.Resource decode(android.graphics.Bitmap,int,int,com.bumptech.glide.load.Options) -> decode
    14:14:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource -> com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource:
    31:32:void <init>(android.graphics.Bitmap) -> <init>
    27:27:java.lang.Object get() -> get
    44:44:android.graphics.Bitmap get() -> get
    38:38:java.lang.Class getResourceClass() -> getResourceClass
    49:49:int getSize() -> getSize
com.bumptech.glide.load.resource.bitmap.VideoDecoder -> com.bumptech.glide.load.resource.bitmap.VideoDecoder:
    55:102:void <clinit>() -> <clinit>
    119:119:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer) -> <init>
    126:129:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory) -> <init>
    110:110:com.bumptech.glide.load.ResourceDecoder asset(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> asset
    144:175:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    196:206:android.graphics.Bitmap decodeFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> decodeFrame
    266:266:android.graphics.Bitmap decodeOriginalFrame(android.media.MediaMetadataRetriever,long,int) -> decodeOriginalFrame
    223:255:android.graphics.Bitmap decodeScaledFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> decodeScaledFrame
    114:114:com.bumptech.glide.load.ResourceDecoder parcel(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> parcel
com.bumptech.glide.load.resource.bitmap.VideoDecoder$1 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$1:
    56:57:void <init>() -> <init>
    56:56:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
    62:66:void update(byte[],java.lang.Long,java.security.MessageDigest) -> update
com.bumptech.glide.load.resource.bitmap.VideoDecoder$2 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$2:
    83:84:void <init>() -> <init>
    83:83:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
    93:97:void update(byte[],java.lang.Integer,java.security.MessageDigest) -> update
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer:
    281:281:void <init>() -> <init>
    281:281:void <init>(com.bumptech.glide.load.resource.bitmap.VideoDecoder$1) -> <init>
    281:281:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    286:286:void initialize(android.media.MediaMetadataRetriever,android.content.res.AssetFileDescriptor) -> initialize
com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory:
    270:270:void <init>() -> <init>
    272:272:android.media.MediaMetadataRetriever build() -> build
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer:
    291:291:void <init>() -> <init>
    291:291:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    296:296:void initialize(android.media.MediaMetadataRetriever,android.os.ParcelFileDescriptor) -> initialize
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder -> com.bumptech.glide.load.resource.bytes.ByteBufferRewinder:
    15:16:void <init>(java.nio.ByteBuffer) -> <init>
    10:10:java.lang.Object rewindAndGet() -> rewindAndGet
    22:23:java.nio.ByteBuffer rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory -> com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory:
    34:34:void <init>() -> <init>
    34:34:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    39:39:com.bumptech.glide.load.data.DataRewinder build(java.nio.ByteBuffer) -> build
    45:45:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.resource.bytes.BytesResource -> com.bumptech.glide.load.resource.bytes.BytesResource:
    13:14:void <init>(byte[]) -> <init>
    10:10:java.lang.Object get() -> get
    36:36:byte[] get() -> get
    20:20:java.lang.Class getResourceClass() -> getResourceClass
    41:41:int getSize() -> getSize
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat -> com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat:
    29:29:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int) -> getDrawable
    41:41:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,android.content.res.Resources$Theme) -> getDrawable
    49:64:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int,android.content.res.Resources$Theme) -> getDrawable
    75:76:android.graphics.drawable.Drawable loadDrawableV4(android.content.Context,int,android.content.res.Resources$Theme) -> loadDrawableV4
    69:70:android.graphics.drawable.Drawable loadDrawableV7(android.content.Context,int,android.content.res.Resources$Theme) -> loadDrawableV7
com.bumptech.glide.load.resource.drawable.DrawableResource -> com.bumptech.glide.load.resource.drawable.DrawableResource:
    27:28:void <init>(android.graphics.drawable.Drawable) -> <init>
    23:23:java.lang.Object get() -> get
    35:43:android.graphics.drawable.Drawable get() -> get
    48:51:void initialize() -> initialize
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource -> com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource:
    21:21:void <init>(android.graphics.drawable.Drawable) -> <init>
    28:28:java.lang.Class getResourceClass() -> getResourceClass
    35:35:int getSize() -> getSize
    17:17:com.bumptech.glide.load.engine.Resource newInstance(android.graphics.drawable.Drawable) -> newInstance
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder -> com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder:
    48:49:void <init>(android.content.Context) -> <init>
    25:25:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    61:66:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> decode
    72:84:android.content.Context findContextForPackage(android.net.Uri,java.lang.String) -> findContextForPackage
    121:125:int findResourceIdFromResourceIdUri(android.net.Uri) -> findResourceIdFromResourceIdUri
    104:113:int findResourceIdFromTypeAndNameResourceUri(android.content.Context,android.net.Uri) -> findResourceIdFromTypeAndNameResourceUri
    91:97:int findResourceIdFromUri(android.content.Context,android.net.Uri) -> findResourceIdFromUri
    25:25:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    54:54:boolean handles(android.net.Uri,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder -> com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder:
    13:13:void <init>() -> <init>
    13:13:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:com.bumptech.glide.load.engine.Resource decode(android.graphics.drawable.Drawable,int,int,com.bumptech.glide.load.Options) -> decode
    13:13:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.file.FileDecoder -> com.bumptech.glide.load.resource.file.FileDecoder:
    13:13:void <init>() -> <init>
    13:13:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int,com.bumptech.glide.load.Options) -> decode
    13:13:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.file.FileResource -> com.bumptech.glide.load.resource.file.FileResource:
    13:13:void <init>(java.io.File) -> <init>
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder:
    37:38:void <clinit>() -> <clinit>
    56:56:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    66:71:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory) -> <init>
    35:35:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    83:87:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    94:122:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.load.Options) -> decode
    128:135:int getSampleSize(com.bumptech.glide.gifdecoder.GifHeader,int,int) -> getSampleSize
    35:35:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    76:77:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory:
    144:144:void <init>() -> <init>
    147:147:com.bumptech.glide.gifdecoder.GifDecoder build(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> build
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool:
    152:153:void <init>() -> <init>
    156:160:com.bumptech.glide.gifdecoder.GifHeaderParser obtain(java.nio.ByteBuffer) -> obtain
    164:166:void release(com.bumptech.glide.gifdecoder.GifHeaderParser) -> release
com.bumptech.glide.load.resource.gif.GifBitmapProvider -> com.bumptech.glide.load.resource.gif.GifBitmapProvider:
    33:35:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    41:41:android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config) -> obtain
    52:55:byte[] obtainByteArray(int) -> obtainByteArray
    69:72:int[] obtainIntArray(int) -> obtainIntArray
    46:46:void release(android.graphics.Bitmap) -> release
    60:63:void release(byte[]) -> release
    78:81:void release(int[]) -> release
com.bumptech.glide.load.resource.gif.GifDrawable -> com.bumptech.glide.load.resource.gif.GifDrawable:
    146:146:void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap) -> <init>
    158:159:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable$GifState) -> <init>
    295:305:void draw(android.graphics.Canvas) -> draw
    340:342:android.graphics.drawable.Drawable$Callback findCallback() -> findCallback
    188:188:java.nio.ByteBuffer getBuffer() -> getBuffer
    377:377:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    319:322:android.graphics.Rect getDestRect() -> getDestRect
    173:173:android.graphics.Bitmap getFirstFrame() -> getFirstFrame
    192:192:int getFrameCount() -> getFrameCount
    202:202:int getFrameIndex() -> getFrameIndex
    274:274:int getIntrinsicHeight() -> getIntrinsicHeight
    269:269:int getIntrinsicWidth() -> getIntrinsicWidth
    326:329:android.graphics.Paint getPaint() -> getPaint
    169:169:int getSize() -> getSize
    279:279:boolean isRunning() -> isRunning
    368:370:void notifyAnimationEndToListeners() -> notifyAnimationEndToListeners
    289:290:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    349:363:void onFrameReady() -> onFrameReady
    384:385:void recycle() -> recycle
    206:206:void resetLoopCount() -> resetLoopCount
    310:310:void setAlpha(int) -> setAlpha
    315:315:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    180:180:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> setFrameTransformation
    255:264:boolean setVisible(boolean,boolean) -> setVisible
    222:225:void start() -> start
    236:244:void startRunning() -> startRunning
    231:232:void stop() -> stop
    249:250:void stopRunning() -> stopRunning
com.bumptech.glide.load.resource.gif.GifDrawable$GifState -> com.bumptech.glide.load.resource.gif.GifDrawable$GifState:
    450:451:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader) -> <init>
    457:457:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    463:463:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.bumptech.glide.load.resource.gif.GifDrawableEncoder -> com.bumptech.glide.load.resource.gif.GifDrawableEncoder:
    17:17:void <init>() -> <init>
    17:17:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    29:36:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    23:23:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
com.bumptech.glide.load.resource.gif.GifDrawableResource -> com.bumptech.glide.load.resource.gif.GifDrawableResource:
    15:15:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable) -> <init>
    21:21:java.lang.Class getResourceClass() -> getResourceClass
    26:26:int getSize() -> getSize
    37:37:void initialize() -> initialize
    31:32:void recycle() -> recycle
com.bumptech.glide.load.resource.gif.GifDrawableTransformation -> com.bumptech.glide.load.resource.gif.GifDrawableTransformation:
    22:23:void <init>(com.bumptech.glide.load.Transformation) -> <init>
    53:55:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    31:47:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    67:67:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.gif.GifFrameLoader -> com.bumptech.glide.load.resource.gif.GifFrameLoader:
    65:64:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> <init>
    82:93:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.RequestManager,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,com.bumptech.glide.RequestBuilder,com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> <init>
    179:195:void clear() -> clear
    153:153:java.nio.ByteBuffer getBuffer() -> getBuffer
    199:199:android.graphics.Bitmap getCurrentFrame() -> getCurrentFrame
    144:144:int getCurrentIndex() -> getCurrentIndex
    107:107:android.graphics.Bitmap getFirstFrame() -> getFirstFrame
    157:157:int getFrameCount() -> getFrameCount
    348:348:com.bumptech.glide.load.Key getFrameSignature() -> getFrameSignature
    148:148:int getFrameSize() -> getFrameSize
    136:136:int getHeight() -> getHeight
    337:338:com.bumptech.glide.RequestBuilder getRequestBuilder(com.bumptech.glide.RequestManager,int,int) -> getRequestBuilder
    140:140:int getSize() -> getSize
    132:132:int getWidth() -> getWidth
    203:226:void loadNextFrame() -> loadNextFrame
    252:284:void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget) -> onFrameReady
    230:232:void recycleFirstFrame() -> recycleFirstFrame
    97:99:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> setFrameTransformation
    165:171:void start() -> start
    175:175:void stop() -> stop
    111:112:void subscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback) -> subscribe
    125:127:void unsubscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback) -> unsubscribe
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget -> com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget:
    315:318:void <init>(android.os.Handler,int,long) -> <init>
    322:322:android.graphics.Bitmap getResource() -> getResource
    308:308:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    328:330:void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition) -> onResourceReady
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback -> com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback:
    292:292:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader) -> <init>
    296:302:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder -> com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder:
    19:20:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    16:16:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    31:32:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Options) -> decode
    16:16:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.gif.GifOptions -> com.bumptech.glide.load.resource.gif.GifOptions:
    18:26:void <clinit>() -> <clinit>
com.bumptech.glide.load.resource.gif.StreamGifDecoder -> com.bumptech.glide.load.resource.gif.StreamGifDecoder:
    31:34:void <init>(java.util.List,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    23:23:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    46:51:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    39:40:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
    56:66:byte[] inputStreamToBytes(java.io.InputStream) -> inputStreamToBytes
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder -> com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder:
    22:22:void <init>() -> <init>
    27:29:void <init>(android.graphics.Bitmap$CompressFormat,int) -> <init>
    36:39:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder -> com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder:
    37:38:void <init>(android.content.res.Resources) -> <init>
    45:45:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder -> com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder:
    27:30:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> <init>
    37:42:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder -> com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder:
    17:17:void <init>() -> <init>
    22:24:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.TranscoderRegistry -> com.bumptech.glide.load.resource.transcode.TranscoderRegistry:
    12:13:void <init>() -> <init>
    48:57:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get(java.lang.Class,java.lang.Class) -> get
    64:77:java.util.List getTranscodeClasses(java.lang.Class,java.lang.Class) -> getTranscodeClasses
    28:29:void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> register
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry -> com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry:
    86:89:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> <init>
    99:99:boolean handles(java.lang.Class,java.lang.Class) -> handles
com.bumptech.glide.load.resource.transcode.UnitTranscoder -> com.bumptech.glide.load.resource.transcode.UnitTranscoder:
    14:14:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    18:18:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get() -> get
com.bumptech.glide.manager.ActivityFragmentLifecycle -> com.bumptech.glide.manager.ActivityFragmentLifecycle:
    13:15:void <init>() -> <init>
    32:39:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
    63:65:void onDestroy() -> onDestroy
    49:51:void onStart() -> onStart
    56:58:void onStop() -> onStop
    45:45:void removeListener(com.bumptech.glide.manager.LifecycleListener) -> removeListener
com.bumptech.glide.manager.ApplicationLifecycle -> com.bumptech.glide.manager.ApplicationLifecycle:
    12:12:void <init>() -> <init>
    15:15:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
com.bumptech.glide.manager.DefaultConnectivityMonitor -> com.bumptech.glide.manager.DefaultConnectivityMonitor:
    41:43:void <init>(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> <init>
    82:91:boolean isConnected(android.content.Context) -> isConnected
    101:101:void onStart() -> onStart
    106:106:void onStop() -> onStop
    47:61:void register() -> register
    67:72:void unregister() -> unregister
com.bumptech.glide.manager.DefaultConnectivityMonitor$1 -> com.bumptech.glide.manager.DefaultConnectivityMonitor$1:
    26:26:void <init>(com.bumptech.glide.manager.DefaultConnectivityMonitor) -> <init>
    29:36:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.bumptech.glide.manager.DefaultConnectivityMonitorFactory -> com.bumptech.glide.manager.DefaultConnectivityMonitorFactory:
    15:15:void <init>() -> <init>
    24:34:com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> build
com.bumptech.glide.manager.EmptyRequestManagerTreeNode -> com.bumptech.glide.manager.EmptyRequestManagerTreeNode:
    11:11:void <init>() -> <init>
com.bumptech.glide.manager.NullConnectivityMonitor -> com.bumptech.glide.manager.NullConnectivityMonitor:
    6:6:void <init>() -> <init>
com.bumptech.glide.manager.RequestManagerFragment -> com.bumptech.glide.manager.RequestManagerFragment:
    45:45:void <init>() -> <init>
    50:51:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    86:86:void addChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment) -> addChildRequestManagerFragment
    65:65:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    137:142:android.app.Fragment getParentFragmentUsingHint() -> getParentFragmentUsingHint
    73:73:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    81:81:com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode() -> getRequestManagerTreeNode
    181:187:void onAttach(android.app.Activity) -> onAttach
    212:214:void onDestroy() -> onDestroy
    194:195:void onDetach() -> onDetach
    200:201:void onStart() -> onStart
    206:207:void onStop() -> onStop
    163:167:void registerFragmentWithRoot(android.app.Activity) -> registerFragmentWithRoot
    91:91:void removeChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment) -> removeChildRequestManagerFragment
    127:129:void setParentFragmentHint(android.app.Fragment) -> setParentFragmentHint
    60:60:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
    219:219:java.lang.String toString() -> toString
    172:174:void unregisterFragmentWithRoot() -> unregisterFragmentWithRoot
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode -> com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode:
    225:225:void <init>(com.bumptech.glide.manager.RequestManagerFragment) -> <init>
    244:244:java.lang.String toString() -> toString
com.bumptech.glide.manager.RequestManagerRetriever -> com.bumptech.glide.manager.RequestManagerRetriever:
    486:486:void <clinit>() -> <clinit>
    79:81:void <init>(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory) -> <init>
    322:323:void assertNotDestroyed(android.app.Activity) -> assertNotDestroyed
    311:314:android.app.Activity findActivity(android.content.Context) -> findActivity
    271:279:void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap) -> findAllFragmentsWithViews
    290:303:void findAllFragmentsWithViewsPreO(android.app.FragmentManager,androidx.collection.ArrayMap) -> findAllFragmentsWithViewsPreO
    203:209:void findAllSupportFragmentsWithViews(java.util.Collection,java.util.Map) -> findAllSupportFragmentsWithViews
    241:259:android.app.Fragment findFragment(android.view.View,android.app.Activity) -> findFragment
    215:233:androidx.fragment.app.Fragment findSupportFragment(android.view.View,androidx.fragment.app.FragmentActivity) -> findSupportFragment
    382:390:com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean) -> fragmentGet
    114:113:com.bumptech.glide.RequestManager get(android.content.Context) -> get
    129:134:com.bumptech.glide.RequestManager get(androidx.fragment.app.FragmentActivity) -> get
    141:147:com.bumptech.glide.RequestManager get(androidx.fragment.app.Fragment) -> get
    154:159:com.bumptech.glide.RequestManager get(android.app.Activity) -> get
    167:194:com.bumptech.glide.RequestManager get(android.view.View) -> get
    332:333:com.bumptech.glide.RequestManager get(android.app.Fragment) -> get
    87:107:com.bumptech.glide.RequestManager getApplicationManager(android.content.Context) -> getApplicationManager
    349:348:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.Activity) -> getRequestManagerFragment
    358:369:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager,android.app.Fragment,boolean) -> getRequestManagerFragment
    398:397:com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentActivity) -> getSupportRequestManagerFragment
    411:422:com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,boolean) -> getSupportRequestManagerFragment
    453:469:boolean handleMessage(android.os.Message) -> handleMessage
    404:404:boolean isActivityVisible(android.app.Activity) -> isActivityVisible
    435:443:com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,boolean) -> supportFragmentGet
com.bumptech.glide.manager.RequestManagerRetriever$1 -> com.bumptech.glide.manager.RequestManagerRetriever$1:
    486:486:void <init>() -> <init>
    491:491:com.bumptech.glide.RequestManager build(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context) -> build
com.bumptech.glide.manager.RequestTracker -> com.bumptech.glide.manager.RequestTracker:
    20:34:void <init>() -> <init>
    75:81:boolean clearRemoveAndMaybeRecycle(com.bumptech.glide.request.Request,boolean) -> clearRemoveAndMaybeRecycle
    66:66:boolean clearRemoveAndRecycle(com.bumptech.glide.request.Request) -> clearRemoveAndRecycle
    140:145:void clearRequests() -> clearRequests
    98:102:void pauseRequests() -> pauseRequests
    152:159:void restartRequests() -> restartRequests
    122:131:void resumeRequests() -> resumeRequests
    42:50:void runRequest(com.bumptech.glide.request.Request) -> runRequest
    167:167:java.lang.String toString() -> toString
com.bumptech.glide.manager.SupportRequestManagerFragment -> com.bumptech.glide.manager.SupportRequestManagerFragment:
    39:39:void <init>() -> <init>
    44:45:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    81:81:void addChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment) -> addChildRequestManagerFragment
    59:59:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    124:125:androidx.fragment.app.Fragment getParentFragmentUsingHint() -> getParentFragmentUsingHint
    67:67:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    77:77:com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode() -> getRequestManagerTreeNode
    161:167:void onAttach(android.content.Context) -> onAttach
    193:195:void onDestroy() -> onDestroy
    174:176:void onDetach() -> onDetach
    181:182:void onStart() -> onStart
    187:188:void onStop() -> onStop
    144:148:void registerFragmentWithRoot(androidx.fragment.app.FragmentActivity) -> registerFragmentWithRoot
    85:85:void removeChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment) -> removeChildRequestManagerFragment
    116:118:void setParentFragmentHint(androidx.fragment.app.Fragment) -> setParentFragmentHint
    54:54:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
    200:200:java.lang.String toString() -> toString
    153:155:void unregisterFragmentWithRoot() -> unregisterFragmentWithRoot
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode -> com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode:
    206:206:void <init>(com.bumptech.glide.manager.SupportRequestManagerFragment) -> <init>
    224:224:java.lang.String toString() -> toString
com.bumptech.glide.manager.TargetTracker -> com.bumptech.glide.manager.TargetTracker:
    15:17:void <init>() -> <init>
    54:54:void clear() -> clear
    50:50:java.util.List getAll() -> getAll
    43:44:void onDestroy() -> onDestroy
    29:30:void onStart() -> onStart
    36:37:void onStop() -> onStop
    20:20:void track(com.bumptech.glide.request.target.Target) -> track
    24:24:void untrack(com.bumptech.glide.request.target.Target) -> untrack
com.bumptech.glide.module.AppGlideModule -> com.bumptech.glide.module.AppGlideModule:
    26:26:void <init>() -> <init>
com.bumptech.glide.module.LibraryGlideModule -> com.bumptech.glide.module.LibraryGlideModule:
    20:20:void <init>() -> <init>
com.bumptech.glide.module.ManifestParser -> com.bumptech.glide.module.ManifestParser:
    23:24:void <init>(android.content.Context) -> <init>
    29:54:java.util.List parse() -> parse
    67:69:com.bumptech.glide.module.GlideModule parseModule(java.lang.String) -> parseModule
    93:93:void throwInstantiateGlideModuleException(java.lang.Class,java.lang.Exception) -> throwInstantiateGlideModuleException
com.bumptech.glide.provider.EncoderRegistry -> com.bumptech.glide.provider.EncoderRegistry:
    13:15:void <init>() -> <init>
    29:30:void append(java.lang.Class,com.bumptech.glide.load.Encoder) -> append
    20:25:com.bumptech.glide.load.Encoder getEncoder(java.lang.Class) -> getEncoder
com.bumptech.glide.provider.EncoderRegistry$Entry -> com.bumptech.glide.provider.EncoderRegistry$Entry:
    40:42:void <init>(java.lang.Class,com.bumptech.glide.load.Encoder) -> <init>
    46:46:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.provider.ImageHeaderParserRegistry -> com.bumptech.glide.provider.ImageHeaderParserRegistry:
    11:12:void <init>() -> <init>
    20:21:void add(com.bumptech.glide.load.ImageHeaderParser) -> add
    16:16:java.util.List getParsers() -> getParsers
com.bumptech.glide.provider.LoadPathCache -> com.bumptech.glide.provider.LoadPathCache:
    18:23:void <clinit>() -> <clinit>
    17:34:void <init>() -> <init>
    54:58:com.bumptech.glide.load.engine.LoadPath get(java.lang.Class,java.lang.Class,java.lang.Class) -> get
    77:81:com.bumptech.glide.util.MultiClassKey getKey(java.lang.Class,java.lang.Class,java.lang.Class) -> getKey
    42:42:boolean isEmptyLoadPath(com.bumptech.glide.load.engine.LoadPath) -> isEmptyLoadPath
    68:72:void put(java.lang.Class,java.lang.Class,java.lang.Class,com.bumptech.glide.load.engine.LoadPath) -> put
com.bumptech.glide.provider.ModelToResourceClassCache -> com.bumptech.glide.provider.ModelToResourceClassCache:
    14:16:void <init>() -> <init>
    24:33:java.util.List get(java.lang.Class,java.lang.Class,java.lang.Class) -> get
    43:46:void put(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List) -> put
com.bumptech.glide.provider.ResourceDecoderRegistry -> com.bumptech.glide.provider.ResourceDecoderRegistry:
    16:18:void <init>() -> <init>
    77:78:void append(java.lang.String,com.bumptech.glide.load.ResourceDecoder,java.lang.Class,java.lang.Class) -> append
    37:51:java.util.List getDecoders(java.lang.Class,java.lang.Class) -> getDecoders
    88:97:java.util.List getOrAddEntryList(java.lang.String) -> getOrAddEntryList
    58:71:java.util.List getResourceClasses(java.lang.Class,java.lang.Class) -> getResourceClasses
    21:31:void setBucketPriorityList(java.util.List) -> setBucketPriorityList
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry -> com.bumptech.glide.provider.ResourceDecoderRegistry$Entry:
    106:109:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> <init>
    113:114:boolean handles(java.lang.Class,java.lang.Class) -> handles
com.bumptech.glide.provider.ResourceEncoderRegistry -> com.bumptech.glide.provider.ResourceEncoderRegistry:
    14:16:void <init>() -> <init>
    20:21:void append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> append
    32:39:com.bumptech.glide.load.ResourceEncoder get(java.lang.Class) -> get
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry -> com.bumptech.glide.provider.ResourceEncoderRegistry$Entry:
    46:48:void <init>(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> <init>
    53:53:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.request.BaseRequestOptions -> com.bumptech.glide.request.BaseRequestOptions:
    49:106:void <init>() -> <init>
    1129:1221:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    1303:1308:com.bumptech.glide.request.BaseRequestOptions autoClone() -> autoClone
    742:742:com.bumptech.glide.request.BaseRequestOptions centerCrop() -> centerCrop
    48:48:java.lang.Object clone() -> clone
    546:555:com.bumptech.glide.request.BaseRequestOptions clone() -> clone
    575:581:com.bumptech.glide.request.BaseRequestOptions decode(java.lang.Class) -> decode
    225:231:com.bumptech.glide.request.BaseRequestOptions diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategy
    695:695:com.bumptech.glide.request.BaseRequestOptions downsample(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> downsample
    1227:1249:boolean equals(java.lang.Object) -> equals
    1354:1354:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy() -> getDiskCacheStrategy
    1365:1365:int getErrorId() -> getErrorId
    1360:1360:android.graphics.drawable.Drawable getErrorPlaceholder() -> getErrorPlaceholder
    1387:1387:android.graphics.drawable.Drawable getFallbackDrawable() -> getFallbackDrawable
    1381:1381:int getFallbackId() -> getFallbackId
    1453:1453:boolean getOnlyRetrieveFromCache() -> getOnlyRetrieveFromCache
    1344:1344:com.bumptech.glide.load.Options getOptions() -> getOptions
    1423:1423:int getOverrideHeight() -> getOverrideHeight
    1415:1415:int getOverrideWidth() -> getOverrideWidth
    1376:1376:android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    1370:1370:int getPlaceholderId() -> getPlaceholderId
    1411:1411:com.bumptech.glide.Priority getPriority() -> getPriority
    1349:1349:java.lang.Class getResourceClass() -> getResourceClass
    1402:1402:com.bumptech.glide.load.Key getSignature() -> getSignature
    1427:1427:float getSizeMultiplier() -> getSizeMultiplier
    1392:1392:android.content.res.Resources$Theme getTheme() -> getTheme
    1334:1334:java.util.Map getTransformations() -> getTransformations
    1447:1447:boolean getUseAnimationPool() -> getUseAnimationPool
    1441:1441:boolean getUseUnlimitedSourceGeneratorsPool() -> getUseUnlimitedSourceGeneratorsPool
    1256:1276:int hashCode() -> hashCode
    1397:1397:boolean isMemoryCacheable() -> isMemoryCacheable
    1406:1406:boolean isPrioritySet() -> isPrioritySet
    1431:1431:boolean isScaleOnlyOrNoTransform() -> isScaleOnlyOrNoTransform
    1435:1435:boolean isSet(int) -> isSet
    585:585:boolean isTransformationAllowed() -> isTransformationAllowed
    1339:1339:boolean isTransformationRequired() -> isTransformationRequired
    589:589:boolean isTransformationSet() -> isTransformationSet
    1419:1419:boolean isValidOverride() -> isValidOverride
    1288:1290:com.bumptech.glide.request.BaseRequestOptions lock() -> lock
    727:727:com.bumptech.glide.request.BaseRequestOptions optionalCenterCrop() -> optionalCenterCrop
    792:792:com.bumptech.glide.request.BaseRequestOptions optionalCenterInside() -> optionalCenterInside
    759:759:com.bumptech.glide.request.BaseRequestOptions optionalFitCenter() -> optionalFitCenter
    878:878:com.bumptech.glide.request.BaseRequestOptions optionalScaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> optionalScaleOnlyTransform
    846:851:com.bumptech.glide.request.BaseRequestOptions optionalTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> optionalTransform
    476:484:com.bumptech.glide.request.BaseRequestOptions override(int,int) -> override
    289:299:com.bumptech.glide.request.BaseRequestOptions placeholder(int) -> placeholder
    243:250:com.bumptech.glide.request.BaseRequestOptions priority(com.bumptech.glide.Priority) -> priority
    889:890:com.bumptech.glide.request.BaseRequestOptions scaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation,boolean) -> scaleOnlyTransform
    1314:1315:com.bumptech.glide.request.BaseRequestOptions selfOrThrowIfLocked() -> selfOrThrowIfLocked
    562:569:com.bumptech.glide.request.BaseRequestOptions set(com.bumptech.glide.load.Option,java.lang.Object) -> set
    515:521:com.bumptech.glide.request.BaseRequestOptions signature(com.bumptech.glide.load.Key) -> signature
    127:132:com.bumptech.glide.request.BaseRequestOptions sizeMultiplier(float) -> sizeMultiplier
    454:461:com.bumptech.glide.request.BaseRequestOptions skipMemoryCache(boolean) -> skipMemoryCache
    861:866:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> transform
    912:912:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation) -> transform
    989:1003:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation,boolean) -> transform
    1035:1052:com.bumptech.glide.request.BaseRequestOptions transform(java.lang.Class,com.bumptech.glide.load.Transformation,boolean) -> transform
    181:188:com.bumptech.glide.request.BaseRequestOptions useAnimationPool(boolean) -> useAnimationPool
com.bumptech.glide.request.ErrorRequestCoordinator -> com.bumptech.glide.request.ErrorRequestCoordinator:
    17:18:void <init>(com.bumptech.glide.request.RequestCoordinator) -> <init>
    28:29:void begin() -> begin
    99:99:boolean canNotifyCleared(com.bumptech.glide.request.Request) -> canNotifyCleared
    94:94:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> canNotifyStatusChanged
    85:85:boolean canSetImage(com.bumptech.glide.request.Request) -> canSetImage
    35:39:void clear() -> clear
    116:116:boolean isAnyResourceSet() -> isAnyResourceSet
    60:60:boolean isCleared() -> isCleared
    50:50:boolean isComplete() -> isComplete
    76:78:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    65:65:boolean isFailed() -> isFailed
    55:55:boolean isResourceSet() -> isResourceSet
    45:45:boolean isRunning() -> isRunning
    111:111:boolean isValidRequest(com.bumptech.glide.request.Request) -> isValidRequest
    132:140:void onRequestFailed(com.bumptech.glide.request.Request) -> onRequestFailed
    125:126:void onRequestSuccess(com.bumptech.glide.request.Request) -> onRequestSuccess
    103:103:boolean parentCanNotifyCleared() -> parentCanNotifyCleared
    107:107:boolean parentCanNotifyStatusChanged() -> parentCanNotifyStatusChanged
    89:89:boolean parentCanSetImage() -> parentCanSetImage
    120:120:boolean parentIsAnyResourceSet() -> parentIsAnyResourceSet
    70:71:void recycle() -> recycle
    22:23:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request) -> setRequests
com.bumptech.glide.request.RequestOptions -> com.bumptech.glide.request.RequestOptions:
    26:26:void <init>() -> <init>
    264:264:com.bumptech.glide.request.RequestOptions decodeTypeOf(java.lang.Class) -> decodeTypeOf
    63:63:com.bumptech.glide.request.RequestOptions diskCacheStrategyOf(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategyOf
    161:161:com.bumptech.glide.request.RequestOptions signatureOf(com.bumptech.glide.load.Key) -> signatureOf
com.bumptech.glide.request.SingleRequest -> com.bumptech.glide.request.SingleRequest:
    45:55:void <clinit>() -> <clinit>
    160:86:void <init>() -> <init>
    304:305:void assertNotCallingCallbacks() -> assertNotCallingCallbacks
    235:251:void begin() -> begin
    488:488:boolean canNotifyCleared() -> canNotifyCleared
    492:492:boolean canNotifyStatusChanged() -> canNotifyStatusChanged
    484:484:boolean canSetResource() -> canSetResource
    293:298:void cancel() -> cancel
    322:337:void clear() -> clear
    370:376:android.graphics.drawable.Drawable getErrorDrawable() -> getErrorDrawable
    390:396:android.graphics.drawable.Drawable getFallbackDrawable() -> getFallbackDrawable
    380:386:android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    205:205:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    180:200:void init(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor) -> init
    361:361:boolean isCleared() -> isCleared
    351:351:boolean isComplete() -> isComplete
    638:653:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    366:366:boolean isFailed() -> isFailed
    496:496:boolean isFirstReadyResource() -> isFirstReadyResource
    356:356:boolean isResourceSet() -> isResourceSet
    346:346:boolean isRunning() -> isRunning
    658:662:boolean listenerCountEquals(com.bumptech.glide.request.SingleRequest) -> listenerCountEquals
    400:402:android.graphics.drawable.Drawable loadDrawable(int) -> loadDrawable
    666:666:void logV(java.lang.String) -> logV
    480:480:int maybeApplySizeMultiplier(int,float) -> maybeApplySizeMultiplier
    506:507:void notifyLoadFailed() -> notifyLoadFailed
    500:501:void notifyLoadSuccess() -> notifyLoadSuccess
    134:139:com.bumptech.glide.request.SingleRequest obtain(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor) -> obtain
    594:595:void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> onLoadFailed
    598:629:void onLoadFailed(com.bumptech.glide.load.engine.GlideException,int) -> onLoadFailed
    515:534:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource) -> onResourceReady
    556:585:void onResourceReady(com.bumptech.glide.load.engine.Resource,java.lang.Object,com.bumptech.glide.load.DataSource) -> onResourceReady
    430:477:void onSizeReady(int,int) -> onSizeReady
    210:231:void recycle() -> recycle
    340:341:void releaseResource(com.bumptech.glide.load.engine.Resource) -> releaseResource
    406:423:void setErrorPlaceholder() -> setErrorPlaceholder
com.bumptech.glide.request.SingleRequest$1 -> com.bumptech.glide.request.SingleRequest$1:
    46:46:void <init>() -> <init>
    46:46:java.lang.Object create() -> create
    49:49:com.bumptech.glide.request.SingleRequest create() -> create
com.bumptech.glide.request.SingleRequest$Status -> com.bumptech.glide.request.SingleRequest$Status:
    61:57:void <clinit>() -> <clinit>
    57:57:void <init>(java.lang.String,int) -> <init>
    57:57:com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String) -> valueOf
    57:57:com.bumptech.glide.request.SingleRequest$Status[] values() -> values
com.bumptech.glide.request.ThumbnailRequestCoordinator -> com.bumptech.glide.request.ThumbnailRequestCoordinator:
    20:20:void <init>() -> <init>
    23:24:void <init>(com.bumptech.glide.request.RequestCoordinator) -> <init>
    112:119:void begin() -> begin
    60:60:boolean canNotifyCleared(com.bumptech.glide.request.Request) -> canNotifyCleared
    55:55:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> canNotifyStatusChanged
    40:40:boolean canSetImage(com.bumptech.glide.request.Request) -> canSetImage
    125:127:void clear() -> clear
    73:73:boolean isAnyResourceSet() -> isAnyResourceSet
    153:153:boolean isCleared() -> isCleared
    143:143:boolean isComplete() -> isComplete
    172:175:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    161:161:boolean isFailed() -> isFailed
    148:148:boolean isResourceSet() -> isResourceSet
    135:135:boolean isRunning() -> isRunning
    94:99:void onRequestFailed(com.bumptech.glide.request.Request) -> onRequestFailed
    78:88:void onRequestSuccess(com.bumptech.glide.request.Request) -> onRequestSuccess
    64:64:boolean parentCanNotifyCleared() -> parentCanNotifyCleared
    68:68:boolean parentCanNotifyStatusChanged() -> parentCanNotifyStatusChanged
    44:44:boolean parentCanSetImage() -> parentCanSetImage
    104:104:boolean parentIsAnyResourceSet() -> parentIsAnyResourceSet
    166:167:void recycle() -> recycle
    28:29:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request) -> setRequests
com.bumptech.glide.request.target.BaseTarget -> com.bumptech.glide.request.target.BaseTarget:
    28:28:void <init>() -> <init>
    40:40:com.bumptech.glide.request.Request getRequest() -> getRequest
    34:34:void setRequest(com.bumptech.glide.request.Request) -> setRequest
com.bumptech.glide.request.target.BitmapImageViewTarget -> com.bumptech.glide.request.target.BitmapImageViewTarget:
    14:14:void <init>(android.widget.ImageView) -> <init>
    10:10:void setResource(java.lang.Object) -> setResource
    35:35:void setResource(android.graphics.Bitmap) -> setResource
com.bumptech.glide.request.target.DrawableImageViewTarget -> com.bumptech.glide.request.target.DrawableImageViewTarget:
    13:13:void <init>(android.widget.ImageView) -> <init>
    10:10:void setResource(java.lang.Object) -> setResource
    28:28:void setResource(android.graphics.drawable.Drawable) -> setResource
com.bumptech.glide.request.target.ImageViewTarget -> com.bumptech.glide.request.target.ImageViewTarget:
    26:26:void <init>(android.widget.ImageView) -> <init>
    132:136:void maybeUpdateAnimatable(java.lang.Object) -> maybeUpdateAnimatable
    93:98:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    80:82:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    67:69:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    103:104:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    112:113:void onStart() -> onStart
    119:120:void onStop() -> onStop
    56:56:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    127:128:void setResourceInternal(java.lang.Object) -> setResourceInternal
com.bumptech.glide.request.target.ImageViewTargetFactory -> com.bumptech.glide.request.target.ImageViewTargetFactory:
    12:12:void <init>() -> <init>
    17:22:com.bumptech.glide.request.target.ViewTarget buildTarget(android.widget.ImageView,java.lang.Class) -> buildTarget
com.bumptech.glide.request.target.SimpleTarget -> com.bumptech.glide.request.target.SimpleTarget:
    81:81:void <init>() -> <init>
    93:95:void <init>(int,int) -> <init>
    105:106:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
com.bumptech.glide.request.target.ViewTarget -> com.bumptech.glide.request.target.ViewTarget:
    64:66:void <init>(android.view.View) -> <init>
    265:271:com.bumptech.glide.request.Request getRequest() -> getRequest
    221:221:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    294:297:java.lang.Object getTag() -> getTag
    184:189:void maybeAddAttachStateListener() -> maybeAddAttachStateListener
    193:198:void maybeRemoveAttachStateListener() -> maybeRemoveAttachStateListener
    233:237:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    179:180:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    227:227:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    248:248:void setRequest(com.bumptech.glide.request.Request) -> setRequest
    284:288:void setTag(java.lang.Object) -> setTag
    280:280:java.lang.String toString() -> toString
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer:
    342:343:void <init>(android.view.View) -> <init>
    371:382:void checkCurrentDimens() -> checkCurrentDimens
    422:427:void clearCallbacksAndListener() -> clearCallbacksAndListener
    348:356:int getMaxDisplayLength(android.content.Context) -> getMaxDisplayLength
    386:401:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    460:496:int getTargetDimen(int,int,int) -> getTargetDimen
    435:438:int getTargetHeight() -> getTargetHeight
    442:445:int getTargetWidth() -> getTargetWidth
    431:431:boolean isViewStateAndSizeValid(int,int) -> isViewStateAndSizeValid
    364:365:void notifyCbs(int,int) -> notifyCbs
    412:412:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener:
    513:514:void <init>(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer) -> <init>
    519:524:boolean onPreDraw() -> onPreDraw
com.bumptech.glide.request.transition.NoTransition -> com.bumptech.glide.request.transition.NoTransition:
    13:15:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    36:36:com.bumptech.glide.request.transition.TransitionFactory getFactory() -> getFactory
com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory -> com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory:
    23:23:void <init>() -> <init>
    27:27:com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean) -> build
com.bumptech.glide.signature.EmptySignature -> com.bumptech.glide.signature.EmptySignature:
    11:11:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    15:15:com.bumptech.glide.signature.EmptySignature obtain() -> obtain
com.bumptech.glide.signature.ObjectKey -> com.bumptech.glide.signature.ObjectKey:
    20:21:void <init>(java.lang.Object) -> <init>
    33:35:boolean equals(java.lang.Object) -> equals
    42:42:int hashCode() -> hashCode
    26:26:java.lang.String toString() -> toString
    47:47:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.util.ByteBufferUtil -> com.bumptech.glide.util.ByteBufferUtil:
    22:22:void <clinit>() -> <clinit>
    33:59:java.nio.ByteBuffer fromFile(java.io.File) -> fromFile
    160:161:com.bumptech.glide.util.ByteBufferUtil$SafeArray getSafeArray(java.nio.ByteBuffer) -> getSafeArray
    119:126:byte[] toBytes(java.nio.ByteBuffer) -> toBytes
    65:88:void toFile(java.nio.ByteBuffer,java.io.File) -> toFile
    133:133:java.io.InputStream toStream(java.nio.ByteBuffer) -> toStream
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream -> com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream:
    185:186:void <init>(java.nio.ByteBuffer) -> <init>
    191:191:int available() -> available
    204:205:void mark(int) -> mark
    196:199:int read() -> read
    214:218:int read(byte[],int,int) -> read
    224:225:void reset() -> reset
    233:238:long skip(long) -> skip
com.bumptech.glide.util.ByteBufferUtil$SafeArray -> com.bumptech.glide.util.ByteBufferUtil$SafeArray:
    173:176:void <init>(byte[],int,int) -> <init>
com.bumptech.glide.util.CachedHashCodeArrayMap -> com.bumptech.glide.util.CachedHashCodeArrayMap:
    15:15:void <init>() -> <init>
    21:22:void clear() -> clear
    51:54:int hashCode() -> hashCode
    33:34:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    39:40:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    45:46:java.lang.Object removeAt(int) -> removeAt
    27:28:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
com.bumptech.glide.util.ContentLengthInputStream -> com.bumptech.glide.util.ContentLengthInputStream:
    48:49:void <init>(java.io.InputStream,long) -> <init>
    54:54:int available() -> available
    77:79:int checkReadSoFarOrThrow(int) -> checkReadSoFarOrThrow
    30:30:java.io.InputStream obtain(java.io.InputStream,long) -> obtain
    59:61:int read() -> read
    66:66:int read(byte[]) -> read
    72:72:int read(byte[],int,int) -> read
com.bumptech.glide.util.ExceptionCatchingInputStream -> com.bumptech.glide.util.ExceptionCatchingInputStream:
    19:19:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    54:54:int available() -> available
    59:59:void close() -> close
    127:127:java.io.IOException getException() -> getException
    64:64:void mark(int) -> mark
    69:69:boolean markSupported() -> markSupported
    27:29:com.bumptech.glide.util.ExceptionCatchingInputStream obtain(java.io.InputStream) -> obtain
    76:78:int read(byte[]) -> read
    88:90:int read(byte[],int,int) -> read
    117:119:int read() -> read
    131:135:void release() -> release
    98:99:void reset() -> reset
    49:49:void setInputStream(java.io.InputStream) -> setInputStream
    105:107:long skip(long) -> skip
com.bumptech.glide.util.Executors -> com.bumptech.glide.util.Executors:
    17:26:void <clinit>() -> <clinit>
    41:41:java.util.concurrent.Executor directExecutor() -> directExecutor
    36:36:java.util.concurrent.Executor mainThreadExecutor() -> mainThreadExecutor
com.bumptech.glide.util.Executors$1 -> com.bumptech.glide.util.Executors$1:
    18:19:void <init>() -> <init>
    23:23:void execute(java.lang.Runnable) -> execute
com.bumptech.glide.util.Executors$2 -> com.bumptech.glide.util.Executors$2:
    27:27:void <init>() -> <init>
    30:30:void execute(java.lang.Runnable) -> execute
com.bumptech.glide.util.LogTime -> com.bumptech.glide.util.LogTime:
    12:12:void <clinit>() -> <clinit>
    37:37:double getElapsedMillis(long) -> getElapsedMillis
    24:27:long getLogTime() -> getLogTime
com.bumptech.glide.util.LruCache -> com.bumptech.glide.util.LruCache:
    29:31:void <init>(long) -> <init>
    164:164:void clearMemory() -> clearMemory
    188:188:void evict() -> evict
    108:108:java.lang.Object get(java.lang.Object) -> get
    81:81:long getMaxSize() -> getMaxSize
    124:143:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    153:157:java.lang.Object remove(java.lang.Object) -> remove
    176:185:void trimToSize(long) -> trimToSize
com.bumptech.glide.util.MarkEnforcingInputStream -> com.bumptech.glide.util.MarkEnforcingInputStream:
    19:16:void <init>(java.io.InputStream) -> <init>
    71:72:int available() -> available
    76:76:long getBytesToRead(long) -> getBytesToRead
    24:26:void mark(int) -> mark
    30:35:int read() -> read
    41:47:int read(byte[],int,int) -> read
    53:55:void reset() -> reset
    59:65:long skip(long) -> skip
    86:88:void updateAvailableBytesAfterRead(long) -> updateAvailableBytesAfterRead
com.bumptech.glide.util.MultiClassKey -> com.bumptech.glide.util.MultiClassKey:
    15:15:void <init>() -> <init>
    24:25:void <init>(java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
    49:61:boolean equals(java.lang.Object) -> equals
    70:72:int hashCode() -> hashCode
    33:35:void set(java.lang.Class,java.lang.Class,java.lang.Class) -> set
    40:40:java.lang.String toString() -> toString
com.bumptech.glide.util.Preconditions -> com.bumptech.glide.util.Preconditions:
    19:19:void checkArgument(boolean,java.lang.String) -> checkArgument
    38:39:java.lang.String checkNotEmpty(java.lang.String) -> checkNotEmpty
    46:47:java.util.Collection checkNotEmpty(java.util.Collection) -> checkNotEmpty
    25:25:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    31:31:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
com.bumptech.glide.util.Util -> com.bumptech.glide.util.Util:
    23:25:void <clinit>() -> <clinit>
    141:142:void assertMainThread() -> assertMainThread
    212:215:boolean bothModelsNullEquivalentOrEquals(java.lang.Object,java.lang.Object) -> bothModelsNullEquivalentOrEquals
    205:205:boolean bothNullOrEqual(java.lang.Object,java.lang.Object) -> bothNullOrEqual
    48:53:java.lang.String bytesToHex(byte[],char[]) -> bytesToHex
    174:174:java.util.Queue createQueue(int) -> createQueue
    76:78:int getBitmapByteSize(android.graphics.Bitmap) -> getBitmapByteSize
    96:96:int getBitmapByteSize(int,int,android.graphics.Bitmap$Config) -> getBitmapByteSize
    102:106:int getBytesPerPixel(android.graphics.Bitmap$Config) -> getBytesPerPixel
    190:193:java.util.List getSnapshot(java.util.Collection) -> getSnapshot
    227:227:int hashCode(float) -> hashCode
    231:231:int hashCode(float,int) -> hashCode
    235:235:int hashCode(java.lang.Object,int) -> hashCode
    239:239:int hashCode(boolean,int) -> hashCode
    166:166:boolean isOnBackgroundThread() -> isOnBackgroundThread
    159:159:boolean isOnMainThread() -> isOnMainThread
    129:129:boolean isValidDimensions(int,int) -> isValidDimensions
    36:38:java.lang.String sha256BytesToHex(byte[]) -> sha256BytesToHex
com.bumptech.glide.util.Util$1 -> com.bumptech.glide.util.Util$1:
    106:106:void <clinit>() -> <clinit>
com.bumptech.glide.util.pool.FactoryPools -> com.bumptech.glide.util.pool.FactoryPools:
    19:19:void <clinit>() -> <clinit>
    102:102:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory) -> build
    108:108:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter) -> build
    114:114:com.bumptech.glide.util.pool.FactoryPools$Resetter emptyResetter() -> emptyResetter
    55:55:androidx.core.util.Pools$Pool threadSafe(int,com.bumptech.glide.util.pool.FactoryPools$Factory) -> threadSafe
    69:69:androidx.core.util.Pools$Pool threadSafeList() -> threadSafeList
    85:85:androidx.core.util.Pools$Pool threadSafeList(int) -> threadSafeList
com.bumptech.glide.util.pool.FactoryPools$1 -> com.bumptech.glide.util.pool.FactoryPools$1:
    19:19:void <init>() -> <init>
com.bumptech.glide.util.pool.FactoryPools$2 -> com.bumptech.glide.util.pool.FactoryPools$2:
    85:85:void <init>() -> <init>
    85:85:java.lang.Object create() -> create
    89:89:java.util.List create() -> create
com.bumptech.glide.util.pool.FactoryPools$3 -> com.bumptech.glide.util.pool.FactoryPools$3:
    91:91:void <init>() -> <init>
    91:91:void reset(java.lang.Object) -> reset
    94:94:void reset(java.util.List) -> reset
com.bumptech.glide.util.pool.FactoryPools$FactoryPool -> com.bumptech.glide.util.pool.FactoryPools$FactoryPool:
    149:152:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter) -> <init>
    157:165:java.lang.Object acquire() -> acquire
    172:176:boolean release(java.lang.Object) -> release
com.bumptech.glide.util.pool.StateVerifier -> com.bumptech.glide.util.pool.StateVerifier:
    9:9:void <init>(com.bumptech.glide.util.pool.StateVerifier$1) -> <init>
    24:24:void <init>() -> <init>
    20:20:com.bumptech.glide.util.pool.StateVerifier newInstance() -> newInstance
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier -> com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier:
    41:41:void <init>() -> <init>
    52:52:void setRecycled(boolean) -> setRecycled
    45:46:void throwIfRecycled() -> throwIfRecycled
com.github.mikephil.charting.animation.ChartAnimator -> com.github.mikephil.charting.animation.ChartAnimator:
    31:25:void <init>(android.animation.ValueAnimator$AnimatorUpdateListener) -> <init>
    191:191:float getPhaseX() -> getPhaseX
    168:168:float getPhaseY() -> getPhaseY
com.github.mikephil.charting.buffer.AbstractBuffer -> com.github.mikephil.charting.buffer.AbstractBuffer:
    38:40:void <init>(int) -> <init>
    61:61:void reset() -> reset
    80:81:void setPhases(float,float) -> setPhases
    70:70:int size() -> size
com.github.mikephil.charting.buffer.BarBuffer -> com.github.mikephil.charting.buffer.BarBuffer:
    18:20:void <init>(int,int,boolean) -> <init>
    37:40:void addBar(float,float,float,float) -> addBar
    46:128:void feed(com.github.mikephil.charting.interfaces.datasets.IBarDataSet) -> feed
    24:24:void setBarWidth(float) -> setBarWidth
    32:32:void setInverted(boolean) -> setInverted
com.github.mikephil.charting.buffer.HorizontalBarBuffer -> com.github.mikephil.charting.buffer.HorizontalBarBuffer:
    10:10:void <init>(int,int,boolean) -> <init>
    16:92:void feed(com.github.mikephil.charting.interfaces.datasets.IBarDataSet) -> feed
com.github.mikephil.charting.charts.BarChart -> com.github.mikephil.charting.charts.BarChart:
    68:76:void calcMinMax() -> calcMinMax
    225:225:com.github.mikephil.charting.data.BarData getBarData() -> getBarData
    92:102:com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    55:62:void init() -> init
    188:188:boolean isDrawBarShadowEnabled() -> isDrawBarShadowEnabled
    169:169:boolean isDrawValueAboveBarEnabled() -> isDrawValueAboveBarEnabled
    208:208:boolean isHighlightFullBarEnabled() -> isHighlightFullBarEnabled
    179:179:void setDrawBarShadow(boolean) -> setDrawBarShadow
    160:160:void setDrawValueAboveBar(boolean) -> setDrawValueAboveBar
    236:236:void setFitBars(boolean) -> setFitBars
    200:200:void setHighlightFullBarEnabled(boolean) -> setHighlightFullBarEnabled
com.github.mikephil.charting.charts.BarLineChartBase -> com.github.mikephil.charting.charts.BarLineChartBase:
    140:1617:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    144:1617:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:1617:void <init>(android.content.Context) -> <init>
    359:376:void autoScale() -> autoScale
    382:386:void calcMinMax() -> calcMinMax
    392:406:void calculateLegendOffsets(android.graphics.RectF) -> calculateLegendOffsets
    465:528:void calculateOffsets() -> calculateOffsets
    578:579:void computeScroll() -> computeScroll
    536:543:void drawGridBackground(android.graphics.Canvas) -> drawGridBackground
    1451:1454:com.github.mikephil.charting.components.YAxis getAxis(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getAxis
    1430:1430:com.github.mikephil.charting.components.YAxis getAxisLeft() -> getAxisLeft
    1440:1440:com.github.mikephil.charting.components.YAxis getAxisRight() -> getAxisRight
    44:44:com.github.mikephil.charting.data.BarLineScatterCandleBubbleData getData() -> getData
    1340:1342:com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet getDataSetByTouchPoint(float,float) -> getDataSetByTouchPoint
    1022:1022:com.github.mikephil.charting.listener.OnDrawListener getDrawListener() -> getDrawListener
    1379:1381:float getHighestVisibleX() -> getHighestVisibleX
    1360:1362:float getLowestVisibleX() -> getLowestVisibleX
    1059:1059:int getMaxVisibleCount() -> getMaxVisibleCount
    1259:1259:float getMinOffset() -> getMinOffset
    1524:1524:com.github.mikephil.charting.renderer.YAxisRenderer getRendererLeftYAxis() -> getRendererLeftYAxis
    1537:1537:com.github.mikephil.charting.renderer.YAxisRenderer getRendererRightYAxis() -> getRendererRightYAxis
    1511:1511:com.github.mikephil.charting.renderer.XAxisRenderer getRendererXAxis() -> getRendererXAxis
    1398:1401:float getScaleX() -> getScaleX
    1408:1411:float getScaleY() -> getScaleY
    555:558:com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getTransformer
    1391:1391:float getVisibleXRange() -> getVisibleXRange
    1551:1551:float getYChartMax() -> getYChartMax
    1556:1556:float getYChartMin() -> getYChartMin
    1507:1507:boolean hasNoDragOffset() -> hasNoDragOffset
    153:179:void init() -> init
    1565:1567:boolean isAnyAxisInverted() -> isAnyAxisInverted
    1234:1234:boolean isClipValuesToContentEnabled() -> isClipValuesToContentEnabled
    1185:1185:boolean isDoubleTapToZoomEnabled() -> isDoubleTapToZoomEnabled
    1103:1103:boolean isDragEnabled() -> isDragEnabled
    1121:1121:boolean isDragXEnabled() -> isDragXEnabled
    1139:1139:boolean isDragYEnabled() -> isDragYEnabled
    1420:1420:boolean isFullyZoomedOut() -> isFullyZoomedOut
    1073:1073:boolean isHighlightPerDragEnabled() -> isHighlightPerDragEnabled
    1459:1459:boolean isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency) -> isInverted
    1478:1478:boolean isPinchZoomEnabled() -> isPinchZoomEnabled
    1162:1162:boolean isScaleXEnabled() -> isScaleXEnabled
    1166:1166:boolean isScaleYEnabled() -> isScaleYEnabled
    833:836:void moveViewToX(float) -> moveViewToX
    330:351:void notifyDataSetChanged() -> notifyDataSetChanged
    188:292:void onDraw(android.graphics.Canvas) -> onDraw
    1623:1640:void onSizeChanged(int,int,int,int) -> onSizeChanged
    563:572:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    323:324:void prepareOffsetMatrix() -> prepareOffsetMatrix
    307:315:void prepareValuePxMatrix() -> prepareValuePxMatrix
    1581:1581:void setAutoScaleMinMaxEnabled(boolean) -> setAutoScaleMinMaxEnabled
    1252:1252:void setBorderColor(int) -> setBorderColor
    1243:1243:void setBorderWidth(float) -> setBorderWidth
    1224:1224:void setClipValuesToContent(boolean) -> setClipValuesToContent
    1176:1176:void setDoubleTapToZoomEnabled(boolean) -> setDoubleTapToZoomEnabled
    1093:1094:void setDragEnabled(boolean) -> setDragEnabled
    1488:1488:void setDragOffsetX(float) -> setDragOffsetX
    1498:1498:void setDragOffsetY(float) -> setDragOffsetY
    1112:1112:void setDragXEnabled(boolean) -> setDragXEnabled
    1130:1130:void setDragYEnabled(boolean) -> setDragYEnabled
    1204:1204:void setDrawBorders(boolean) -> setDrawBorders
    1194:1194:void setDrawGridBackground(boolean) -> setDrawGridBackground
    1083:1083:void setGridBackgroundColor(int) -> setGridBackgroundColor
    1069:1069:void setHighlightPerDragEnabled(boolean) -> setHighlightPerDragEnabled
    1280:1280:void setKeepPositionOnRotation(boolean) -> setKeepPositionOnRotation
    1055:1055:void setMaxVisibleValueCount(int) -> setMaxVisibleValueCount
    1266:1266:void setMinOffset(float) -> setMinOffset
    1013:1013:void setOnDrawListener(com.github.mikephil.charting.listener.OnDrawListener) -> setOnDrawListener
    1469:1469:void setPinchZoom(boolean) -> setPinchZoom
    1533:1533:void setRendererLeftYAxis(com.github.mikephil.charting.renderer.YAxisRenderer) -> setRendererLeftYAxis
    1546:1546:void setRendererRightYAxis(com.github.mikephil.charting.renderer.YAxisRenderer) -> setRendererRightYAxis
    1149:1150:void setScaleEnabled(boolean) -> setScaleEnabled
    1154:1154:void setScaleXEnabled(boolean) -> setScaleXEnabled
    1158:1158:void setScaleYEnabled(boolean) -> setScaleYEnabled
    757:758:void setVisibleXRangeMaximum(float) -> setVisibleXRangeMaximum
    770:771:void setVisibleXRangeMinimum(float) -> setVisibleXRangeMinimum
    1520:1520:void setXAxisRenderer(com.github.mikephil.charting.renderer.XAxisRenderer) -> setXAxisRenderer
    656:663:void zoom(float,float,float,float) -> zoom
com.github.mikephil.charting.charts.BarLineChartBase$2 -> com.github.mikephil.charting.charts.BarLineChartBase$2:
    399:417:void <clinit>() -> <clinit>
com.github.mikephil.charting.charts.CandleStickChart -> com.github.mikephil.charting.charts.CandleStickChart:
    19:19:void <init>(android.content.Context) -> <init>
    23:23:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    27:27:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    42:42:com.github.mikephil.charting.data.CandleData getCandleData() -> getCandleData
    32:37:void init() -> init
com.github.mikephil.charting.charts.Chart -> com.github.mikephil.charting.charts.Chart:
    183:184:void <init>(android.content.Context) -> <init>
    191:192:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    199:200:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1623:1626:void addViewportJob(java.lang.Runnable) -> addViewportJob
    1258:1260:void disableScroll() -> disableScroll
    421:441:void drawDescription(android.graphics.Canvas) -> drawDescription
    718:744:void drawMarkers(android.graphics.Canvas) -> drawMarkers
    1267:1269:void enableScroll() -> enableScroll
    771:771:com.github.mikephil.charting.animation.ChartAnimator getAnimator() -> getAnimator
    1031:1031:com.github.mikephil.charting.utils.MPPointF getCenter() -> getCenter
    1431:1431:com.github.mikephil.charting.utils.MPPointF getCenterOfView() -> getCenterOfView
    1043:1043:com.github.mikephil.charting.utils.MPPointF getCenterOffsets() -> getCenterOffsets
    1441:1454:android.graphics.Bitmap getChartBitmap() -> getChartBitmap
    1251:1251:android.graphics.RectF getContentRect() -> getContentRect
    1377:1377:com.github.mikephil.charting.data.ChartData getData() -> getData
    960:960:com.github.mikephil.charting.formatter.ValueFormatter getDefaultValueFormatter() -> getDefaultValueFormatter
    1219:1219:com.github.mikephil.charting.components.Description getDescription() -> getDescription
    796:796:float getDragDecelerationFrictionCoef() -> getDragDecelerationFrictionCoef
    1101:1101:float getExtraBottomOffset() -> getExtraBottomOffset
    1115:1115:float getExtraLeftOffset() -> getExtraLeftOffset
    1087:1087:float getExtraRightOffset() -> getExtraRightOffset
    1073:1073:float getExtraTopOffset() -> getExtraTopOffset
    671:675:com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    483:483:com.github.mikephil.charting.highlight.Highlight[] getHighlighted() -> getHighlighted
    1411:1411:com.github.mikephil.charting.highlight.IHighlighter getHighlighter() -> getHighlighter
    1637:1637:java.util.ArrayList getJobs() -> getJobs
    1230:1230:com.github.mikephil.charting.components.Legend getLegend() -> getLegend
    1240:1240:com.github.mikephil.charting.renderer.LegendRenderer getLegendRenderer() -> getLegendRenderer
    1190:1190:com.github.mikephil.charting.components.IMarker getMarker() -> getMarker
    756:756:float[] getMarkerPosition(com.github.mikephil.charting.highlight.Highlight) -> getMarkerPosition
    1200:1200:com.github.mikephil.charting.components.IMarker getMarkerView() -> getMarkerView
    463:463:float getMaxHighlightDistance() -> getMaxHighlightDistance
    988:988:com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener() -> getOnChartGestureListener
    694:694:com.github.mikephil.charting.listener.ChartTouchListener getOnTouchListener() -> getOnTouchListener
    1396:1396:com.github.mikephil.charting.renderer.DataRenderer getRenderer() -> getRenderer
    1387:1387:com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler() -> getViewPortHandler
    950:950:com.github.mikephil.charting.components.XAxis getXAxis() -> getXAxis
    1011:1011:float getXChartMax() -> getXChartMax
    1016:1016:float getXChartMin() -> getXChartMin
    1021:1021:float getXRange() -> getXRange
    997:997:float getYMax() -> getYMax
    1006:1006:float getYMin() -> getYMin
    625:657:void highlightValue(com.github.mikephil.charting.highlight.Highlight,boolean) -> highlightValue
    208:239:void init() -> init
    778:778:boolean isDragDecelerationEnabled() -> isDragDecelerationEnabled
    1357:1357:boolean isDrawMarkersEnabled() -> isDrawMarkersEnabled
    492:492:boolean isHighlightPerTapEnabled() -> isHighlightPerTapEnabled
    1134:1134:boolean isLogEnabled() -> isLogEnabled
    1704:1709:void onDetachedFromWindow() -> onDetachedFromWindow
    396:411:void onDraw(android.graphics.Canvas) -> onDraw
    1643:1644:void onLayout(boolean,int,int,int,int) -> onLayout
    1650:1652:void onMeasure(int,int) -> onMeasure
    1663:1685:void onSizeChanged(int,int,int,int) -> onSizeChanged
    284:303:void setData(com.github.mikephil.charting.data.ChartData) -> setData
    1209:1209:void setDescription(com.github.mikephil.charting.components.Description) -> setDescription
    787:787:void setDragDecelerationEnabled(boolean) -> setDragDecelerationEnabled
    815:815:void setDragDecelerationFrictionCoef(float) -> setDragDecelerationFrictionCoef
    1347:1347:void setDrawMarkerViews(boolean) -> setDrawMarkerViews
    1368:1368:void setDrawMarkers(boolean) -> setDrawMarkers
    1094:1094:void setExtraBottomOffset(float) -> setExtraBottomOffset
    1108:1108:void setExtraLeftOffset(float) -> setExtraLeftOffset
    1080:1080:void setExtraRightOffset(float) -> setExtraRightOffset
    1066:1066:void setExtraTopOffset(float) -> setExtraTopOffset
    1697:1699:void setHardwareAccelerationEnabled(boolean) -> setHardwareAccelerationEnabled
    502:502:void setHighlightPerTapEnabled(boolean) -> setHighlightPerTapEnabled
    1421:1421:void setHighlighter(com.github.mikephil.charting.highlight.ChartHighlighter) -> setHighlighter
    525:526:void setLastHighlighted(com.github.mikephil.charting.highlight.Highlight[]) -> setLastHighlighted
    1125:1125:void setLogEnabled(boolean) -> setLogEnabled
    1181:1181:void setMarker(com.github.mikephil.charting.components.IMarker) -> setMarker
    1195:1195:void setMarkerView(com.github.mikephil.charting.components.IMarker) -> setMarkerView
    473:473:void setMaxHighlightDistance(float) -> setMaxHighlightDistance
    1144:1144:void setNoDataText(java.lang.String) -> setNoDataText
    1153:1153:void setNoDataTextColor(int) -> setNoDataTextColor
    1162:1162:void setNoDataTextTypeface(android.graphics.Typeface) -> setNoDataTextTypeface
    979:979:void setOnChartGestureListener(com.github.mikephil.charting.listener.OnChartGestureListener) -> setOnChartGestureListener
    969:969:void setOnChartValueSelectedListener(com.github.mikephil.charting.listener.OnChartValueSelectedListener) -> setOnChartValueSelectedListener
    685:685:void setOnTouchListener(com.github.mikephil.charting.listener.ChartTouchListener) -> setOnTouchListener
    1407:1407:void setRenderer(com.github.mikephil.charting.renderer.DataRenderer) -> setRenderer
    1172:1172:void setTouchEnabled(boolean) -> setTouchEnabled
    1745:1745:void setUnbindEnabled(boolean) -> setUnbindEnabled
    374:384:void setupDefaultFormatter(float,float) -> setupDefaultFormatter
    1725:1732:void unbindDrawables(android.view.View) -> unbindDrawables
    513:513:boolean valuesToHighlight() -> valuesToHighlight
com.github.mikephil.charting.charts.Chart$1 -> com.github.mikephil.charting.charts.Chart$1:
    211:211:void <init>(com.github.mikephil.charting.charts.Chart) -> <init>
    216:216:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.github.mikephil.charting.charts.HorizontalBarChart -> com.github.mikephil.charting.charts.HorizontalBarChart:
    68:125:void calculateOffsets() -> calculateOffsets
    221:223:float getHighestVisibleX() -> getHighestVisibleX
    203:208:com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    213:215:float getLowestVisibleX() -> getLowestVisibleX
    138:138:float[] getMarkerPosition(com.github.mikephil.charting.highlight.Highlight) -> getMarkerPosition
    46:58:void init() -> init
    130:132:void prepareValuePxMatrix() -> prepareValuePxMatrix
    233:234:void setVisibleXRangeMaximum(float) -> setVisibleXRangeMaximum
    239:240:void setVisibleXRangeMinimum(float) -> setVisibleXRangeMinimum
com.github.mikephil.charting.charts.LineChart -> com.github.mikephil.charting.charts.LineChart:
    19:19:void <init>(android.content.Context) -> <init>
    23:23:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    27:27:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    39:39:com.github.mikephil.charting.data.LineData getLineData() -> getLineData
    32:34:void init() -> init
    45:48:void onDetachedFromWindow() -> onDetachedFromWindow
com.github.mikephil.charting.components.AxisBase -> com.github.mikephil.charting.components.AxisBase:
    157:161:void <init>() -> <init>
    732:748:void calculate(float,float) -> calculate
    287:287:int getAxisLineColor() -> getAxisLineColor
    623:623:android.graphics.DashPathEffect getAxisLineDashPathEffect() -> getAxisLineDashPathEffect
    249:249:float getAxisLineWidth() -> getAxisLineWidth
    485:488:java.lang.String getFormattedLabel(int) -> getFormattedLabel
    382:382:float getGranularity() -> getGranularity
    231:231:int getGridColor() -> getGridColor
    571:571:android.graphics.DashPathEffect getGridDashPathEffect() -> getGridDashPathEffect
    269:269:float getGridLineWidth() -> getGridLineWidth
    358:358:int getLabelCount() -> getLabelCount
    434:434:java.util.List getLimitLines() -> getLimitLines
    473:476:java.lang.String getLongestLabel() -> getLongestLabel
    515:520:com.github.mikephil.charting.formatter.ValueFormatter getValueFormatter() -> getValueFormatter
    211:211:boolean isCenterAxisLabelsEnabled() -> isCenterAxisLabelsEnabled
    197:197:boolean isDrawAxisLineEnabled() -> isDrawAxisLineEnabled
    460:460:boolean isDrawGridLinesBehindDataEnabled() -> isDrawGridLinesBehindDataEnabled
    179:179:boolean isDrawGridLinesEnabled() -> isDrawGridLinesEnabled
    306:306:boolean isDrawLabelsEnabled() -> isDrawLabelsEnabled
    448:448:boolean isDrawLimitLinesBehindDataEnabled() -> isDrawLimitLinesBehindDataEnabled
    349:349:boolean isForceLabelsEnabled() -> isForceLabelsEnabled
    365:365:boolean isGranularityEnabled() -> isGranularityEnabled
    684:686:void setAxisMinimum(float) -> setAxisMinimum
    188:188:void setDrawAxisLine(boolean) -> setDrawAxisLine
    170:170:void setDrawGridLines(boolean) -> setDrawGridLines
    297:297:void setDrawLabels(boolean) -> setDrawLabels
    392:394:void setGranularity(float) -> setGranularity
    375:375:void setGranularityEnabled(boolean) -> setGranularityEnabled
    780:780:void setSpaceMax(float) -> setSpaceMax
    764:764:void setSpaceMin(float) -> setSpaceMin
com.github.mikephil.charting.components.ComponentBase -> com.github.mikephil.charting.components.ComponentBase:
    47:44:void <init>() -> <init>
    151:151:int getTextColor() -> getTextColor
    131:131:float getTextSize() -> getTextSize
    97:97:android.graphics.Typeface getTypeface() -> getTypeface
    58:58:float getXOffset() -> getXOffset
    77:77:float getYOffset() -> getYOffset
    171:171:boolean isEnabled() -> isEnabled
    162:162:void setEnabled(boolean) -> setEnabled
    142:142:void setTextColor(int) -> setTextColor
    122:122:void setTextSize(float) -> setTextSize
com.github.mikephil.charting.components.Description -> com.github.mikephil.charting.components.Description:
    29:32:void <init>() -> <init>
    75:75:com.github.mikephil.charting.utils.MPPointF getPosition() -> getPosition
    51:51:java.lang.String getText() -> getText
    93:93:android.graphics.Paint$Align getTextAlign() -> getTextAlign
com.github.mikephil.charting.components.Legend -> com.github.mikephil.charting.components.Legend:
    148:152:void <init>() -> <init>
    654:824:void calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler) -> calculateDimensions
    638:638:java.util.List getCalculatedLabelBreakPoints() -> getCalculatedLabelBreakPoints
    634:634:java.util.List getCalculatedLabelSizes() -> getCalculatedLabelSizes
    642:642:java.util.List getCalculatedLineSizes() -> getCalculatedLineSizes
    403:403:com.github.mikephil.charting.components.Legend$LegendDirection getDirection() -> getDirection
    180:180:com.github.mikephil.charting.components.LegendEntry[] getEntries() -> getEntries
    240:240:com.github.mikephil.charting.components.LegendEntry[] getExtraEntries() -> getExtraEntries
    421:421:com.github.mikephil.charting.components.Legend$LegendForm getForm() -> getForm
    482:482:android.graphics.DashPathEffect getFormLineDashEffect() -> getFormLineDashEffect
    466:466:float getFormLineWidth() -> getFormLineWidth
    448:448:float getFormSize() -> getFormSize
    530:530:float getFormToTextSpace() -> getFormToTextSpace
    331:331:com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment getHorizontalAlignment() -> getHorizontalAlignment
    614:614:float getMaxSizePercent() -> getMaxSizePercent
    225:229:float getMaximumEntryHeight(android.graphics.Paint) -> getMaximumEntryHeight
    194:206:float getMaximumEntryWidth(android.graphics.Paint) -> getMaximumEntryWidth
    367:367:com.github.mikephil.charting.components.Legend$LegendOrientation getOrientation() -> getOrientation
    549:549:float getStackSpace() -> getStackSpace
    349:349:com.github.mikephil.charting.components.Legend$LegendVerticalAlignment getVerticalAlignment() -> getVerticalAlignment
    492:492:float getXEntrySpace() -> getXEntrySpace
    511:511:float getYEntrySpace() -> getYEntrySpace
    385:385:boolean isDrawInsideEnabled() -> isDrawInsideEnabled
    322:322:boolean isLegendCustom() -> isLegendCustom
    176:176:void setEntries(java.util.List) -> setEntries
com.github.mikephil.charting.components.Legend$1 -> com.github.mikephil.charting.components.Legend$1:
    666:666:void <clinit>() -> <clinit>
com.github.mikephil.charting.components.Legend$LegendDirection -> com.github.mikephil.charting.components.Legend$LegendDirection:
    68:67:void <clinit>() -> <clinit>
    67:67:void <init>(java.lang.String,int) -> <init>
    67:67:com.github.mikephil.charting.components.Legend$LegendDirection valueOf(java.lang.String) -> valueOf
    67:67:com.github.mikephil.charting.components.Legend$LegendDirection[] values() -> values
com.github.mikephil.charting.components.Legend$LegendForm -> com.github.mikephil.charting.components.Legend$LegendForm:
    27:23:void <clinit>() -> <clinit>
    23:23:void <init>(java.lang.String,int) -> <init>
    23:23:com.github.mikephil.charting.components.Legend$LegendForm valueOf(java.lang.String) -> valueOf
    23:23:com.github.mikephil.charting.components.Legend$LegendForm[] values() -> values
com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment -> com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment:
    56:55:void <clinit>() -> <clinit>
    55:55:void <init>(java.lang.String,int) -> <init>
    55:55:com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment valueOf(java.lang.String) -> valueOf
    55:55:com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment[] values() -> values
com.github.mikephil.charting.components.Legend$LegendOrientation -> com.github.mikephil.charting.components.Legend$LegendOrientation:
    64:63:void <clinit>() -> <clinit>
    63:63:void <init>(java.lang.String,int) -> <init>
    63:63:com.github.mikephil.charting.components.Legend$LegendOrientation valueOf(java.lang.String) -> valueOf
    63:63:com.github.mikephil.charting.components.Legend$LegendOrientation[] values() -> values
com.github.mikephil.charting.components.Legend$LegendVerticalAlignment -> com.github.mikephil.charting.components.Legend$LegendVerticalAlignment:
    60:59:void <clinit>() -> <clinit>
    59:59:void <init>(java.lang.String,int) -> <init>
    59:59:com.github.mikephil.charting.components.Legend$LegendVerticalAlignment valueOf(java.lang.String) -> valueOf
    59:59:com.github.mikephil.charting.components.Legend$LegendVerticalAlignment[] values() -> values
com.github.mikephil.charting.components.LegendEntry -> com.github.mikephil.charting.components.LegendEntry:
    9:76:void <init>() -> <init>
    28:34:void <init>(java.lang.String,com.github.mikephil.charting.components.Legend$LegendForm,float,float,android.graphics.DashPathEffect,int) -> <init>
com.github.mikephil.charting.components.LimitLine -> com.github.mikephil.charting.components.LimitLine:
    156:156:android.graphics.DashPathEffect getDashPathEffect() -> getDashPathEffect
    213:213:java.lang.String getLabel() -> getLabel
    194:194:com.github.mikephil.charting.components.LimitLine$LimitLabelPosition getLabelPosition() -> getLabelPosition
    74:74:float getLimit() -> getLimit
    117:117:int getLineColor() -> getLineColor
    98:98:float getLineWidth() -> getLineWidth
    175:175:android.graphics.Paint$Style getTextStyle() -> getTextStyle
com.github.mikephil.charting.components.LimitLine$LimitLabelPosition -> com.github.mikephil.charting.components.LimitLine$LimitLabelPosition:
    43:42:void <clinit>() -> <clinit>
    42:42:void <init>(java.lang.String,int) -> <init>
    42:42:com.github.mikephil.charting.components.LimitLine$LimitLabelPosition valueOf(java.lang.String) -> valueOf
    42:42:com.github.mikephil.charting.components.LimitLine$LimitLabelPosition[] values() -> values
com.github.mikephil.charting.components.XAxis -> com.github.mikephil.charting.components.XAxis:
    63:65:void <init>() -> <init>
    88:88:float getLabelRotationAngle() -> getLabelRotationAngle
    72:72:com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition() -> getPosition
    116:116:boolean isAvoidFirstLastClippingEnabled() -> isAvoidFirstLastClippingEnabled
    107:107:void setAvoidFirstLastClipping(boolean) -> setAvoidFirstLastClipping
    81:81:void setPosition(com.github.mikephil.charting.components.XAxis$XAxisPosition) -> setPosition
com.github.mikephil.charting.components.XAxis$XAxisPosition -> com.github.mikephil.charting.components.XAxis$XAxisPosition:
    59:58:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:com.github.mikephil.charting.components.XAxis$XAxisPosition valueOf(java.lang.String) -> valueOf
    58:58:com.github.mikephil.charting.components.XAxis$XAxisPosition[] values() -> values
com.github.mikephil.charting.components.YAxis -> com.github.mikephil.charting.components.YAxis:
    120:122:void <init>(com.github.mikephil.charting.components.YAxis$AxisDependency) -> <init>
    409:424:void calculate(float,float) -> calculate
    126:126:com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency() -> getAxisDependency
    165:165:com.github.mikephil.charting.components.YAxis$YAxisLabelPosition getLabelPosition() -> getLabelPosition
    149:149:float getMaxWidth() -> getMaxWidth
    133:133:float getMinWidth() -> getMinWidth
    351:354:float getRequiredHeightSpace(android.graphics.Paint) -> getRequiredHeightSpace
    324:338:float getRequiredWidthSpace(android.graphics.Paint) -> getRequiredWidthSpace
    273:273:float getSpaceBottom() -> getSpaceBottom
    255:255:float getSpaceTop() -> getSpaceTop
    291:291:int getZeroLineColor() -> getZeroLineColor
    304:304:float getZeroLineWidth() -> getZeroLineWidth
    192:192:boolean isDrawBottomYLabelEntryEnabled() -> isDrawBottomYLabelEntryEnabled
    183:183:boolean isDrawTopYLabelEntryEnabled() -> isDrawTopYLabelEntryEnabled
    277:277:boolean isDrawZeroLineEnabled() -> isDrawZeroLineEnabled
    223:223:boolean isInverted() -> isInverted
    363:363:boolean needsOffset() -> needsOffset
com.github.mikephil.charting.components.YAxis$AxisDependency -> com.github.mikephil.charting.components.YAxis$AxisDependency:
    108:107:void <clinit>() -> <clinit>
    107:107:void <init>(java.lang.String,int) -> <init>
    107:107:com.github.mikephil.charting.components.YAxis$AxisDependency valueOf(java.lang.String) -> valueOf
    107:107:com.github.mikephil.charting.components.YAxis$AxisDependency[] values() -> values
com.github.mikephil.charting.components.YAxis$YAxisLabelPosition -> com.github.mikephil.charting.components.YAxis$YAxisLabelPosition:
    80:79:void <clinit>() -> <clinit>
    79:79:void <init>(java.lang.String,int) -> <init>
    79:79:com.github.mikephil.charting.components.YAxis$YAxisLabelPosition valueOf(java.lang.String) -> valueOf
    79:79:com.github.mikephil.charting.components.YAxis$YAxisLabelPosition[] values() -> values
com.github.mikephil.charting.data.BarData -> com.github.mikephil.charting.data.BarData:
    21:18:void <init>() -> <init>
    43:43:float getBarWidth() -> getBarWidth
com.github.mikephil.charting.data.BarEntry -> com.github.mikephil.charting.data.BarEntry:
    239:239:float getNegativeSum() -> getNegativeSum
    230:230:float getPositiveSum() -> getPositiveSum
    188:188:com.github.mikephil.charting.highlight.Range[] getRanges() -> getRanges
    179:179:float getY() -> getY
    157:157:float[] getYVals() -> getYVals
    197:197:boolean isStacked() -> isStacked
com.github.mikephil.charting.data.BarLineScatterCandleBubbleData -> com.github.mikephil.charting.data.BarLineScatterCandleBubbleData:
    17:17:void <init>() -> <init>
    21:21:void <init>(com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet[]) -> <init>
    25:25:void <init>(java.util.List) -> <init>
com.github.mikephil.charting.data.BarLineScatterCandleBubbleDataSet -> com.github.mikephil.charting.data.BarLineScatterCandleBubbleDataSet:
    25:22:void <init>(java.util.List,java.lang.String) -> <init>
    41:41:int getHighLightColor() -> getHighLightColor
com.github.mikephil.charting.data.BaseDataSet -> com.github.mikephil.charting.data.BaseDataSet:
    99:105:void <init>() -> <init>
    114:115:void <init>(java.lang.String) -> <init>
    457:457:com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency() -> getAxisDependency
    141:141:int getColor() -> getColor
    146:146:int getColor(int) -> getColor
    132:132:java.util.List getColors() -> getColors
    383:383:com.github.mikephil.charting.components.Legend$LegendForm getForm() -> getForm
    410:410:android.graphics.DashPathEffect getFormLineDashEffect() -> getFormLineDashEffect
    401:401:float getFormLineWidth() -> getFormLineWidth
    392:392:float getFormSize() -> getFormSize
    151:151:com.github.mikephil.charting.model.GradientColor getGradientColor() -> getGradientColor
    161:161:com.github.mikephil.charting.model.GradientColor getGradientColor(int) -> getGradientColor
    156:156:java.util.List getGradientColors() -> getGradientColors
    442:442:com.github.mikephil.charting.utils.MPPointF getIconsOffset() -> getIconsOffset
    302:302:java.lang.String getLabel() -> getLabel
    326:328:com.github.mikephil.charting.formatter.ValueFormatter getValueFormatter() -> getValueFormatter
    364:364:int getValueTextColor(int) -> getValueTextColor
    374:374:float getValueTextSize() -> getValueTextSize
    369:369:android.graphics.Typeface getValueTypeface() -> getValueTypeface
    430:430:boolean isDrawIconsEnabled() -> isDrawIconsEnabled
    420:420:boolean isDrawValuesEnabled() -> isDrawValuesEnabled
    312:312:boolean isHighlightEnabled() -> isHighlightEnabled
    452:452:boolean isVisible() -> isVisible
    333:333:boolean needsFormatter() -> needsFormatter
    285:288:void resetColors() -> resetColors
    462:462:void setAxisDependency(com.github.mikephil.charting.components.YAxis$AxisDependency) -> setAxisDependency
    235:236:void setColor(int) -> setColor
    415:415:void setDrawValues(boolean) -> setDrawValues
    321:321:void setValueFormatter(com.github.mikephil.charting.formatter.ValueFormatter) -> setValueFormatter
    354:354:void setValueTextSize(float) -> setValueTextSize
com.github.mikephil.charting.data.BaseEntry -> com.github.mikephil.charting.data.BaseEntry:
    19:17:void <init>() -> <init>
    23:24:void <init>(float) -> <init>
    86:86:java.lang.Object getData() -> getData
    67:67:android.graphics.drawable.Drawable getIcon() -> getIcon
    49:49:float getY() -> getY
    95:95:void setData(java.lang.Object) -> setData
    76:76:void setY(float) -> setY
com.github.mikephil.charting.data.CandleData -> com.github.mikephil.charting.data.CandleData:
    11:11:void <init>() -> <init>
    19:19:void <init>(com.github.mikephil.charting.interfaces.datasets.ICandleDataSet[]) -> <init>
com.github.mikephil.charting.data.CandleDataSet -> com.github.mikephil.charting.data.CandleDataSet:
    77:74:void <init>(java.util.List,java.lang.String) -> <init>
    18:18:void calcMinMax(com.github.mikephil.charting.data.Entry) -> calcMinMax
    109:115:void calcMinMax(com.github.mikephil.charting.data.CandleEntry) -> calcMinMax
    18:18:void calcMinMaxY(com.github.mikephil.charting.data.Entry) -> calcMinMaxY
    121:131:void calcMinMaxY(com.github.mikephil.charting.data.CandleEntry) -> calcMinMaxY
    152:152:float getBarSpace() -> getBarSpace
    237:237:int getDecreasingColor() -> getDecreasingColor
    256:256:android.graphics.Paint$Style getDecreasingPaintStyle() -> getDecreasingPaintStyle
    222:222:int getIncreasingColor() -> getIncreasingColor
    242:242:android.graphics.Paint$Style getIncreasingPaintStyle() -> getIncreasingPaintStyle
    207:207:int getNeutralColor() -> getNeutralColor
    270:270:int getShadowColor() -> getShadowColor
    284:284:boolean getShadowColorSameAsCandle() -> getShadowColorSameAsCandle
    166:166:float getShadowWidth() -> getShadowWidth
    180:180:boolean getShowCandleBar() -> getShowCandleBar
    232:232:void setDecreasingColor(int) -> setDecreasingColor
    265:265:void setDecreasingPaintStyle(android.graphics.Paint$Style) -> setDecreasingPaintStyle
    217:217:void setIncreasingColor(int) -> setIncreasingColor
    251:251:void setIncreasingPaintStyle(android.graphics.Paint$Style) -> setIncreasingPaintStyle
    202:202:void setNeutralColor(int) -> setNeutralColor
    279:279:void setShadowColor(int) -> setShadowColor
com.github.mikephil.charting.data.CandleEntry -> com.github.mikephil.charting.data.CandleEntry:
    37:42:void <init>(float,float,float,float,float) -> <init>
    174:174:float getClose() -> getClose
    148:148:float getHigh() -> getHigh
    161:161:float getLow() -> getLow
    187:187:float getOpen() -> getOpen
    131:131:float getY() -> getY
com.github.mikephil.charting.data.ChartData -> com.github.mikephil.charting.data.ChartData:
    59:60:void <init>() -> <init>
    68:70:void <init>(com.github.mikephil.charting.interfaces.datasets.IDataSet[]) -> <init>
    95:97:void <init>(java.util.List) -> <init>
    81:84:java.util.List arrayToList(com.github.mikephil.charting.interfaces.datasets.IDataSet[]) -> arrayToList
    131:181:void calcMinMax() -> calcMinMax
    486:506:void calcMinMax(com.github.mikephil.charting.interfaces.datasets.IDataSet) -> calcMinMax
    118:123:void calcMinMaxY(float,float) -> calcMinMaxY
    365:368:com.github.mikephil.charting.interfaces.datasets.IDataSet getDataSetByIndex(int) -> getDataSetByIndex
    195:197:int getDataSetCount() -> getDataSetCount
    284:284:java.util.List getDataSets() -> getDataSets
    793:794:int getEntryCount() -> getEntryCount
    337:340:com.github.mikephil.charting.data.Entry getEntryForHighlight(com.github.mikephil.charting.highlight.Highlight) -> getEntryForHighlight
    635:636:com.github.mikephil.charting.interfaces.datasets.IDataSet getFirstLeft(java.util.List) -> getFirstLeft
    649:650:com.github.mikephil.charting.interfaces.datasets.IDataSet getFirstRight(java.util.List) -> getFirstRight
    275:275:float getXMax() -> getXMax
    266:266:float getXMin() -> getXMin
    236:236:float getYMax() -> getYMax
    246:254:float getYMax(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getYMax
    206:206:float getYMin() -> getYMin
    216:224:float getYMin(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getYMin
    106:106:void notifyDataChanged() -> notifyDataChanged
com.github.mikephil.charting.data.DataSet -> com.github.mikephil.charting.data.DataSet:
    52:58:void <init>(java.util.List,java.lang.String) -> <init>
    64:73:void calcMinMax() -> calcMinMax
    106:108:void calcMinMax(com.github.mikephil.charting.data.Entry) -> calcMinMax
    113:117:void calcMinMaxX(com.github.mikephil.charting.data.Entry) -> calcMinMaxX
    80:92:void calcMinMaxY(float,float) -> calcMinMaxY
    122:126:void calcMinMaxY(com.github.mikephil.charting.data.Entry) -> calcMinMaxY
    385:413:java.util.List getEntriesForXValue(float) -> getEntriesForXValue
    131:131:int getEntryCount() -> getEntryCount
    294:294:com.github.mikephil.charting.data.Entry getEntryForIndex(int) -> getEntryForIndex
    281:283:com.github.mikephil.charting.data.Entry getEntryForXValue(float,float,com.github.mikephil.charting.data.DataSet$Rounding) -> getEntryForXValue
    289:289:com.github.mikephil.charting.data.Entry getEntryForXValue(float,float) -> getEntryForXValue
    275:275:int getEntryIndex(com.github.mikephil.charting.data.Entry) -> getEntryIndex
    300:369:int getEntryIndex(float,float,com.github.mikephil.charting.data.DataSet$Rounding) -> getEntryIndex
    208:208:float getXMax() -> getXMax
    203:203:float getXMin() -> getXMin
    198:198:float getYMax() -> getYMax
    193:193:float getYMin() -> getYMin
    185:188:java.lang.String toSimpleString() -> toSimpleString
    170:175:java.lang.String toString() -> toString
com.github.mikephil.charting.data.DataSet$Rounding -> com.github.mikephil.charting.data.DataSet$Rounding:
    429:428:void <clinit>() -> <clinit>
    428:428:void <init>(java.lang.String,int) -> <init>
    428:428:com.github.mikephil.charting.data.DataSet$Rounding valueOf(java.lang.String) -> valueOf
    428:428:com.github.mikephil.charting.data.DataSet$Rounding[] values() -> values
com.github.mikephil.charting.data.Entry -> com.github.mikephil.charting.data.Entry:
    164:164:void <clinit>() -> <clinit>
    22:20:void <init>() -> <init>
    33:34:void <init>(float,float) -> <init>
    156:160:void <init>(android.os.Parcel) -> <init>
    80:80:float getX() -> getX
    132:132:java.lang.String toString() -> toString
    142:152:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.github.mikephil.charting.data.Entry$1 -> com.github.mikephil.charting.data.Entry$1:
    164:164:void <init>() -> <init>
    164:164:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    166:166:com.github.mikephil.charting.data.Entry createFromParcel(android.os.Parcel) -> createFromParcel
    164:164:java.lang.Object[] newArray(int) -> newArray
    170:170:com.github.mikephil.charting.data.Entry[] newArray(int) -> newArray
com.github.mikephil.charting.data.LineData -> com.github.mikephil.charting.data.LineData:
    17:17:void <init>() -> <init>
    25:25:void <init>(java.util.List) -> <init>
com.github.mikephil.charting.data.LineDataSet -> com.github.mikephil.charting.data.LineDataSet:
    69:82:void <init>(java.util.List,java.lang.String) -> <init>
    284:284:int getCircleColor(int) -> getCircleColor
    289:289:int getCircleColorCount() -> getCircleColorCount
    375:375:int getCircleHoleColor() -> getCircleHoleColor
    188:188:float getCircleHoleRadius() -> getCircleHoleRadius
    168:168:float getCircleRadius() -> getCircleRadius
    147:147:float getCubicIntensity() -> getCubicIntensity
    241:241:android.graphics.DashPathEffect getDashPathEffect() -> getDashPathEffect
    408:408:com.github.mikephil.charting.formatter.IFillFormatter getFillFormatter() -> getFillFormatter
    117:117:com.github.mikephil.charting.data.LineDataSet$Mode getMode() -> getMode
    236:236:boolean isDashedLineEnabled() -> isDashedLineEnabled
    389:389:boolean isDrawCircleHoleEnabled() -> isDrawCircleHoleEnabled
    256:256:boolean isDrawCirclesEnabled() -> isDrawCirclesEnabled
    315:315:void setCircleColors(int[]) -> setCircleColors
    160:162:void setCircleRadius(float) -> setCircleRadius
com.github.mikephil.charting.data.LineDataSet$Mode -> com.github.mikephil.charting.data.LineDataSet$Mode:
    412:411:void <clinit>() -> <clinit>
    411:411:void <init>(java.lang.String,int) -> <init>
    411:411:com.github.mikephil.charting.data.LineDataSet$Mode valueOf(java.lang.String) -> valueOf
    411:411:com.github.mikephil.charting.data.LineDataSet$Mode[] values() -> values
com.github.mikephil.charting.data.LineRadarDataSet -> com.github.mikephil.charting.data.LineRadarDataSet:
    47:43:void <init>(java.util.List,java.lang.String) -> <init>
    83:83:int getFillAlpha() -> getFillAlpha
    52:52:int getFillColor() -> getFillColor
    68:68:android.graphics.drawable.Drawable getFillDrawable() -> getFillDrawable
    113:113:float getLineWidth() -> getLineWidth
    123:123:boolean isDrawFilledEnabled() -> isDrawFilledEnabled
    93:93:void setFillAlpha(int) -> setFillAlpha
    108:108:void setLineWidth(float) -> setLineWidth
com.github.mikephil.charting.data.LineScatterCandleRadarDataSet -> com.github.mikephil.charting.data.LineScatterCandleRadarDataSet:
    26:27:void <init>(java.util.List,java.lang.String) -> <init>
    110:110:android.graphics.DashPathEffect getDashPathEffectHighlight() -> getDashPathEffectHighlight
    75:75:float getHighlightLineWidth() -> getHighlightLineWidth
    62:62:boolean isHorizontalHighlightIndicatorEnabled() -> isHorizontalHighlightIndicatorEnabled
    57:57:boolean isVerticalHighlightIndicatorEnabled() -> isVerticalHighlightIndicatorEnabled
com.github.mikephil.charting.data.PieEntry -> com.github.mikephil.charting.data.PieEntry:
    61:61:java.lang.String getLabel() -> getLabel
    78:79:float getX() -> getX
com.github.mikephil.charting.formatter.DefaultAxisValueFormatter -> com.github.mikephil.charting.formatter.DefaultAxisValueFormatter:
    27:37:void <init>(int) -> <init>
    52:52:int getDecimalDigits() -> getDecimalDigits
    43:43:java.lang.String getFormattedValue(float) -> getFormattedValue
com.github.mikephil.charting.formatter.DefaultFillFormatter -> com.github.mikephil.charting.formatter.DefaultFillFormatter:
    13:13:void <init>() -> <init>
    20:40:float getFillLinePosition(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider) -> getFillLinePosition
com.github.mikephil.charting.formatter.DefaultValueFormatter -> com.github.mikephil.charting.formatter.DefaultValueFormatter:
    27:28:void <init>(int) -> <init>
    56:56:java.lang.String getFormattedValue(float) -> getFormattedValue
    40:47:void setup(int) -> setup
com.github.mikephil.charting.formatter.ValueFormatter -> com.github.mikephil.charting.formatter.ValueFormatter:
    15:15:void <init>() -> <init>
    62:62:java.lang.String getAxisLabel(float,com.github.mikephil.charting.components.AxisBase) -> getAxisLabel
    72:72:java.lang.String getBarLabel(com.github.mikephil.charting.data.BarEntry) -> getBarLabel
    83:83:java.lang.String getBarStackedLabel(float,com.github.mikephil.charting.data.BarEntry) -> getBarStackedLabel
    134:134:java.lang.String getCandleLabel(com.github.mikephil.charting.data.CandleEntry) -> getCandleLabel
    93:93:java.lang.String getPointLabel(com.github.mikephil.charting.data.Entry) -> getPointLabel
com.github.mikephil.charting.highlight.BarHighlighter -> com.github.mikephil.charting.highlight.BarHighlighter:
    16:16:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider) -> <init>
    103:109:int getClosestStackIndex(com.github.mikephil.charting.highlight.Range[],float) -> getClosestStackIndex
    161:161:com.github.mikephil.charting.data.BarLineScatterCandleBubbleData getData() -> getData
    156:156:float getDistance(float,float,float,float) -> getDistance
    21:40:com.github.mikephil.charting.highlight.Highlight getHighlight(float,float) -> getHighlight
    57:83:com.github.mikephil.charting.highlight.Highlight getStackedHighlight(com.github.mikephil.charting.highlight.Highlight,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,float,float) -> getStackedHighlight
com.github.mikephil.charting.highlight.ChartHighlighter -> com.github.mikephil.charting.highlight.ChartHighlighter:
    30:31:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider) -> <init>
    162:183:java.util.List buildHighlights(com.github.mikephil.charting.interfaces.datasets.IDataSet,int,float,com.github.mikephil.charting.data.DataSet$Rounding) -> buildHighlights
    210:216:com.github.mikephil.charting.highlight.Highlight getClosestHighlightByPixel(java.util.List,float,float,com.github.mikephil.charting.components.YAxis$AxisDependency,float) -> getClosestHighlightByPixel
    244:244:com.github.mikephil.charting.data.BarLineScatterCandleBubbleData getData() -> getData
    240:240:float getDistance(float,float,float,float) -> getDistance
    37:41:com.github.mikephil.charting.highlight.Highlight getHighlight(float,float) -> getHighlight
    70:81:com.github.mikephil.charting.highlight.Highlight getHighlightForX(float,float,float) -> getHighlightForX
    116:116:float getHighlightPos(com.github.mikephil.charting.highlight.Highlight) -> getHighlightPos
    130:148:java.util.List getHighlightsAtXValue(float,float,float) -> getHighlightsAtXValue
    99:105:float getMinimumDistance(java.util.List,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> getMinimumDistance
    56:56:com.github.mikephil.charting.utils.MPPointD getValsForTouch(float,float) -> getValsForTouch
com.github.mikephil.charting.highlight.Highlight -> com.github.mikephil.charting.highlight.Highlight:
    81:87:void <init>(float,float,float,float,int,com.github.mikephil.charting.components.YAxis$AxisDependency) -> <init>
    100:101:void <init>(float,float,float,float,int,int,com.github.mikephil.charting.components.YAxis$AxisDependency) -> <init>
    222:222:boolean equalTo(com.github.mikephil.charting.highlight.Highlight) -> equalTo
    178:178:com.github.mikephil.charting.components.YAxis$AxisDependency getAxis() -> getAxis
    155:155:int getDataSetIndex() -> getDataSetIndex
    198:198:float getDrawX() -> getDrawX
    207:207:float getDrawY() -> getDrawY
    165:165:int getStackIndex() -> getStackIndex
    110:110:float getX() -> getX
    126:126:float getXPx() -> getXPx
    119:119:float getY() -> getY
    133:133:float getYPx() -> getYPx
    188:189:void setDraw(float,float) -> setDraw
    232:232:java.lang.String toString() -> toString
com.github.mikephil.charting.highlight.HorizontalBarHighlighter -> com.github.mikephil.charting.highlight.HorizontalBarHighlighter:
    20:20:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider) -> <init>
    51:72:java.util.List buildHighlights(com.github.mikephil.charting.interfaces.datasets.IDataSet,int,float,com.github.mikephil.charting.data.DataSet$Rounding) -> buildHighlights
    83:83:float getDistance(float,float,float,float) -> getDistance
    26:43:com.github.mikephil.charting.highlight.Highlight getHighlight(float,float) -> getHighlight
com.github.mikephil.charting.jobs.MoveViewJob -> com.github.mikephil.charting.jobs.MoveViewJob:
    18:19:void <clinit>() -> <clinit>
    37:37:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View) -> <init>
    23:28:com.github.mikephil.charting.jobs.MoveViewJob getInstance(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View) -> getInstance
    54:54:com.github.mikephil.charting.utils.ObjectPool$Poolable instantiate() -> instantiate
    33:33:void recycleInstance(com.github.mikephil.charting.jobs.MoveViewJob) -> recycleInstance
    43:49:void run() -> run
com.github.mikephil.charting.jobs.ViewPortJob -> com.github.mikephil.charting.jobs.ViewPortJob:
    30:36:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View) -> <init>
com.github.mikephil.charting.listener.BarLineChartTouchListener -> com.github.mikephil.charting.listener.BarLineChartTouchListener:
    87:92:void <init>(com.github.mikephil.charting.charts.BarLineChartBase,android.graphics.Matrix,float) -> <init>
    650:680:void computeScroll() -> computeScroll
    518:530:com.github.mikephil.charting.utils.MPPointF getTrans(float,float) -> getTrans
    491:491:float getXDist(android.view.MotionEvent) -> getXDist
    503:503:float getYDist(android.view.MotionEvent) -> getYDist
    539:540:boolean inverted() -> inverted
    465:468:void midPoint(com.github.mikephil.charting.utils.MPPointF,android.view.MotionEvent) -> midPoint
    570:592:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    632:640:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    598:604:void onLongPress(android.view.MotionEvent) -> onLongPress
    611:626:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    99:286:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    317:337:void performDrag(android.view.MotionEvent,float,float) -> performDrag
    444:448:void performHighlightDrag(android.view.MotionEvent) -> performHighlightDrag
    347:432:void performZoom(android.view.MotionEvent) -> performZoom
    303:307:void saveTouchStart(android.view.MotionEvent) -> saveTouchStart
    478:480:float spacing(android.view.MotionEvent) -> spacing
    644:645:void stopDeceleration() -> stopDeceleration
com.github.mikephil.charting.listener.ChartTouchListener -> com.github.mikephil.charting.listener.ChartTouchListener:
    53:56:void <init>(com.github.mikephil.charting.charts.Chart) -> <init>
    141:141:float distance(float,float,float,float) -> distance
    79:82:void endAction(android.view.MotionEvent) -> endAction
    120:122:void performHighlight(com.github.mikephil.charting.highlight.Highlight,android.view.MotionEvent) -> performHighlight
    91:91:void setLastHighlighted(com.github.mikephil.charting.highlight.Highlight) -> setLastHighlighted
    66:69:void startAction(android.view.MotionEvent) -> startAction
com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture -> com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture:
    16:15:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    15:15:com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture valueOf(java.lang.String) -> valueOf
    15:15:com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture[] values() -> values
com.github.mikephil.charting.model.GradientColor -> com.github.mikephil.charting.model.GradientColor:
    22:22:int getEndColor() -> getEndColor
    14:14:int getStartColor() -> getStartColor
com.github.mikephil.charting.renderer.AxisRenderer -> com.github.mikephil.charting.renderer.AxisRenderer:
    49:70:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.utils.Transformer,com.github.mikephil.charting.components.AxisBase) -> <init>
    122:141:void computeAxis(float,float,boolean) -> computeAxis
    154:160:void computeAxisValues(float,float) -> computeAxisValues
    80:80:android.graphics.Paint getPaintAxisLabels() -> getPaintAxisLabels
com.github.mikephil.charting.renderer.BarChartRenderer -> com.github.mikephil.charting.renderer.BarChartRenderer:
    43:56:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    75:82:void drawData(android.graphics.Canvas) -> drawData
    91:198:void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int) -> drawDataSet
    447:495:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    440:441:void drawValue(android.graphics.Canvas,java.lang.String,float,float,int) -> drawValue
    220:433:void drawValues(android.graphics.Canvas) -> drawValues
    62:68:void initBuffers() -> initBuffers
    211:213:void prepareBarHighlight(float,float,float,float,com.github.mikephil.charting.utils.Transformer) -> prepareBarHighlight
    504:504:void setHighlightDrawPos(com.github.mikephil.charting.highlight.Highlight,android.graphics.RectF) -> setHighlightDrawPos
com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer -> com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer:
    22:19:void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    47:49:boolean isInBoundsX(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet) -> isInBoundsX
    32:32:boolean shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet) -> shouldDrawValues
com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer$XBounds -> com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer$XBounds:
    59:59:void <init>(com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer) -> <init>
    83:93:void set(com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet) -> set
com.github.mikephil.charting.renderer.CandleStickChartRenderer -> com.github.mikephil.charting.renderer.CandleStickChartRenderer:
    35:36:void <init>(com.github.mikephil.charting.interfaces.dataprovider.CandleDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    47:52:void drawData(android.graphics.Canvas) -> drawData
    59:247:void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet) -> drawDataSet
    337:360:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    326:327:void drawValue(android.graphics.Canvas,java.lang.String,float,float,int) -> drawValue
    259:319:void drawValues(android.graphics.Canvas) -> drawValues
com.github.mikephil.charting.renderer.DataRenderer -> com.github.mikephil.charting.renderer.DataRenderer:
    47:63:void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    108:109:void applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet) -> applyValueTextStyle
    67:68:boolean isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface) -> isDrawingValuesAllowed
com.github.mikephil.charting.renderer.HorizontalBarChartRenderer -> com.github.mikephil.charting.renderer.HorizontalBarChartRenderer:
    34:36:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    57:138:void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int) -> drawDataSet
    397:398:void drawValue(android.graphics.Canvas,java.lang.String,float,float,int) -> drawValue
    147:390:void drawValues(android.graphics.Canvas) -> drawValues
    42:48:void initBuffers() -> initBuffers
    421:422:boolean isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface) -> isDrawingValuesAllowed
    409:411:void prepareBarHighlight(float,float,float,float,com.github.mikephil.charting.utils.Transformer) -> prepareBarHighlight
    416:416:void setHighlightDrawPos(com.github.mikephil.charting.highlight.Highlight,android.graphics.RectF) -> setHighlightDrawPos
com.github.mikephil.charting.renderer.LegendRenderer -> com.github.mikephil.charting.renderer.LegendRenderer:
    45:54:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.Legend) -> <init>
    85:220:void computeLegend(com.github.mikephil.charting.data.ChartData) -> computeLegend
    486:546:void drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend) -> drawForm
    558:558:void drawLabel(android.graphics.Canvas,float,float,java.lang.String) -> drawLabel
    227:381:void renderLegend(android.graphics.Canvas) -> renderLegend
com.github.mikephil.charting.renderer.LegendRenderer$1 -> com.github.mikephil.charting.renderer.LegendRenderer$1:
    505:260:void <clinit>() -> <clinit>
com.github.mikephil.charting.renderer.LineChartRenderer -> com.github.mikephil.charting.renderer.LineChartRenderer:
    62:67:void <init>(com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    616:686:void drawCircles(android.graphics.Canvas) -> drawCircles
    189:262:void drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> drawCubicBezier
    267:282:void drawCubicFill(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet,android.graphics.Path,com.github.mikephil.charting.utils.Transformer,com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer$XBounds) -> drawCubicFill
    77:104:void drawData(android.graphics.Canvas) -> drawData
    109:131:void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> drawDataSet
    601:601:void drawExtras(android.graphics.Canvas) -> drawExtras
    695:715:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    136:184:void drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> drawHorizontalBezier
    296:423:void drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> drawLinear
    438:465:void drawLinearFill(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet,com.github.mikephil.charting.utils.Transformer,com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer$XBounds) -> drawLinearFill
    595:596:void drawValue(android.graphics.Canvas,java.lang.String,float,float,int) -> drawValue
    525:588:void drawValues(android.graphics.Canvas) -> drawValues
    486:519:void generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int,android.graphics.Path) -> generateFilledPath
    744:754:void releaseBitmap() -> releaseBitmap
com.github.mikephil.charting.renderer.LineChartRenderer$1 -> com.github.mikephil.charting.renderer.LineChartRenderer$1:
    115:115:void <clinit>() -> <clinit>
com.github.mikephil.charting.renderer.LineChartRenderer$DataSetImageCache -> com.github.mikephil.charting.renderer.LineChartRenderer$DataSetImageCache:
    758:760:void <init>(com.github.mikephil.charting.renderer.LineChartRenderer) -> <init>
    758:758:void <init>(com.github.mikephil.charting.renderer.LineChartRenderer,com.github.mikephil.charting.renderer.LineChartRenderer$1) -> <init>
    795:836:void fill(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,boolean,boolean) -> fill
    853:853:android.graphics.Bitmap getBitmap(int) -> getBitmap
    772:779:boolean init(com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> init
com.github.mikephil.charting.renderer.LineRadarRenderer -> com.github.mikephil.charting.renderer.LineRadarRenderer:
    18:18:void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    93:93:boolean clipPathSupported() -> clipPathSupported
    30:44:void drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable) -> drawFilledPath
    61:83:void drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int) -> drawFilledPath
com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer -> com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer:
    21:18:void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    35:60:void drawHighlightLines(android.graphics.Canvas,float,float,com.github.mikephil.charting.interfaces.datasets.ILineScatterCandleRadarDataSet) -> drawHighlightLines
com.github.mikephil.charting.renderer.Renderer -> com.github.mikephil.charting.renderer.Renderer:
    18:19:void <init>(com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
com.github.mikephil.charting.renderer.XAxisRenderer -> com.github.mikephil.charting.renderer.XAxisRenderer:
    27:33:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.XAxis,com.github.mikephil.charting.utils.Transformer) -> <init>
    47:66:void computeAxis(float,float,boolean) -> computeAxis
    71:73:void computeAxisValues(float,float) -> computeAxisValues
    78:100:void computeSize() -> computeSize
    286:292:void drawGridLine(android.graphics.Canvas,float,float,android.graphics.Path) -> drawGridLine
    230:230:void drawLabel(android.graphics.Canvas,java.lang.String,float,float,com.github.mikephil.charting.utils.MPPointF,float) -> drawLabel
    181:224:void drawLabels(android.graphics.Canvas,float,com.github.mikephil.charting.utils.MPPointF) -> drawLabels
    271:273:android.graphics.RectF getGridClippingRect() -> getGridClippingRect
    106:144:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    150:168:void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    237:265:void renderGridLines(android.graphics.Canvas) -> renderGridLines
    361:396:void renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float) -> renderLimitLineLabel
    343:357:void renderLimitLineLine(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[]) -> renderLimitLineLine
    306:335:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
    37:39:void setupGridPaint() -> setupGridPaint
com.github.mikephil.charting.renderer.XAxisRendererHorizontalBarChart -> com.github.mikephil.charting.renderer.XAxisRendererHorizontalBarChart:
    28:209:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.XAxis,com.github.mikephil.charting.utils.Transformer,com.github.mikephil.charting.charts.BarChart) -> <init>
    38:57:void computeAxis(float,float,boolean) -> computeAxis
    63:83:void computeSize() -> computeSize
    174:180:void drawGridLine(android.graphics.Canvas,float,float,android.graphics.Path) -> drawGridLine
    135:159:void drawLabels(android.graphics.Canvas,float,com.github.mikephil.charting.utils.MPPointF) -> drawLabels
    166:168:android.graphics.RectF getGridClippingRect() -> getGridClippingRect
    89:129:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    186:203:void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    219:306:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.YAxisRenderer -> com.github.mikephil.charting.renderer.YAxisRenderer:
    28:40:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.YAxis,com.github.mikephil.charting.utils.Transformer) -> <init>
    117:127:void drawYLabels(android.graphics.Canvas,float,float[],float) -> drawYLabels
    223:243:void drawZeroLine(android.graphics.Canvas) -> drawZeroLine
    171:173:android.graphics.RectF getGridClippingRect() -> getGridClippingRect
    201:211:float[] getTransformedPositions() -> getTransformedPositions
    186:187:android.graphics.Path linePath(android.graphics.Path,int,float[]) -> linePath
    50:88:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    94:104:void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    135:164:void renderGridLines(android.graphics.Canvas) -> renderGridLines
    257:344:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.YAxisRendererHorizontalBarChart -> com.github.mikephil.charting.renderer.YAxisRendererHorizontalBarChart:
    25:27:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.YAxis,com.github.mikephil.charting.utils.Transformer) -> <init>
    41:60:void computeAxis(float,float,boolean) -> computeAxis
    136:149:void drawYLabels(android.graphics.Canvas,float,float[],float) -> drawYLabels
    191:211:void drawZeroLine(android.graphics.Canvas) -> drawZeroLine
    172:174:android.graphics.RectF getGridClippingRect() -> getGridClippingRect
    156:166:float[] getTransformedPositions() -> getTransformedPositions
    180:181:android.graphics.Path linePath(android.graphics.Path,int,float[]) -> linePath
    69:104:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    110:121:void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    225:307:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.utils.ColorTemplate -> com.github.mikephil.charting.utils.ColorTemplate:
    35:55:void <clinit>() -> <clinit>
    120:123:java.util.List createColors(int[]) -> createColors
    65:69:int rgb(java.lang.String) -> rgb
com.github.mikephil.charting.utils.EntryXComparator -> com.github.mikephil.charting.utils.EntryXComparator:
    11:11:void <init>() -> <init>
    11:11:int compare(java.lang.Object,java.lang.Object) -> compare
    14:14:int compare(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.data.Entry) -> compare
com.github.mikephil.charting.utils.FSize -> com.github.mikephil.charting.utils.FSize:
    20:21:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    47:49:void <init>(float,float) -> <init>
    60:62:boolean equals(java.lang.Object) -> equals
    30:32:com.github.mikephil.charting.utils.FSize getInstance(float,float) -> getInstance
    77:77:int hashCode() -> hashCode
    26:26:com.github.mikephil.charting.utils.ObjectPool$Poolable instantiate() -> instantiate
    37:37:void recycleInstance(com.github.mikephil.charting.utils.FSize) -> recycleInstance
    69:69:java.lang.String toString() -> toString
com.github.mikephil.charting.utils.HorizontalViewPortHandler -> com.github.mikephil.charting.utils.HorizontalViewPortHandler:
    7:7:void <init>() -> <init>
com.github.mikephil.charting.utils.MPPointD -> com.github.mikephil.charting.utils.MPPointD:
    16:17:void <clinit>() -> <clinit>
    42:44:void <init>(double,double) -> <init>
    21:23:com.github.mikephil.charting.utils.MPPointD getInstance(double,double) -> getInstance
    39:39:com.github.mikephil.charting.utils.ObjectPool$Poolable instantiate() -> instantiate
    28:28:void recycleInstance(com.github.mikephil.charting.utils.MPPointD) -> recycleInstance
    51:51:java.lang.String toString() -> toString
com.github.mikephil.charting.utils.MPPointF -> com.github.mikephil.charting.utils.MPPointF:
    19:57:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    26:28:void <init>(float,float) -> <init>
    32:34:com.github.mikephil.charting.utils.MPPointF getInstance(float,float) -> getInstance
    39:39:com.github.mikephil.charting.utils.MPPointF getInstance() -> getInstance
    43:45:com.github.mikephil.charting.utils.MPPointF getInstance(com.github.mikephil.charting.utils.MPPointF) -> getInstance
    97:97:com.github.mikephil.charting.utils.ObjectPool$Poolable instantiate() -> instantiate
    83:84:void my_readFromParcel(android.os.Parcel) -> my_readFromParcel
    50:50:void recycleInstance(com.github.mikephil.charting.utils.MPPointF) -> recycleInstance
com.github.mikephil.charting.utils.MPPointF$1 -> com.github.mikephil.charting.utils.MPPointF$1:
    57:57:void <init>() -> <init>
    57:57:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:63:com.github.mikephil.charting.utils.MPPointF createFromParcel(android.os.Parcel) -> createFromParcel
    57:57:java.lang.Object[] newArray(int) -> newArray
    71:71:com.github.mikephil.charting.utils.MPPointF[] newArray(int) -> newArray
com.github.mikephil.charting.utils.ObjectPool -> com.github.mikephil.charting.utils.ObjectPool:
    54:56:void <init>(int,com.github.mikephil.charting.utils.ObjectPool$Poolable) -> <init>
    47:51:com.github.mikephil.charting.utils.ObjectPool create(int,com.github.mikephil.charting.utils.ObjectPool$Poolable) -> create
    115:123:com.github.mikephil.charting.utils.ObjectPool$Poolable get() -> get
    133:149:void recycle(com.github.mikephil.charting.utils.ObjectPool$Poolable) -> recycle
    88:88:void refillPool() -> refillPool
    92:103:void refillPool(float) -> refillPool
    180:186:void resizePool() -> resizePool
    80:80:void setReplenishPercentage(float) -> setReplenishPercentage
com.github.mikephil.charting.utils.ObjectPool$Poolable -> com.github.mikephil.charting.utils.ObjectPool$Poolable:
    210:213:void <init>() -> <init>
com.github.mikephil.charting.utils.Transformer -> com.github.mikephil.charting.utils.Transformer:
    37:38:void <init>(com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    214:232:float[] generateTransformedValuesCandle(com.github.mikephil.charting.interfaces.datasets.ICandleDataSet,float,float,int,int) -> generateTransformedValuesCandle
    177:195:float[] generateTransformedValuesLine(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,float,float,int,int) -> generateTransformedValuesLine
    425:433:com.github.mikephil.charting.utils.MPPointD getPixelForValues(float,float) -> getPixelForValues
    447:450:android.graphics.Matrix getValueToPixelMatrix() -> getValueToPixelMatrix
    399:400:com.github.mikephil.charting.utils.MPPointD getValuesByTouchPoint(float,float) -> getValuesByTouchPoint
    406:412:void getValuesByTouchPoint(float,float,com.github.mikephil.charting.utils.MPPointD) -> getValuesByTouchPoint
    245:247:void pathValueToPixel(android.graphics.Path) -> pathValueToPixel
    367:378:void pixelsToValue(float[]) -> pixelsToValue
    270:272:void pointValuesToPixel(float[]) -> pointValuesToPixel
    75:85:void prepareMatrixOffset(boolean) -> prepareMatrixOffset
    52:65:void prepareMatrixValuePx(float,float,float,float) -> prepareMatrixValuePx
    296:301:void rectToPixelPhase(android.graphics.RectF,float) -> rectToPixelPhase
    307:312:void rectToPixelPhaseHorizontal(android.graphics.RectF,float) -> rectToPixelPhaseHorizontal
    282:284:void rectValueToPixel(android.graphics.RectF) -> rectValueToPixel
com.github.mikephil.charting.utils.TransformerHorizontalBarChart -> com.github.mikephil.charting.utils.TransformerHorizontalBarChart:
    12:12:void <init>(com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    22:34:void prepareMatrixOffset(boolean) -> prepareMatrixOffset
com.github.mikephil.charting.utils.Utils -> com.github.mikephil.charting.utils.Utils:
    43:550:void <clinit>() -> <clinit>
    159:162:int calcTextHeight(android.graphics.Paint,java.lang.String) -> calcTextHeight
    196:197:com.github.mikephil.charting.utils.FSize calcTextSize(android.graphics.Paint,java.lang.String) -> calcTextSize
    212:216:void calcTextSize(android.graphics.Paint,java.lang.String,com.github.mikephil.charting.utils.FSize) -> calcTextSize
    145:145:int calcTextWidth(android.graphics.Paint,java.lang.String) -> calcTextWidth
    103:112:float convertDpToPixel(float) -> convertDpToPixel
    531:546:void drawImage(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int) -> drawImage
    559:615:void drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float) -> drawXAxisValue
    232:232:com.github.mikephil.charting.formatter.ValueFormatter generateDefaultValueFormatter() -> generateDefaultValueFormatter
    373:378:int getDecimals(float) -> getDecimals
    238:238:com.github.mikephil.charting.formatter.ValueFormatter getDefaultValueFormatter() -> getDefaultValueFormatter
    168:168:float getLineHeight(android.graphics.Paint) -> getLineHeight
    172:173:float getLineHeight(android.graphics.Paint,android.graphics.Paint$FontMetrics) -> getLineHeight
    177:177:float getLineSpacing(android.graphics.Paint) -> getLineSpacing
    181:182:float getLineSpacing(android.graphics.Paint,android.graphics.Paint$FontMetrics) -> getLineSpacing
    511:511:int getMaximumFlingVelocity() -> getMaximumFlingVelocity
    507:507:int getMinimumFlingVelocity() -> getMinimumFlingVelocity
    773:773:int getSDKInt() -> getSDKInt
    750:750:com.github.mikephil.charting.utils.FSize getSizeOfRotatedRectangleByDegrees(float,float,float) -> getSizeOfRotatedRectangleByDegrees
    765:764:com.github.mikephil.charting.utils.FSize getSizeOfRotatedRectangleByRadians(float,float,float) -> getSizeOfRotatedRectangleByRadians
    58:71:void init(android.content.Context) -> init
    439:439:double nextUp(double) -> nextUp
    500:503:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    352:360:float roundToNextSignificant(double) -> roundToNextSignificant
    471:486:void velocityTrackerPointerUpCleanUpIfNecessary(android.view.MotionEvent,android.view.VelocityTracker) -> velocityTrackerPointerUpCleanUpIfNecessary
com.github.mikephil.charting.utils.ViewPortHandler -> com.github.mikephil.charting.utils.ViewPortHandler:
    82:412:void <init>() -> <init>
    739:739:boolean canZoomInMoreX() -> canZoomInMoreX
    757:757:boolean canZoomInMoreY() -> canZoomInMoreY
    730:730:boolean canZoomOutMoreX() -> canZoomOutMoreX
    748:748:boolean canZoomOutMoreY() -> canZoomOutMoreY
    397:406:void centerViewPort(float[],android.view.View) -> centerViewPort
    148:148:float contentBottom() -> contentBottom
    156:156:float contentHeight() -> contentHeight
    140:140:float contentLeft() -> contentLeft
    144:144:float contentRight() -> contentRight
    136:136:float contentTop() -> contentTop
    152:152:float contentWidth() -> contentWidth
    168:168:float getChartHeight() -> getChartHeight
    172:172:float getChartWidth() -> getChartWidth
    164:164:com.github.mikephil.charting.utils.MPPointF getContentCenter() -> getContentCenter
    160:160:android.graphics.RectF getContentRect() -> getContentRect
    578:578:android.graphics.Matrix getMatrixTouch() -> getMatrixTouch
    622:622:float getScaleX() -> getScaleX
    629:629:float getScaleY() -> getScaleY
    107:107:boolean hasChartDimens() -> hasChartDimens
    721:721:boolean hasNoDragOffset() -> hasNoDragOffset
    673:673:boolean isFullyZoomedOut() -> isFullyZoomedOut
    692:692:boolean isFullyZoomedOutX() -> isFullyZoomedOutX
    682:682:boolean isFullyZoomedOutY() -> isFullyZoomedOutY
    597:597:boolean isInBounds(float,float) -> isInBounds
    615:615:boolean isInBoundsBottom(float) -> isInBoundsBottom
    601:601:boolean isInBoundsLeft(float) -> isInBoundsLeft
    606:606:boolean isInBoundsRight(float) -> isInBoundsRight
    610:610:boolean isInBoundsTop(float) -> isInBoundsTop
    589:589:boolean isInBoundsX(float) -> isInBoundsX
    593:593:boolean isInBoundsY(float) -> isInBoundsY
    441:475:void limitTransAndScale(android.graphics.Matrix,android.graphics.RectF) -> limitTransAndScale
    132:132:float offsetBottom() -> offsetBottom
    120:120:float offsetLeft() -> offsetLeft
    124:124:float offsetRight() -> offsetRight
    128:128:float offsetTop() -> offsetTop
    422:430:android.graphics.Matrix refresh(android.graphics.Matrix,android.view.View,boolean) -> refresh
    115:115:void restrainViewPort(float,float,float,float) -> restrainViewPort
    95:103:void setChartDimens(float,float) -> setChartDimens
    702:702:void setDragOffsetX(float) -> setDragOffsetX
    712:712:void setDragOffsetY(float) -> setDragOffsetY
    503:505:void setMaximumScaleX(float) -> setMaximumScaleX
    553:555:void setMaximumScaleY(float) -> setMaximumScaleY
    488:490:void setMinimumScaleX(float) -> setMinimumScaleX
    538:540:void setMinimumScaleY(float) -> setMinimumScaleY
    273:275:void zoom(float,float,float,float,android.graphics.Matrix) -> zoom
com.github.paolorotolo.appintro.AppIntro -> com.github.paolorotolo.appintro.AppIntro:
    31:53:void <init>() -> <init>
    31:31:void access$000(com.github.paolorotolo.appintro.AppIntro,android.view.View,boolean) -> access$000
    232:233:void addSlide(androidx.fragment.app.Fragment) -> addSlide
    575:581:void askForPermissions(java.lang.String[],int) -> askForPermissions
    214:214:com.github.paolorotolo.appintro.AppIntroViewPager getPager() -> getPager
    238:238:java.util.List getSlides() -> getSlides
    218:228:void initController() -> initController
    242:242:boolean isProgressButtonEnabled() -> isProgressButtonEnabled
    246:246:boolean isSkipButtonEnabled() -> isSkipButtonEnabled
    66:180:void onCreate(android.os.Bundle) -> onCreate
    282:278:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    588:591:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    191:198:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    203:210:void restoreLockingState(android.os.Bundle) -> restoreLockingState
    313:314:void setBarColor(int) -> setBarColor
    251:253:void setButtonState(android.view.View,boolean) -> setButtonState
    353:354:void setColorDoneText(int) -> setColorDoneText
    363:364:void setColorSkipButton(int) -> setColorSkipButton
    468:468:void setCustomIndicator(com.github.paolorotolo.appintro.IndicatorController) -> setCustomIndicator
    512:512:void setCustomTransformer(androidx.viewpager.widget.ViewPager$PageTransformer) -> setCustomTransformer
    503:503:void setDepthAnimation() -> setDepthAnimation
    343:344:void setDoneText(java.lang.CharSequence) -> setDoneText
    475:475:void setFadeAnimation() -> setFadeAnimation
    489:489:void setFlowAnimation() -> setFlowAnimation
    373:374:void setImageNextButton(android.graphics.drawable.Drawable) -> setImageNextButton
    524:531:void setIndicatorColor(int,int) -> setIndicatorColor
    384:385:void setNavBarColor(java.lang.String) -> setNavBarColor
    395:396:void setNavBarColor(int) -> setNavBarColor
    545:551:void setNextPageSwipeLock(boolean) -> setNextPageSwipeLock
    258:258:void setOffScreenPageLimit(int) -> setOffScreenPageLimit
    292:303:void setProgressButtonEnabled(boolean) -> setProgressButtonEnabled
    458:458:void setProgressIndicator() -> setProgressIndicator
    186:186:void setScrollDurationFactor(int) -> setScrollDurationFactor
    323:324:void setSeparatorColor(int) -> setSeparatorColor
    333:334:void setSkipText(java.lang.CharSequence) -> setSkipText
    496:496:void setSlideOverAnimation() -> setSlideOverAnimation
    563:569:void setSwipeLock(boolean) -> setSwipeLock
    441:441:void setVibrate(boolean) -> setVibrate
    450:450:void setVibrateIntensity(int) -> setVibrateIntensity
    482:482:void setZoomAnimation() -> setZoomAnimation
    432:432:void showDoneButton(boolean) -> showDoneButton
    421:422:void showSkipButton(boolean) -> showSkipButton
    407:410:void showStatusBar(boolean) -> showStatusBar
com.github.paolorotolo.appintro.AppIntro$1 -> com.github.paolorotolo.appintro.AppIntro$1:
    84:84:void <init>(com.github.paolorotolo.appintro.AppIntro) -> <init>
    87:90:void onClick(android.view.View) -> onClick
com.github.paolorotolo.appintro.AppIntro$2 -> com.github.paolorotolo.appintro.AppIntro$2:
    94:94:void <init>(com.github.paolorotolo.appintro.AppIntro) -> <init>
    97:120:void onClick(android.view.View) -> onClick
com.github.paolorotolo.appintro.AppIntro$3 -> com.github.paolorotolo.appintro.AppIntro$3:
    125:125:void <init>(com.github.paolorotolo.appintro.AppIntro) -> <init>
    128:131:void onClick(android.view.View) -> onClick
com.github.paolorotolo.appintro.AppIntro$4 -> com.github.paolorotolo.appintro.AppIntro$4:
    138:138:void <init>(com.github.paolorotolo.appintro.AppIntro) -> <init>
    146:162:void onPageSelected(int) -> onPageSelected
com.github.paolorotolo.appintro.AppIntro$TransformType -> com.github.paolorotolo.appintro.AppIntro$TransformType:
    57:56:void <clinit>() -> <clinit>
    56:56:void <init>(java.lang.String,int) -> <init>
    56:56:com.github.paolorotolo.appintro.AppIntro$TransformType valueOf(java.lang.String) -> valueOf
    56:56:com.github.paolorotolo.appintro.AppIntro$TransformType[] values() -> values
com.github.paolorotolo.appintro.AppIntro2 -> com.github.paolorotolo.appintro.AppIntro2:
    26:52:void <init>() -> <init>
    26:26:java.util.ArrayList access$000(com.github.paolorotolo.appintro.AppIntro2) -> access$000
    26:26:android.animation.ArgbEvaluator access$100(com.github.paolorotolo.appintro.AppIntro2) -> access$100
    222:223:void addSlide(androidx.fragment.app.Fragment) -> addSlide
    438:444:void askForPermissions(java.lang.String[],int) -> askForPermissions
    204:204:com.github.paolorotolo.appintro.AppIntroViewPager getPager() -> getPager
    228:228:java.util.List getSlides() -> getSlides
    208:218:void initController() -> initController
    264:264:boolean isProgressButtonEnabled() -> isProgressButtonEnabled
    64:173:void onCreate(android.os.Bundle) -> onCreate
    371:367:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    451:454:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    183:189:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    194:200:void restoreLockingState(android.os.Bundle) -> restoreLockingState
    432:432:void setAnimationColors(java.util.ArrayList) -> setAnimationColors
    292:294:void setBackgroundView(android.view.View) -> setBackgroundView
    269:271:void setButtonState(android.view.View,boolean) -> setButtonState
    349:349:void setCustomIndicator(com.github.paolorotolo.appintro.IndicatorController) -> setCustomIndicator
    327:327:void setCustomTransformer(androidx.viewpager.widget.ViewPager$PageTransformer) -> setCustomTransformer
    323:323:void setDepthAnimation() -> setDepthAnimation
    307:307:void setFadeAnimation() -> setFadeAnimation
    315:315:void setFlowAnimation() -> setFlowAnimation
    378:385:void setIndicatorColor(int,int) -> setIndicatorColor
    276:277:void setNavBarColor(java.lang.String) -> setNavBarColor
    399:405:void setNextPageSwipeLock(boolean) -> setNextPageSwipeLock
    331:331:void setOffScreenPageLimit(int) -> setOffScreenPageLimit
    248:259:void setProgressButtonEnabled(boolean) -> setProgressButtonEnabled
    339:339:void setProgressIndicator() -> setProgressIndicator
    178:178:void setScrollDurationFactor(int) -> setScrollDurationFactor
    319:319:void setSlideOverAnimation() -> setSlideOverAnimation
    417:423:void setSwipeLock(boolean) -> setSwipeLock
    299:299:void setVibrate(boolean) -> setVibrate
    303:303:void setVibrateIntensity(int) -> setVibrateIntensity
    311:311:void setZoomAnimation() -> setZoomAnimation
    238:238:void showDoneButton(boolean) -> showDoneButton
    282:287:void showStatusBar(boolean) -> showStatusBar
com.github.paolorotolo.appintro.AppIntro2$1 -> com.github.paolorotolo.appintro.AppIntro2$1:
    80:80:void <init>(com.github.paolorotolo.appintro.AppIntro2) -> <init>
    83:106:void onClick(android.view.View) -> onClick
com.github.paolorotolo.appintro.AppIntro2$2 -> com.github.paolorotolo.appintro.AppIntro2$2:
    111:111:void <init>(com.github.paolorotolo.appintro.AppIntro2) -> <init>
    114:117:void onClick(android.view.View) -> onClick
com.github.paolorotolo.appintro.AppIntro2$3 -> com.github.paolorotolo.appintro.AppIntro2$3:
    124:124:void <init>(com.github.paolorotolo.appintro.AppIntro2) -> <init>
    128:132:void onPageScrolled(int,float,int) -> onPageScrolled
    140:155:void onPageSelected(int) -> onPageSelected
com.github.paolorotolo.appintro.AppIntro2$TransformType -> com.github.paolorotolo.appintro.AppIntro2$TransformType:
    55:54:void <clinit>() -> <clinit>
    54:54:void <init>(java.lang.String,int) -> <init>
    54:54:com.github.paolorotolo.appintro.AppIntro2$TransformType valueOf(java.lang.String) -> valueOf
    54:54:com.github.paolorotolo.appintro.AppIntro2$TransformType[] values() -> values
com.github.paolorotolo.appintro.AppIntroFragment -> com.github.paolorotolo.appintro.AppIntroFragment:
    46:46:void <init>() -> <init>
    24:24:com.github.paolorotolo.appintro.AppIntroFragment newInstance(java.lang.CharSequence,java.lang.CharSequence,int,int) -> newInstance
    29:38:com.github.paolorotolo.appintro.AppIntroFragment newInstance(java.lang.CharSequence,java.lang.CharSequence,int,int,int,int) -> newInstance
    51:59:void onCreate(android.os.Bundle) -> onCreate
    66:84:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.github.paolorotolo.appintro.AppIntroViewPager -> com.github.paolorotolo.appintro.AppIntroViewPager:
    20:24:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    29:30:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    71:80:boolean checkPagingState(android.view.MotionEvent) -> checkPagingState
    150:158:boolean detectSwipeToRight(android.view.MotionEvent) -> detectSwipeToRight
    136:136:int getLockPage() -> getLockPage
    103:112:void initViewPagerScroller() -> initViewPagerScroller
    124:124:boolean isNextPagingEnabled() -> isNextPagingEnabled
    128:128:boolean isPagingEnabled() -> isPagingEnabled
    54:58:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    63:67:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    43:49:void setCurrentItem(int) -> setCurrentItem
    140:140:void setLockPage(int) -> setLockPage
    90:92:void setNextPagingEnabled(boolean) -> setNextPagingEnabled
    132:132:void setPagingEnabled(boolean) -> setPagingEnabled
    120:120:void setScrollDurationFactor(double) -> setScrollDurationFactor
com.github.paolorotolo.appintro.BuildConfig -> com.github.paolorotolo.appintro.BuildConfig:
    6:6:void <init>() -> <init>
com.github.paolorotolo.appintro.DefaultIndicatorController -> com.github.paolorotolo.appintro.DefaultIndicatorController:
    15:23:void <init>() -> <init>
    37:55:void initialize(int) -> initialize
    30:32:android.view.View newInstance(android.content.Context) -> newInstance
    60:68:void selectPosition(int) -> selectPosition
    74:75:void setSelectedIndicatorColor(int) -> setSelectedIndicatorColor
    80:81:void setUnselectedIndicatorColor(int) -> setUnselectedIndicatorColor
com.github.paolorotolo.appintro.FadePageTransformer -> com.github.paolorotolo.appintro.FadePageTransformer:
    7:7:void <init>() -> <init>
    10:14:void transformPage(android.view.View,float) -> transformPage
com.github.paolorotolo.appintro.PagerAdapter -> com.github.paolorotolo.appintro.PagerAdapter:
    14:15:void <init>(androidx.fragment.app.FragmentManager,java.util.List) -> <init>
    25:25:int getCount() -> getCount
    30:30:java.util.List getFragments() -> getFragments
    20:20:androidx.fragment.app.Fragment getItem(int) -> getItem
com.github.paolorotolo.appintro.PermissionObject -> com.github.paolorotolo.appintro.PermissionObject:
    8:10:void <init>(java.lang.String[],int) -> <init>
    14:14:java.lang.String[] getPermission() -> getPermission
    18:18:int getPosition() -> getPosition
com.github.paolorotolo.appintro.ProgressIndicatorController -> com.github.paolorotolo.appintro.ProgressIndicatorController:
    9:15:void <init>() -> <init>
    29:30:void initialize(int) -> initialize
    19:24:android.view.View newInstance(android.content.Context) -> newInstance
    35:35:void selectPosition(int) -> selectPosition
    40:42:void setSelectedIndicatorColor(int) -> setSelectedIndicatorColor
    47:49:void setUnselectedIndicatorColor(int) -> setUnselectedIndicatorColor
com.github.paolorotolo.appintro.R -> com.github.paolorotolo.appintro.R:
    10:10:void <init>() -> <init>
com.github.paolorotolo.appintro.R$anim -> com.github.paolorotolo.appintro.R$anim:
    13:13:void <init>() -> <init>
com.github.paolorotolo.appintro.R$attr -> com.github.paolorotolo.appintro.R$attr:
    27:27:void <init>() -> <init>
com.github.paolorotolo.appintro.R$bool -> com.github.paolorotolo.appintro.R$bool:
    237:237:void <init>() -> <init>
com.github.paolorotolo.appintro.R$color -> com.github.paolorotolo.appintro.R$color:
    244:244:void <init>() -> <init>
com.github.paolorotolo.appintro.R$dimen -> com.github.paolorotolo.appintro.R$dimen:
    316:316:void <init>() -> <init>
com.github.paolorotolo.appintro.R$drawable -> com.github.paolorotolo.appintro.R$drawable:
    392:392:void <init>() -> <init>
com.github.paolorotolo.appintro.R$id -> com.github.paolorotolo.appintro.R$id:
    460:460:void <init>() -> <init>
com.github.paolorotolo.appintro.R$integer -> com.github.paolorotolo.appintro.R$integer:
    567:567:void <init>() -> <init>
com.github.paolorotolo.appintro.R$layout -> com.github.paolorotolo.appintro.R$layout:
    575:575:void <init>() -> <init>
com.github.paolorotolo.appintro.R$string -> com.github.paolorotolo.appintro.R$string:
    619:619:void <init>() -> <init>
com.github.paolorotolo.appintro.R$style -> com.github.paolorotolo.appintro.R$style:
    654:654:void <init>() -> <init>
com.github.paolorotolo.appintro.R$styleable -> com.github.paolorotolo.appintro.R$styleable:
    954:1208:void <clinit>() -> <clinit>
    952:952:void <init>() -> <init>
com.github.paolorotolo.appintro.ScrollerCustomDuration -> com.github.paolorotolo.appintro.ScrollerCustomDuration:
    13:10:void <init>(android.content.Context) -> <init>
    17:10:void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    22:10:void <init>(android.content.Context,android.view.animation.Interpolator,boolean) -> <init>
    29:29:void setScrollDurationFactor(double) -> setScrollDurationFactor
    34:34:void startScroll(int,int,int,int,int) -> startScroll
com.github.paolorotolo.appintro.ViewPageTransformer -> com.github.paolorotolo.appintro.ViewPageTransformer:
    19:20:void <init>(com.github.paolorotolo.appintro.ViewPageTransformer$TransformType) -> <init>
    35:37:void transformPage(android.view.View,float) -> transformPage
com.github.paolorotolo.appintro.ViewPageTransformer$1 -> com.github.paolorotolo.appintro.ViewPageTransformer$1:
    35:35:void <clinit>() -> <clinit>
com.github.paolorotolo.appintro.ViewPageTransformer$TransformType -> com.github.paolorotolo.appintro.ViewPageTransformer$TransformType:
    10:9:void <clinit>() -> <clinit>
    9:9:void <init>(java.lang.String,int) -> <init>
    9:9:com.github.paolorotolo.appintro.ViewPageTransformer$TransformType valueOf(java.lang.String) -> valueOf
    9:9:com.github.paolorotolo.appintro.ViewPageTransformer$TransformType[] values() -> values
com.google.android.material.R$styleable -> com.google.android.material.R$styleable:
    2507:3391:void <clinit>() -> <clinit>
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
    36:43:void <clinit>() -> <clinit>
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
    39:47:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.animation.ArgbEvaluatorCompat:
    29:29:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    28:28:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    58:91:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    40:40:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> getInstance
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
    38:38:void <clinit>() -> <clinit>
    42:42:void <init>(java.lang.String) -> <init>
    33:33:java.lang.Object get(java.lang.Object) -> get
    48:52:java.lang.Float get(android.view.ViewGroup) -> get
    33:33:void set(java.lang.Object,java.lang.Object) -> set
    58:64:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.animation.DrawableAlphaProperty:
    36:36:void <clinit>() -> <clinit>
    42:39:void <init>() -> <init>
    30:30:java.lang.Object get(java.lang.Object) -> get
    48:54:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    30:30:void set(java.lang.Object,java.lang.Object) -> set
    59:63:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
    31:28:void <init>() -> <init>
    27:27:java.lang.Object get(java.lang.Object) -> get
    42:43:android.graphics.Matrix get(android.widget.ImageView) -> get
    27:27:void set(java.lang.Object,java.lang.Object) -> set
    36:36:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
    26:29:void <init>() -> <init>
    34:41:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
    66:71:void <init>() -> <init>
    215:220:void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addInfoFromAnimator
    175:178:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    188:200:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    207:209:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    229:235:boolean equals(java.lang.Object) -> equals
    84:85:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    161:163:long getTotalDuration() -> getTotalDuration
    76:76:boolean hasTiming(java.lang.String) -> hasTiming
    240:240:int hashCode() -> hashCode
    123:123:void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[]) -> setPropertyValues
    92:92:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    246:254:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
    39:41:void <init>(long,long) -> <init>
    44:47:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:56:void apply(android.animation.Animator) -> apply
    83:87:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    119:137:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    70:70:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    102:104:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    74:74:int getRepeatCount() -> getRepeatCount
    78:78:int getRepeatMode() -> getRepeatMode
    142:146:int hashCode() -> hashCode
    153:169:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
    34:37:void <init>(int,float,float) -> <init>
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
    572:572:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    928:931:void clearLiftOnScrollTargetView() -> clearLiftOnScrollTargetView
    380:387:void draw(android.graphics.Canvas) -> draw
    393:399:void drawableStateChanged() -> drawableStateChanged
    910:924:android.view.View findLiftOnScrollTargetView(android.view.View) -> findLiftOnScrollTargetView
    125:125:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    125:125:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    577:577:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    125:125:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    125:125:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    125:125:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    125:125:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    582:582:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    587:592:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    659:697:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    702:733:int getDownNestedScrollRange() -> getDownNestedScrollRange
    896:896:int getLiftOnScrollTargetViewId() -> getLiftOnScrollTargetViewId
    756:773:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    958:958:int getPendingAction() -> getPendingAction
    375:375:android.graphics.drawable.Drawable getStatusBarForeground() -> getStatusBarForeground
    967:967:int getTopInset() -> getTopInset
    612:645:int getTotalScrollRange() -> getTotalScrollRange
    654:654:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    603:603:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    493:494:boolean hasCollapsibleChild() -> hasCollapsibleChild
    649:649:boolean hasScrollableChildren() -> hasScrollableChildren
    503:505:void invalidateScrollRanges() -> invalidateScrollRanges
    877:877:boolean isLiftOnScroll() -> isLiftOnScroll
    519:521:void onAttachedToWindow() -> onAttachedToWindow
    778:794:int[] onCreateDrawableState(int) -> onCreateDrawableState
    597:599:void onDetachedFromWindow() -> onDetachedFromWindow
    450:480:void onLayout(boolean,int,int,int,int) -> onLayout
    420:445:void onMeasure(int,int) -> onMeasure
    737:749:void onOffsetChanged(int) -> onOffsetChanged
    962:962:void resetPendingAction() -> resetPendingAction
    527:529:void setElevation(float) -> setElevation
    544:544:void setExpanded(boolean) -> setExpanded
    559:559:void setExpanded(boolean,boolean) -> setExpanded
    563:567:void setExpanded(boolean,boolean,boolean) -> setExpanded
    872:872:void setLiftOnScroll(boolean) -> setLiftOnScroll
    885:887:void setLiftOnScrollTargetViewId(int) -> setLiftOnScrollTargetViewId
    809:811:boolean setLiftableState(boolean) -> setLiftableState
    828:832:boolean setLiftedState(boolean) -> setLiftedState
    514:511:void setOrientation(int) -> setOrientation
    323:337:void setStatusBarForeground(android.graphics.drawable.Drawable) -> setStatusBarForeground
    351:351:void setStatusBarForegroundColor(int) -> setStatusBarForegroundColor
    364:364:void setStatusBarForegroundResource(int) -> setStatusBarForegroundResource
    943:944:void setTargetElevation(float) -> setTargetElevation
    410:414:void setVisibility(int) -> setVisibility
    489:489:boolean shouldDrawStatusBarForeground() -> shouldDrawStatusBarForeground
    900:905:boolean shouldLift(android.view.View) -> shouldLift
    975:977:boolean shouldOffsetFirstChild() -> shouldOffsetFirstChild
    841:860:void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> startLiftOnScrollElevationOverlayAnimation
    485:485:void updateWillNotDraw() -> updateWillNotDraw
    405:405:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.AppBarLayout$2 -> com.google.android.material.appbar.AppBarLayout$2:
    854:854:void <init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    857:857:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    1234:1227:void <init>() -> <init>
    1237:1227:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1203:1203:int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$000
    1357:1368:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1376:1401:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    1203:1203:boolean canDragView(android.view.View) -> canDragView
    1563:1574:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    1271:1272:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    1785:1787:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    1773:1776:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1405:1414:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    1203:1203:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    1592:1592:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    1203:1203:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    1597:1597:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    1798:1798:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    1660:1694:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    1203:1203:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    1584:1586:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    1203:1203:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1506:1556:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1203:1203:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1483:1499:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1203:1203:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1289:1301:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1203:1203:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1320:1320:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1203:1203:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    1828:1836:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1203:1203:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    1803:1816:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1203:1203:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1252:1263:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1203:1203:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1331:1340:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1203:1203:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    1607:1648:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    1756:1764:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1425:1464:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    1713:1748:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
    1388:1388:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1391:1391:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
    1865:1865:void <clinit>() -> <clinit>
    1847:1850:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1854:1854:void <init>(android.os.Parcelable) -> <init>
    1859:1862:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    1866:1866:void <init>() -> <init>
    1866:1866:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1866:1866:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1870:1870:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1876:1876:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1866:1866:java.lang.Object[] newArray(int) -> newArray
    1882:1882:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
    1190:1190:void <init>() -> <init>
    1194:1194:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1184:1184:int getTopAndBottomOffset() -> getTopAndBottomOffset
    1184:1184:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1184:1184:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1184:1184:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1184:1184:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1184:1184:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1184:1184:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1184:1184:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1184:1184:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1184:1184:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
    1084:1091:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1095:1080:void <init>(int,int) -> <init>
    1103:1080:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1107:1080:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1113:1080:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    1147:1147:int getScrollFlags() -> getScrollFlags
    1169:1169:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    1174:1174:boolean isCollapsible() -> isCollapsible
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    1894:1894:void <init>() -> <init>
    1897:1903:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1892:1892:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    1994:1997:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    1984:1986:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> getAppBarLayoutOffset
    1962:1966:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    2005:2008:int getScrollRange(android.view.View) -> getScrollRange
    1909:1909:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    1946:1951:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    1915:1916:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1892:1892:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1892:1892:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1926:1937:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2013:2016:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
    50:47:void <init>() -> <init>
    53:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    299:300:void ensureVelocityTracker() -> ensureVelocityTracker
    247:271:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    59:122:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    128:196:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    236:233:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    203:203:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
    308:310:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    315:321:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
    47:44:void <init>() -> <init>
    50:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    166:168:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    204:204:int getOverlayTop() -> getOverlayTop
    179:179:int getScrollRange(android.view.View) -> getScrollRange
    186:186:int getVerticalLayoutGap() -> getVerticalLayoutGap
    113:153:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    61:99:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    196:196:void setOverlayTop(int) -> setOverlayTop
com.google.android.material.appbar.MaterialToolbar -> com.google.android.material.appbar.MaterialToolbar:
    61:61:void <clinit>() -> <clinit>
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:76:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    95:105:void initBackground(android.content.Context) -> initBackground
    81:83:void onAttachedToWindow() -> onAttachedToWindow
    89:91:void setElevation(float) -> setElevation
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
    33:31:void <init>() -> <init>
    36:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:88:int getTopAndBottomOffset() -> getTopAndBottomOffset
    66:66:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    43:57:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    70:73:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
    40:41:void <init>(android.view.View) -> <init>
    51:52:void applyOffsets() -> applyOffsets
    86:86:int getTopAndBottomOffset() -> getTopAndBottomOffset
    46:47:void onViewLayout() -> onViewLayout
    77:79:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    62:64:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewUtilsLollipop -> com.google.android.material.appbar.ViewUtilsLollipop:
    62:79:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
com.google.android.material.badge.BadgeDrawable -> com.google.android.material.badge.BadgeDrawable:
    359:373:void <init>(android.content.Context) -> <init>
    687:722:void calculateCenterAndBounds(android.content.Context,android.graphics.Rect,android.view.View) -> calculateCenterAndBounds
    254:255:com.google.android.material.badge.BadgeDrawable createFromSavedState(android.content.Context,com.google.android.material.badge.BadgeDrawable$SavedState) -> createFromSavedState
    577:583:void draw(android.graphics.Canvas) -> draw
    738:741:void drawText(android.graphics.Canvas) -> drawText
    548:548:int getAlpha() -> getAlpha
    751:759:java.lang.String getBadgeText() -> getBadgeText
    613:630:java.lang.CharSequence getContentDescription() -> getContentDescription
    566:566:int getIntrinsicHeight() -> getIntrinsicHeight
    572:572:int getIntrinsicWidth() -> getIntrinsicWidth
    497:497:int getMaxCharacterCount() -> getMaxCharacterCount
    460:463:int getNumber() -> getNumber
    247:247:com.google.android.material.badge.BadgeDrawable$SavedState getSavedState() -> getSavedState
    447:447:boolean hasNumber() -> hasNumber
    600:600:boolean onStateChange(int[]) -> onStateChange
    595:595:void onTextSizeChange() -> onTextSizeChange
    308:323:void restoreFromSavedState(com.google.android.material.badge.BadgeDrawable$SavedState) -> restoreFromSavedState
    553:555:void setAlpha(int) -> setAlpha
    412:416:void setBackgroundColor(int) -> setBackgroundColor
    527:530:void setBadgeGravity(int) -> setBadgeGravity
    438:441:void setBadgeTextColor(int) -> setBadgeTextColor
    507:512:void setMaxCharacterCount(int) -> setMaxCharacterCount
    475:480:void setNumber(int) -> setNumber
    643:651:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    635:639:void setTextAppearanceResource(int) -> setTextAppearanceResource
    388:391:void updateBadgeCoordinates(android.view.View,android.view.ViewGroup) -> updateBadgeCoordinates
    655:681:void updateCenterAndBounds() -> updateCenterAndBounds
    767:767:void updateMaxBadgeNumber() -> updateMaxBadgeNumber
com.google.android.material.badge.BadgeDrawable$SavedState -> com.google.android.material.badge.BadgeDrawable$SavedState:
    212:212:void <clinit>() -> <clinit>
    190:198:void <init>(android.content.Context) -> <init>
    201:209:void <init>(android.os.Parcel) -> <init>
    179:179:int access$000(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$000
    179:179:int access$002(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$002
    179:179:int access$100(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$100
    179:179:int access$102(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$102
    179:179:int access$200(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$200
    179:179:int access$202(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$202
    179:179:int access$300(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$300
    179:179:int access$302(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$302
    179:179:int access$400(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$400
    179:179:int access$402(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$402
    179:179:int access$500(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$500
    179:179:int access$502(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$502
    179:179:java.lang.CharSequence access$600(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$600
    179:179:int access$700(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$700
    234:241:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.badge.BadgeDrawable$SavedState$1 -> com.google.android.material.badge.BadgeDrawable$SavedState$1:
    213:213:void <init>() -> <init>
    213:213:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    217:217:com.google.android.material.badge.BadgeDrawable$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    213:213:java.lang.Object[] newArray(int) -> newArray
    223:223:com.google.android.material.badge.BadgeDrawable$SavedState[] newArray(int) -> newArray
com.google.android.material.badge.BadgeUtils -> com.google.android.material.badge.BadgeUtils:
    41:41:void <clinit>() -> <clinit>
    76:80:void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> attachBadgeDrawable
    156:161:android.util.SparseArray createBadgeDrawablesFromSavedStates(android.content.Context,com.google.android.material.internal.ParcelableSparseArray) -> createBadgeDrawablesFromSavedStates
    131:136:com.google.android.material.internal.ParcelableSparseArray createParcelableBadgeStates(android.util.SparseArray) -> createParcelableBadgeStates
    97:100:void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> detachBadgeDrawable
    112:116:void setBadgeDrawableBounds(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> setBadgeDrawableBounds
    58:58:void updateBadgeBounds(android.graphics.Rect,float,float,float,float) -> updateBadgeBounds
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    52:49:void <init>() -> <init>
    55:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    150:154:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    62:64:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    101:103:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    74:77:void setAdditionalHiddenOffsetY(android.view.View,int) -> setAdditionalHiddenOffsetY
    130:139:void slideDown(android.view.View) -> slideDown
    112:121:void slideUp(android.view.View) -> slideUp
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
    155:155:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    158:158:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
    38:208:void <init>() -> <init>
    386:386:float clamp(float,float,float) -> clamp
    390:390:int clamp(int,int,int) -> clamp
    356:360:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    167:184:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    191:192:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    149:149:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    112:112:void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener) -> setListener
    140:140:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    122:122:void setSwipeDirection(int) -> setSwipeDirection
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
    209:213:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    303:328:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    333:333:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    297:297:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    224:231:void onViewCaptured(android.view.View,int) -> onViewCaptured
    237:238:void onViewDragStateChanged(int) -> onViewDragStateChanged
    338:350:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    245:265:void onViewReleased(android.view.View,float,float) -> onViewReleased
    272:289:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    218:219:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
    368:370:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    375:379:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
    109:109:void access$1000(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> access$1000
    109:109:com.google.android.material.floatingactionbutton.FloatingActionButton access$1100(com.google.android.material.bottomappbar.BottomAppBar) -> access$1100
    109:109:float access$1200(com.google.android.material.bottomappbar.BottomAppBar) -> access$1200
    109:109:int access$1600(com.google.android.material.bottomappbar.BottomAppBar) -> access$1600
    109:109:android.view.View access$1700(com.google.android.material.bottomappbar.BottomAppBar) -> access$1700
    109:109:void access$1800(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$1800
    109:109:void access$1900(com.google.android.material.bottomappbar.BottomAppBar) -> access$1900
    109:109:void access$600(com.google.android.material.bottomappbar.BottomAppBar) -> access$600
    109:109:void access$700(com.google.android.material.bottomappbar.BottomAppBar) -> access$700
    109:109:float access$800(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$800
    109:109:android.animation.Animator access$902(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$902
    810:824:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> addFabAnimationListeners
    748:752:void cancelAnimations() -> cancelAnimations
    546:554:void createFabDefaultXAnimation(int,java.util.List) -> createFabDefaultXAnimation
    573:575:void createFabTranslationXAnimation(int,java.util.List) -> createFabTranslationXAnimation
    621:663:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> createMenuViewTranslationAnimation
    452:455:void dispatchAnimationEnd() -> dispatchAnimationEnd
    443:446:void dispatchAnimationStart() -> dispatchAnimationStart
    511:512:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> findDependentFab
    517:524:android.view.View findDependentView() -> findDependentView
    684:687:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    722:741:int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean) -> getActionMenuViewTranslationX
    324:324:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    109:109:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    844:847:com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior() -> getBehavior
    828:828:int getBottomInset() -> getBottomInset
    364:364:float getCradleVerticalOffset() -> getCradleVerticalOffset
    282:282:int getFabAlignmentMode() -> getFabAlignmentMode
    304:304:int getFabAnimationMode() -> getFabAnimationMode
    331:331:float getFabCradleMargin() -> getFabCradleMargin
    347:347:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    672:674:float getFabTranslationX(int) -> getFabTranslationX
    679:679:float getFabTranslationX() -> getFabTranslationX
    668:668:float getFabTranslationY() -> getFabTranslationY
    386:386:boolean getHideOnScroll() -> getHideOnScroll
    776:777:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment() -> getTopEdgeTreatment
    533:534:boolean isFabVisibleOrWillBeShown() -> isFabVisibleOrWillBeShown
    579:613:void maybeAnimateMenuView(int,boolean) -> maybeAnimateMenuView
    475:506:void maybeAnimateModeChange(int) -> maybeAnimateModeChange
    852:859:void onAttachedToWindow() -> onAttachedToWindow
    758:771:void onLayout(boolean,int,int,int,int) -> onLayout
    996:1003:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    987:990:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    792:798:void setActionMenuViewPosition() -> setActionMenuViewPosition
    319:319:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    373:376:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    782:787:void setCutoutState() -> setCutoutState
    410:414:void setElevation(float) -> setElevation
    293:295:void setFabAlignmentMode(int) -> setFabAlignmentMode
    315:315:void setFabAnimationMode(int) -> setFabAnimationMode
    338:340:void setFabCradleMargin(float) -> setFabCradleMargin
    352:354:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    465:467:boolean setFabDiameter(int) -> setFabDiameter
    395:395:void setHideOnScroll(boolean) -> setHideOnScroll
    709:708:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> translateActionMenuView
com.google.android.material.bottomappbar.BottomAppBar$4 -> com.google.android.material.bottomappbar.BottomAppBar$4:
    495:495:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    503:503:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    498:498:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$5 -> com.google.android.material.bottomappbar.BottomAppBar$5:
    555:555:void <init>(com.google.android.material.bottomappbar.BottomAppBar,int) -> <init>
    558:559:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
com.google.android.material.bottomappbar.BottomAppBar$5$1 -> com.google.android.material.bottomappbar.BottomAppBar$5$1:
    560:560:void <init>(com.google.android.material.bottomappbar.BottomAppBar$5) -> <init>
    563:563:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.bottomappbar.BottomAppBar$6 -> com.google.android.material.bottomappbar.BottomAppBar$6:
    601:601:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    609:610:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    604:604:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$7 -> com.google.android.material.bottomappbar.BottomAppBar$7:
    640:640:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    645:645:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    650:651:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$8 -> com.google.android.material.bottomappbar.BottomAppBar$8:
    812:812:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    815:820:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    924:925:void <init>() -> <init>
    929:930:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    867:867:java.lang.ref.WeakReference access$1300(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$1300
    867:867:android.graphics.Rect access$1400(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$1400
    867:867:int access$1500(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$1500
    867:867:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    936:966:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    867:867:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    978:979:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1 -> com.google.android.material.bottomappbar.BottomAppBar$Behavior$1:
    876:876:void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> <init>
    888:892:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
    1027:1027:void <clinit>() -> <clinit>
    1011:1011:void <init>(android.os.Parcelable) -> <init>
    1015:1017:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1022:1024:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    1028:1028:void <init>() -> <init>
    1028:1028:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1028:1028:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1032:1032:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1038:1038:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1028:1028:java.lang.Object[] newArray(int) -> newArray
    1044:1044:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment -> com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    192:192:float getCradleVerticalOffset() -> getCradleVerticalOffset
    73:148:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    205:205:float getFabCradleMargin() -> getFabCradleMargin
    213:213:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    158:158:float getFabDiameter() -> getFabDiameter
    201:201:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    209:209:void setFabCradleMargin(float) -> setFabCradleMargin
    217:217:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    168:168:void setFabDiameter(float) -> setFabDiameter
    173:173:void setHorizontalOffset(float) -> setHorizontalOffset
com.google.android.material.bottomnavigation.BottomNavigationItemView -> com.google.android.material.bottomnavigation.BottomNavigationItemView:
    56:56:void <clinit>() -> <clinit>
    80:80:void <init>(android.content.Context) -> <init>
    84:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    89:127:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:android.widget.ImageView access$000(com.google.android.material.bottomnavigation.BottomNavigationItemView) -> access$000
    53:53:void access$100(com.google.android.material.bottomnavigation.BottomNavigationItemView,android.view.View) -> access$100
    393:395:void calculateTextScaleFactors(float,float) -> calculateTextScaleFactors
    420:420:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    470:471:android.widget.FrameLayout getCustomParentForBadge(android.view.View) -> getCustomParentForBadge
    182:182:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    155:155:int getItemPosition() -> getItemPosition
    428:428:boolean hasBadge() -> hasBadge
    132:147:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    320:322:int[] onCreateDrawableState(int) -> onCreateDrawableState
    279:285:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    424:424:void removeBadge() -> removeBadge
    412:414:void setBadge(com.google.android.material.badge.BadgeDrawable) -> setBadge
    201:201:void setCheckable(boolean) -> setCheckable
    206:274:void setChecked(boolean) -> setChecked
    305:314:void setEnabled(boolean) -> setEnabled
    332:347:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    369:372:void setIconSize(int) -> setIconSize
    361:364:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    400:401:void setItemBackground(int) -> setItemBackground
    405:408:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    151:151:void setItemPosition(int) -> setItemPosition
    170:175:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    159:164:void setShifting(boolean) -> setShifting
    381:382:void setTextAppearanceActive(int) -> setTextAppearanceActive
    376:377:void setTextAppearanceInactive(int) -> setTextAppearanceInactive
    387:388:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    187:196:void setTitle(java.lang.CharSequence) -> setTitle
    291:294:void setViewLayoutParams(android.view.View,int,int) -> setViewLayoutParams
    298:300:void setViewValues(android.view.View,float,float,int) -> setViewValues
    440:448:void tryAttachBadgeToAnchor(android.view.View) -> tryAttachBadgeToAnchor
    454:465:void tryRemoveBadgeFromAnchor(android.view.View) -> tryRemoveBadgeFromAnchor
    432:435:void tryUpdateBadgeBounds(android.view.View) -> tryUpdateBadgeBounds
com.google.android.material.bottomnavigation.BottomNavigationItemView$1 -> com.google.android.material.bottomnavigation.BottomNavigationItemView$1:
    109:109:void <init>(com.google.android.material.bottomnavigation.BottomNavigationItemView) -> <init>
    121:122:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomnavigation.BottomNavigationMenu -> com.google.android.material.bottomnavigation.BottomNavigationMenu:
    35:35:void <init>(android.content.Context) -> <init>
    46:47:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    41:41:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.bottomnavigation.BottomNavigationMenuView -> com.google.android.material.bottomnavigation.BottomNavigationMenuView:
    60:61:void <clinit>() -> <clinit>
    95:95:void <init>(android.content.Context) -> <init>
    99:129:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:56:com.google.android.material.bottomnavigation.BottomNavigationPresenter access$000(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> access$000
    56:56:androidx.appcompat.view.menu.MenuBuilder access$100(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> access$100
    497:547:void buildMenuView() -> buildMenuView
    473:488:android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    618:618:android.util.SparseArray getBadgeDrawables() -> getBadgeDrawables
    261:261:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    413:418:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    389:389:int getItemBackgroundRes() -> getItemBackgroundRes
    283:283:int getItemIconSize() -> getItemIconSize
    364:364:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    335:335:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    306:306:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    445:445:int getLabelVisibilityMode() -> getLabelVisibilityMode
    587:589:com.google.android.material.bottomnavigation.BottomNavigationItemView getNewItem() -> getNewItem
    595:595:int getSelectedItemId() -> getSelectedItemId
    134:134:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    468:468:boolean isItemHorizontalTranslationEnabled() -> isItemHorizontalTranslationEnabled
    217:231:void onLayout(boolean,int,int,int,int) -> onLayout
    139:209:void onMeasure(int,int) -> onMeasure
    683:692:void removeUnusedBadges() -> removeUnusedBadges
    622:625:void setBadgeDrawables(android.util.SparseArray) -> setBadgeDrawables
    670:678:void setBadgeIfNeeded(com.google.android.material.bottomnavigation.BottomNavigationItemView) -> setBadgeIfNeeded
    246:249:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    398:401:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    373:376:void setItemBackgroundRes(int) -> setItemBackgroundRes
    457:457:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    272:275:void setItemIconSize(int) -> setItemIconSize
    344:351:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    315:322:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    292:295:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    436:436:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    493:493:void setPresenter(com.google.android.material.bottomnavigation.BottomNavigationPresenter) -> setPresenter
    605:611:void tryRestoreSelectedItemId(int) -> tryRestoreSelectedItemId
    551:582:void updateMenuView() -> updateMenuView
com.google.android.material.bottomnavigation.BottomNavigationMenuView$1 -> com.google.android.material.bottomnavigation.BottomNavigationMenuView$1:
    119:119:void <init>(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> <init>
    122:125:void onClick(android.view.View) -> onClick
com.google.android.material.bottomnavigation.BottomNavigationPresenter -> com.google.android.material.bottomnavigation.BottomNavigationPresenter:
    40:43:void <init>() -> <init>
    105:105:int getId() -> getId
    52:53:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    120:125:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    111:114:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    47:47:void setBottomNavigationMenuView(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> setBottomNavigationMenuView
    100:100:void setId(int) -> setId
    130:130:void setUpdateSuspended(boolean) -> setUpdateSuspended
    63:69:void updateMenuView(boolean) -> updateMenuView
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState -> com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState:
    155:155:void <clinit>() -> <clinit>
    137:137:void <init>() -> <init>
    139:141:void <init>(android.os.Parcel) -> <init>
    151:152:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1 -> com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1:
    156:156:void <init>() -> <init>
    156:156:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    160:160:com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    156:156:java.lang.Object[] newArray(int) -> newArray
    166:166:com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomnavigation.BottomNavigationView -> com.google.android.material.bottomnavigation.BottomNavigationView:
    116:116:void <clinit>() -> <clinit>
    129:129:void <init>(android.content.Context) -> <init>
    133:133:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    138:250:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener access$000(com.google.android.material.bottomnavigation.BottomNavigationView) -> access$000
    114:114:com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener access$100(com.google.android.material.bottomnavigation.BottomNavigationView) -> access$100
    714:722:void addCompatibilityTopDivider(android.content.Context) -> addCompatibilityTopDivider
    254:254:void applyWindowInsets() -> applyWindowInsets
    272:278:com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(android.content.Context) -> createMaterialShapeDrawableBackground
    466:466:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    442:442:int getItemBackgroundResource() -> getItemBackgroundResource
    405:405:int getItemIconSize() -> getItemIconSize
    360:360:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    491:491:android.content.res.ColorStateList getItemRippleColor() -> getItemRippleColor
    624:624:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    605:605:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    418:418:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    586:586:int getLabelVisibilityMode() -> getLabelVisibilityMode
    330:330:android.view.Menu getMenu() -> getMenu
    726:729:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    539:539:int getSelectedItemId() -> getSelectedItemId
    341:344:void inflateMenu(int) -> inflateMenu
    284:286:void onAttachedToWindow() -> onAttachedToWindow
    743:749:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    734:737:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    297:299:void setElevation(float) -> setElevation
    478:479:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    454:455:void setItemBackgroundResource(int) -> setItemBackgroundResource
    635:637:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    382:382:void setItemIconSize(int) -> setItemIconSize
    394:394:void setItemIconSizeRes(int) -> setItemIconSizeRes
    370:370:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    503:527:void setItemRippleColor(android.content.res.ColorStateList) -> setItemRippleColor
    614:614:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    595:595:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    429:429:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    572:574:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    324:324:void setOnNavigationItemReselectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener) -> setOnNavigationItemReselectedListener
    312:312:void setOnNavigationItemSelectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener) -> setOnNavigationItemSelectedListener
    549:552:void setSelectedItemId(int) -> setSelectedItemId
com.google.android.material.bottomnavigation.BottomNavigationView$1 -> com.google.android.material.bottomnavigation.BottomNavigationView$1:
    236:236:void <init>(com.google.android.material.bottomnavigation.BottomNavigationView) -> <init>
    239:243:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
com.google.android.material.bottomnavigation.BottomNavigationView$2 -> com.google.android.material.bottomnavigation.BottomNavigationView$2:
    256:256:void <init>(com.google.android.material.bottomnavigation.BottomNavigationView) -> <init>
    263:264:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState -> com.google.android.material.bottomnavigation.BottomNavigationView$SavedState:
    777:777:void <clinit>() -> <clinit>
    756:756:void <init>(android.os.Parcelable) -> <init>
    760:764:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    774:774:void readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    769:770:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1 -> com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1:
    778:778:void <init>() -> <init>
    778:778:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    778:778:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    782:782:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    788:788:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    778:778:java.lang.Object[] newArray(int) -> newArray
    794:794:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
    214:214:void <clinit>() -> <clinit>
    261:1204:void <init>() -> <init>
    264:301:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:75:com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$000
    75:75:boolean access$200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$200
    75:75:int access$300(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$300
    75:75:int access$400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$400
    75:75:boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$500
    1584:1584:void addAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> addAccessibilityActionForState
    1025:1034:void calculateCollapsedOffset() -> calculateCollapsedOffset
    1039:1039:void calculateHalfExpandedOffset() -> calculateHalfExpandedOffset
    1102:1102:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean) -> createMaterialShapeDrawable
    1110:1124:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean,android.content.res.ColorStateList) -> createMaterialShapeDrawable
    1130:1132:void createShapeValueAnimator() -> createShapeValueAnimator
    1338:1345:void dispatchOnSlide(int) -> dispatchOnSlide
    1085:1091:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    1153:1153:int getExpandedOffset() -> getExpandedOffset
    1145:1149:float getYVelocity() -> getYVelocity
    327:331:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    336:339:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    407:464:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    345:400:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    651:654:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    524:555:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    313:319:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    307:307:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    506:507:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    564:627:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    470:495:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    1043:1046:void reset() -> reset
    1051:1066:void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) -> restoreOptionalState
    788:786:void setExpandedOffset(int) -> setExpandedOffset
    677:690:void setFitToContents(boolean) -> setFitToContents
    771:769:void setHalfExpandedRatio(float) -> setHalfExpandedRatio
    809:815:void setHideable(boolean) -> setHideable
    702:702:void setPeekHeight(int) -> setPeekHeight
    718:737:void setPeekHeight(int,boolean) -> setPeekHeight
    862:862:void setSaveFlags(int) -> setSaveFlags
    838:838:void setSkipCollapsed(boolean) -> setSkipCollapsed
    925:938:void setState(int) -> setState
    974:998:void setStateInternal(int) -> setStateInternal
    1159:1172:void settleToState(android.view.View,int) -> settleToState
    942:958:void settleToStatePendingLayout(int) -> settleToStatePendingLayout
    1071:1079:boolean shouldHide(android.view.View,float) -> shouldHide
    1178:1200:void startSettlingAnimation(android.view.View,int,int,boolean) -> startSettlingAnimation
    1541:1560:void updateAccessibilityActions() -> updateAccessibilityActions
    1008:1017:void updateDrawableForTargetState(int) -> updateDrawableForTargetState
    1492:1536:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
com.google.android.material.bottomsheet.BottomSheetBehavior$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$1:
    951:951:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    954:954:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
    1133:1133:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1136:1138:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomsheet.BottomSheetBehavior$3 -> com.google.android.material.bottomsheet.BottomSheetBehavior$3:
    1205:1205:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1324:1324:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1318:1318:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1329:1332:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    1234:1234:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1228:1228:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1243:1313:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1209:1222:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$4 -> com.google.android.material.bottomsheet.BottomSheetBehavior$4:
    1588:1588:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> <init>
    1591:1591:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback -> com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback:
    78:78:void <init>() -> <init>
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    1448:1448:void <clinit>() -> <clinit>
    1406:1412:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1416:1421:void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1440:1445:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    1449:1449:void <init>() -> <init>
    1449:1449:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1449:1449:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1453:1453:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1459:1459:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1449:1449:java.lang.Object[] newArray(int) -> newArray
    1465:1465:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable -> com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable:
    1377:1379:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1369:1369:boolean access$100(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable) -> access$100
    1369:1369:boolean access$102(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean) -> access$102
    1384:1389:void run() -> run
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
    125:167:void <clinit>() -> <clinit>
    187:187:void <init>(android.content.Context) -> <init>
    191:191:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    195:225:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    231:231:java.lang.String getA11yClassName() -> getA11yClassName
    333:333:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    344:344:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    862:862:int getCornerRadius() -> getCornerRadius
    585:585:android.graphics.drawable.Drawable getIcon() -> getIcon
    874:874:int getIconGravity() -> getIconGravity
    511:511:int getIconPadding() -> getIconPadding
    541:541:int getIconSize() -> getIconSize
    624:624:android.content.res.ColorStateList getIconTint() -> getIconTint
    649:649:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    736:736:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1018:1021:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    778:778:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    821:821:int getStrokeWidth() -> getStrokeWidth
    278:284:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    316:321:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    977:977:boolean isCheckable() -> isCheckable
    955:955:boolean isChecked() -> isChecked
    474:474:boolean isLayoutRTL() -> isLayoutRTL
    1044:1044:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    415:417:void onAttachedToWindow() -> onAttachedToWindow
    893:900:int[] onCreateDrawableState(int) -> onCreateDrawableState
    245:247:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    236:240:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    394:397:void onLayout(boolean,int,int,int,int) -> onLayout
    403:404:void onMeasure(int,int) -> onMeasure
    409:410:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    965:967:boolean performClick() -> performClick
    692:694:void resetIconDrawable(boolean) -> resetIconDrawable
    360:360:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    349:354:void setBackgroundColor(int) -> setBackgroundColor
    374:388:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    367:369:void setBackgroundResource(int) -> setBackgroundResource
    327:327:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    338:338:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    987:988:void setCheckable(boolean) -> setCheckable
    936:949:void setChecked(boolean) -> setChecked
    833:834:void setCornerRadius(int) -> setCornerRadius
    847:848:void setCornerRadiusResource(int) -> setCornerRadiusResource
    424:426:void setElevation(float) -> setElevation
    554:556:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    885:887:void setIconGravity(int) -> setIconGravity
    496:498:void setIconPadding(int) -> setIconPadding
    571:573:void setIconResource(int) -> setIconResource
    526:523:void setIconSize(int) -> setIconSize
    597:599:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    635:637:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    612:612:void setIconTintResource(int) -> setIconTintResource
    485:485:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    1032:1032:void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener) -> setOnPressedChangeListenerInternal
    1037:1040:void setPressed(boolean) -> setPressed
    707:708:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    721:722:void setRippleColorResource(int) -> setRippleColorResource
    999:1002:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1048:1049:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    749:750:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    764:765:void setStrokeColorResource(int) -> setStrokeColorResource
    791:792:void setStrokeWidth(int) -> setStrokeWidth
    806:807:void setStrokeWidthResource(int) -> setStrokeWidthResource
    259:264:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    297:302:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    960:960:void toggle() -> toggle
    657:686:void updateIcon(boolean) -> updateIcon
    431:437:void updateIconPosition() -> updateIconPosition
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
    52:52:void <clinit>() -> <clinit>
    75:77:void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    195:231:android.graphics.drawable.Drawable createBackground() -> createBackground
    315:315:int getCornerRadius() -> getCornerRadius
    367:373:com.google.android.material.shape.Shapeable getMaskDrawable() -> getMaskDrawable
    320:328:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean) -> getMaterialShapeDrawable
    337:337:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> getMaterialShapeDrawable
    262:262:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    386:386:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    274:274:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    285:285:int getStrokeWidth() -> getStrokeWidth
    168:168:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    181:181:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    350:350:com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable() -> getSurfaceColorStrokeDrawable
    150:150:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    345:345:boolean isCheckable() -> isCheckable
    81:128:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    242:243:void setBackgroundColor(int) -> setBackgroundColor
    142:146:void setBackgroundOverwritten() -> setBackgroundOverwritten
    341:341:void setCheckable(boolean) -> setCheckable
    306:310:void setCornerRadius(int) -> setCornerRadius
    248:254:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    380:381:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    185:186:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    266:268:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    278:280:void setStrokeWidth(int) -> setStrokeWidth
    159:162:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    172:175:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    354:361:void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel) -> updateButtonShape
    236:237:void updateMaskBounds(int,int) -> updateMaskBounds
    289:294:void updateStroke() -> updateStroke
    155:155:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.canvas.CanvasCompat:
    58:61:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> saveLayerAlpha
com.google.android.material.card.MaterialCardView -> com.google.android.material.card.MaterialCardView:
    90:92:void <clinit>() -> <clinit>
    77:77:float access$001(com.google.android.material.card.MaterialCardView) -> access$001
    547:548:void forceRippleRedrawIfNeeded() -> forceRippleRedrawIfNeeded
    287:287:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    221:221:float getCardViewRadius() -> getCardViewRadius
    485:485:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    516:516:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    271:271:int getContentPaddingBottom() -> getContentPaddingBottom
    256:256:int getContentPaddingLeft() -> getContentPaddingLeft
    266:266:int getContentPaddingRight() -> getContentPaddingRight
    261:261:int getContentPaddingTop() -> getContentPaddingTop
    242:242:float getProgress() -> getProgress
    217:217:float getRadius() -> getRadius
    474:474:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    543:543:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    185:185:int getStrokeColor() -> getStrokeColor
    191:191:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    206:206:int getStrokeWidth() -> getStrokeWidth
    388:388:boolean isCheckable() -> isCheckable
    353:353:boolean isChecked() -> isChecked
    378:378:boolean isDragged() -> isDragged
    298:300:void onAttachedToWindow() -> onAttachedToWindow
    415:425:int[] onCreateDrawableState(int) -> onCreateDrawableState
    152:154:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:147:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    159:160:void onMeasure(int,int) -> onMeasure
    331:331:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    336:337:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    348:348:void setBackgroundInternal(android.graphics.drawable.Drawable) -> setBackgroundInternal
    276:276:void setCardBackgroundColor(int) -> setCardBackgroundColor
    281:281:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    305:306:void setCardElevation(float) -> setCardElevation
    398:398:void setCheckable(boolean) -> setCheckable
    358:359:void setChecked(boolean) -> setChecked
    505:505:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    495:495:void setCheckedIconResource(int) -> setCheckedIconResource
    527:527:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    292:293:void setClickable(boolean) -> setClickable
    369:373:void setDragged(boolean) -> setDragged
    311:312:void setMaxCardElevation(float) -> setMaxCardElevation
    437:437:void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener) -> setOnCheckedChangeListener
    324:325:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    231:231:void setProgress(float) -> setProgress
    211:212:void setRadius(float) -> setRadius
    449:449:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    461:461:void setRippleColorResource(int) -> setRippleColorResource
    532:532:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    169:169:void setStrokeColor(int) -> setStrokeColor
    178:178:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    200:200:void setStrokeWidth(int) -> setStrokeWidth
    317:318:void setUseCompatPadding(boolean) -> setUseCompatPadding
    403:408:void toggle() -> toggle
com.google.android.material.card.MaterialCardViewHelper -> com.google.android.material.card.MaterialCardViewHelper:
    67:67:void <clinit>() -> <clinit>
com.google.android.material.checkbox.MaterialCheckBox -> com.google.android.material.checkbox.MaterialCheckBox:
    44:46:void <clinit>() -> <clinit>
    61:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    117:134:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    90:93:void onAttachedToWindow() -> onAttachedToWindow
    103:107:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
    132:135:void <clinit>() -> <clinit>
    182:182:void <init>(android.content.Context) -> <init>
    186:186:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    190:243:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    126:126:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> access$000
    126:126:boolean access$100(com.google.android.material.chip.Chip) -> access$100
    126:126:android.graphics.RectF access$200(com.google.android.material.chip.Chip) -> access$200
    126:126:boolean access$302(com.google.android.material.chip.Chip,boolean) -> access$302
    126:126:android.graphics.Rect access$400(com.google.android.material.chip.Chip) -> access$400
    126:126:android.graphics.Rect access$500() -> access$500
    461:461:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> applyChipDrawable
    895:931:int[] createCloseIconDrawableState() -> createCloseIconDrawableState
    826:828:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    833:844:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    879:888:void drawableStateChanged() -> drawableStateChanged
    2222:2260:boolean ensureAccessibleTouchTarget(int) -> ensureAccessibleTouchTarget
    427:430:void ensureChipDrawableHasCallback() -> ensureChipDrawableHasCallback
    436:437:android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    1822:1822:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1071:1071:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1139:1139:float getChipCornerRadius() -> getChipCornerRadius
    399:399:android.graphics.drawable.Drawable getChipDrawable() -> getChipDrawable
    2164:2164:float getChipEndPadding() -> getChipEndPadding
    1453:1453:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1523:1523:float getChipIconSize() -> getChipIconSize
    1488:1488:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1105:1105:float getChipMinHeight() -> getChipMinHeight
    1926:1926:float getChipStartPadding() -> getChipStartPadding
    1187:1187:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1221:1221:float getChipStrokeWidth() -> getChipStrokeWidth
    1296:1296:java.lang.CharSequence getChipText() -> getChipText
    1609:1609:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1725:1725:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2130:2130:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1680:1680:float getCloseIconSize() -> getCloseIconSize
    2096:2096:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1646:1646:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    943:950:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    955:957:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    613:613:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    855:857:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1892:1892:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1994:1994:float getIconEndPadding() -> getIconEndPadding
    1960:1960:float getIconStartPadding() -> getIconStartPadding
    1256:1256:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1163:1163:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1857:1857:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1390:1390:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2062:2062:float getTextEndPadding() -> getTextEndPadding
    2028:2028:float getTextStartPadding() -> getTextStartPadding
    794:809:boolean handleAccessibilityExit(android.view.MotionEvent) -> handleAccessibilityExit
    938:938:boolean hasCloseIcon() -> hasCloseIcon
    292:308:void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int) -> initMinTouchTarget
    381:382:void initOutlineProvider() -> initOutlineProvider
    2275:2275:void insetChipBackgroundDrawable(int,int,int,int) -> insetChipBackgroundDrawable
    1735:1735:boolean isCheckable() -> isCheckable
    1557:1557:boolean isCloseIconVisible() -> isCloseIconVisible
    248:250:void onAttachedToWindow() -> onAttachedToWindow
    672:677:void onChipDrawableSizeChange() -> onChipDrawableSizeChange
    466:471:int[] onCreateDrawableState(int) -> onCreateDrawableState
    849:850:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    774:785:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    264:274:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    964:965:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    337:343:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    740:769:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    721:731:boolean performCloseIconClick() -> performCloseIconClick
    2265:2269:void removeBackgroundInset() -> removeBackgroundInset
    506:509:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    496:496:void setBackgroundColor(int) -> setBackgroundColor
    515:518:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    501:501:void setBackgroundResource(int) -> setBackgroundResource
    486:486:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    491:491:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1757:1758:void setCheckable(boolean) -> setCheckable
    1745:1746:void setCheckableResource(int) -> setCheckableResource
    683:692:void setChecked(boolean) -> setChecked
    1844:1845:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1811:1811:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1805:1805:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1832:1833:void setCheckedIconResource(int) -> setCheckedIconResource
    1785:1786:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1797:1798:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1093:1094:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1081:1082:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1174:1175:void setChipCornerRadius(float) -> setChipCornerRadius
    1150:1151:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    404:412:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    2186:2187:void setChipEndPadding(float) -> setChipEndPadding
    2174:2175:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1475:1476:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1442:1442:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1436:1436:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1463:1464:void setChipIconResource(int) -> setChipIconResource
    1545:1546:void setChipIconSize(float) -> setChipIconSize
    1533:1534:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1511:1512:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1498:1499:void setChipIconTintResource(int) -> setChipIconTintResource
    1416:1417:void setChipIconVisible(int) -> setChipIconVisible
    1428:1429:void setChipIconVisible(boolean) -> setChipIconVisible
    1127:1128:void setChipMinHeight(float) -> setChipMinHeight
    1115:1116:void setChipMinHeightResource(int) -> setChipMinHeightResource
    1948:1949:void setChipStartPadding(float) -> setChipStartPadding
    1936:1937:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1209:1210:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1197:1198:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1243:1244:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1231:1232:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1332:1332:void setChipText(java.lang.CharSequence) -> setChipText
    1326:1326:void setChipTextResource(int) -> setChipTextResource
    1632:1635:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1713:1714:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1598:1598:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1592:1592:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2152:2153:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2140:2141:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    871:873:void setCloseIconHovered(boolean) -> setCloseIconHovered
    864:866:void setCloseIconPressed(boolean) -> setCloseIconPressed
    1619:1622:void setCloseIconResource(int) -> setCloseIconResource
    1702:1703:void setCloseIconSize(float) -> setCloseIconSize
    1690:1691:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2118:2119:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2106:2107:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1668:1669:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1656:1657:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1573:1573:void setCloseIconVisible(int) -> setCloseIconVisible
    1583:1586:void setCloseIconVisible(boolean) -> setCloseIconVisible
    535:529:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    579:573:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    592:586:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    607:602:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    547:541:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    563:557:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    256:258:void setElevation(float) -> setElevation
    618:622:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2210:2211:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    479:481:void setGravity(int) -> setGravity
    1914:1915:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1902:1903:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2016:2017:void setIconEndPadding(float) -> setIconEndPadding
    2004:2005:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    1982:1983:void setIconStartPadding(float) -> setIconStartPadding
    1970:1971:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    1301:1305:void setLayoutDirection(int) -> setLayoutDirection
    643:641:void setLines(int) -> setLines
    659:657:void setMaxLines(int) -> setMaxLines
    664:666:void setMaxWidth(int) -> setMaxWidth
    651:649:void setMinLines(int) -> setMinLines
    703:703:void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListenerInternal
    708:708:void setOnCloseIconClickListener(android.view.View$OnClickListener) -> setOnCloseIconClickListener
    1281:1285:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1266:1269:void setRippleColorResource(int) -> setRippleColorResource
    1157:1157:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1879:1880:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1867:1868:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    635:633:void setSingleLine(boolean) -> setSingleLine
    1311:1319:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1353:1356:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1361:1365:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1370:1374:void setTextAppearance(int) -> setTextAppearance
    1342:1342:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2084:2085:void setTextEndPadding(float) -> setTextEndPadding
    2072:2073:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    2050:2051:void setTextStartPadding(float) -> setTextStartPadding
    2038:2039:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    2199:2199:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    456:456:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> unapplyChipDrawable
    280:286:void updateAccessibilityDelegate() -> updateAccessibilityDelegate
    417:422:void updateBackgroundDrawable() -> updateBackgroundDrawable
    444:451:void updateFrameworkRippleBackground() -> updateFrameworkRippleBackground
    316:330:void updatePaddingInternal() -> updatePaddingInternal
    1378:1384:void updateTextPaintDrawState() -> updateTextPaintDrawState
    351:355:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$1:
    168:168:void <init>(com.google.android.material.chip.Chip) -> <init>
    172:174:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$2:
    383:383:void <init>(com.google.android.material.chip.Chip) -> <init>
    387:390:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$ChipTouchHelper:
    973:974:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    979:979:int getVirtualViewAt(float,float) -> getVirtualViewAt
    986:988:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    1052:1054:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    1027:1043:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    1004:1021:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    995:996:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.ChipDrawable:
    163:166:void <clinit>() -> <clinit>
    307:327:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1275:1291:void applyChildDrawable(android.graphics.drawable.Drawable) -> applyChildDrawable
    773:787:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipIconBounds
    517:518:float calculateChipIconWidth() -> calculateChipIconWidth
    881:894:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipTouchBounds
    862:876:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconBounds
    900:919:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconTouchBounds
    528:529:float calculateCloseIconWidth() -> calculateCloseIconWidth
    836:853:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> calculateTextBounds
    827:828:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    794:808:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> calculateTextOriginAndAlignment
    512:512:boolean canShowCheckedIcon() -> canShowCheckedIcon
    275:276:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    540:585:void draw(android.graphics.Canvas) -> draw
    659:669:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCheckedIcon
    599:604:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> drawChipBackground
    644:654:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> drawChipIcon
    613:627:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> drawChipStroke
    590:594:void drawChipSurface(android.graphics.Canvas,android.graphics.Rect) -> drawChipSurface
    710:727:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCloseIcon
    632:639:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> drawCompatRipple
    732:764:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> drawDebug
    675:704:void drawText(android.graphics.Canvas,android.graphics.Rect) -> drawText
    1184:1184:int getAlpha() -> getAlpha
    1944:1944:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1347:1347:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1414:1414:float getChipCornerRadius() -> getChipCornerRadius
    2301:2301:float getChipEndPadding() -> getChipEndPadding
    1643:1643:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1704:1704:float getChipIconSize() -> getChipIconSize
    1672:1672:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1380:1380:float getChipMinHeight() -> getChipMinHeight
    2049:2049:float getChipStartPadding() -> getChipStartPadding
    1451:1451:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1487:1487:float getChipStrokeWidth() -> getChipStrokeWidth
    1772:1772:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1862:1862:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2265:2265:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1834:1834:float getCloseIconSize() -> getCloseIconSize
    2229:2229:float getCloseIconStartPadding() -> getCloseIconStartPadding
    961:961:int[] getCloseIconState() -> getCloseIconState
    1814:1814:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    471:471:void getCloseIconTouchBounds(android.graphics.RectF) -> getCloseIconTouchBounds
    1198:1198:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    1588:1588:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    2019:2019:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2122:2122:float getIconEndPadding() -> getIconEndPadding
    2083:2083:float getIconStartPadding() -> getIconStartPadding
    492:492:int getIntrinsicHeight() -> getIntrinsicHeight
    477:486:int getIntrinsicWidth() -> getIntrinsicWidth
    1226:1237:void getOutline(android.graphics.Outline) -> getOutline
    1526:1526:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1988:1988:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1555:1555:java.lang.CharSequence getText() -> getText
    1576:1576:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2195:2195:float getTextEndPadding() -> getTextEndPadding
    2161:2161:float getTextStartPadding() -> getTextStartPadding
    1301:1301:android.graphics.ColorFilter getTintColorFilter() -> getTintColorFilter
    442:442:boolean getUseCompatRipple() -> getUseCompatRipple
    1322:1322:boolean hasState(int[],int) -> hasState
    1242:1244:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1866:1866:boolean isCheckable() -> isCheckable
    941:941:boolean isCloseIconStateful() -> isCloseIconStateful
    1725:1725:boolean isCloseIconVisible() -> isCloseIconVisible
    927:935:boolean isStateful() -> isStateful
    1097:1097:boolean isStateful(android.content.res.ColorStateList) -> isStateful
    1101:1101:boolean isStateful(android.graphics.drawable.Drawable) -> isStateful
    1105:1107:boolean isStateful(com.google.android.material.resources.TextAppearance) -> isStateful
    333:428:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    1112:1125:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1132:1145:boolean onLevelChange(int) -> onLevelChange
    452:454:void onSizeChange() -> onSizeChange
    972:975:boolean onStateChange(int[]) -> onStateChange
    981:1091:boolean onStateChange(int[],int[]) -> onStateChange
    966:967:void onTextSizeChange() -> onTextSizeChange
    1250:1252:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1176:1178:void setAlpha(int) -> setAlpha
    1874:1885:void setCheckable(boolean) -> setCheckable
    1870:1870:void setCheckableResource(int) -> setCheckableResource
    1964:1975:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1954:1954:void setCheckedIconResource(int) -> setCheckedIconResource
    1901:1901:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1905:1919:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1367:1369:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1357:1357:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1436:1439:void setChipCornerRadius(float) -> setChipCornerRadius
    1425:1425:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    2321:2324:void setChipEndPadding(float) -> setChipEndPadding
    2311:2311:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1651:1664:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1647:1647:void setChipIconResource(int) -> setChipIconResource
    1712:1719:void setChipIconSize(float) -> setChipIconSize
    1708:1708:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1692:1699:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1682:1682:void setChipIconTintResource(int) -> setChipIconTintResource
    1606:1606:void setChipIconVisible(int) -> setChipIconVisible
    1610:1624:void setChipIconVisible(boolean) -> setChipIconVisible
    1400:1403:void setChipMinHeight(float) -> setChipMinHeight
    1390:1390:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2069:2072:void setChipStartPadding(float) -> setChipStartPadding
    2059:2059:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1471:1476:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1461:1461:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1507:1514:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1497:1497:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1310:1312:void setChipSurfaceColor(android.content.res.ColorStateList) -> setChipSurfaceColor
    1780:1796:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1852:1856:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    2285:2289:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2275:2275:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    1776:1776:void setCloseIconResource(int) -> setCloseIconResource
    1842:1846:void setCloseIconSize(float) -> setCloseIconSize
    1838:1838:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2249:2253:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2239:2239:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    949:952:boolean setCloseIconState(int[]) -> setCloseIconState
    1822:1829:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1818:1818:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1739:1753:void setCloseIconVisible(boolean) -> setCloseIconVisible
    1189:1191:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    447:447:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> setDelegate
    1592:1592:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2039:2039:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    2029:2029:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2142:2149:void setIconEndPadding(float) -> setIconEndPadding
    2132:2132:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2103:2110:void setIconStartPadding(float) -> setIconStartPadding
    2093:2093:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    2344:2344:void setMaxWidth(int) -> setMaxWidth
    1546:1549:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1536:1536:void setRippleColorResource(int) -> setRippleColorResource
    2358:2358:void setShouldDrawText(boolean) -> setShouldDrawText
    2008:2008:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1998:1998:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    1566:1570:void setText(java.lang.CharSequence) -> setText
    1584:1584:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1580:1580:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2215:2218:void setTextEndPadding(float) -> setTextEndPadding
    2205:2205:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    2181:2184:void setTextStartPadding(float) -> setTextStartPadding
    2171:2171:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    1203:1205:void setTintList(android.content.res.ColorStateList) -> setTintList
    1211:1214:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    433:436:void setUseCompatRipple(boolean) -> setUseCompatRipple
    1152:1165:boolean setVisible(boolean,boolean) -> setVisible
    2348:2348:boolean shouldDrawText() -> shouldDrawText
    502:502:boolean showsCheckedIcon() -> showsCheckedIcon
    497:497:boolean showsChipIcon() -> showsChipIcon
    507:507:boolean showsCloseIcon() -> showsCloseIcon
    1266:1266:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> unapplyChildDrawable
    1258:1260:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1305:1306:void updateCompatRippleColor() -> updateCompatRippleColor
    1803:1805:void updateFrameworkCloseIconRipple() -> updateFrameworkCloseIconRipple
com.google.android.material.chip.ChipGroup -> com.google.android.material.chip.ChipGroup:
    101:101:void <init>(android.content.Context) -> <init>
    105:105:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    109:132:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    50:50:boolean access$300(com.google.android.material.chip.ChipGroup) -> access$300
    50:50:int access$400(com.google.android.material.chip.ChipGroup) -> access$400
    50:50:boolean access$500(com.google.android.material.chip.ChipGroup) -> access$500
    50:50:void access$600(com.google.android.material.chip.ChipGroup,int,boolean) -> access$600
    50:50:void access$700(com.google.android.material.chip.ChipGroup,int) -> access$700
    50:50:com.google.android.material.chip.ChipGroup$CheckedStateTracker access$800(com.google.android.material.chip.ChipGroup) -> access$800
    177:187:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    155:155:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    275:284:void clearCheck() -> clearCheck
    150:150:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    138:138:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    144:144:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    264:264:int getCheckedChipId() -> getCheckedChipId
    328:328:int getChipSpacingHorizontal() -> getChipSpacingHorizontal
    348:348:int getChipSpacingVertical() -> getChipSpacingVertical
    369:369:boolean isSingleLine() -> isSingleLine
    166:171:void onFinishInflate() -> onFinishInflate
    298:301:void setCheckedId(int) -> setCheckedId
    306:310:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    316:317:void setChipSpacing(int) -> setChipSpacing
    333:336:void setChipSpacingHorizontal(int) -> setChipSpacingHorizontal
    342:342:void setChipSpacingHorizontalResource(int) -> setChipSpacingHorizontalResource
    322:322:void setChipSpacingResource(int) -> setChipSpacingResource
    353:356:void setChipSpacingVertical(int) -> setChipSpacingVertical
    362:362:void setChipSpacingVerticalResource(int) -> setChipSpacingVerticalResource
    193:193:void setDividerDrawableHorizontal(android.graphics.drawable.Drawable) -> setDividerDrawableHorizontal
    201:201:void setDividerDrawableVertical(android.graphics.drawable.Drawable) -> setDividerDrawableVertical
    223:223:void setFlexWrap(int) -> setFlexWrap
    294:294:void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    161:161:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    209:209:void setShowDividerHorizontal(int) -> setShowDividerHorizontal
    216:216:void setShowDividerVertical(int) -> setShowDividerVertical
    376:376:void setSingleLine(boolean) -> setSingleLine
    381:381:void setSingleLine(int) -> setSingleLine
    395:398:void setSingleSelection(boolean) -> setSingleSelection
    408:408:void setSingleSelection(int) -> setSingleSelection
com.google.android.material.chip.ChipGroup$CheckedStateTracker -> com.google.android.material.chip.ChipGroup$CheckedStateTracker:
    411:411:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    411:411:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    415:428:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.google.android.material.chip.ChipGroup$LayoutParams -> com.google.android.material.chip.ChipGroup$LayoutParams:
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:73:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    77:77:void <init>(int,int) -> <init>
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener -> com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    439:439:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    439:439:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    439:439:android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> access$202
    444:459:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    465:470:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.CircularRevealCompat:
    57:68:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    123:123:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> createCircularRevealListener
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.CircularRevealCompat$1:
    123:123:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    131:131:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    126:126:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealFrameLayout -> com.google.android.material.circularreveal.CircularRevealFrameLayout:
    44:44:void buildCircularRevealCache() -> buildCircularRevealCache
    49:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    87:88:void draw(android.graphics.Canvas) -> draw
    76:76:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    65:65:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    55:55:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    101:102:boolean isOpaque() -> isOpaque
    81:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    70:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    60:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.CircularRevealHelper:
    127:132:void <clinit>() -> <clinit>
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    209:209:void <clinit>() -> <clinit>
    207:210:void <init>() -> <init>
    207:207:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    216:220:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    181:181:void <clinit>() -> <clinit>
    185:185:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    191:191:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    196:196:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    230:230:void <clinit>() -> <clinit>
    234:234:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object get(java.lang.Object) -> get
    240:240:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    228:228:void set(java.lang.Object,java.lang.Object) -> set
    245:245:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:149:void <init>(float,float,float) -> <init>
    157:159:void set(float,float,float) -> set
com.google.android.material.circularreveal.cardview.CircularRevealCardView -> com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    47:47:void buildCircularRevealCache() -> buildCircularRevealCache
    52:52:void destroyCircularRevealCache() -> destroyCircularRevealCache
    89:90:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    73:73:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    63:63:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    103:104:boolean isOpaque() -> isOpaque
    84:84:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:68:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    57:57:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.color.MaterialColors -> com.google.android.material.color.MaterialColors:
    54:54:int getColor(android.view.View,int) -> getColor
    65:65:int getColor(android.content.Context,int,java.lang.String) -> getColor
    75:75:int getColor(android.view.View,int,int) -> getColor
    85:87:int getColor(android.content.Context,int,int) -> getColor
    115:117:int layer(android.view.View,int,int,float) -> layer
    129:131:int layer(int,int,float) -> layer
    140:140:int layer(int,int) -> layer
com.google.android.material.datepicker.CalendarConstraints -> com.google.android.material.datepicker.CalendarConstraints:
    138:138:void <clinit>() -> <clinit>
    31:31:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.CalendarConstraints$1) -> <init>
    54:60:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator) -> <init>
    119:126:boolean equals(java.lang.Object) -> equals
    77:77:com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator() -> getDateValidator
    89:89:com.google.android.material.datepicker.Month getEnd() -> getEnd
    103:103:int getMonthSpan() -> getMonthSpan
    95:95:com.google.android.material.datepicker.Month getOpenAt() -> getOpenAt
    83:83:com.google.android.material.datepicker.Month getStart() -> getStart
    111:111:int getYearSpan() -> getYearSpan
    131:132:int hashCode() -> hashCode
    164:167:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CalendarConstraints$1 -> com.google.android.material.datepicker.CalendarConstraints$1:
    139:139:void <init>() -> <init>
    139:139:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    143:147:com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel) -> createFromParcel
    139:139:java.lang.Object[] newArray(int) -> newArray
    153:153:com.google.android.material.datepicker.CalendarConstraints[] newArray(int) -> newArray
com.google.android.material.datepicker.CalendarItemStyle -> com.google.android.material.datepicker.CalendarItemStyle:
    66:77:void <init>(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect) -> <init>
    87:130:com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int) -> create
    166:166:int getBottomInset() -> getBottomInset
    162:162:int getTopInset() -> getTopInset
    136:149:void styleItem(android.widget.TextView) -> styleItem
com.google.android.material.datepicker.CalendarStyle -> com.google.android.material.datepicker.CalendarStyle:
    74:115:void <init>(android.content.Context) -> <init>
com.google.android.material.datepicker.DateStrings -> com.google.android.material.datepicker.DateStrings:
    76:76:java.lang.String getMonthDayOfWeekDay(long) -> getMonthDayOfWeekDay
    80:83:java.lang.String getMonthDayOfWeekDay(long,java.util.Locale) -> getMonthDayOfWeekDay
    87:87:java.lang.String getYearMonthDayOfWeekDay(long) -> getYearMonthDayOfWeekDay
    91:94:java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale) -> getYearMonthDayOfWeekDay
com.google.android.material.datepicker.DaysOfWeekAdapter -> com.google.android.material.datepicker.DaysOfWeekAdapter:
    49:49:void <clinit>() -> <clinit>
    52:55:void <init>() -> <init>
    75:75:int getCount() -> getCount
    41:41:java.lang.Object getItem(int) -> getItem
    61:64:java.lang.Integer getItem(int) -> getItem
    82:91:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    100:101:int positionToDayOfWeek(int) -> positionToDayOfWeek
com.google.android.material.datepicker.MaterialCalendar -> com.google.android.material.datepicker.MaterialCalendar:
    73:79:void <clinit>() -> <clinit>
    59:59:void <init>() -> <init>
    59:59:androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar) -> access$000
    59:59:com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar) -> access$100
    59:59:com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar) -> access$200
    59:59:androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar) -> access$300
    59:59:com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar) -> access$400
    59:59:android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar) -> access$500
    59:59:com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month) -> access$602
    365:436:void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter) -> addActionsToMonthNavigation
    231:231:androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration() -> createItemDecoration
    289:289:com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints() -> getCalendarConstraints
    323:323:com.google.android.material.datepicker.CalendarStyle getCalendarStyle() -> getCalendarStyle
    283:283:com.google.android.material.datepicker.Month getCurrentMonth() -> getCurrentMonth
    319:319:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    334:334:int getDayHeight(android.content.Context) -> getDayHeight
    460:460:androidx.recyclerview.widget.LinearLayoutManager getLayoutManager() -> getLayoutManager
    118:123:void onCreate(android.os.Bundle) -> onCreate
    132:225:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    109:113:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    449:449:void postSmoothRecyclerViewScroll(int) -> postSmoothRecyclerViewScroll
    299:312:void setCurrentMonth(com.google.android.material.datepicker.Month) -> setCurrentMonth
    338:351:void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector) -> setSelector
    356:359:void toggleVisibleSelector() -> toggleVisibleSelector
com.google.android.material.datepicker.MaterialCalendar$1 -> com.google.android.material.datepicker.MaterialCalendar$1:
    152:152:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    156:158:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$10 -> com.google.android.material.datepicker.MaterialCalendar$10:
    450:450:void <init>(com.google.android.material.datepicker.MaterialCalendar,int) -> <init>
    453:453:void run() -> run
com.google.android.material.datepicker.MaterialCalendar$2 -> com.google.android.material.datepicker.MaterialCalendar$2:
    168:168:void <init>(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int) -> <init>
    171:176:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
com.google.android.material.datepicker.MaterialCalendar$3 -> com.google.android.material.datepicker.MaterialCalendar$3:
    188:188:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    192:200:void onDayClick(long) -> onDayClick
com.google.android.material.datepicker.MaterialCalendar$4 -> com.google.android.material.datepicker.MaterialCalendar$4:
    231:234:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    239:274:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
com.google.android.material.datepicker.MaterialCalendar$5 -> com.google.android.material.datepicker.MaterialCalendar$5:
    369:369:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    374:375:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$6 -> com.google.android.material.datepicker.MaterialCalendar$6:
    392:392:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton) -> <init>
    408:412:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    397:402:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.google.android.material.datepicker.MaterialCalendar$7 -> com.google.android.material.datepicker.MaterialCalendar$7:
    419:419:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    422:422:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$8 -> com.google.android.material.datepicker.MaterialCalendar$8:
    427:427:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    430:432:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$9 -> com.google.android.material.datepicker.MaterialCalendar$9:
    437:437:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    440:442:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector -> com.google.android.material.datepicker.MaterialCalendar$CalendarSelector:
    63:62:void <clinit>() -> <clinit>
    62:62:void <init>(java.lang.String,int) -> <init>
    62:62:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String) -> valueOf
    62:62:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values() -> values
com.google.android.material.datepicker.MaterialCalendarGridView -> com.google.android.material.datepicker.MaterialCalendarGridView:
    41:41:void <init>(android.content.Context) -> <init>
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:54:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    191:195:void gainFocus(int,android.graphics.Rect) -> gainFocus
    36:36:android.widget.Adapter getAdapter() -> getAdapter
    36:36:android.widget.ListAdapter getAdapter() -> getAdapter
    102:102:com.google.android.material.datepicker.MonthAdapter getAdapter() -> getAdapter
    211:211:int horizontalMidPoint(android.view.View) -> horizontalMidPoint
    69:70:void onAttachedToWindow() -> onAttachedToWindow
    119:175:void onDraw(android.graphics.Canvas) -> onDraw
    183:185:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    84:93:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    36:36:void setAdapter(android.widget.Adapter) -> setAdapter
    107:109:void setAdapter(android.widget.ListAdapter) -> setAdapter
    75:78:void setSelection(int) -> setSelection
    207:207:boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long) -> skipMonth
com.google.android.material.datepicker.MaterialCalendarGridView$1 -> com.google.android.material.datepicker.MaterialCalendarGridView$1:
    56:56:void <init>(com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    60:62:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker -> com.google.android.material.datepicker.MaterialDatePicker:
    378:384:boolean isFullscreen(android.content.Context) -> isFullscreen
com.google.android.material.datepicker.Month -> com.google.android.material.datepicker.Month:
    191:191:void <clinit>() -> <clinit>
    57:65:void <init>(java.util.Calendar) -> <init>
    29:29:int compareTo(java.lang.Object) -> compareTo
    132:132:int compareTo(com.google.android.material.datepicker.Month) -> compareTo
    89:92:com.google.android.material.datepicker.Month create(int,int) -> create
    105:107:int daysFromStartOfWeekToFirstOfMonth() -> daysFromStartOfWeekToFirstOfMonth
    117:121:boolean equals(java.lang.Object) -> equals
    166:168:long getDay(int) -> getDay
    185:185:java.lang.String getLongName() -> getLongName
    153:153:long getStableId() -> getStableId
    126:127:int hashCode() -> hashCode
    177:179:com.google.android.material.datepicker.Month monthsLater(int) -> monthsLater
    145:148:int monthsUntil(com.google.android.material.datepicker.Month) -> monthsUntil
    101:101:com.google.android.material.datepicker.Month today() -> today
    215:216:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.Month$1 -> com.google.android.material.datepicker.Month$1:
    192:192:void <init>() -> <init>
    192:192:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    196:198:com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel) -> createFromParcel
    192:192:java.lang.Object[] newArray(int) -> newArray
    204:204:com.google.android.material.datepicker.Month[] newArray(int) -> newArray
com.google.android.material.datepicker.MonthAdapter -> com.google.android.material.datepicker.MonthAdapter:
    41:41:void <clinit>() -> <clinit>
    52:55:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints) -> <init>
    195:195:int dayToPosition(int) -> dayToPosition
    167:167:int firstPositionInMonth() -> firstPositionInMonth
    95:95:int getCount() -> getCount
    36:36:java.lang.Object getItem(int) -> getItem
    74:77:java.lang.Long getItem(int) -> getItem
    82:82:long getItemId(int) -> getItemId
    36:36:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    101:148:android.widget.TextView getView(int,android.view.View,android.view.ViewGroup) -> getView
    154:155:void initializeStyles(android.content.Context) -> initializeStyles
    208:208:boolean isFirstInRow(int) -> isFirstInRow
    216:216:boolean isLastInRow(int) -> isLastInRow
    178:178:int lastPositionInMonth() -> lastPositionInMonth
    189:189:int positionToDay(int) -> positionToDay
    200:200:boolean withinMonth(int) -> withinMonth
com.google.android.material.datepicker.MonthsPagerAdapter -> com.google.android.material.datepicker.MonthsPagerAdapter:
    49:55:void <init>(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener) -> <init>
    38:38:com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter) -> access$000
    136:136:int getItemCount() -> getItemCount
    131:131:long getItemId(int) -> getItemId
    146:146:com.google.android.material.datepicker.Month getPageMonth(int) -> getPageMonth
    141:141:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    150:150:int getPosition(com.google.android.material.datepicker.Month) -> getPosition
    38:38:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    106:118:void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int) -> onBindViewHolder
    38:38:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    93:100:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.MonthsPagerAdapter$1 -> com.google.android.material.datepicker.MonthsPagerAdapter$1:
    119:119:void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    122:123:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder -> com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder:
    78:83:void <init>(android.widget.LinearLayout,boolean) -> <init>
com.google.android.material.datepicker.PickerFragment -> com.google.android.material.datepicker.PickerFragment:
    21:23:void <init>() -> <init>
com.google.android.material.datepicker.SmoothCalendarLayoutManager -> com.google.android.material.datepicker.SmoothCalendarLayoutManager:
    34:34:void <init>(android.content.Context,int,boolean) -> <init>
    40:49:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1 -> com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
    41:41:void <init>(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context) -> <init>
    45:45:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
com.google.android.material.datepicker.UtcDates -> com.google.android.material.datepicker.UtcDates:
    109:112:long canonicalYearMonthDay(long) -> canonicalYearMonthDay
    171:171:android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale) -> getAbbrMonthWeekdayDayFormat
    118:119:android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale) -> getAndroidFormat
    92:94:java.util.Calendar getDayCopy(java.util.Calendar) -> getDayCopy
    124:125:java.text.DateFormat getFormat(int,java.util.Locale) -> getFormat
    202:202:java.text.DateFormat getFullFormat(java.util.Locale) -> getFullFormat
    154:155:java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale) -> getSimpleFormat
    42:42:java.util.TimeZone getTimeZone() -> getTimeZone
    51:51:java.util.Calendar getTodayCalendar() -> getTodayCalendar
    47:47:android.icu.util.TimeZone getUtcAndroidTimeZone() -> getUtcAndroidTimeZone
    62:62:java.util.Calendar getUtcCalendar() -> getUtcCalendar
    74:78:java.util.Calendar getUtcCalendarOf(java.util.Calendar) -> getUtcCalendarOf
    176:176:android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale) -> getYearAbbrMonthWeekdayDayFormat
    206:206:java.text.SimpleDateFormat getYearMonthFormat() -> getYearMonthFormat
    210:210:java.text.SimpleDateFormat getYearMonthFormat(java.util.Locale) -> getYearMonthFormat
com.google.android.material.datepicker.YearGridAdapter -> com.google.android.material.datepicker.YearGridAdapter:
    45:46:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    31:31:com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter) -> access$000
    84:84:android.view.View$OnClickListener createYearClickListener(int) -> createYearClickListener
    96:96:int getItemCount() -> getItemCount
    100:100:int getPositionForYear(int) -> getPositionForYear
    104:104:int getYearForPosition(int) -> getYearForPosition
    31:31:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    61:79:void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int) -> onBindViewHolder
    31:31:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    54:56:com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.YearGridAdapter$1 -> com.google.android.material.datepicker.YearGridAdapter$1:
    84:84:void <init>(com.google.android.material.datepicker.YearGridAdapter,int) -> <init>
    87:89:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.YearGridAdapter$ViewHolder -> com.google.android.material.datepicker.YearGridAdapter$ViewHolder:
    40:41:void <init>(android.widget.TextView) -> <init>
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.drawable.DrawableUtils:
    58:59:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.google.android.material.elevation.ElevationOverlayProvider -> com.google.android.material.elevation.ElevationOverlayProvider:
    42:48:void <init>(android.content.Context) -> <init>
    138:144:float calculateOverlayAlphaFraction(float) -> calculateOverlayAlphaFraction
    117:122:int compositeOverlay(int,float) -> compositeOverlay
    94:95:int compositeOverlayIfNeeded(int,float) -> compositeOverlayIfNeeded
    149:149:boolean isThemeElevationOverlayEnabled() -> isThemeElevationOverlayEnabled
    173:173:boolean isThemeSurfaceColor(int) -> isThemeSurfaceColor
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    597:616:void <clinit>() -> <clinit>
    70:70:com.google.android.material.floatingactionbutton.MotionStrategy access$000(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$000
    70:70:com.google.android.material.floatingactionbutton.MotionStrategy access$100(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$100
    70:70:void access$200(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> access$200
    70:70:com.google.android.material.floatingactionbutton.MotionStrategy access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$300
    70:70:com.google.android.material.floatingactionbutton.MotionStrategy access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$400
    70:70:android.graphics.Rect access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$500
    219:219:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    637:638:int getCollapsedSize() -> getCollapsedSize
    475:475:com.google.android.material.animation.MotionSpec getExtendMotionSpec() -> getExtendMotionSpec
    451:451:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    427:427:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    501:501:com.google.android.material.animation.MotionSpec getShrinkMotionSpec() -> getShrinkMotionSpec
    208:212:void onAttachedToWindow() -> onAttachedToWindow
    524:566:void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> performMotion
    484:484:void setExtendMotionSpec(com.google.android.material.animation.MotionSpec) -> setExtendMotionSpec
    493:493:void setExtendMotionSpecResource(int) -> setExtendMotionSpecResource
    227:236:void setExtended(boolean) -> setExtended
    460:460:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    469:469:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    436:436:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    445:445:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    510:510:void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec) -> setShrinkMotionSpec
    519:519:void setShrinkMotionSpecResource(int) -> setShrinkMotionSpecResource
    590:590:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3:
    538:538:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> <init>
    549:550:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    555:557:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    543:544:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4:
    598:598:void <init>(java.lang.Class,java.lang.String) -> <init>
    598:598:java.lang.Object get(java.lang.Object) -> get
    608:608:java.lang.Float get(android.view.View) -> get
    598:598:void set(java.lang.Object,java.lang.Object) -> set
    601:602:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
    617:617:void <init>(java.lang.Class,java.lang.String) -> <init>
    617:617:java.lang.Object get(java.lang.Object) -> get
    627:627:java.lang.Float get(android.view.View) -> get
    617:617:void set(java.lang.Object,java.lang.Object) -> set
    620:621:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    659:661:void <init>() -> <init>
    668:680:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    868:875:void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> extendOrShow
    646:646:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    911:912:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    758:760:boolean isBottomSheet(android.view.View) -> isBottomSheet
    927:955:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> offsetIfNeeded
    737:740:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    646:646:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    747:752:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View) -> onDependentViewChanged
    646:646:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    884:900:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> onLayoutChild
    778:783:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shouldUpdateVisibility
    845:852:void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shrinkOrHide
    796:813:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForAppBarLayout
    820:827:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
    102:102:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    102:102:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    620:620:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    588:588:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1349:1349:void addTransformationCallback(com.google.android.material.animation.TransformationCallback) -> addTransformationCallback
    1442:1445:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    816:817:void drawableStateChanged() -> drawableStateChanged
    355:355:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    381:381:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1201:1201:float getCompatElevation() -> getCompatElevation
    1236:1236:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1271:1271:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    894:894:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    866:868:boolean getContentRect(android.graphics.Rect) -> getContentRect
    763:763:int getCustomSize() -> getCustomSize
    644:644:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1325:1325:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1434:1437:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    880:881:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    301:301:int getRippleColor() -> getRippleColor
    312:312:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    530:530:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1301:1301:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    704:704:int getSize() -> getSize
    777:777:int getSizeDimension() -> getSizeDimension
    781:793:int getSizeDimension(int) -> getSizeDimension
    415:415:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    434:434:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    448:448:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    462:462:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    672:672:boolean getUseCompatPadding() -> getUseCompatPadding
    612:612:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> hide
    616:616:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    634:634:boolean isExpanded() -> isExpanded
    728:728:boolean isOrWillBeHidden() -> isOrWillBeHidden
    732:732:boolean isOrWillBeShown() -> isOrWillBeShown
    822:823:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    885:888:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    466:484:void onApplySupportImageTint() -> onApplySupportImageTint
    804:805:void onAttachedToWindow() -> onAttachedToWindow
    810:811:void onDetachedFromWindow() -> onDetachedFromWindow
    274:287:void onMeasure(int,int) -> onMeasure
    844:852:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    828:835:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    925:931:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    899:911:int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    499:499:void setBackgroundColor(int) -> setBackgroundColor
    489:489:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    494:494:void setBackgroundResource(int) -> setBackgroundResource
    366:368:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    393:395:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1213:1213:void setCompatElevation(float) -> setCompatElevation
    1225:1225:void setCompatElevationResource(int) -> setCompatElevationResource
    1248:1248:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1260:1260:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1283:1283:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1295:1295:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    750:747:void setCustomSize(int) -> setCustomSize
    1189:1190:void setElevation(float) -> setElevation
    551:553:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    639:639:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1334:1334:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1343:1343:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    511:515:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    505:506:void setImageResource(int) -> setImageResource
    326:326:void setRippleColor(int) -> setRippleColor
    340:342:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1412:1413:void setScaleX(float) -> setScaleX
    1418:1419:void setScaleY(float) -> setScaleY
    1430:1430:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    523:523:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1310:1310:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1319:1319:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    689:692:void setSize(int) -> setSize
    405:405:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    424:424:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    439:441:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    453:455:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    1394:1395:void setTranslationX(float) -> setTranslationX
    1400:1401:void setTranslationY(float) -> setTranslationY
    1406:1407:void setTranslationZ(float) -> setTranslationZ
    657:659:void setUseCompatPadding(boolean) -> setUseCompatPadding
    560:560:void setVisibility(int) -> setVisibility
    580:580:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> show
    584:584:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    714:714:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    714:714:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    722:722:void onHidden() -> onHidden
    717:717:void onShown() -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    966:967:void <init>() -> <init>
    971:978:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    957:957:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1136:1137:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1028:1030:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1152:1180:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    1007:1010:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    957:957:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1017:1022:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    957:957:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1109:1125:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    1043:1055:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    1067:1084:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1091:1098:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    943:943:void <init>() -> <init>
    947:947:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    940:940:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    940:940:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    940:940:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    940:940:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener:
    113:113:void <init>() -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    1450:1450:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1473:1473:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1467:1467:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1459:1460:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper -> com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper:
    1366:1367:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback) -> <init>
    1382:1383:boolean equals(java.lang.Object) -> equals
    1388:1388:int hashCode() -> hashCode
    1377:1377:void onScaleChanged() -> onScaleChanged
    1372:1372:void onTranslationChanged() -> onTranslationChanged
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    68:141:void <clinit>() -> <clinit>
    155:181:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    66:66:int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int) -> access$002
    66:66:android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator) -> access$102
    66:66:float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float) -> access$202
    401:404:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    385:388:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    623:626:void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) -> addTransformationCallback
    293:305:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    563:599:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    769:774:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    656:656:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    552:557:com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec() -> getDefaultHideMotionSpec
    543:548:com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec() -> getDefaultShowMotionSpec
    246:246:float getElevation() -> getElevation
    352:352:boolean getEnsureMinTouchTargetSize() -> getEnsureMinTouchTargetSize
    340:340:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    250:250:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    728:739:android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener() -> getOrCreatePreDrawListener
    671:678:void getPadding(android.graphics.Rect) -> getPadding
    254:254:float getPressedTranslationZ() -> getPressedTranslationZ
    326:326:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> getShapeAppearance
    331:331:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    417:474:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    758:763:boolean isOrWillBeHidden() -> isOrWillBeHidden
    748:753:boolean isOrWillBeShown() -> isOrWillBeShown
    381:381:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    697:702:void onAttachedToWindow() -> onAttachedToWindow
    707:710:void onDetachedFromWindow() -> onDetachedFromWindow
    377:377:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    366:367:void onElevationsChanged(float,float,float) -> onElevationsChanged
    682:688:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    719:722:void onPreDraw() -> onPreDraw
    647:649:void onScaleChanged() -> onScaleChanged
    639:641:void onTranslationChanged() -> onTranslationChanged
    213:217:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    222:223:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    239:241:void setElevation(float) -> setElevation
    356:356:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    344:344:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    258:260:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    285:289:void setImageMatrixScale(float) -> setImageMatrixScale
    265:267:void setPressedTranslationZ(float) -> setPressedTranslationZ
    232:233:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    360:361:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    310:320:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearance
    335:335:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    846:846:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    348:348:boolean shouldExpandBoundsForA11y() -> shouldExpandBoundsForA11y
    480:537:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    850:866:void updateFromViewRotation() -> updateFromViewRotation
    281:281:void updateImageMatrixScale() -> updateImageMatrixScale
    664:667:void updatePadding() -> updatePadding
    371:372:void updateShapeElevation(float) -> updateShapeElevation
    608:612:void workAroundOreoBug(android.animation.ObjectAnimator) -> workAroundOreoBug
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
    434:434:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    448:448:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    453:459:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    439:443:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
    505:505:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    516:520:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    508:511:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    584:584:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    584:584:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    590:591:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
    612:613:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    612:612:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    616:617:java.lang.Float evaluate(float,java.lang.Float,java.lang.Float) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5:
    730:730:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    733:733:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    837:837:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
    819:819:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    823:823:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
    828:828:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    832:832:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
    810:810:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    814:814:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    778:778:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    778:778:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    801:802:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    787:793:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    53:53:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    156:161:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    167:167:float getElevation() -> getElevation
    237:243:void getPadding(android.graphics.Rect) -> getPadding
    172:172:void onCompatShadowChanged() -> onCompatShadowChanged
    182:194:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    103:150:void onElevationsChanged(float,float,float) -> onElevationsChanged
    89:93:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    177:177:boolean shouldAddPadding() -> shouldAddPadding
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
    34:31:void <init>(android.content.Context) -> <init>
    38:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:31:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:108:void onLayout(boolean,int,int,int,int) -> onLayout
    47:77:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
    41:41:void <clinit>() -> <clinit>
    48:48:void <init>(android.content.Context) -> <init>
    52:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    144:144:boolean isCheckable() -> isCheckable
    88:88:boolean isChecked() -> isChecked
    105:110:int[] onCreateDrawableState(int) -> onCreateDrawableState
    125:131:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    117:119:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    136:138:void setCheckable(boolean) -> setCheckable
    79:82:void setChecked(boolean) -> setChecked
    149:149:void setPressable(boolean) -> setPressable
    98:99:void setPressed(boolean) -> setPressed
    93:93:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
    60:60:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    63:64:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:72:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.CheckableImageButton$SavedState -> com.google.android.material.internal.CheckableImageButton$SavedState:
    180:180:void <clinit>() -> <clinit>
    162:162:void <init>(android.os.Parcelable) -> <init>
    166:167:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    177:177:void readFromParcel(android.os.Parcel) -> readFromParcel
    172:173:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.CheckableImageButton$SavedState$1 -> com.google.android.material.internal.CheckableImageButton$SavedState$1:
    181:181:void <init>() -> <init>
    181:181:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    185:185:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    191:191:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object[] newArray(int) -> newArray
    197:197:com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int) -> newArray
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.CollapsingTextHelper:
    58:67:void <clinit>() -> <clinit>
    131:139:void <init>(android.view.View) -> <init>
    806:810:int blendColors(int,int,float) -> blendColors
    494:567:void calculateBaseOffsets() -> calculateBaseOffsets
    215:219:float calculateCollapsedTextWidth() -> calculateCollapsedTextWidth
    442:442:void calculateCurrentOffsets() -> calculateCurrentOffsets
    625:630:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    446:469:void calculateOffsets(float) -> calculateOffsets
    649:715:void calculateUsingTextSize(float) -> calculateUsingTextSize
    776:778:void clearTexture() -> clearTexture
    581:621:void draw(android.graphics.Canvas) -> draw
    721:743:void ensureExpandedTexture() -> ensureExpandedTexture
    205:211:void getCollapsedTextActualBounds(android.graphics.RectF) -> getCollapsedTextActualBounds
    795:795:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    229:231:float getCollapsedTextHeight() -> getCollapsedTextHeight
    479:479:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    487:490:int getCurrentColor(android.content.res.ColorStateList) -> getCurrentColor
    474:474:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    223:225:float getExpandedTextHeight() -> getExpandedTextHeight
    430:430:float getExpansionFraction() -> getExpansionFraction
    240:241:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    235:236:void getTextPaintExpanded(android.text.TextPaint) -> getTextPaintExpanded
    571:577:void interpolateBounds(float) -> interpolateBounds
    787:787:boolean isClose(float,float) -> isClose
    425:426:boolean isStateful() -> isStateful
    816:818:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    245:249:void onBoundsChanged() -> onBoundsChanged
    748:752:void recalculate() -> recalculate
    822:822:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    193:196:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    201:201:void setCollapsedBounds(android.graphics.Rect) -> setCollapsedBounds
    275:305:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    167:169:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    264:266:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    342:343:void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    365:369:boolean setCollapsedTypefaceInternal(android.graphics.Typeface) -> setCollapsedTypefaceInternal
    181:184:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    189:189:void setExpandedBounds(android.graphics.Rect) -> setExpandedBounds
    174:176:void setExpandedTextColor(android.content.res.ColorStateList) -> setExpandedTextColor
    253:255:void setExpandedTextGravity(int) -> setExpandedTextGravity
    153:155:void setExpandedTextSize(float) -> setExpandedTextSize
    379:383:boolean setExpandedTypefaceInternal(android.graphics.Typeface) -> setExpandedTypefaceInternal
    405:409:void setExpansionFraction(float) -> setExpansionFraction
    634:644:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    148:149:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    414:417:boolean setState(int[]) -> setState
    762:766:void setText(java.lang.CharSequence) -> setText
    143:144:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    354:357:void setTypefaces(android.graphics.Typeface) -> setTypefaces
com.google.android.material.internal.CollapsingTextHelper$1 -> com.google.android.material.internal.CollapsingTextHelper$1:
    296:296:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    299:299:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
    37:38:void <clinit>() -> <clinit>
    83:84:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    89:99:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    50:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.FlowLayout -> com.google.android.material.internal.FlowLayout:
    49:49:void <init>(android.content.Context) -> <init>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:59:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    65:67:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    87:87:int getItemSpacing() -> getItemSpacing
    79:79:int getLineSpacing() -> getLineSpacing
    181:181:int getMeasuredDimension(int,int,int) -> getMeasuredDimension
    96:96:boolean isSingleLine() -> isSingleLine
    72:75:void loadFromAttributes(android.content.Context,android.util.AttributeSet) -> loadFromAttributes
    189:237:void onLayout(boolean,int,int,int,int) -> onLayout
    106:173:void onMeasure(int,int) -> onMeasure
    91:91:void setItemSpacing(int) -> setItemSpacing
    83:83:void setLineSpacing(int) -> setLineSpacing
    101:101:void setSingleLine(boolean) -> setSingleLine
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
    54:54:void <init>(android.content.Context) -> <init>
    58:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    205:234:void draw(android.graphics.Canvas) -> draw
    242:244:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    138:140:void drawableStateChanged() -> drawableStateChanged
    188:188:android.graphics.drawable.Drawable getForeground() -> getForeground
    91:91:int getForegroundGravity() -> getForegroundGravity
    130:132:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    193:194:void onLayout(boolean,int,int,int,int) -> onLayout
    199:200:void onSizeChanged(int,int,int,int) -> onSizeChanged
    153:175:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    102:118:void setForegroundGravity(int) -> setForegroundGravity
    124:124:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
    55:55:void <clinit>() -> <clinit>
    87:87:void <init>(android.content.Context) -> <init>
    91:91:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    133:146:void adjustAppearance() -> adjustAppearance
    172:178:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    186:186:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    107:123:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    252:254:int[] onCreateDrawableState(int) -> onCreateDrawableState
    160:166:void setActionView(android.view.View) -> setActionView
    196:199:void setCheckable(boolean) -> setCheckable
    206:207:void setChecked(boolean) -> setChecked
    281:281:void setHorizontalPadding(int) -> setHorizontalPadding
    216:233:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    285:285:void setIconPadding(int) -> setIconPadding
    237:237:void setIconSize(int) -> setIconSize
    260:264:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    289:289:void setMaxLines(int) -> setMaxLines
    277:277:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    269:269:void setTextAppearance(int) -> setTextAppearance
    273:273:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    191:191:void setTitle(java.lang.CharSequence) -> setTitle
    127:129:boolean shouldExpandActionArea() -> shouldExpandActionArea
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
    76:76:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    81:82:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
    34:34:void <init>(android.content.Context) -> <init>
    38:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
com.google.android.material.internal.ParcelableSparseArray -> com.google.android.material.internal.ParcelableSparseArray:
    66:66:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    37:43:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    54:63:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseArray$1 -> com.google.android.material.internal.ParcelableSparseArray$1:
    67:67:void <init>() -> <init>
    67:67:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    71:71:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    77:77:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object[] newArray(int) -> newArray
    83:83:com.google.android.material.internal.ParcelableSparseArray[] newArray(int) -> newArray
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
    37:44:void <init>() -> <init>
    62:64:void addState(int[],android.animation.ValueAnimator) -> addState
    98:100:void cancel() -> cancel
    110:112:void jumpToCurrentState() -> jumpToCurrentState
    70:88:void setState(int[]) -> setState
    93:94:void start(com.google.android.material.internal.StateListAnimator$Tuple) -> start
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
    45:45:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    48:49:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
    120:122:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.TextDrawableHelper -> com.google.android.material.internal.TextDrawableHelper:
    76:77:void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> <init>
    39:39:boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean) -> access$002
    39:39:java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper) -> access$100
    113:113:float calculateTextWidth(java.lang.CharSequence) -> calculateTextWidth
    123:123:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    87:87:android.text.TextPaint getTextPaint() -> getTextPaint
    100:106:float getTextWidth(java.lang.String) -> getTextWidth
    82:82:void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> setDelegate
    134:150:void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context) -> setTextAppearance
    91:91:void setTextWidthDirty(boolean) -> setTextWidthDirty
    156:156:void updateTextPaintDrawState(android.content.Context) -> updateTextPaintDrawState
com.google.android.material.internal.TextDrawableHelper$1 -> com.google.android.material.internal.TextDrawableHelper$1:
    44:44:void <init>(com.google.android.material.internal.TextDrawableHelper) -> <init>
    59:63:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    50:53:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.internal.TextScale -> com.google.android.material.internal.TextScale:
    34:34:void <init>() -> <init>
    44:44:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    39:39:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    48:50:void captureValues(androidx.transition.TransitionValues) -> captureValues
    59:78:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
com.google.android.material.internal.TextScale$1 -> com.google.android.material.internal.TextScale$1:
    79:79:void <init>(com.google.android.material.internal.TextScale,android.widget.TextView) -> <init>
    82:84:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
    44:52:void <clinit>() -> <clinit>
    218:218:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    134:153:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    222:222:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    163:192:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    247:248:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    269:281:android.content.Context createThemedContext(android.content.Context,android.util.AttributeSet,int,int) -> createThemedContext
    206:213:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    234:241:boolean isTheme(android.content.Context,int[]) -> isTheme
    294:297:int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet) -> obtainAndroidThemeOverlayId
    315:319:int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int) -> obtainMaterialThemeOverlayId
    81:87:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    120:126:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
    140:157:void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    70:71:float dpToPx(android.content.Context,int) -> dpToPx
    187:190:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    59:49:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    162:167:void requestApplyInsetsWhenAttached(android.view.View) -> requestApplyInsetsWhenAttached
com.google.android.material.internal.ViewUtils$2 -> com.google.android.material.internal.ViewUtils$2:
    150:150:void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    153:153:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$3 -> com.google.android.material.internal.ViewUtils$3:
    168:168:void <init>() -> <init>
    171:172:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
com.google.android.material.internal.ViewUtils$RelativePadding -> com.google.android.material.internal.ViewUtils$RelativePadding:
    113:117:void <init>(int,int,int,int) -> <init>
    120:124:void <init>(com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    129:129:void applyToView(android.view.View) -> applyToView
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
    64:64:int getUserSetVisibility() -> getUserSetVisibility
    57:59:void internalSetVisibility(int,boolean) -> internalSetVisibility
    53:53:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
    30:30:float dist(float,float,float,float) -> dist
    66:65:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
com.google.android.material.radiobutton.MaterialRadioButton -> com.google.android.material.radiobutton.MaterialRadioButton:
    44:46:void <clinit>() -> <clinit>
    61:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:126:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    82:85:void onAttachedToWindow() -> onAttachedToWindow
    95:99:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.resources.CancelableFontCallback -> com.google.android.material.resources.CancelableFontCallback:
    42:44:void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface) -> <init>
    64:64:void cancel() -> cancel
    54:54:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    49:49:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
    68:69:void updateIfNotCancelled(android.graphics.Typeface) -> updateIfNotCancelled
com.google.android.material.resources.MaterialAttributes -> com.google.android.material.resources.MaterialAttributes:
    46:47:android.util.TypedValue resolve(android.content.Context,int) -> resolve
    106:107:boolean resolveBoolean(android.content.Context,int,boolean) -> resolveBoolean
    62:69:int resolveOrThrow(android.content.Context,int,java.lang.String) -> resolveOrThrow
    85:84:int resolveOrThrow(android.view.View,int) -> resolveOrThrow
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
    52:71:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    81:100:android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int) -> getColorStateList
    163:165:int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int) -> getDimensionPixelSize
    112:121:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    181:181:int getIndexWithValue(android.content.res.TypedArray,int,int) -> getIndexWithValue
    132:135:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> getTextAppearance
com.google.android.material.resources.TextAppearance -> com.google.android.material.resources.TextAppearance:
    74:104:void <init>(android.content.Context,int) -> <init>
    46:46:android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance) -> access$000
    46:46:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> access$002
    46:46:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> access$102
    252:272:void createFallbackFont() -> createFallbackFont
    246:247:android.graphics.Typeface getFallbackFont() -> getFallbackFont
    115:137:android.graphics.Typeface getFont(android.content.Context) -> getFont
    155:195:void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    218:220:void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    286:292:void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateDrawState
    311:314:void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateMeasureState
    325:331:void updateTextPaintMeasureState(android.text.TextPaint,android.graphics.Typeface) -> updateTextPaintMeasureState
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.resources.TextAppearance$1:
    177:177:void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    187:188:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    180:182:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.resources.TextAppearance$2 -> com.google.android.material.resources.TextAppearance$2:
    222:222:void <init>(com.google.android.material.resources.TextAppearance,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    232:232:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    226:227:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.resources.TextAppearanceConfig:
    37:37:boolean shouldLoadFontSynchronously() -> shouldLoadFontSynchronously
com.google.android.material.resources.TextAppearanceFontCallback -> com.google.android.material.resources.TextAppearanceFontCallback:
    30:30:void <init>() -> <init>
com.google.android.material.ripple.RippleDrawableCompat -> com.google.android.material.ripple.RippleDrawableCompat:
    47:47:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1) -> <init>
    58:58:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    62:63:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    126:127:void draw(android.graphics.Canvas) -> draw
    140:140:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    163:163:int getOpacity() -> getOpacity
    46:46:android.graphics.drawable.Drawable mutate() -> mutate
    146:147:com.google.android.material.ripple.RippleDrawableCompat mutate() -> mutate
    133:134:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:117:boolean onStateChange(int[]) -> onStateChange
    153:153:void setAlpha(int) -> setAlpha
    158:158:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    83:83:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    68:68:void setTint(int) -> setTint
    78:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    73:73:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState -> com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState:
    175:177:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    180:182:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    170:170:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    188:188:com.google.android.material.ripple.RippleDrawableCompat newDrawable() -> newDrawable
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
    42:77:void <clinit>() -> <clinit>
    84:84:void <init>() -> <init>
    112:184:android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList) -> convertToRippleDrawableColor
    256:257:int doubleAlpha(int) -> doubleAlpha
    242:246:int getColorForState(android.content.res.ColorStateList,int[]) -> getColorForState
    204:213:android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList) -> sanitizeRippleDrawableColor
    224:224:boolean shouldDrawRippleCompat(int[]) -> shouldDrawRippleCompat
com.google.android.material.shadow.ShadowRenderer -> com.google.android.material.shadow.ShadowRenderer:
    59:65:void <clinit>() -> <clinit>
    70:70:void <init>() -> <init>
    73:82:void <init>(int) -> <init>
    130:175:void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float) -> drawCornerShadow
    94:114:void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int) -> drawEdgeShadow
    180:180:android.graphics.Paint getShadowPaint() -> getShadowPaint
    86:88:void setShadowColor(int) -> setShadowColor
com.google.android.material.shape.AbsoluteCornerSize -> com.google.android.material.shape.AbsoluteCornerSize:
    28:29:void <init>(float) -> <init>
    49:53:boolean equals(java.lang.Object) -> equals
    34:34:float getCornerSize(android.graphics.RectF) -> getCornerSize
    58:59:int hashCode() -> hashCode
com.google.android.material.shape.AdjustedCornerSize -> com.google.android.material.shape.AdjustedCornerSize:
    37:45:void <init>(float,com.google.android.material.shape.CornerSize) -> <init>
    58:62:boolean equals(java.lang.Object) -> equals
    50:50:float getCornerSize(android.graphics.RectF) -> getCornerSize
    67:68:int hashCode() -> hashCode
com.google.android.material.shape.CornerTreatment -> com.google.android.material.shape.CornerTreatment:
    30:30:void <init>() -> <init>
    98:98:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize) -> getCornerPath
com.google.android.material.shape.CutCornerTreatment -> com.google.android.material.shape.CutCornerTreatment:
    26:24:void <init>() -> <init>
    47:48:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.shape.EdgeTreatment:
    29:29:void <init>() -> <init>
    64:64:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.shape.MaterialShapeDrawable:
    103:103:void <clinit>() -> <clinit>
    71:71:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1) -> <init>
    167:167:void <init>() -> <init>
    175:175:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    188:188:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    191:200:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    71:71:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$000(com.google.android.material.shape.MaterialShapeDrawable) -> access$000
    71:71:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable) -> access$100
    71:71:boolean access$302(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> access$302
    1201:1204:android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean) -> calculatePaintColorTintFilter
    1150:1160:void calculatePath(android.graphics.RectF,android.graphics.Path) -> calculatePath
    1094:1094:void calculatePathForSize(android.graphics.RectF,android.graphics.Path) -> calculatePathForSize
    1106:1122:void calculateStrokePath() -> calculateStrokePath
    1215:1219:android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> calculateTintColorTintFilter
    1194:1193:android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean) -> calculateTintFilter
    591:593:int compositeElevationOverlayIfNeeded(int) -> compositeElevationOverlayIfNeeded
    156:162:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float) -> createWithElevationOverlay
    916:978:void draw(android.graphics.Canvas) -> draw
    1049:1064:void drawCompatShadow(android.graphics.Canvas) -> drawCompatShadow
    1011:1011:void drawFillShape(android.graphics.Canvas) -> drawFillShape
    992:992:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF) -> drawShape
    1002:1006:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> drawShape
    1015:1015:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
    1301:1304:float getBottomLeftCornerResolvedSize() -> getBottomLeftCornerResolvedSize
    1309:1312:float getBottomRightCornerResolvedSize() -> getBottomRightCornerResolvedSize
    457:459:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    1276:1280:android.graphics.RectF getBoundsInsetByStroke() -> getBoundsInsetByStroke
    218:218:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    642:642:float getElevation() -> getElevation
    301:301:android.content.res.ColorStateList getFillColor() -> getFillColor
    1132:1145:void getOutline(android.graphics.Outline) -> getOutline
    492:496:boolean getPadding(android.graphics.Rect) -> getPadding
    625:625:float getParentAbsoluteElevation() -> getParentAbsoluteElevation
    1069:1071:int getShadowOffsetX() -> getShadowOffsetX
    1076:1078:int getShadowOffsetY() -> getShadowOffsetY
    783:783:int getShadowRadius() -> getShadowRadius
    255:255:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1268:1269:float getStrokeInsetLength() -> getStrokeInsetLength
    345:345:android.content.res.ColorStateList getTintList() -> getTintList
    1285:1288:float getTopLeftCornerResolvedSize() -> getTopLeftCornerResolvedSize
    1293:1296:float getTopRightCornerResolvedSize() -> getTopRightCornerResolvedSize
    663:663:float getTranslationZ() -> getTranslationZ
    447:452:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    684:684:float getZ() -> getZ
    890:892:boolean hasCompatShadow() -> hasCompatShadow
    897:897:boolean hasFill() -> hasFill
    903:905:boolean hasStroke() -> hasStroke
    585:586:void initializeElevationOverlay(android.content.Context) -> initializeElevationOverlay
    828:829:void invalidateSelf() -> invalidateSelf
    837:837:void invalidateSelfIgnoreShape() -> invalidateSelfIgnoreShape
    569:570:boolean isElevationOverlayEnabled() -> isElevationOverlayEnabled
    1323:1323:boolean isRoundRect() -> isRoundRect
    1224:1228:boolean isStateful() -> isStateful
    224:225:android.graphics.drawable.Drawable mutate() -> mutate
    910:911:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1233:1237:boolean onStateChange(int[]) -> onStateChange
    1021:1038:void prepareCanvasForShadow(android.graphics.Canvas) -> prepareCanvasForShadow
    802:802:boolean requiresCompatShadow() -> requiresCompatShadow
    433:435:void setAlpha(int) -> setAlpha
    441:442:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    464:464:void setCornerSize(float) -> setCornerSize
    651:653:void setElevation(float) -> setElevation
    288:290:void setFillColor(android.content.res.ColorStateList) -> setFillColor
    616:619:void setInterpolation(float) -> setInterpolation
    509:515:void setPadding(int,int,int,int) -> setPadding
    630:632:void setParentAbsoluteElevation(float) -> setParentAbsoluteElevation
    771:773:void setShadowCompatRotation(int) -> setShadowCompatRotation
    242:243:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    390:391:void setStroke(float,int) -> setStroke
    401:402:void setStroke(float,android.content.res.ColorStateList) -> setStroke
    310:312:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    420:421:void setStrokeWidth(float) -> setStrokeWidth
    360:360:void setTint(int) -> setTint
    337:339:void setTintList(android.content.res.ColorStateList) -> setTintList
    328:331:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    1245:1259:boolean updateColorsForState(int[]) -> updateColorsForState
    1164:1183:boolean updateTintFilter() -> updateTintFilter
    697:702:void updateZ() -> updateZ
com.google.android.material.shape.MaterialShapeDrawable$1 -> com.google.android.material.shape.MaterialShapeDrawable$1:
    201:201:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    205:205:void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onCornerPathCreated
    210:210:void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onEdgePathCreated
com.google.android.material.shape.MaterialShapeDrawable$2 -> com.google.android.material.shape.MaterialShapeDrawable$2:
    1110:1110:void <init>(com.google.android.material.shape.MaterialShapeDrawable,float) -> <init>
    1116:1116:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState -> com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState:
    1358:1360:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider) -> <init>
    1363:1386:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    1393:1395:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.shape.MaterialShapeUtils -> com.google.android.material.shape.MaterialShapeUtils:
    37:33:com.google.android.material.shape.CornerTreatment createCornerTreatment(int) -> createCornerTreatment
    43:43:com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment() -> createDefaultCornerTreatment
    48:48:com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment() -> createDefaultEdgeTreatment
    57:59:void setElevation(android.view.View,float) -> setElevation
    70:72:void setParentAbsoluteElevation(android.view.View) -> setParentAbsoluteElevation
    83:84:void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable) -> setParentAbsoluteElevation
com.google.android.material.shape.RelativeCornerSize -> com.google.android.material.shape.RelativeCornerSize:
    31:32:void <init>(float) -> <init>
    50:54:boolean equals(java.lang.Object) -> equals
    42:42:float getCornerSize(android.graphics.RectF) -> getCornerSize
    59:60:int hashCode() -> hashCode
com.google.android.material.shape.RoundedCornerTreatment -> com.google.android.material.shape.RoundedCornerTreatment:
    26:24:void <init>() -> <init>
    43:44:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.ShapeAppearanceModel -> com.google.android.material.shape.ShapeAppearanceModel:
    565:565:void <clinit>() -> <clinit>
    41:41:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1) -> <init>
    580:594:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> <init>
    598:612:void <init>() -> <init>
    435:435:com.google.android.material.shape.ShapeAppearanceModel$Builder builder() -> builder
    444:444:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int) -> builder
    454:454:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int) -> builder
    465:472:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize) -> builder
    480:480:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int) -> builder
    489:489:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int) -> builder
    504:541:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize) -> builder
    732:732:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> getBottomEdge
    652:652:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> getBottomLeftCorner
    692:692:com.google.android.material.shape.CornerSize getBottomLeftCornerSize() -> getBottomLeftCornerSize
    642:642:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> getBottomRightCorner
    682:682:com.google.android.material.shape.CornerSize getBottomRightCornerSize() -> getBottomRightCornerSize
    547:558:com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize) -> getCornerSize
    702:702:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> getLeftEdge
    722:722:com.google.android.material.shape.EdgeTreatment getRightEdge() -> getRightEdge
    712:712:com.google.android.material.shape.EdgeTreatment getTopEdge() -> getTopEdge
    622:622:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> getTopLeftCorner
    662:662:com.google.android.material.shape.CornerSize getTopLeftCornerSize() -> getTopLeftCornerSize
    632:632:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> getTopRightCorner
    672:672:com.google.android.material.shape.CornerSize getTopRightCornerSize() -> getTopRightCornerSize
    791:804:boolean isRoundRect(android.graphics.RectF) -> isRoundRect
    738:738:com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder() -> toBuilder
    747:747:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float) -> withCornerSize
    775:780:com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator) -> withTransformedCornerSizes
com.google.android.material.shape.ShapeAppearanceModel$Builder -> com.google.android.material.shape.ShapeAppearanceModel$Builder:
    68:66:void <init>() -> <init>
    70:84:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    44:44:com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$100
    44:44:com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1000
    44:44:com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1100
    44:44:com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1200
    44:44:com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$200
    44:44:com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$300
    44:44:com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$400
    44:44:com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$500
    44:44:com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$600
    44:44:com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$700
    44:44:com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$800
    44:44:com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$900
    429:429:com.google.android.material.shape.ShapeAppearanceModel build() -> build
    418:421:float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment) -> compatCornerTreatmentSize
    131:134:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float) -> setAllCornerSizes
    339:340:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize) -> setBottomLeftCorner
    350:354:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    182:182:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float) -> setBottomLeftCornerSize
    189:189:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize) -> setBottomLeftCornerSize
    297:298:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize) -> setBottomRightCorner
    308:312:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    168:168:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float) -> setBottomRightCornerSize
    175:175:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize) -> setBottomRightCornerSize
    214:215:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize) -> setTopLeftCorner
    225:229:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    140:140:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float) -> setTopLeftCornerSize
    147:147:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize) -> setTopLeftCornerSize
    255:256:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize) -> setTopRightCorner
    266:270:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
    154:154:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float) -> setTopRightCornerSize
    161:161:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize) -> setTopRightCornerSize
com.google.android.material.shape.ShapeAppearancePathProvider -> com.google.android.material.shape.ShapeAppearancePathProvider:
    52:56:void <init>() -> <init>
    139:149:void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendCornerPath
    154:172:void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendEdgePath
    73:73:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path) -> calculatePath
    92:113:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> calculatePath
    249:239:void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF) -> getCoordinatesOfCorner
    217:210:com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerSizeForIndex
    202:195:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerTreatmentForIndex
    177:183:float getEdgeCenterForIndex(android.graphics.RectF,int) -> getEdgeCenterForIndex
    232:225:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getEdgeTreatmentForIndex
    117:125:void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> setCornerPathAndTransform
    129:135:void setEdgePathAndTransform(int) -> setEdgePathAndTransform
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec -> com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec:
    274:279:void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> <init>
com.google.android.material.shape.ShapePath -> com.google.android.material.shape.ShapePath:
    91:92:void <init>() -> <init>
    175:194:void addArc(float,float,float,float,float,float) -> addArc
    248:262:void addConnectingShadowIfNecessary(float) -> addConnectingShadowIfNecessary
    238:240:void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float) -> addShadowCompatOperation
    206:208:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    219:221:com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix) -> createShadowCompatOperation
    282:282:float getCurrentShadowAngle() -> getCurrentShadowAngle
    286:286:float getEndShadowAngle() -> getEndShadowAngle
    274:274:float getEndX() -> getEndX
    278:278:float getEndY() -> getEndY
    266:266:float getStartX() -> getStartX
    270:270:float getStartY() -> getStartY
    126:140:void lineTo(float,float) -> lineTo
    104:104:void reset(float,float) -> reset
    109:116:void reset(float,float,float,float) -> reset
    306:306:void setCurrentShadowAngle(float) -> setCurrentShadowAngle
    310:310:void setEndShadowAngle(float) -> setEndShadowAngle
    298:298:void setEndX(float) -> setEndX
    302:302:void setEndY(float) -> setEndY
    290:290:void setStartX(float) -> setStartX
    294:294:void setStartY(float) -> setStartY
com.google.android.material.shape.ShapePath$1 -> com.google.android.material.shape.ShapePath$1:
    221:221:void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix) -> <init>
    225:226:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$ArcShadowOperation -> com.google.android.material.shape.ShapePath$ArcShadowOperation:
    370:371:void <init>(com.google.android.material.shape.ShapePath$PathArcOperation) -> <init>
    380:385:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$LineShadowOperation -> com.google.android.material.shape.ShapePath$LineShadowOperation:
    338:341:void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float) -> <init>
    350:357:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
    361:361:float getAngle() -> getAngle
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.shape.ShapePath$PathArcOperation:
    482:482:void <clinit>() -> <clinit>
    515:519:void <init>(float,float,float,float) -> <init>
    481:481:float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1000
    481:481:float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1100
    481:481:float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1200
    481:481:float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1300
    481:481:void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$600
    481:481:void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$700
    481:481:float access$800(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$800
    481:481:float access$900(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$900
    524:529:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    545:545:float getBottom() -> getBottom
    533:533:float getLeft() -> getLeft
    541:541:float getRight() -> getRight
    565:565:float getStartAngle() -> getStartAngle
    569:569:float getSweepAngle() -> getSweepAngle
    537:537:float getTop() -> getTop
    561:561:void setBottom(float) -> setBottom
    549:549:void setLeft(float) -> setLeft
    557:557:void setRight(float) -> setRight
    573:573:void setStartAngle(float) -> setStartAngle
    577:577:void setSweepAngle(float) -> setSweepAngle
    553:553:void setTop(float) -> setTop
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.shape.ShapePath$PathLineOperation:
    401:401:void <init>() -> <init>
    401:401:float access$000(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$000
    401:401:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$002
    401:401:float access$100(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$100
    401:401:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$102
    407:411:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.shape.ShapePath$PathOperation:
    391:394:void <init>() -> <init>
com.google.android.material.shape.ShapePath$ShadowCompatOperation -> com.google.android.material.shape.ShapePath$ShadowCompatOperation:
    319:319:void <clinit>() -> <clinit>
    317:317:void <init>() -> <init>
    323:323:void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.snackbar.BaseTransientBottomBar -> com.google.android.material.snackbar.BaseTransientBottomBar:
    221:232:void <clinit>() -> <clinit>
    332:334:void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    89:89:android.content.Context access$000(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$000
    89:89:int access$100(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$100
    89:89:void access$1100(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1100
    89:89:void access$1200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1200
    89:89:com.google.android.material.snackbar.ContentViewCallback access$1300(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1300
    89:89:boolean access$1400() -> access$1400
    89:89:int access$200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$200
    89:89:int access$300(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$300
    89:89:int access$302(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$302
    89:89:java.lang.String access$400() -> access$400
    89:89:int access$502(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$502
    89:89:int access$602(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$602
    89:89:int access$702(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$702
    89:89:void access$800(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$800
    89:89:void access$900(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$900
    847:847:void animateViewIn() -> animateViewIn
    866:869:void animateViewOut(int) -> animateViewOut
    830:840:int calculateBottomMarginForAnchorView() -> calculateBottomMarginForAnchorView
    423:435:android.graphics.drawable.Drawable createThemedBackground() -> createThemedBackground
    617:617:void dismiss() -> dismiss
    621:621:void dispatchDismiss(int) -> dispatchDismiss
    904:906:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    601:601:android.content.Context getContext() -> getContext
    508:508:int getDuration() -> getDuration
    693:693:com.google.android.material.behavior.SwipeDismissBehavior getNewBehavior() -> getNewBehavior
    917:919:android.animation.ValueAnimator getScaleAnimator(float[]) -> getScaleAnimator
    779:782:int getScreenHeight() -> getScreenHeight
    474:474:int getSnackbarBaseLayoutResId() -> getSnackbarBaseLayoutResId
    1016:1019:int getTranslationYBottom() -> getTranslationYBottom
    607:607:android.view.View getView() -> getView
    773:774:int getViewAbsoluteBottom() -> getViewAbsoluteBottom
    483:485:boolean hasSnackbarStyleAttr() -> hasSnackbarStyleAttr
    1025:1029:void hideView(int) -> hideView
    673:673:boolean isShownOrQueued() -> isShownOrQueued
    466:468:boolean isSwipeDismissable() -> isSwipeDismissable
    1047:1059:void onViewHidden(int) -> onViewHidden
    1034:1040:void onViewShown() -> onViewShown
    497:497:com.google.android.material.snackbar.BaseTransientBottomBar setDuration(int) -> setDuration
    789:825:void setUpBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> setUpBehavior
    1066:1068:boolean shouldAnimate() -> shouldAnimate
    462:462:boolean shouldUpdateGestureInset() -> shouldUpdateGestureInset
    612:612:void show() -> show
    697:750:void showView() -> showView
    761:767:void showViewImpl() -> showViewImpl
    874:887:void startFadeInAnimation() -> startFadeInAnimation
    891:900:void startFadeOutAnimation(int) -> startFadeOutAnimation
    932:974:void startSlideInAnimation() -> startSlideInAnimation
    978:1012:void startSlideOutAnimation(int) -> startSlideOutAnimation
    440:442:void updateMargins() -> updateMargins
com.google.android.material.snackbar.BaseTransientBottomBar$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$1:
    233:233:void <init>() -> <init>
    236:238:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.BaseTransientBottomBar$10 -> com.google.android.material.snackbar.BaseTransientBottomBar$10:
    881:881:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    884:884:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$11 -> com.google.android.material.snackbar.BaseTransientBottomBar$11:
    894:894:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    897:897:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$12 -> com.google.android.material.snackbar.BaseTransientBottomBar$12:
    907:907:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    910:910:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$13 -> com.google.android.material.snackbar.BaseTransientBottomBar$13:
    920:920:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    923:925:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$14 -> com.google.android.material.snackbar.BaseTransientBottomBar$14:
    944:944:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    953:953:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    947:947:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$15 -> com.google.android.material.snackbar.BaseTransientBottomBar$15:
    957:958:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    962:971:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$16 -> com.google.android.material.snackbar.BaseTransientBottomBar$16:
    983:983:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    991:991:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    986:986:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$17 -> com.google.android.material.snackbar.BaseTransientBottomBar$17:
    995:996:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    1000:1009:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$2 -> com.google.android.material.snackbar.BaseTransientBottomBar$2:
    263:263:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    266:289:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$3 -> com.google.android.material.snackbar.BaseTransientBottomBar$3:
    381:381:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    387:390:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.snackbar.BaseTransientBottomBar$4 -> com.google.android.material.snackbar.BaseTransientBottomBar$4:
    398:398:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    402:404:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    410:413:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.snackbar.BaseTransientBottomBar$5 -> com.google.android.material.snackbar.BaseTransientBottomBar$5:
    678:678:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    686:686:void dismiss(int) -> dismiss
    681:681:void show() -> show
com.google.android.material.snackbar.BaseTransientBottomBar$6 -> com.google.android.material.snackbar.BaseTransientBottomBar$6:
    698:698:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    701:705:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    712:717:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.snackbar.BaseTransientBottomBar$6$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$6$1:
    718:718:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar$6) -> <init>
    721:721:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$7 -> com.google.android.material.snackbar.BaseTransientBottomBar$7:
    751:751:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    754:755:void onLayoutChange(android.view.View,int,int,int,int) -> onLayoutChange
com.google.android.material.snackbar.BaseTransientBottomBar$8 -> com.google.android.material.snackbar.BaseTransientBottomBar$8:
    797:797:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    800:801:void onDismiss(android.view.View) -> onDismiss
    810:814:void onDragStateChanged(int) -> onDragStateChanged
com.google.android.material.snackbar.BaseTransientBottomBar$9 -> com.google.android.material.snackbar.BaseTransientBottomBar$9:
    848:848:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    851:859:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback -> com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback:
    113:113:void <init>() -> <init>
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    1180:1181:void <init>() -> <init>
    1177:1177:void access$1000(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1000
    1191:1191:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1197:1198:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1186:1186:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    1208:1211:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    1220:1220:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1225:1230:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1216:1216:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    1075:1075:void <clinit>() -> <clinit>
    1092:1092:void <init>(android.content.Context) -> <init>
    1096:1112:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1172:1172:float getActionTextColorAlpha() -> getActionTextColorAlpha
    1160:1160:int getAnimationMode() -> getAnimationMode
    1168:1168:float getBackgroundOverlayColorAlpha() -> getBackgroundOverlayColorAlpha
    1132:1137:void onAttachedToWindow() -> onAttachedToWindow
    1142:1144:void onDetachedFromWindow() -> onDetachedFromWindow
    1124:1126:void onLayout(boolean,int,int,int,int) -> onLayout
    1164:1164:void setAnimationMode(int) -> setAnimationMode
    1155:1155:void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
    1118:1119:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1150:1150:void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener) -> setOnLayoutChangeListener
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
    1076:1076:void <init>() -> <init>
com.google.android.material.snackbar.Snackbar -> com.google.android.material.snackbar.Snackbar:
    71:71:void <clinit>() -> <clinit>
    110:112:void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    126:126:void dismiss() -> dismiss
    214:231:android.view.ViewGroup findSuitableParent(android.view.View) -> findSuitableParent
    308:320:int getDuration() -> getDuration
    183:185:boolean hasSnackbarButtonStyleAttr(android.content.Context) -> hasSnackbarButtonStyleAttr
    156:158:com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int) -> make
    207:207:com.google.android.material.snackbar.Snackbar make(android.view.View,int,int) -> make
    246:248:com.google.android.material.snackbar.Snackbar setText(java.lang.CharSequence) -> setText
    259:259:com.google.android.material.snackbar.Snackbar setText(int) -> setText
    119:119:void show() -> show
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    432:432:void <init>(android.content.Context) -> <init>
    436:436:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    441:451:void onMeasure(int,int) -> onMeasure
    429:429:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
    45:45:void <init>(android.content.Context) -> <init>
    49:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:153:void animateContentIn(int,int) -> animateContentIn
    159:164:void animateContentOut(int,int) -> animateContentOut
    69:69:android.widget.Button getActionView() -> getActionView
    65:65:android.widget.TextView getMessageView() -> getMessageView
    59:61:void onFinishInflate() -> onFinishInflate
    84:113:void onMeasure(int,int) -> onMeasure
    74:78:void updateActionTextColorAlphaIfNeeded(float) -> updateActionTextColorAlphaIfNeeded
    134:142:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    120:126:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
    49:53:void <init>() -> <init>
    205:209:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    107:113:void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int) -> dismiss
    37:40:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    240:244:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    169:171:boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentOrNext
    216:216:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    220:220:boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isNextSnackbarLocked
    121:129:void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback) -> onDismissed
    137:141:void onShown(com.google.android.material.snackbar.SnackbarManager$Callback) -> onShown
    145:150:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    154:159:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    224:236:void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
    75:103:void show(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> show
    190:199:void showNextSnackbarLocked() -> showNextSnackbarLocked
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
    54:54:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    57:59:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    179:181:void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> <init>
    185:185:boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback) -> isSnackbar
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
    91:91:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    41:42:void <init>(android.os.Parcelable) -> <init>
    46:58:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    84:85:java.lang.String toString() -> toString
    64:78:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
    92:92:void <init>() -> <init>
    92:92:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    97:97:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    103:103:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object[] newArray(int) -> newArray
    109:109:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.textfield.ClearTextEndIconDelegate -> com.google.android.material.textfield.ClearTextEndIconDelegate:
    81:64:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    37:37:boolean access$000(android.text.Editable) -> access$000
    37:37:android.animation.ValueAnimator access$100(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$100
    37:37:android.animation.AnimatorSet access$200(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$200
    37:37:android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$300
    124:127:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    140:143:android.animation.ValueAnimator getScaleAnimator() -> getScaleAnimator
    156:156:boolean hasText(android.text.Editable) -> hasText
    102:114:void initAnimators() -> initAnimators
    86:98:void initialize() -> initialize
com.google.android.material.textfield.ClearTextEndIconDelegate$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$1:
    44:44:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    53:60:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$2:
    65:65:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    68:73:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.ClearTextEndIconDelegate$3 -> com.google.android.material.textfield.ClearTextEndIconDelegate$3:
    91:91:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    94:94:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.ClearTextEndIconDelegate$4 -> com.google.android.material.textfield.ClearTextEndIconDelegate$4:
    107:107:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    110:110:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.ClearTextEndIconDelegate$5 -> com.google.android.material.textfield.ClearTextEndIconDelegate$5:
    115:115:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    118:118:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.ClearTextEndIconDelegate$6 -> com.google.android.material.textfield.ClearTextEndIconDelegate$6:
    128:128:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    131:132:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.ClearTextEndIconDelegate$7 -> com.google.android.material.textfield.ClearTextEndIconDelegate$7:
    144:144:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    147:149:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.CustomEndIconDelegate -> com.google.android.material.textfield.CustomEndIconDelegate:
    27:27:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    32:33:void initialize() -> initialize
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.CutoutDrawable:
    44:44:void <init>() -> <init>
    48:51:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    87:93:void draw(android.graphics.Canvas) -> draw
    61:61:boolean hasCutout() -> hasCutout
    121:122:void postDraw(android.graphics.Canvas) -> postDraw
    97:107:void preDraw(android.graphics.Canvas) -> preDraw
    82:82:void removeCutout() -> removeCutout
    112:116:void saveCanvasLayer(android.graphics.Canvas) -> saveCanvasLayer
    67:72:void setCutout(float,float,float,float) -> setCutout
    77:77:void setCutout(android.graphics.RectF) -> setCutout
    55:57:void setPaintStyles() -> setPaintStyles
    127:127:boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback) -> useHardwareLayer
com.google.android.material.textfield.DropdownMenuEndIconDelegate -> com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    66:66:void <clinit>() -> <clinit>
    150:142:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    64:64:android.widget.AutoCompleteTextView access$000(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.EditText) -> access$000
    64:64:void access$100(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$100
    64:64:boolean access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1000
    64:64:long access$1102(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long) -> access$1102
    64:64:boolean access$1200(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1200
    64:64:android.animation.ValueAnimator access$1300(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1300
    64:64:boolean access$202(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$202
    64:64:android.view.accessibility.AccessibilityManager access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$300
    64:64:void access$400(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$400
    64:64:void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$500
    64:64:void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$600
    64:64:void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$700
    64:64:android.text.TextWatcher access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$800
    64:64:com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$900
    259:274:void addRippleEffect(android.widget.AutoCompleteTextView) -> addRippleEffect
    314:334:void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnFilledLayout
    284:306:void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnOutlinedLayout
    403:404:android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText) -> castAutoCompleteTextViewOrThrow
    434:437:android.animation.ValueAnimator getAlphaAnimator(int,float[]) -> getAlphaAnimator
    383:392:com.google.android.material.shape.MaterialShapeDrawable getPopUpMaterialShapeDrawable(float,float,float,int) -> getPopUpMaterialShapeDrawable
    421:423:void initAnimators() -> initAnimators
    155:208:void initialize() -> initialize
    397:397:boolean isDropdownPopupActive() -> isDropdownPopupActive
    413:416:void setEndIconChecked(boolean) -> setEndIconChecked
    247:252:void setPopupBackground(android.widget.AutoCompleteTextView) -> setPopupBackground
    340:368:void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView) -> setUpDropdownShowHideBehavior
    225:242:void showHideDropdown(android.widget.AutoCompleteTextView) -> showHideDropdown
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1:
    71:71:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    80:82:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1:
    83:83:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$1,android.widget.AutoCompleteTextView) -> <init>
    86:88:void run() -> run
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$2:
    94:94:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,com.google.android.material.textfield.TextInputLayout) -> <init>
    98:104:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    110:116:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.textfield.DropdownMenuEndIconDelegate$3 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$3:
    121:121:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    124:136:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.DropdownMenuEndIconDelegate$4 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$4:
    197:197:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    200:201:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$5:
    341:341:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> <init>
    344:349:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.textfield.DropdownMenuEndIconDelegate$6 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$6:
    356:356:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    359:362:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.google.android.material.textfield.DropdownMenuEndIconDelegate$7 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$7:
    369:369:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    372:374:void onDismiss() -> onDismiss
com.google.android.material.textfield.DropdownMenuEndIconDelegate$8 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$8:
    424:424:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    427:428:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.DropdownMenuEndIconDelegate$9 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$9:
    438:438:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    441:442:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.EndIconDelegate -> com.google.android.material.textfield.EndIconDelegate:
    36:39:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.IndicatorViewController:
    117:121:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    58:58:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> access$002
    58:58:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> access$102
    58:58:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> access$200
    363:391:void addIndicator(android.widget.TextView,int) -> addIndicator
    347:349:void adjustIndicatorPadding() -> adjustIndicatorPadding
    359:359:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    325:326:void cancelCaptionAnimator() -> cancelCaptionAnimator
    301:303:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    310:312:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    317:320:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    490:490:boolean errorShouldBeShown() -> errorShouldBeShown
    340:338:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    515:515:java.lang.CharSequence getErrorText() -> getErrorText
    539:539:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    544:544:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    519:519:java.lang.CharSequence getHelperText() -> getHelperText
    562:562:int getHelperTextViewCurrentTextColor() -> getHelperTextViewCurrentTextColor
    162:174:void hideError() -> hideError
    138:144:void hideHelperText() -> hideHelperText
    494:496:boolean isCaptionStateError(int) -> isCaptionStateError
    447:447:boolean isErrorEnabled() -> isErrorEnabled
    451:451:boolean isHelperTextEnabled() -> isHelperTextEnabled
    395:407:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    267:284:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    418:443:void setErrorEnabled(boolean) -> setErrorEnabled
    555:557:void setErrorTextAppearance(int) -> setErrorTextAppearance
    548:550:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    578:580:void setHelperTextAppearance(int) -> setHelperTextAppearance
    456:482:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    571:573:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    533:533:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> setTextViewTypeface
    524:527:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    412:412:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    188:192:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    149:157:void showError(java.lang.CharSequence) -> showError
    125:133:void showHelper(java.lang.CharSequence) -> showHelper
    201:257:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.IndicatorViewController$1:
    226:226:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    229:239:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    246:247:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.NoEndIconDelegate -> com.google.android.material.textfield.NoEndIconDelegate:
    26:26:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    31:33:void initialize() -> initialize
com.google.android.material.textfield.PasswordToggleEndIconDelegate -> com.google.android.material.textfield.PasswordToggleEndIconDelegate:
    77:63:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    33:33:boolean access$000(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$000
    33:33:android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$100
    112:114:boolean hasPasswordTransformation() -> hasPasswordTransformation
    82:108:void initialize() -> initialize
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$1:
    36:36:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    41:41:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$2 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$2:
    52:52:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    55:60:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$3:
    64:64:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    67:71:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$4 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$4:
    87:87:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    90:103:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
    42:42:void <init>(android.content.Context) -> <init>
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    74:78:java.lang.CharSequence getHint() -> getHint
    107:108:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    95:100:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    55:65:void onAttachedToWindow() -> onAttachedToWindow
    84:88:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
    174:174:void <clinit>() -> <clinit>
    392:392:void <init>(android.content.Context) -> <init>
    396:396:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    400:716:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    172:172:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> access$000
    172:172:com.google.android.material.internal.CheckableImageButton access$100(com.google.android.material.textfield.TextInputLayout) -> access$100
    2630:2632:void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> addOnEditTextAttachedListener
    2602:2602:void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) -> addOnEndIconChangedListener
    722:737:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    3243:3259:void animateToExpansionFraction(float) -> animateToExpansionFraction
    1928:1945:void applyBoxAttributes() -> applyBoxAttributes
    1950:1957:void applyBoxUnderlineAttributes() -> applyBoxUnderlineAttributes
    3123:3126:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    2894:2894:void applyEndIconTint() -> applyEndIconTint
    2985:2998:void applyIconTint(com.google.android.material.internal.CheckableImageButton,boolean,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode) -> applyIconTint
    2862:2862:void applyStartIconTint() -> applyStartIconTint
    795:810:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    1919:1922:int calculateBoxBackgroundColor() -> calculateBoxBackgroundColor
    1846:1847:android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect) -> calculateCollapsedTextBounds
    1898:1904:int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float) -> calculateExpandedLabelBottom
    1890:1893:int calculateExpandedLabelTop(android.graphics.Rect,float) -> calculateExpandedLabelTop
    1873:1874:android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect) -> calculateExpandedTextBounds
    1829:1838:int calculateLabelMarginTop() -> calculateLabelMarginTop
    1961:1961:boolean canDrawOutlineStroke() -> canDrawOutlineStroke
    1965:1965:boolean canDrawStroke() -> canDrawStroke
    3117:3118:void closeCutout() -> closeCutout
    3085:3095:void collapseHint(boolean) -> collapseHint
    3100:3100:boolean cutoutEnabled() -> cutoutEnabled
    2852:2853:void dispatchOnEditTextAttached() -> dispatchOnEditTextAttached
    2875:2876:void dispatchOnEndIconChanged(int) -> dispatchOnEndIconChanged
    1022:1023:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    2091:2093:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    3064:3066:void draw(android.graphics.Canvas) -> draw
    3076:3080:void drawBoxUnderline(android.graphics.Canvas) -> drawBoxUnderline
    3070:3071:void drawHint(android.graphics.Canvas) -> drawHint
    3136:3163:void drawableStateChanged() -> drawableStateChanged
    3227:3238:void expandHint(boolean) -> expandHint
    1135:1138:int getBaseline() -> getBaseline
    743:744:com.google.android.material.shape.MaterialShapeDrawable getBoxBackground() -> getBoxBackground
    897:897:int getBoxBackgroundColor() -> getBoxBackgroundColor
    782:782:int getBoxBackgroundMode() -> getBoxBackgroundMode
    980:980:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    990:990:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    970:970:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    960:960:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    856:856:int getBoxStrokeColor() -> getBoxStrokeColor
    1774:1774:int getCounterMaxLength() -> getCounterMaxLength
    1783:1784:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    1659:1659:android.content.res.ColorStateList getCounterOverflowTextColor() -> getCounterOverflowTextColor
    1616:1616:android.content.res.ColorStateList getCounterTextColor() -> getCounterTextColor
    1346:1346:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    1186:1186:android.widget.EditText getEditText() -> getEditText
    2554:2554:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    2847:2848:com.google.android.material.textfield.EndIconDelegate getEndIconDelegate() -> getEndIconDelegate
    2514:2514:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    2400:2400:int getEndIconMode() -> getEndIconMode
    2970:2973:com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable() -> getEndIconToUpdateDummyDrawable
    2843:2843:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    2104:2104:java.lang.CharSequence getError() -> getError
    1377:1377:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    1513:1513:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    3284:3284:int getErrorTextCurrentColor() -> getErrorTextCurrentColor
    2116:2117:java.lang.CharSequence getHelperText() -> getHelperText
    1454:1454:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    1221:1221:java.lang.CharSequence getHint() -> getHint
    3279:3279:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    3274:3274:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1327:1327:android.content.res.ColorStateList getHintTextColor() -> getHintTextColor
    2737:2737:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    2723:2723:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    2328:2328:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    2220:2220:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    1017:1017:android.graphics.Typeface getTypeface() -> getTypeface
    2871:2871:boolean hasEndIcon() -> hasEndIcon
    2858:2858:boolean hasStartIcon() -> hasStartIcon
    2445:2445:boolean isEndIconVisible() -> isEndIconVisible
    1448:1448:boolean isHelperTextEnabled() -> isHelperTextEnabled
    1283:1283:boolean isProvidingHint() -> isProvidingHint
    1908:1909:boolean isSingleLineFilledTextField() -> isSingleLineFilledTextField
    2265:2265:boolean isStartIconVisible() -> isStartIconVisible
    786:790:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    3034:3049:void onLayout(boolean,int,int,int,int) -> onLayout
    2143:2148:void onMeasure(int,int) -> onMeasure
    2068:2086:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2057:2062:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    3104:3113:void openCutout() -> openCutout
    1759:1763:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    883:886:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    869:869:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    765:770:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    843:845:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1559:1574:void setCounterEnabled(boolean) -> setCounterEnabled
    1679:1686:void setCounterMaxLength(int) -> setCounterMaxLength
    1627:1629:void setCounterOverflowTextAppearance(int) -> setCounterOverflowTextAppearance
    1643:1645:void setCounterOverflowTextColor(android.content.res.ColorStateList) -> setCounterOverflowTextColor
    1586:1588:void setCounterTextAppearance(int) -> setCounterTextAppearance
    1601:1603:void setCounterTextColor(android.content.res.ColorStateList) -> setCounterTextColor
    1332:1336:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    1044:1045:void setEditText(android.widget.EditText) -> setEditText
    820:821:void setEditTextBoxBackground() -> setEditTextBoxBackground
    1754:1755:void setEnabled(boolean) -> setEnabled
    2454:2454:void setEndIconActivated(boolean) -> setEndIconActivated
    2468:2468:void setEndIconCheckable(boolean) -> setEndIconCheckable
    2527:2527:void setEndIconContentDescription(int) -> setEndIconContentDescription
    2541:2542:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    2490:2490:void setEndIconDrawable(int) -> setEndIconDrawable
    2503:2503:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    2375:2381:void setEndIconMode(int) -> setEndIconMode
    2411:2411:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    2423:2424:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    2569:2572:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    2585:2588:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    2433:2435:void setEndIconVisible(boolean) -> setEndIconVisible
    1468:1480:void setError(java.lang.CharSequence) -> setError
    1357:1357:void setErrorEnabled(boolean) -> setErrorEnabled
    1491:1491:void setErrorIconDrawable(int) -> setErrorIconDrawable
    1501:1502:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    1523:1530:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    1542:1549:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    3219:3222:void setErrorIconVisible(boolean) -> setErrorIconVisible
    1366:1366:void setErrorTextAppearance(int) -> setErrorTextAppearance
    1371:1371:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    1429:1437:void setHelperText(java.lang.CharSequence) -> setHelperText
    1391:1391:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    1412:1412:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    1386:1386:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    1196:1198:void setHint(java.lang.CharSequence) -> setHint
    2138:2138:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    1236:1262:void setHintEnabled(boolean) -> setHintEnabled
    1203:1208:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    1292:1298:void setHintTextAppearance(int) -> setHintTextAppearance
    1307:1315:void setHintTextColor(android.content.res.ColorStateList) -> setHintTextColor
    3018:3025:void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconClickable
    3006:3007:void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> setIconOnClickListener
    3012:3013:void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconOnLongClickListener
    2695:2694:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    2710:2710:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    2664:2663:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    2679:2679:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    2763:2768:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    2786:2788:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    2802:2804:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    2279:2279:void setStartIconCheckable(boolean) -> setStartIconCheckable
    2301:2301:void setStartIconContentDescription(int) -> setStartIconContentDescription
    2315:2316:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    2186:2186:void setStartIconDrawable(int) -> setStartIconDrawable
    2199:2207:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    2231:2231:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    2243:2244:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    2343:2346:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    2359:2362:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    2253:2255:void setStartIconVisible(boolean) -> setStartIconVisible
    1806:1824:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    2836:2837:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    1000:1007:void setTypeface(android.graphics.Typeface) -> setTypeface
    828:830:boolean shouldUseEditTextBackgroundForBoxBackground() -> shouldUseEditTextBackgroundForBoxBackground
    2881:2889:void tintEndIconOnError(boolean) -> tintEndIconOnError
    3056:3058:void updateBoxUnderlineBounds(android.graphics.Rect) -> updateBoxUnderlineBounds
    1692:1693:void updateCounter() -> updateCounter
    1698:1730:void updateCounter(int) -> updateCounter
    1740:1740:void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean) -> updateCounterContentDescription
    1790:1797:void updateCounterTextAppearanceAndColor() -> updateCounterTextAppearanceAndColor
    1971:1998:void updateEditTextBackground() -> updateEditTextBackground
    2159:2169:boolean updateEditTextHeightBasedOnIcon() -> updateEditTextHeightBasedOnIcon
    2903:2962:boolean updateIconDummyDrawables() -> updateIconDummyDrawables
    1122:1128:void updateInputLayoutMargins() -> updateInputLayoutMargins
    1143:1143:void updateLabelState(boolean) -> updateLabelState
    1147:1173:void updateLabelState(boolean,boolean) -> updateLabelState
    3167:3215:void updateTextInputBoxState() -> updateTextInputBoxState
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$1:
    1070:1070:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1073:1075:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$2:
    2077:2077:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    2080:2082:void run() -> run
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$3:
    2149:2149:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    2152:2152:void run() -> run
com.google.android.material.textfield.TextInputLayout$4 -> com.google.android.material.textfield.TextInputLayout$4:
    3251:3251:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3254:3254:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate:
    3296:3297:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3303:3327:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
    2033:2033:void <clinit>() -> <clinit>
    2007:2007:void <init>(android.os.Parcelable) -> <init>
    2011:2013:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2026:2027:java.lang.String toString() -> toString
    2018:2020:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$1:
    2034:2034:void <init>() -> <init>
    2034:2034:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2034:2034:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2038:2038:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2044:2044:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2034:2034:java.lang.Object[] newArray(int) -> newArray
    2050:2050:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.textview.MaterialTextView -> com.google.android.material.textview.MaterialTextView:
    77:77:void <init>(android.content.Context) -> <init>
    81:81:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    86:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    91:99:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    115:125:void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int) -> applyLineHeightFromViewAppearance
    130:130:boolean canApplyTextAppearanceLineHeight(android.content.Context) -> canApplyTextAppearanceLineHeight
    168:173:int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> findViewAppearanceResourceId
    139:140:int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[]) -> readFirstAvailableDimension
    107:110:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    152:161:boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> viewAttrsHasLineHeight
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
    43:43:void <init>() -> <init>
    53:57:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    97:97:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    103:103:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    109:109:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    67:84:boolean shouldInflateAppCompatButton(android.content.Context,android.util.AttributeSet) -> shouldInflateAppCompatButton
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
    62:60:void <init>() -> <init>
    65:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    144:147:boolean didStateChange(boolean) -> didStateChange
    131:135:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    118:122:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    90:97:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
    98:98:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    101:104:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
    42:42:void <init>() -> <init>
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    70:89:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
    78:78:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    81:81:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
    85:78:void <init>() -> <init>
    88:78:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    706:714:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    665:681:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    622:623:void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF) -> calculateDependencyWindowBounds
    544:552:android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) -> calculateMotionTiming
    628:637:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterX
    642:651:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterY
    557:577:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    583:603:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    686:699:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    609:618:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    498:527:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    458:487:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    226:251:void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List) -> createDependencyTranslationAnimation
    203:217:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    373:447:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    311:348:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    770:778:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    747:755:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    263:300:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    731:733:int getBackgroundTint(android.view.View) -> getBackgroundTint
    95:96:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    111:114:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    125:187:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    723:724:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
    165:165:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    178:182:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    168:172:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$2:
    338:338:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    341:341:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$3:
    349:349:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    358:358:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    353:353:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$4:
    401:401:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    406:408:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
    784:784:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
    51:49:void <init>() -> <init>
    54:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    108:121:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    59:59:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    76:83:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    66:66:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    84:84:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    94:95:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    87:88:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
    49:49:void <init>() -> <init>
    52:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:67:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    75:76:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    80:121:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    67:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    90:97:void <init>(java.lang.Class,int,int) -> <init>
    142:153:java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    44:44:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    124:137:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    158:162:java.lang.String toString() -> toString
    102:103:java.lang.Class verifyDateType(java.lang.Class) -> verifyDateType
    44:44:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    113:119:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    44:45:void <init>(java.lang.reflect.Field) -> <init>
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    37:31:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:void <init>(java.lang.String,int,com.google.gson.FieldNamingPolicy$1) -> <init>
    147:155:java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    163:176:java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    31:31:com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    31:31:com.google.gson.FieldNamingPolicy[] values() -> values
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    37:37:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    53:53:void <init>(java.lang.String,int) -> <init>
    55:55:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    72:72:void <init>(java.lang.String,int) -> <init>
    74:74:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    90:90:void <init>(java.lang.String,int) -> <init>
    92:92:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    113:113:void <init>(java.lang.String,int) -> <init>
    115:115:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$6 -> com.google.gson.FieldNamingPolicy$6:
    136:136:void <init>(java.lang.String,int) -> <init>
    138:138:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    114:114:void <clinit>() -> <clinit>
    202:280:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List) -> <init>
    904:908:void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    388:396:com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter) -> atomicLongAdapter
    400:423:com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter) -> atomicLongArrayAdapter
    358:359:void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    311:313:com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    335:337:com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    817:818:java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    845:846:java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    896:898:java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    925:954:java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    434:472:com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    556:556:com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    528:546:com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    366:369:com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    767:768:com.google.gson.stream.JsonReader newJsonReader(java.io.Reader) -> newJsonReader
    752:759:com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    616:618:java.lang.String toJson(java.lang.Object) -> toJson
    637:639:java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    682:685:void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    696:715:void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    726:728:java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    741:744:void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    777:795:void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    1033:1038:java.lang.String toString() -> toString
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    313:313:void <init>(com.google.gson.Gson) -> <init>
    313:313:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    315:319:java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    313:313:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    323:328:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    337:337:void <init>(com.google.gson.Gson) -> <init>
    337:337:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    339:343:java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    337:337:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    347:352:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    369:369:void <init>() -> <init>
    369:369:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    371:375:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    369:369:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    379:382:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    388:388:void <init>(com.google.gson.TypeAdapter) -> <init>
    388:388:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    393:394:java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader) -> read
    388:388:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    390:390:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    400:400:void <init>(com.google.gson.TypeAdapter) -> <init>
    400:400:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    409:419:java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader) -> read
    400:400:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    402:406:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    1006:1006:void <init>() -> <init>
    1017:1018:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1010:1011:void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    1024:1025:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    104:96:void <init>() -> <init>
    611:625:void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
    587:597:com.google.gson.Gson create() -> create
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    39:40:void <init>() -> <init>
    106:108:void add(com.google.gson.JsonElement) -> add
    377:377:boolean equals(java.lang.Object) -> equals
    223:226:java.lang.String getAsString() -> getAsString
    382:382:int hashCode() -> hashCode
    182:182:java.util.Iterator iterator() -> iterator
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    33:33:void <init>() -> <init>
    104:107:com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    88:91:com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    120:123:com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    179:179:java.lang.String getAsString() -> getAsString
    47:47:boolean isJsonArray() -> isJsonArray
    75:75:boolean isJsonNull() -> isJsonNull
    56:56:boolean isJsonObject() -> isJsonObject
    65:65:boolean isJsonPrimitive() -> isJsonPrimitive
    313:319:java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    29:29:void <init>(java.lang.String) -> <init>
    33:33:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:43:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    32:32:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    65:65:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    32:33:void <init>() -> <init>
    58:58:void add(java.lang.String,com.google.gson.JsonElement) -> add
    123:123:java.util.Set entrySet() -> entrySet
    197:198:boolean equals(java.lang.Object) -> equals
    162:162:com.google.gson.JsonElement get(java.lang.String) -> get
    203:203:int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    42:42:void <init>(java.lang.String) -> <init>
    52:52:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    62:62:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    37:37:void <init>() -> <init>
    98:98:com.google.gson.JsonElement parse(java.lang.String) -> parse
    59:66:com.google.gson.JsonElement parseReader(java.io.Reader) -> parseReader
    82:92:com.google.gson.JsonElement parseReader(com.google.gson.stream.JsonReader) -> parseReader
    47:47:com.google.gson.JsonElement parseString(java.lang.String) -> parseString
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    42:43:void <init>(java.lang.Boolean) -> <init>
    51:52:void <init>(java.lang.Number) -> <init>
    60:61:void <init>(java.lang.String) -> <init>
    263:280:boolean equals(java.lang.Object) -> equals
    101:105:boolean getAsBoolean() -> getAsBoolean
    161:161:double getAsDouble() -> getAsDouble
    228:228:int getAsInt() -> getAsInt
    206:206:long getAsLong() -> getAsLong
    125:125:java.lang.Number getAsNumber() -> getAsNumber
    144:149:java.lang.String getAsString() -> getAsString
    243:255:int hashCode() -> hashCode
    91:91:boolean isBoolean() -> isBoolean
    288:290:boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    114:114:boolean isNumber() -> isNumber
    134:134:boolean isString() -> isString
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    30:30:void <init>(java.lang.String) -> <init>
    34:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:45:void <init>(java.lang.Throwable) -> <init>
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    34:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:void <init>(java.lang.String,int,com.google.gson.LongSerializationPolicy$1) -> <init>
    27:27:com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    27:27:com.google.gson.LongSerializationPolicy[] values() -> values
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    34:34:void <init>(java.lang.String,int) -> <init>
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    45:45:void <init>(java.lang.String,int) -> <init>
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    119:119:void <init>() -> <init>
    186:186:com.google.gson.TypeAdapter nullSafe() -> nullSafe
    233:237:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    186:186:void <init>(com.google.gson.TypeAdapter) -> <init>
    195:199:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    189:191:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    46:46:void checkArgument(boolean) -> checkArgument
    39:39:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    40:40:void <clinit>() -> <clinit>
    64:64:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    104:119:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    457:457:void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    450:452:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    162:162:boolean equal(java.lang.Object,java.lang.Object) -> equal
    173:215:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    292:294:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    302:310:java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    242:260:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    323:331:java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    128:156:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    278:283:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    224:224:int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    437:442:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    54:54:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    337:337:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    344:406:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection) -> resolve
    420:430:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    75:80:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    90:95:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    228:228:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    527:528:void <init>(java.lang.reflect.Type) -> <init>
    536:537:boolean equals(java.lang.Object) -> equals
    532:532:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    541:541:int hashCode() -> hashCode
    545:545:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    465:480:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    497:498:boolean equals(java.lang.Object) -> equals
    485:485:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    493:493:java.lang.reflect.Type getOwnerType() -> getOwnerType
    489:489:java.lang.reflect.Type getRawType() -> getRawType
    502:504:int hashCode() -> hashCode
    508:518:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    560:575:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    588:589:boolean equals(java.lang.Object) -> equals
    584:584:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    580:580:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    594:595:int hashCode() -> hashCode
    599:604:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    53:54:void <init>(java.util.Map) -> <init>
    58:96:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    101:105:com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    136:207:com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    220:220:com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    236:236:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    66:66:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    68:68:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    188:188:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    190:190:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    194:194:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    196:196:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    201:201:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    203:203:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$13 -> com.google.gson.internal.ConstructorConstructor$13:
    207:207:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    209:209:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$14 -> com.google.gson.internal.ConstructorConstructor$14:
    220:221:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.Class,java.lang.reflect.Type) -> <init>
    225:228:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    78:78:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    80:80:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    105:105:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Constructor) -> <init>
    110:113:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    138:138:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    140:140:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    144:144:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Type) -> <init>
    147:155:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    160:160:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    162:162:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    166:166:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    168:168:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    172:172:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    174:174:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    182:182:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    184:184:java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    52:52:void <clinit>() -> <clinit>
    50:59:void <init>() -> <init>
    50:50:java.lang.Object clone() -> clone
    63:65:com.google.gson.internal.Excluder clone() -> clone
    112:122:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    210:211:boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    194:202:boolean excludeClassChecks(java.lang.Class) -> excludeClassChecks
    215:217:boolean excludeClassInStrategy(java.lang.Class,boolean) -> excludeClassInStrategy
    152:184:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    225:226:boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    230:230:boolean isInnerClass(java.lang.Class) -> isInnerClass
    234:234:boolean isStatic(java.lang.Class) -> isStatic
    243:244:boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    253:254:boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    238:238:boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    122:122:void <init>(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    143:146:com.google.gson.TypeAdapter delegate() -> delegate
    127:131:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    135:139:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.JavaVersion -> com.google.gson.internal.JavaVersion:
    26:26:void <clinit>() -> <clinit>
    29:30:int determineMajorJavaVersion() -> determineMajorJavaVersion
    62:71:int extractBeginningInt(java.lang.String) -> extractBeginningInt
    35:37:int getMajorJavaVersion(java.lang.String) -> getMajorJavaVersion
    81:81:int getMajorJavaVersion() -> getMajorJavaVersion
    88:88:boolean isJava9OrLater() -> isJava9OrLater
    48:51:int parseDotted(java.lang.String) -> parseDotted
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    25:25:void <init>() -> <init>
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    30:31:void <init>(java.lang.String) -> <init>
    63:63:double doubleValue() -> doubleValue
    90:92:boolean equals(java.lang.Object) -> equals
    58:58:float floatValue() -> floatValue
    82:82:int hashCode() -> hashCode
    37:42:int intValue() -> intValue
    50:52:long longValue() -> longValue
    68:68:java.lang.String toString() -> toString
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    38:40:void <clinit>() -> <clinit>
    60:60:void <init>() -> <init>
    71:74:void <init>(java.util.Comparator) -> <init>
    101:107:void clear() -> clear
    87:87:boolean containsKey(java.lang.Object) -> containsKey
    430:431:java.util.Set entrySet() -> entrySet
    208:208:boolean equal(java.lang.Object,java.lang.Object) -> equal
    122:178:com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    202:203:com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    186:186:com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    82:83:java.lang.Object get(java.lang.Object) -> get
    435:436:java.util.Set keySet() -> keySet
    94:92:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    312:311:void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    111:112:java.lang.Object remove(java.lang.Object) -> remove
    219:273:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    277:279:com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    285:299:void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    374:394:void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    402:422:void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    78:78:int size() -> size
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    40:40:void <init>() -> <init>
    40:40:int compare(java.lang.Object,java.lang.Object) -> compare
    42:42:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    560:560:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    591:591:void clear() -> clear
    574:574:boolean contains(java.lang.Object) -> contains
    566:566:java.util.Iterator iterator() -> iterator
    578:586:boolean remove(java.lang.Object) -> remove
    562:562:int size() -> size
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    566:566:void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet) -> <init>
    566:566:java.lang.Object next() -> next
    568:568:java.util.Map$Entry next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    595:595:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    617:617:void clear() -> clear
    609:609:boolean contains(java.lang.Object) -> contains
    601:601:java.util.Iterator iterator() -> iterator
    613:613:boolean remove(java.lang.Object) -> remove
    597:597:int size() -> size
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    601:601:void <init>(com.google.gson.internal.LinkedTreeMap$KeySet) -> <init>
    603:603:java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    531:529:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    535:535:boolean hasNext() -> hasNext
    539:541:com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    551:552:void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    450:452:void <init>() -> <init>
    456:463:void <init>(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> <init>
    482:485:boolean equals(java.lang.Object) -> equals
    504:507:com.google.gson.internal.LinkedTreeMap$Node first() -> first
    467:467:java.lang.Object getKey() -> getKey
    471:471:java.lang.Object getValue() -> getValue
    491:492:int hashCode() -> hashCode
    517:520:com.google.gson.internal.LinkedTreeMap$Node last() -> last
    475:476:java.lang.Object setValue(java.lang.Object) -> setValue
    496:496:java.lang.String toString() -> toString
com.google.gson.internal.PreJava9DateFormatProvider -> com.google.gson.internal.PreJava9DateFormatProvider:
    69:69:java.lang.String getDatePartOfDateTimePattern(int) -> getDatePartOfDateTimePattern
    83:83:java.lang.String getTimePartOfDateTimePattern(int) -> getTimePartOfDateTimePattern
    39:40:java.text.DateFormat getUSDateTimeFormat(int,int) -> getUSDateTimeFormat
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    34:34:boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    66:74:java.lang.Class wrap(java.lang.Class) -> wrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    46:58:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    72:72:void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    76:76:java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    87:88:void <init>(java.lang.Appendable) -> <init>
    92:93:void write(char[],int,int) -> write
    97:97:void write(int) -> write
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    106:106:void <init>() -> <init>
    112:112:char charAt(int) -> charAt
    109:109:int length() -> length
    115:115:java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    31:31:void <init>() -> <init>
    115:117:void assertInstantiable(java.lang.Class) -> assertInstantiable
    40:101:com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    45:45:void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    49:50:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    69:69:void <init>(java.lang.reflect.Method,int) -> <init>
    73:74:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    89:89:void <init>(java.lang.reflect.Method) -> <init>
    93:94:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    101:101:void <init>() -> <init>
    104:104:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    39:39:void <clinit>() -> <clinit>
    57:60:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class) -> <init>
    64:80:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    88:97:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    39:40:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    45:57:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    67:70:void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    61:61:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    74:85:java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    61:61:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    91:99:void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    47:47:void <clinit>() -> <clinit>
    60:66:void <init>() -> <init>
    79:87:java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    46:46:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    71:75:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    46:46:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    93:98:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    47:47:void <init>() -> <init>
    50:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
    37:38:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    44:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    55:78:com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> getTypeAdapter
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    39:47:void <clinit>() -> <clinit>
    72:75:void beginArray() -> beginArray
    88:90:void beginObject() -> beginObject
    253:254:void close() -> close
    79:83:void endArray() -> endArray
    94:98:void endObject() -> endObject
    161:163:void expect(com.google.gson.stream.JsonToken) -> expect
    295:310:java.lang.String getPath() -> getPath
    103:104:boolean hasNext() -> hasNext
    314:314:java.lang.String locationString() -> locationString
    191:194:boolean nextBoolean() -> nextBoolean
    208:219:double nextDouble() -> nextDouble
    239:247:int nextInt() -> nextInt
    225:233:long nextLong() -> nextLong
    168:173:java.lang.String nextName() -> nextName
    200:203:void nextNull() -> nextNull
    178:185:java.lang.String nextString() -> nextString
    108:146:com.google.gson.stream.JsonToken peek() -> peek
    151:151:java.lang.Object peekStack() -> peekStack
    155:156:java.lang.Object popStack() -> popStack
    277:281:void promoteNameToValue() -> promoteNameToValue
    285:291:void push(java.lang.Object) -> push
    258:268:void skipValue() -> skipValue
    273:273:java.lang.String toString() -> toString
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    39:39:void <init>() -> <init>
    44:44:void close() -> close
    41:41:int read(char[],int,int) -> read
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    34:46:void <clinit>() -> <clinit>
    58:55:void <init>() -> <init>
    95:97:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    114:116:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    203:204:void close() -> close
    102:103:com.google.gson.stream.JsonWriter endArray() -> endArray
    121:122:com.google.gson.stream.JsonWriter endObject() -> endObject
    65:66:com.google.gson.JsonElement get() -> get
    133:134:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    153:153:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    72:72:com.google.gson.JsonElement peek() -> peek
    76:89:void put(com.google.gson.JsonElement) -> put
    146:148:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    158:158:com.google.gson.stream.JsonWriter value(boolean) -> value
    164:166:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    179:179:com.google.gson.stream.JsonWriter value(long) -> value
    185:195:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    34:34:void <init>() -> <init>
    42:42:void close() -> close
    39:39:void flush() -> flush
    36:36:void write(char[],int,int) -> write
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    110:112:void <init>(com.google.gson.internal.ConstructorConstructor,boolean) -> <init>
    116:131:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    140:141:com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    152:157:void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    246:260:java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    145:145:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    161:193:java.util.Map read(com.google.gson.stream.JsonReader) -> read
    145:145:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    200:241:void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    38:38:void <clinit>() -> <clinit>
    50:51:void <init>(com.google.gson.Gson) -> <init>
    55:63:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    96:107:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    38:38:void <init>() -> <init>
    41:42:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    56:56:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    57:61:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory) -> <init>
    95:102:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    108:120:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    65:65:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    69:69:boolean excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder) -> excludeField
    145:177:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
    74:89:java.util.List getFieldNames(java.lang.reflect.Field) -> getFieldNames
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    120:120:void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,java.lang.reflect.Field,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean) -> <init>
    131:133:void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
    124:127:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    137:138:boolean writeField(java.lang.Object) -> writeField
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    201:203:void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    207:226:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    236:249:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    187:190:void <init>(java.lang.String,boolean,boolean) -> <init>
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    39:39:void <clinit>() -> <clinit>
    38:47:void <init>() -> <init>
    38:38:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    51:59:java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    38:38:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    65:66:void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:43:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    41:41:void <clinit>() -> <clinit>
    40:48:void <init>() -> <init>
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    51:59:java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    40:40:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    64:65:void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    41:41:void <init>() -> <init>
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TreeTypeAdapter -> com.google.gson.internal.bind.TreeTypeAdapter:
    53:58:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory) -> <init>
    86:89:com.google.gson.TypeAdapter delegate() -> delegate
    62:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    73:82:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl -> com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
    153:153:void <init>(com.google.gson.internal.bind.TreeTypeAdapter) -> <init>
    153:153:void <init>(com.google.gson.internal.bind.TreeTypeAdapter,com.google.gson.internal.bind.TreeTypeAdapter$1) -> <init>
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    33:36:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    76:78:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
    41:41:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    53:69:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    69:808:void <clinit>() -> <clinit>
    834:834:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    847:847:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    862:862:com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    881:881:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    77:77:java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    69:69:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    72:73:void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    265:265:void <init>() -> <init>
    265:265:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    267:281:java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader) -> read
    265:265:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    286:290:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    296:296:void <init>() -> <init>
    296:296:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    299:306:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    296:296:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    311:311:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    315:315:void <init>() -> <init>
    315:315:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    318:322:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    315:315:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    326:326:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    330:330:void <init>() -> <init>
    330:330:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    333:337:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    330:330:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    341:341:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    345:345:void <init>() -> <init>
    345:345:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    348:355:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    345:345:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    362:362:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    368:368:void <init>() -> <init>
    368:368:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    371:377:java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    368:368:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    383:383:void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    390:390:void <init>() -> <init>
    390:390:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    393:402:java.lang.String read(com.google.gson.stream.JsonReader) -> read
    390:390:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    406:406:void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    410:410:void <init>() -> <init>
    410:410:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    412:419:java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    410:410:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    424:424:void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    428:428:void <init>() -> <init>
    428:428:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    430:437:java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    428:428:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    442:442:void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    448:448:void <init>() -> <init>
    448:448:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    451:455:java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    448:448:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    459:459:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    84:84:void <init>() -> <init>
    84:84:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    86:117:java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    84:84:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    122:127:void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    466:466:void <init>() -> <init>
    466:466:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    469:473:java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    466:466:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    477:477:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    484:484:void <init>() -> <init>
    484:484:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    487:492:java.net.URL read(com.google.gson.stream.JsonReader) -> read
    484:484:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    496:496:void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    502:502:void <init>() -> <init>
    502:502:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    505:513:java.net.URI read(com.google.gson.stream.JsonReader) -> read
    502:502:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    518:518:void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    524:524:void <init>() -> <init>
    524:524:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    527:532:java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    524:524:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    536:536:void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    543:543:void <init>() -> <init>
    543:543:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    546:550:java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    543:543:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    554:554:void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    560:560:void <init>() -> <init>
    560:560:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    563:563:java.util.Currency read(com.google.gson.stream.JsonReader) -> read
    560:560:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    567:567:void write(com.google.gson.stream.JsonWriter,java.util.Currency) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    572:572:void <init>() -> <init>
    575:580:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$26$1 -> com.google.gson.internal.bind.TypeAdapters$26$1:
    580:580:void <init>(com.google.gson.internal.bind.TypeAdapters$26,com.google.gson.TypeAdapter) -> <init>
    580:580:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    582:583:java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    580:580:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    587:587:void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    593:593:void <init>() -> <init>
    593:593:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    603:632:java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    593:593:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    638:654:void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    661:661:void <init>() -> <init>
    661:661:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    664:687:java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    661:661:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    692:692:void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    698:698:void <init>() -> <init>
    698:698:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    700:705:com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    698:698:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    737:738:void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    133:133:void <init>() -> <init>
    133:133:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    136:144:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    133:133:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    148:148:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    808:808:void <init>() -> <init>
    811:818:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    834:834:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    837:837:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    840:840:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$33 -> com.google.gson.internal.bind.TypeAdapters$33:
    847:847:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    850:851:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    854:855:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$34 -> com.google.gson.internal.bind.TypeAdapters$34:
    862:862:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    865:866:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    869:870:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$35 -> com.google.gson.internal.bind.TypeAdapters$35:
    881:881:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    884:888:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    904:904:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$35$1 -> com.google.gson.internal.bind.TypeAdapters$35$1:
    888:888:void <init>(com.google.gson.internal.bind.TypeAdapters$35,java.lang.Class) -> <init>
    894:897:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    890:890:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$36 -> com.google.gson.internal.bind.TypeAdapters$36:
    92:92:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    156:156:void <init>() -> <init>
    156:156:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    158:162:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    156:156:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    166:166:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    173:173:void <init>() -> <init>
    173:173:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    176:184:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    173:173:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    189:189:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    196:196:void <init>() -> <init>
    196:196:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    199:206:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    196:196:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    211:211:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    218:218:void <init>() -> <init>
    218:218:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    221:228:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    218:218:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    233:233:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    239:239:void <init>() -> <init>
    239:239:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    242:244:java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader) -> read
    239:239:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    248:248:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    254:254:void <init>() -> <init>
    254:254:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    256:256:java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader) -> read
    254:254:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    259:259:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    777:792:void <init>(java.lang.Class) -> <init>
    773:773:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    796:800:java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    773:773:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    804:804:void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
com.google.gson.internal.bind.util.ISO8601Utils -> com.google.gson.internal.bind.util.ISO8601Utils:
    30:30:void <clinit>() -> <clinit>
    288:288:boolean checkOffset(java.lang.String,int,char) -> checkOffset
    345:349:int indexOfNonDigit(java.lang.String,int) -> indexOfNonDigit
    126:276:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    301:302:int parseInt(java.lang.String,int,int) -> parseInt
com.google.gson.internal.reflect.PreJava9ReflectionAccessor -> com.google.gson.internal.reflect.PreJava9ReflectionAccessor:
    26:26:void <init>() -> <init>
    31:31:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
com.google.gson.internal.reflect.ReflectionAccessor -> com.google.gson.internal.reflect.ReflectionAccessor:
    36:36:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    52:52:com.google.gson.internal.reflect.ReflectionAccessor getInstance() -> getInstance
com.google.gson.internal.reflect.UnsafeReflectionAccessor -> com.google.gson.internal.reflect.UnsafeReflectionAccessor:
    31:35:void <init>() -> <init>
    81:81:java.lang.reflect.Field getOverrideField() -> getOverrideField
    70:73:java.lang.Object getUnsafeInstance() -> getUnsafeInstance
    40:46:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
    55:60:boolean makeAccessibleWithUnsafe(java.lang.reflect.AccessibleObject) -> makeAccessibleWithUnsafe
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    61:64:void <init>() -> <init>
    71:74:void <init>(java.lang.reflect.Type) -> <init>
    284:285:boolean equals(java.lang.Object) -> equals
    296:296:com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    303:303:com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
    94:94:java.lang.Class getRawType() -> getRawType
    82:84:java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    101:101:java.lang.reflect.Type getType() -> getType
    280:280:int hashCode() -> hashCode
    289:289:java.lang.String toString() -> toString
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    193:1590:void <clinit>() -> <clinit>
    290:292:void <init>(java.io.Reader) -> <init>
    342:351:void beginArray() -> beginArray
    378:386:void beginObject() -> beginObject
    1404:1405:void checkLenient() -> checkLenient
    1217:1220:void close() -> close
    1572:1586:void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    463:498:int doPeek() -> doPeek
    360:369:void endArray() -> endArray
    395:405:void endObject() -> endObject
    1280:1301:boolean fillBuffer(int) -> fillBuffer
    1464:1487:java.lang.String getPath() -> getPath
    413:415:boolean hasNext() -> hasNext
    334:334:boolean isLenient() -> isLenient
    752:752:boolean isLiteral(char) -> isLiteral
    1454:1456:java.lang.String locationString() -> locationString
    841:854:boolean nextBoolean() -> nextBoolean
    887:917:double nextDouble() -> nextDouble
    1164:1205:int nextInt() -> nextInt
    932:968:long nextLong() -> nextLong
    778:790:java.lang.String nextName() -> nextName
    1323:1392:int nextNonWhitespace(boolean) -> nextNonWhitespace
    865:873:void nextNull() -> nextNull
    988:1032:java.lang.String nextQuotedValue(char) -> nextQuotedValue
    806:826:java.lang.String nextString() -> nextString
    1047:1092:java.lang.String nextUnquotedValue() -> nextUnquotedValue
    424:431:com.google.gson.stream.JsonToken peek() -> peek
    600:639:int peekKeyword() -> peekKeyword
    644:739:int peekNumber() -> peekNumber
    1265:1271:void push(int) -> push
    1500:1545:char readEscapeCharacter() -> readEscapeCharacter
    327:327:void setLenient(boolean) -> setLenient
    1098:1120:void skipQuotedValue(char) -> skipQuotedValue
    1431:1433:boolean skipTo(java.lang.String) -> skipTo
    1415:1419:void skipToEndOfLine() -> skipToEndOfLine
    1126:1150:void skipUnquotedValue() -> skipUnquotedValue
    1231:1261:void skipValue() -> skipValue
    1564:1564:java.io.IOException syntaxError(java.lang.String) -> syntaxError
    1450:1450:java.lang.String toString() -> toString
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    1590:1590:void <init>() -> <init>
    1592:1608:void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    31:25:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    25:25:com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    25:25:com.google.gson.stream.JsonToken[] values() -> values
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    146:162:void <clinit>() -> <clinit>
    198:200:void <init>(java.io.Writer) -> <init>
    611:615:void beforeName() -> beforeName
    628:641:void beforeValue() -> beforeValue
    288:289:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    308:309:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    338:343:com.google.gson.stream.JsonWriter close(int,int,char) -> close
    554:558:void close() -> close
    298:298:com.google.gson.stream.JsonWriter endArray() -> endArray
    318:318:com.google.gson.stream.JsonWriter endObject() -> endObject
    542:543:void flush() -> flush
    278:278:boolean getSerializeNulls() -> getSerializeNulls
    262:262:boolean isHtmlSafe() -> isHtmlSafe
    243:243:boolean isLenient() -> isLenient
    388:386:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    596:602:void newline() -> newline
    445:454:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    326:328:com.google.gson.stream.JsonWriter open(int,char) -> open
    365:366:int peek() -> peek
    355:358:void push(int) -> push
    375:375:void replaceTop(int) -> replaceTop
    254:254:void setHtmlSafe(boolean) -> setHtmlSafe
    214:219:void setIndent(java.lang.String) -> setIndent
    236:236:void setLenient(boolean) -> setLenient
    270:270:void setSerializeNulls(boolean) -> setSerializeNulls
    564:592:void string(java.lang.String) -> string
    414:418:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    464:466:com.google.gson.stream.JsonWriter value(boolean) -> value
    477:481:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    508:510:com.google.gson.stream.JsonWriter value(long) -> value
    523:533:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    399:402:void writeDeferredName() -> writeDeferredName
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    29:29:void <init>(java.lang.String) -> <init>
com.opencsv.CSVIterator -> com.opencsv.CSVIterator:
    21:23:void <init>(com.opencsv.CSVReader) -> <init>
    35:35:boolean hasNext() -> hasNext
    13:13:java.lang.Object next() -> next
    46:50:java.lang.String[] next() -> next
    61:61:void remove() -> remove
com.opencsv.CSVParser -> com.opencsv.CSVParser:
    134:134:void <init>(char,char,char,boolean,boolean) -> <init>
    150:150:void <init>(char,char,char,boolean,boolean,boolean) -> <init>
    167:169:void <init>(char,char,char,boolean,boolean,boolean,com.opencsv.enums.CSVReaderNullFieldIndicator) -> <init>
    239:239:boolean anyCharactersAreTheSame(char,char,char) -> anyCharactersAreTheSame
    391:391:java.lang.String convertEmptyToNullIfNeeded(java.lang.String,boolean) -> convertEmptyToNullIfNeeded
    417:417:boolean inQuotes(boolean) -> inQuotes
    465:465:boolean isCharacterEscapable(char) -> isCharacterEscapable
    453:453:boolean isCharacterEscapeCharacter(char) -> isCharacterEscapeCharacter
    443:443:boolean isCharacterQuoteCharacter(char) -> isCharacterQuoteCharacter
    482:482:boolean isNextCharacterEscapable(java.lang.String,boolean,int) -> isNextCharacterEscapable
    431:431:boolean isNextCharacterEscapedQuote(java.lang.String,boolean,int) -> isNextCharacterEscapedQuote
    257:257:boolean isPending() -> isPending
    296:386:java.lang.String[] parseLine(java.lang.String,boolean) -> parseLine
    270:270:java.lang.String[] parseLineMulti(java.lang.String) -> parseLineMulti
    398:398:boolean shouldConvertEmptyToNull(boolean) -> shouldConvertEmptyToNull
com.opencsv.CSVParser$1 -> com.opencsv.CSVParser$1:
    398:398:void <clinit>() -> <clinit>
com.opencsv.CSVParser$StringFragmentCopier -> com.opencsv.CSVParser$StringFragmentCopier:
    512:513:void <init>(java.lang.String) -> <init>
    499:499:int access$000(com.opencsv.CSVParser$StringFragmentCopier) -> access$000
    538:538:void append(java.lang.String) -> append
    542:542:void append(char) -> append
    546:552:void appendPrev() -> appendPrev
    561:565:void clearOutput() -> clearOutput
    517:517:boolean isEmptyInput() -> isEmptyInput
    557:557:boolean isEmptyOutput() -> isEmptyOutput
    525:534:java.lang.StringBuilder materializeBuilder() -> materializeBuilder
    569:570:java.lang.String peekOutput() -> peekOutput
    521:521:char takeInput() -> takeInput
    577:578:java.lang.String takeOutput() -> takeOutput
com.opencsv.CSVReader -> com.opencsv.CSVReader:
    68:68:void <init>(java.io.Reader) -> <init>
    116:116:void <init>(java.io.Reader,char,char,char) -> <init>
    155:155:void <init>(java.io.Reader,char,char,char,int,boolean) -> <init>
    170:170:void <init>(java.io.Reader,char,char,char,int,boolean,boolean) -> <init>
    201:201:void <init>(java.io.Reader,int,com.opencsv.ICSVParser) -> <init>
    213:222:void <init>(java.io.Reader,int,com.opencsv.ICSVParser,boolean,boolean) -> <init>
    402:402:void close() -> close
    323:325:java.lang.String[] combineResultsFromMultipleReads(java.lang.String[],java.lang.String[]) -> combineResultsFromMultipleReads
    337:356:java.lang.String getNextLine() -> getNextLine
    382:388:boolean isClosed() -> isClosed
    412:414:java.util.Iterator iterator() -> iterator
    283:300:java.lang.String[] readNext() -> readNext
    311:311:java.lang.String[] validateResult(java.lang.String[]) -> validateResult
com.opencsv.CSVWriter -> com.opencsv.CSVWriter:
    76:76:void <init>(java.io.Writer) -> <init>
    86:86:void <init>(java.io.Writer,char) -> <init>
    97:97:void <init>(java.io.Writer,char,char) -> <init>
    109:109:void <init>(java.io.Writer,char,char,char) -> <init>
    135:140:void <init>(java.io.Writer,char,char,char,java.lang.String) -> <init>
    410:410:boolean checkCharactersToEscape(char) -> checkCharactersToEscape
    432:433:void close() -> close
    422:422:void flush() -> flush
    395:398:void processCharacter(java.lang.Appendable,char) -> processCharacter
    382:384:void processLine(java.lang.String,java.lang.Appendable) -> processLine
    368:368:boolean stringContainsSpecialCharacters(java.lang.String) -> stringContainsSpecialCharacters
    295:295:void writeNext(java.lang.String[],boolean) -> writeNext
    319:349:void writeNext(java.lang.String[],boolean,java.lang.Appendable) -> writeNext
com.opencsv.ICSVParser -> com.opencsv.ICSVParser:
    70:70:void <clinit>() -> <clinit>
com.opencsv.enums.CSVReaderNullFieldIndicator -> com.opencsv.enums.CSVReaderNullFieldIndicator:
    13:12:void <clinit>() -> <clinit>
    12:12:void <init>(java.lang.String,int) -> <init>
    12:12:com.opencsv.enums.CSVReaderNullFieldIndicator valueOf(java.lang.String) -> valueOf
    12:12:com.opencsv.enums.CSVReaderNullFieldIndicator[] values() -> values
com.opencsv.stream.reader.LineReader -> com.opencsv.stream.reader.LineReader:
    29:31:void <init>(java.io.BufferedReader,boolean) -> <init>
    41:41:java.lang.String readLine() -> readLine
    45:50:java.lang.String readUntilNewline() -> readUntilNewline
com.razerdp.widget.animatedpieview.AnimatedPieView -> com.razerdp.widget.animatedpieview.AnimatedPieView:
    236:236:void <init>(android.content.Context) -> <init>
    240:240:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    244:245:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    251:252:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    300:300:com.razerdp.widget.animatedpieview.AnimatedPieView applyConfig(com.razerdp.widget.animatedpieview.AnimatedPieViewConfig) -> applyConfig
    334:334:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig getConfig() -> getConfig
    324:324:com.razerdp.widget.animatedpieview.manager.PieManager getManager() -> getManager
    271:272:int getSize(int,int) -> getSize
    329:329:android.content.Context getViewContext() -> getViewContext
    256:258:void initView(android.content.Context,android.util.AttributeSet) -> initView
    352:352:boolean isMainThread() -> isMainThread
    344:347:void onCallInvalidate() -> onCallInvalidate
    290:290:void onDraw(android.graphics.Canvas) -> onDraw
    263:264:void onMeasure(int,int) -> onMeasure
    295:296:void onSizeChanged(int,int,int,int) -> onSizeChanged
    319:319:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    305:305:void start() -> start
    309:311:void start(com.razerdp.widget.animatedpieview.AnimatedPieViewConfig) -> start
com.razerdp.widget.animatedpieview.AnimatedPieViewConfig -> com.razerdp.widget.animatedpieview.AnimatedPieViewConfig:
    55:74:void <clinit>() -> <clinit>
    116:116:void <init>() -> <init>
    119:122:void <init>(com.razerdp.widget.animatedpieview.AnimatedPieViewConfig) -> <init>
    318:318:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig addData(com.razerdp.widget.animatedpieview.data.IPieInfo) -> addData
    323:326:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig addData(com.razerdp.widget.animatedpieview.data.IPieInfo,boolean) -> addData
    219:219:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig animOnTouch(boolean) -> animOnTouch
    204:204:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig animatePie(boolean) -> animatePie
    168:168:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig autoDescStringFormat(java.lang.String) -> autoDescStringFormat
    173:173:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig autoSize(boolean) -> autoSize
    214:214:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig canTouch(boolean) -> canTouch
    283:313:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig copyFrom(com.razerdp.widget.animatedpieview.AnimatedPieViewConfig) -> copyFrom
    259:261:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig cubicGuide(boolean) -> cubicGuide
    194:194:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig drawText(boolean) -> drawText
    143:143:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig duration(long) -> duration
    153:153:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig floatDownDuration(long) -> floatDownDuration
    163:163:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig floatExpandAngle(float) -> floatExpandAngle
    229:229:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig floatExpandSize(float) -> floatExpandSize
    158:158:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig floatShadowRadius(float) -> floatShadowRadius
    148:148:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig floatUpDuration(long) -> floatUpDuration
    239:239:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig focusAlpha(int) -> focusAlpha
    234:234:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig focusAlphaType(int) -> focusAlphaType
    461:461:android.view.animation.Interpolator getAnimationInterpolator() -> getAnimationInterpolator
    375:375:java.lang.String getAutoDescStringFormat() -> getAutoDescStringFormat
    331:331:java.util.List getDatas() -> getDatas
    355:355:long getDuration() -> getDuration
    363:363:long getFloatDownDuration() -> getFloatDownDuration
    371:371:float getFloatExpandAngle() -> getFloatExpandAngle
    423:423:float getFloatExpandSize() -> getFloatExpandSize
    367:367:float getFloatShadowRadius() -> getFloatShadowRadius
    359:359:long getFloatUpDuration() -> getFloatUpDuration
    432:432:int getFocusAlpha() -> getFocusAlpha
    428:428:int getFocusAlphaType() -> getFocusAlphaType
    445:445:int getGuideLineMarginStart() -> getGuideLineMarginStart
    453:453:int getGuideLineWidth() -> getGuideLineWidth
    441:441:int getGuidePointRadius() -> getGuidePointRadius
    383:383:float getPieRadius() -> getPieRadius
    387:387:float getPieRadiusRatio() -> getPieRadiusRatio
    419:419:com.razerdp.widget.animatedpieview.callback.OnPieSelectListener getSelectListener() -> getSelectListener
    399:399:float getSplitAngle() -> getSplitAngle
    351:351:float getStartAngle() -> getStartAngle
    347:347:int getStrokeWidth() -> getStrokeWidth
    437:437:int getTextGravity() -> getTextGravity
    457:457:int getTextMargin() -> getTextMargin
    391:391:float getTextSize() -> getTextSize
    254:254:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig guideLineMarginStart(int) -> guideLineMarginStart
    267:267:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig guideLineWidth(int) -> guideLineWidth
    249:249:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig guidePointRadius(int) -> guidePointRadius
    277:277:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig interpolator(android.view.animation.Interpolator) -> interpolator
    415:415:boolean isAnimTouch() -> isAnimTouch
    403:403:boolean isAnimatePie() -> isAnimatePie
    379:379:boolean isAutoSize() -> isAutoSize
    411:411:boolean isCanTouch() -> isCanTouch
    395:395:boolean isDrawText() -> isDrawText
    407:407:boolean isStrokeMode() -> isStrokeMode
    178:179:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig pieRadius(float) -> pieRadius
    183:184:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig pieRadiusRatio(float) -> pieRadiusRatio
    224:224:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig selectListener(com.razerdp.widget.animatedpieview.callback.OnPieSelectListener) -> selectListener
    199:199:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig splitAngle(float) -> splitAngle
    132:132:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig startAngle(float) -> startAngle
    209:209:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig strokeMode(boolean) -> strokeMode
    127:127:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig strokeWidth(int) -> strokeWidth
    244:244:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig textGravity(int) -> textGravity
    272:272:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig textMargin(int) -> textMargin
    189:189:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig textSize(float) -> textSize
com.razerdp.widget.animatedpieview.data.PieOption -> com.razerdp.widget.animatedpieview.data.PieOption:
    48:48:void <clinit>() -> <clinit>
    32:34:void <init>(android.os.Parcel) -> <init>
    61:61:android.graphics.Bitmap getLabelIcon() -> getLabelIcon
    79:79:int getLabelPadding() -> getLabelPadding
    70:70:int getLabelPosition() -> getLabelPosition
    39:40:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.razerdp.widget.animatedpieview.data.PieOption$1 -> com.razerdp.widget.animatedpieview.data.PieOption$1:
    48:48:void <init>() -> <init>
    48:48:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    51:51:com.razerdp.widget.animatedpieview.data.PieOption createFromParcel(android.os.Parcel) -> createFromParcel
    48:48:java.lang.Object[] newArray(int) -> newArray
    56:56:com.razerdp.widget.animatedpieview.data.PieOption[] newArray(int) -> newArray
com.razerdp.widget.animatedpieview.data.SimplePieInfo -> com.razerdp.widget.animatedpieview.data.SimplePieInfo:
    16:16:void <init>() -> <init>
    23:26:void <init>(double,int,java.lang.String) -> <init>
    56:56:int getColor() -> getColor
    61:61:java.lang.String getDesc() -> getDesc
    67:67:com.razerdp.widget.animatedpieview.data.PieOption getPieOpeion() -> getPieOpeion
    51:51:double getValue() -> getValue
    38:38:void setDesc(java.lang.String) -> setDesc
com.razerdp.widget.animatedpieview.manager.PieManager -> com.razerdp.widget.animatedpieview.manager.PieManager:
    35:41:void <init>(com.razerdp.widget.animatedpieview.IPieView) -> <init>
    60:60:float getDrawHeight() -> getDrawHeight
    56:56:float getDrawWidth() -> getDrawWidth
    68:74:android.graphics.Rect measureTextBounds(java.lang.String,int) -> measureTextBounds
    90:91:void registerRender(com.razerdp.widget.animatedpieview.render.BaseRender) -> registerRender
    46:51:void setChartContentRect(int,int,int,int,int,int) -> setChartContentRect
com.razerdp.widget.animatedpieview.render.BaseRender -> com.razerdp.widget.animatedpieview.render.BaseRender:
    23:26:void <init>(com.razerdp.widget.animatedpieview.IPieView) -> <init>
    16:16:boolean access$000(com.razerdp.widget.animatedpieview.render.BaseRender) -> access$000
    16:16:boolean access$002(com.razerdp.widget.animatedpieview.render.BaseRender,boolean) -> access$002
    68:68:void callInvalidate() -> callInvalidate
    30:31:void draw(android.graphics.Canvas) -> draw
    73:76:void handlePrepareFinish(com.razerdp.widget.animatedpieview.render.BaseRender$OnPrepareFinishListener) -> handlePrepareFinish
    35:35:void prepare() -> prepare
    39:41:void prepare(com.razerdp.widget.animatedpieview.render.BaseRender$OnPrepareFinishListener) -> prepare
com.razerdp.widget.animatedpieview.render.BaseRender$1 -> com.razerdp.widget.animatedpieview.render.BaseRender$1:
    41:41:void <init>(com.razerdp.widget.animatedpieview.render.BaseRender,com.razerdp.widget.animatedpieview.render.BaseRender$OnPrepareFinishListener) -> <init>
    44:46:void run() -> run
com.razerdp.widget.animatedpieview.render.PieChartRender -> com.razerdp.widget.animatedpieview.render.PieChartRender:
    77:83:void <init>(com.razerdp.widget.animatedpieview.IPieView) -> <init>
    665:665:float absMathCos(double) -> absMathCos
    33:33:boolean access$000(com.razerdp.widget.animatedpieview.render.PieChartRender) -> access$000
    33:33:boolean access$002(com.razerdp.widget.animatedpieview.render.PieChartRender,boolean) -> access$002
    33:33:java.util.List access$1000(com.razerdp.widget.animatedpieview.render.PieChartRender) -> access$1000
    33:33:float access$1100(com.razerdp.widget.animatedpieview.render.PieChartRender) -> access$1100
    33:33:android.graphics.RectF access$1200(com.razerdp.widget.animatedpieview.render.PieChartRender) -> access$1200
    33:33:void access$1300(com.razerdp.widget.animatedpieview.render.PieChartRender,com.razerdp.widget.animatedpieview.render.PieChartRender$DrawMode) -> access$1300
    33:33:com.razerdp.widget.animatedpieview.AnimatedPieViewConfig access$800(com.razerdp.widget.animatedpieview.render.PieChartRender) -> access$800
    33:33:void access$900(com.razerdp.widget.animatedpieview.render.PieChartRender,com.razerdp.widget.animatedpieview.render.PieInfoWrapper,float) -> access$900
    669:672:float angleToProgress(float,com.razerdp.widget.animatedpieview.render.PieInfoWrapper) -> angleToProgress
    538:561:void applyAlphaToPaint(com.razerdp.widget.animatedpieview.render.PieInfoWrapper,android.graphics.Paint) -> applyAlphaToPaint
    440:442:float calculateLabelX(com.razerdp.widget.animatedpieview.data.PieOption,int,float,com.razerdp.widget.animatedpieview.render.PieChartRender$LineDirection,int) -> calculateLabelX
    516:524:com.razerdp.widget.animatedpieview.render.PieChartRender$LineDirection calculateLineGravity(float,float) -> calculateLineGravity
    468:470:float calculateTextStartX(float,float,com.razerdp.widget.animatedpieview.render.PieChartRender$LineDirection,int) -> calculateTextStartX
    485:492:float calculateTextStartY(float,float,com.razerdp.widget.animatedpieview.render.PieChartRender$LineDirection,int) -> calculateTextStartY
    270:280:void drawCachedPie(android.graphics.Canvas,com.razerdp.widget.animatedpieview.render.PieInfoWrapper) -> drawCachedPie
    293:415:void drawText(android.graphics.Canvas,com.razerdp.widget.animatedpieview.render.PieInfoWrapper) -> drawText
    422:425:float fitTextStartXWithLabel(float,int,int,com.razerdp.widget.animatedpieview.render.PieChartRender$LineDirection,com.razerdp.widget.animatedpieview.data.PieOption) -> fitTextStartXWithLabel
    529:531:float getFixTextPos(com.razerdp.widget.animatedpieview.render.PieInfoWrapper) -> getFixTextPos
    626:657:void measurePieRadius(float,float) -> measurePieRadius
    190:202:void onDraw(android.graphics.Canvas) -> onDraw
    107:153:boolean onPrepare() -> onPrepare
    182:183:void onSizeChanged(int,int,int,int,int,int) -> onSizeChanged
    590:590:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    160:164:void prepareAnim() -> prepareAnim
    241:249:void renderAnimaDraw(android.graphics.Canvas) -> renderAnimaDraw
    211:219:void renderDraw(android.graphics.Canvas) -> renderDraw
    233:237:void renderNormalDraw(android.graphics.Canvas) -> renderNormalDraw
    224:228:void renderTouch(android.graphics.Canvas) -> renderTouch
    256:261:void renderTouchDraw(android.graphics.Canvas,com.razerdp.widget.animatedpieview.render.PieInfoWrapper,float) -> renderTouchDraw
    88:102:void reset() -> reset
    601:617:void setCurPie(com.razerdp.widget.animatedpieview.render.PieInfoWrapper,float) -> setCurPie
    621:622:void setDrawMode(com.razerdp.widget.animatedpieview.render.PieChartRender$DrawMode) -> setDrawMode
com.razerdp.widget.animatedpieview.render.PieChartRender$1 -> com.razerdp.widget.animatedpieview.render.PieChartRender$1:
    164:164:void <init>(com.razerdp.widget.animatedpieview.render.PieChartRender) -> <init>
    173:173:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    167:168:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.razerdp.widget.animatedpieview.render.PieChartRender$2 -> com.razerdp.widget.animatedpieview.render.PieChartRender$2:
    340:200:void <clinit>() -> <clinit>
com.razerdp.widget.animatedpieview.render.PieChartRender$DrawMode -> com.razerdp.widget.animatedpieview.render.PieChartRender$DrawMode:
    36:35:void <clinit>() -> <clinit>
    35:35:void <init>(java.lang.String,int) -> <init>
    35:35:com.razerdp.widget.animatedpieview.render.PieChartRender$DrawMode valueOf(java.lang.String) -> valueOf
    35:35:com.razerdp.widget.animatedpieview.render.PieChartRender$DrawMode[] values() -> values
com.razerdp.widget.animatedpieview.render.PieChartRender$LineDirection -> com.razerdp.widget.animatedpieview.render.PieChartRender$LineDirection:
    41:40:void <clinit>() -> <clinit>
    51:52:void <init>(java.lang.String,int,int,int) -> <init>
    40:40:com.razerdp.widget.animatedpieview.render.PieChartRender$LineDirection valueOf(java.lang.String) -> valueOf
    40:40:com.razerdp.widget.animatedpieview.render.PieChartRender$LineDirection[] values() -> values
com.razerdp.widget.animatedpieview.render.PieChartRender$RenderAnimation -> com.razerdp.widget.animatedpieview.render.PieChartRender$RenderAnimation:
    680:680:void <init>(com.razerdp.widget.animatedpieview.render.PieChartRender) -> <init>
    685:687:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    698:704:com.razerdp.widget.animatedpieview.render.PieInfoWrapper findPieinfoWithAngle(float) -> findPieinfoWithAngle
com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper -> com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper:
    736:736:void <init>(com.razerdp.widget.animatedpieview.render.PieChartRender) -> <init>
    739:741:void <init>(com.razerdp.widget.animatedpieview.render.PieChartRender,int) -> <init>
    712:712:void access$100(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper) -> access$100
    712:712:boolean access$200(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper) -> access$200
    712:712:com.razerdp.widget.animatedpieview.render.PieInfoWrapper access$300(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper) -> access$300
    712:712:com.razerdp.widget.animatedpieview.render.PieInfoWrapper access$400(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper) -> access$400
    712:712:float access$500(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper) -> access$500
    712:712:float access$502(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper,float) -> access$502
    712:712:float access$600(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper) -> access$600
    712:712:float access$602(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper,float) -> access$602
    712:712:android.graphics.RectF access$700(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper) -> access$700
    826:836:com.razerdp.widget.animatedpieview.render.PieInfoWrapper findWrapper(float,float) -> findWrapper
    852:856:boolean handleTouch(android.view.MotionEvent) -> handleTouch
    809:821:com.razerdp.widget.animatedpieview.render.PieInfoWrapper pointToPieInfoWrapper(float,float) -> pointToPieInfoWrapper
    766:784:void prepare() -> prepare
    799:805:android.graphics.Paint prepareTouchPaint(com.razerdp.widget.animatedpieview.render.PieInfoWrapper) -> prepareTouchPaint
    745:762:void reset() -> reset
    794:795:void setCenter() -> setCenter
    844:845:void setTouchBounds(float) -> setTouchBounds
com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper$1 -> com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper$1:
    773:773:void <init>(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper) -> <init>
    776:777:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper$2 -> com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper$2:
    784:784:void <init>(com.razerdp.widget.animatedpieview.render.PieChartRender$TouchHelper) -> <init>
    787:788:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.razerdp.widget.animatedpieview.render.PieInfoWrapper -> com.razerdp.widget.animatedpieview.render.PieInfoWrapper:
    223:223:void <clinit>() -> <clinit>
    49:51:void <init>(com.razerdp.widget.animatedpieview.data.IPieInfo) -> <init>
    172:185:float calculateDegree(float,double,com.razerdp.widget.animatedpieview.AnimatedPieViewConfig) -> calculateDegree
    239:239:boolean contains(float) -> contains
    244:260:boolean containsTouch(float) -> containsTouch
    214:218:boolean equals(java.lang.Object) -> equals
    227:232:java.lang.String generateId() -> generateId
    100:101:android.graphics.Paint getAlphaDrawPaint() -> getAlphaDrawPaint
    139:139:java.lang.String getDesc() -> getDesc
    96:96:android.graphics.Paint getDrawPaint() -> getDrawPaint
    115:115:float getFromAngle() -> getFromAngle
    148:168:android.graphics.Bitmap getIcon(int,int) -> getIcon
    92:92:android.graphics.Paint getIconPaint() -> getIconPaint
    58:58:java.lang.String getId() -> getId
    105:106:android.graphics.Path getLinePath() -> getLinePath
    110:111:android.graphics.Path getLinePathMeasure() -> getLinePathMeasure
    119:119:float getMiddleAngle() -> getMiddleAngle
    88:88:com.razerdp.widget.animatedpieview.data.IPieInfo getPieInfo() -> getPieInfo
    143:143:com.razerdp.widget.animatedpieview.data.PieOption getPieOption() -> getPieOption
    197:197:com.razerdp.widget.animatedpieview.render.PieInfoWrapper getPreWrapper() -> getPreWrapper
    127:127:float getSweepAngle() -> getSweepAngle
    123:123:float getToAngle() -> getToAngle
    189:189:boolean isCached() -> isCached
    63:83:com.razerdp.widget.animatedpieview.render.PieInfoWrapper prepare(com.razerdp.widget.animatedpieview.AnimatedPieViewConfig) -> prepare
    135:135:void setAutoDesc(boolean) -> setAutoDesc
    193:193:void setCached(boolean) -> setCached
    201:201:void setPreWrapper(com.razerdp.widget.animatedpieview.render.PieInfoWrapper) -> setPreWrapper
    268:269:java.lang.String toString() -> toString
com.razerdp.widget.animatedpieview.utils.AnimationCallbackUtils$SimpleAnimationListener -> com.razerdp.widget.animatedpieview.utils.AnimationCallbackUtils$SimpleAnimationListener:
    13:13:void <init>() -> <init>
com.razerdp.widget.animatedpieview.utils.PLog -> com.razerdp.widget.animatedpieview.utils.PLog:
    24:24:void <init>() -> <init>
    62:66:void d(java.lang.String) -> d
    172:183:java.lang.StackTraceElement getCurrentStackTrace() -> getCurrentStackTrace
    188:199:int getStackOffset(java.lang.StackTraceElement[],java.lang.Class) -> getStackOffset
    38:39:java.lang.StackTraceElement getTag() -> getTag
    54:58:void i(java.lang.String) -> i
    29:29:boolean isDebuggable() -> isDebuggable
    128:139:java.lang.String wrapJson(java.lang.String) -> wrapJson
    101:123:java.lang.String wrapLogWithMethodLocation(java.lang.StackTraceElement,java.lang.String) -> wrapLogWithMethodLocation
com.razerdp.widget.animatedpieview.utils.UIUtil -> com.razerdp.widget.animatedpieview.utils.UIUtil:
    24:24:int dip2px(android.content.Context,float) -> dip2px
com.razerdp.widget.animatedpieview.utils.Util -> com.razerdp.widget.animatedpieview.utils.Util:
    11:11:boolean isListEmpty(java.util.List) -> isListEmpty
com.thoughtbot.expandablerecyclerview.ExpandCollapseController -> com.thoughtbot.expandablerecyclerview.ExpandCollapseController:
    18:20:void <init>(com.thoughtbot.expandablerecyclerview.models.ExpandableList,com.thoughtbot.expandablerecyclerview.listeners.ExpandCollapseListener) -> <init>
    29:31:void collapseGroup(com.thoughtbot.expandablerecyclerview.models.ExpandableListPosition) -> collapseGroup
    42:44:void expandGroup(com.thoughtbot.expandablerecyclerview.models.ExpandableListPosition) -> expandGroup
    72:77:boolean toggleGroup(int) -> toggleGroup
com.thoughtbot.expandablerecyclerview.ExpandableRecyclerViewAdapter -> com.thoughtbot.expandablerecyclerview.ExpandableRecyclerViewAdapter:
    29:31:void <init>(java.util.List) -> <init>
    241:241:java.util.List getGroups() -> getGroups
    93:93:int getItemCount() -> getItemCount
    105:105:int getItemViewType(int) -> getItemViewType
    75:82:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    50:54:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    153:156:boolean onGroupClick(int) -> onGroupClick
    136:140:void onGroupCollapsed(int,int) -> onGroupCollapsed
    118:121:void onGroupExpanded(int,int) -> onGroupExpanded
com.thoughtbot.expandablerecyclerview.models.ExpandableGroup -> com.thoughtbot.expandablerecyclerview.models.ExpandableGroup:
    74:74:void <clinit>() -> <clinit>
    15:17:void <init>(java.lang.String,java.util.List) -> <init>
    40:49:void <init>(android.os.Parcel) -> <init>
    29:29:int getItemCount() -> getItemCount
    25:25:java.util.List getItems() -> getItems
    34:34:java.lang.String toString() -> toString
    60:69:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.thoughtbot.expandablerecyclerview.models.ExpandableGroup$1 -> com.thoughtbot.expandablerecyclerview.models.ExpandableGroup$1:
    75:75:void <init>() -> <init>
    75:75:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    78:78:com.thoughtbot.expandablerecyclerview.models.ExpandableGroup createFromParcel(android.os.Parcel) -> createFromParcel
    75:75:java.lang.Object[] newArray(int) -> newArray
    83:83:com.thoughtbot.expandablerecyclerview.models.ExpandableGroup[] newArray(int) -> newArray
com.thoughtbot.expandablerecyclerview.models.ExpandableList -> com.thoughtbot.expandablerecyclerview.models.ExpandableList:
    21:26:void <init>(java.util.List) -> <init>
    205:205:com.thoughtbot.expandablerecyclerview.models.ExpandableGroup getExpandableGroup(com.thoughtbot.expandablerecyclerview.models.ExpandableListPosition) -> getExpandableGroup
    87:91:int getFlattenedGroupIndex(com.thoughtbot.expandablerecyclerview.models.ExpandableListPosition) -> getFlattenedGroupIndex
    70:79:com.thoughtbot.expandablerecyclerview.models.ExpandableListPosition getUnflattenedPosition(int) -> getUnflattenedPosition
    49:50:int getVisibleItemCount() -> getVisibleItemCount
    37:38:int numberOfVisibleItemsInGroup(int) -> numberOfVisibleItemsInGroup
com.thoughtbot.expandablerecyclerview.models.ExpandableListPosition -> com.thoughtbot.expandablerecyclerview.models.ExpandableListPosition:
    21:21:void <clinit>() -> <clinit>
    63:63:void <init>() -> <init>
    137:144:boolean equals(java.lang.Object) -> equals
    111:117:com.thoughtbot.expandablerecyclerview.models.ExpandableListPosition getRecycledOrCreate() -> getRecycledOrCreate
    150:153:int hashCode() -> hashCode
    101:105:com.thoughtbot.expandablerecyclerview.models.ExpandableListPosition obtain(int,int,int,int) -> obtain
    57:60:void resetState() -> resetState
    159:159:java.lang.String toString() -> toString
com.thoughtbot.expandablerecyclerview.viewholders.ChildViewHolder -> com.thoughtbot.expandablerecyclerview.viewholders.ChildViewHolder:
    13:13:void <init>(android.view.View) -> <init>
com.thoughtbot.expandablerecyclerview.viewholders.GroupViewHolder -> com.thoughtbot.expandablerecyclerview.viewholders.GroupViewHolder:
    21:22:void <init>(android.view.View) -> <init>
    27:31:void onClick(android.view.View) -> onClick
    37:37:void setOnGroupClickListener(com.thoughtbot.expandablerecyclerview.listeners.OnGroupClickListener) -> setOnGroupClickListener
dagger.internal.DelegateFactory -> dagger.internal.DelegateFactory:
    28:28:void <init>() -> <init>
    33:34:java.lang.Object get() -> get
    53:56:void setDelegate(javax.inject.Provider,javax.inject.Provider) -> setDelegate
dagger.internal.DoubleCheck -> dagger.internal.DoubleCheck:
    29:29:void <clinit>() -> <clinit>
    34:36:void <init>(javax.inject.Provider) -> <init>
    42:53:java.lang.Object get() -> get
    93:103:dagger.Lazy lazy(javax.inject.Provider) -> lazy
    80:86:javax.inject.Provider provider(javax.inject.Provider) -> provider
    64:69:java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object) -> reentrantCheck
dagger.internal.Preconditions -> dagger.internal.Preconditions:
    95:95:void checkBuilderRequirement(java.lang.Object,java.lang.Class) -> checkBuilderRequirement
    33:33:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    48:48:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
dagger.internal.ProviderOfLazy -> dagger.internal.ProviderOfLazy:
    31:33:void <init>(javax.inject.Provider) -> <init>
    52:52:javax.inject.Provider create(javax.inject.Provider) -> create
    27:27:java.lang.Object get() -> get
    42:42:dagger.Lazy get() -> get
io.socket.backo.Backoff -> io.socket.backo.Backoff:
    14:10:void <init>() -> <init>
    17:26:long duration() -> duration
    54:54:int getAttempts() -> getAttempts
    30:30:void reset() -> reset
    44:44:io.socket.backo.Backoff setFactor(int) -> setFactor
    49:49:io.socket.backo.Backoff setJitter(double) -> setJitter
    39:39:io.socket.backo.Backoff setMax(long) -> setMax
    34:34:io.socket.backo.Backoff setMin(long) -> setMin
io.socket.client.IO -> io.socket.client.IO:
    17:24:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    31:31:void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setDefaultHostnameVerifier
    27:27:void setDefaultSSLContext(javax.net.ssl.SSLContext) -> setDefaultSSLContext
    37:37:io.socket.client.Socket socket(java.lang.String) -> socket
    41:41:io.socket.client.Socket socket(java.lang.String,io.socket.client.IO$Options) -> socket
    45:45:io.socket.client.Socket socket(java.net.URI) -> socket
    57:65:io.socket.client.Socket socket(java.net.URI,io.socket.client.IO$Options) -> socket
io.socket.client.IO$Options -> io.socket.client.IO$Options:
    89:96:void <init>() -> <init>
io.socket.client.Manager -> io.socket.client.Manager:
    22:22:void <clinit>() -> <clinit>
    108:108:void <init>() -> <init>
    112:112:void <init>(java.net.URI) -> <init>
    116:116:void <init>(io.socket.client.Manager$Options) -> <init>
    119:150:void <init>(java.net.URI,io.socket.client.Manager$Options) -> <init>
    20:20:java.util.logging.Logger access$000() -> access$000
    20:20:java.net.URI access$100(io.socket.client.Manager) -> access$100
    20:20:void access$1000(io.socket.client.Manager,java.lang.String) -> access$1000
    20:20:void access$1100(io.socket.client.Manager,byte[]) -> access$1100
    20:20:void access$1200(io.socket.client.Manager) -> access$1200
    20:20:void access$1300(io.socket.client.Manager) -> access$1300
    20:20:void access$1400(io.socket.client.Manager,java.lang.Exception) -> access$1400
    20:20:void access$1500(io.socket.client.Manager,java.lang.String) -> access$1500
    20:20:void access$1600(io.socket.client.Manager,io.socket.parser.Packet) -> access$1600
    20:20:java.util.Set access$1700(io.socket.client.Manager) -> access$1700
    20:20:boolean access$1802(io.socket.client.Manager,boolean) -> access$1802
    20:20:void access$1900(io.socket.client.Manager) -> access$1900
    20:20:io.socket.client.Manager$Options access$200(io.socket.client.Manager) -> access$200
    20:20:io.socket.backo.Backoff access$2000(io.socket.client.Manager) -> access$2000
    20:20:boolean access$2102(io.socket.client.Manager,boolean) -> access$2102
    20:20:void access$2200(io.socket.client.Manager) -> access$2200
    20:20:void access$2300(io.socket.client.Manager) -> access$2300
    20:20:boolean access$300(io.socket.client.Manager) -> access$300
    20:20:boolean access$302(io.socket.client.Manager,boolean) -> access$302
    20:20:void access$400(io.socket.client.Manager) -> access$400
    20:20:void access$500(io.socket.client.Manager) -> access$500
    20:20:void access$600(io.socket.client.Manager,java.lang.String,java.lang.Object[]) -> access$600
    20:20:void access$700(io.socket.client.Manager) -> access$700
    20:20:long access$800(io.socket.client.Manager) -> access$800
    20:20:java.util.Queue access$900(io.socket.client.Manager) -> access$900
    488:497:void cleanup() -> cleanup
    501:512:void close() -> close
    449:452:void destroy(io.socket.client.Socket) -> destroy
    154:156:void emitAll(java.lang.String,java.lang.Object[]) -> emitAll
    234:235:void maybeReconnectOnOpen() -> maybeReconnectOnOpen
    517:524:void onclose(java.lang.String) -> onclose
    399:399:void ondata(java.lang.String) -> ondata
    403:403:void ondata(byte[]) -> ondata
    407:407:void ondecoded(io.socket.parser.Packet) -> ondecoded
    411:412:void onerror(java.lang.Exception) -> onerror
    337:380:void onopen() -> onopen
    389:390:void onping() -> onping
    394:394:void onpong() -> onpong
    589:593:void onreconnect() -> onreconnect
    240:240:io.socket.client.Manager open() -> open
    250:250:io.socket.client.Manager open(io.socket.client.Manager$OpenCallback) -> open
    456:476:void packet(io.socket.parser.Packet) -> packet
    481:483:void processPacketQueue() -> processPacketQueue
    200:200:double randomizationFactor() -> randomizationFactor
    204:206:io.socket.client.Manager randomizationFactor(double) -> randomizationFactor
    529:579:void reconnect() -> reconnect
    170:170:boolean reconnection() -> reconnection
    174:174:io.socket.client.Manager reconnection(boolean) -> reconnection
    179:179:int reconnectionAttempts() -> reconnectionAttempts
    183:183:io.socket.client.Manager reconnectionAttempts(int) -> reconnectionAttempts
    188:188:long reconnectionDelay() -> reconnectionDelay
    192:194:io.socket.client.Manager reconnectionDelay(long) -> reconnectionDelay
    212:212:long reconnectionDelayMax() -> reconnectionDelayMax
    216:218:io.socket.client.Manager reconnectionDelayMax(long) -> reconnectionDelayMax
    422:437:io.socket.client.Socket socket(java.lang.String) -> socket
    224:224:long timeout() -> timeout
    228:228:io.socket.client.Manager timeout(long) -> timeout
    164:165:void updateSocketIds() -> updateSocketIds
io.socket.client.Manager$1 -> io.socket.client.Manager$1:
    250:250:void <init>(io.socket.client.Manager,io.socket.client.Manager$OpenCallback) -> <init>
    253:330:void run() -> run
io.socket.client.Manager$1$1 -> io.socket.client.Manager$1$1:
    264:264:void <init>(io.socket.client.Manager$1,io.socket.client.Manager) -> <init>
    267:267:void call(java.lang.Object[]) -> call
io.socket.client.Manager$1$2 -> io.socket.client.Manager$1$2:
    271:271:void <init>(io.socket.client.Manager$1,io.socket.client.Manager) -> <init>
    274:275:void call(java.lang.Object[]) -> call
io.socket.client.Manager$1$3 -> io.socket.client.Manager$1$3:
    279:279:void <init>(io.socket.client.Manager$1,io.socket.client.Manager) -> <init>
    282:293:void call(java.lang.Object[]) -> call
io.socket.client.Manager$1$4 -> io.socket.client.Manager$1$4:
    303:303:void <init>(io.socket.client.Manager$1,long,io.socket.client.On$Handle,io.socket.engineio.client.Socket,io.socket.client.Manager) -> <init>
    306:306:void run() -> run
io.socket.client.Manager$1$4$1 -> io.socket.client.Manager$1$4$1:
    306:306:void <init>(io.socket.client.Manager$1$4) -> <init>
    309:313:void run() -> run
io.socket.client.Manager$1$5 -> io.socket.client.Manager$1$5:
    319:319:void <init>(io.socket.client.Manager$1,java.util.Timer) -> <init>
    322:322:void destroy() -> destroy
io.socket.client.Manager$10 -> io.socket.client.Manager$10:
    461:461:void <init>(io.socket.client.Manager,io.socket.client.Manager) -> <init>
    464:472:void call(java.lang.Object[]) -> call
io.socket.client.Manager$11 -> io.socket.client.Manager$11:
    544:544:void <init>(io.socket.client.Manager,io.socket.client.Manager) -> <init>
    547:547:void run() -> run
io.socket.client.Manager$11$1 -> io.socket.client.Manager$11$1:
    547:547:void <init>(io.socket.client.Manager$11) -> <init>
    550:560:void run() -> run
io.socket.client.Manager$11$1$1 -> io.socket.client.Manager$11$1$1:
    560:560:void <init>(io.socket.client.Manager$11$1) -> <init>
    564:570:void call(java.lang.Exception) -> call
io.socket.client.Manager$12 -> io.socket.client.Manager$12:
    579:579:void <init>(io.socket.client.Manager,java.util.Timer) -> <init>
    582:582:void destroy() -> destroy
io.socket.client.Manager$2 -> io.socket.client.Manager$2:
    345:345:void <init>(io.socket.client.Manager) -> <init>
    348:352:void call(java.lang.Object[]) -> call
io.socket.client.Manager$3 -> io.socket.client.Manager$3:
    356:356:void <init>(io.socket.client.Manager) -> <init>
    359:359:void call(java.lang.Object[]) -> call
io.socket.client.Manager$4 -> io.socket.client.Manager$4:
    362:362:void <init>(io.socket.client.Manager) -> <init>
    365:365:void call(java.lang.Object[]) -> call
io.socket.client.Manager$5 -> io.socket.client.Manager$5:
    368:368:void <init>(io.socket.client.Manager) -> <init>
    371:371:void call(java.lang.Object[]) -> call
io.socket.client.Manager$6 -> io.socket.client.Manager$6:
    374:374:void <init>(io.socket.client.Manager) -> <init>
    377:377:void call(java.lang.Object[]) -> call
io.socket.client.Manager$7 -> io.socket.client.Manager$7:
    380:380:void <init>(io.socket.client.Manager) -> <init>
    383:383:void call(java.lang.Object[]) -> call
io.socket.client.Manager$8 -> io.socket.client.Manager$8:
    431:431:void <init>(io.socket.client.Manager,io.socket.client.Manager,io.socket.client.Socket) -> <init>
    434:434:void call(java.lang.Object[]) -> call
io.socket.client.Manager$9 -> io.socket.client.Manager$9:
    437:437:void <init>(io.socket.client.Manager,io.socket.client.Socket,io.socket.client.Manager) -> <init>
    440:440:void call(java.lang.Object[]) -> call
io.socket.client.Manager$Engine -> io.socket.client.Manager$Engine:
    606:606:void <init>(java.net.URI,io.socket.engineio.client.Socket$Options) -> <init>
io.socket.client.Manager$Options -> io.socket.client.Manager$Options:
    610:621:void <init>() -> <init>
io.socket.client.Manager$ReadyState -> io.socket.client.Manager$ReadyState:
    25:24:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:io.socket.client.Manager$ReadyState valueOf(java.lang.String) -> valueOf
    24:24:io.socket.client.Manager$ReadyState[] values() -> values
io.socket.client.On -> io.socket.client.On:
    7:7:void <init>() -> <init>
    10:11:io.socket.client.On$Handle on(io.socket.emitter.Emitter,java.lang.String,io.socket.emitter.Emitter$Listener) -> on
io.socket.client.On$1 -> io.socket.client.On$1:
    11:11:void <init>(io.socket.emitter.Emitter,java.lang.String,io.socket.emitter.Emitter$Listener) -> <init>
    14:14:void destroy() -> destroy
io.socket.client.Socket -> io.socket.client.Socket:
    21:65:void <clinit>() -> <clinit>
    92:94:void <init>(io.socket.client.Manager,java.lang.String) -> <init>
    19:19:void access$000(io.socket.client.Socket) -> access$000
    19:19:void access$100(io.socket.client.Socket,io.socket.parser.Packet) -> access$100
    19:19:org.json.JSONArray access$1000(org.json.JSONArray,int) -> access$1000
    19:19:void access$1100(io.socket.client.Socket,io.socket.parser.Packet) -> access$1100
    19:19:java.util.Queue access$1200(io.socket.client.Socket) -> access$1200
    19:19:java.lang.String access$1300(io.socket.client.Socket) -> access$1300
    19:19:void access$1400(io.socket.client.Socket) -> access$1400
    19:19:void access$200(io.socket.client.Socket,java.lang.String) -> access$200
    19:19:boolean access$300(io.socket.client.Socket) -> access$300
    19:19:void access$400(io.socket.client.Socket) -> access$400
    19:19:io.socket.client.Manager access$500(io.socket.client.Socket) -> access$500
    19:19:io.socket.emitter.Emitter access$601(io.socket.client.Socket,java.lang.String,java.lang.Object[]) -> access$601
    19:19:int access$700(io.socket.client.Socket) -> access$700
    19:19:int access$708(io.socket.client.Socket) -> access$708
    19:19:java.util.logging.Logger access$800() -> access$800
    19:19:java.util.Map access$900(io.socket.client.Socket) -> access$900
    349:349:io.socket.client.Ack ack(int) -> ack
    430:430:io.socket.client.Socket close() -> close
    145:145:io.socket.client.Socket connect() -> connect
    462:462:boolean connected() -> connected
    413:421:void destroy() -> destroy
    454:454:io.socket.client.Socket disconnect() -> disconnect
    173:173:io.socket.emitter.Emitter emit(java.lang.String,java.lang.Object[]) -> emit
    235:235:io.socket.emitter.Emitter emit(java.lang.String,java.lang.Object[],io.socket.client.Ack) -> emit
    393:403:void emitBuffered() -> emitBuffered
    473:473:java.lang.String id() -> id
    458:458:io.socket.client.Manager io() -> io
    376:381:void onack(io.socket.parser.Packet) -> onack
    276:279:void onclose(java.lang.String) -> onclose
    386:388:void onconnect() -> onconnect
    407:409:void ondisconnect() -> ondisconnect
    329:342:void onevent(io.socket.parser.Packet) -> onevent
    268:271:void onopen() -> onopen
    283:287:void onpacket(io.socket.parser.Packet) -> onpacket
    127:127:io.socket.client.Socket open() -> open
    263:264:void packet(io.socket.parser.Packet) -> packet
    211:220:org.json.JSONArray remove(org.json.JSONArray,int) -> remove
    155:155:io.socket.client.Socket send(java.lang.Object[]) -> send
    98:101:void subEvents() -> subEvents
    477:487:java.lang.Object[] toArray(org.json.JSONArray) -> toArray
io.socket.client.Socket$1 -> io.socket.client.Socket$1:
    65:78:void <init>() -> <init>
io.socket.client.Socket$2 -> io.socket.client.Socket$2:
    101:114:void <init>(io.socket.client.Socket,io.socket.client.Manager) -> <init>
io.socket.client.Socket$2$1 -> io.socket.client.Socket$2$1:
    102:102:void <init>(io.socket.client.Socket$2) -> <init>
    105:105:void call(java.lang.Object[]) -> call
io.socket.client.Socket$2$2 -> io.socket.client.Socket$2$2:
    108:108:void <init>(io.socket.client.Socket$2) -> <init>
    111:111:void call(java.lang.Object[]) -> call
io.socket.client.Socket$2$3 -> io.socket.client.Socket$2$3:
    114:114:void <init>(io.socket.client.Socket$2) -> <init>
    117:117:void call(java.lang.Object[]) -> call
io.socket.client.Socket$3 -> io.socket.client.Socket$3:
    127:127:void <init>(io.socket.client.Socket) -> <init>
    130:135:void run() -> run
io.socket.client.Socket$4 -> io.socket.client.Socket$4:
    155:155:void <init>(io.socket.client.Socket,java.lang.Object[]) -> <init>
    158:158:void run() -> run
io.socket.client.Socket$5 -> io.socket.client.Socket$5:
    173:173:void <init>(io.socket.client.Socket,java.lang.String,java.lang.Object[]) -> <init>
    176:203:void run() -> run
io.socket.client.Socket$6 -> io.socket.client.Socket$6:
    235:235:void <init>(io.socket.client.Socket,java.lang.String,java.lang.Object[],io.socket.client.Ack) -> <init>
    238:256:void run() -> run
io.socket.client.Socket$6$1 -> io.socket.client.Socket$6$1:
    238:241:void <init>(io.socket.client.Socket$6) -> <init>
io.socket.client.Socket$7 -> io.socket.client.Socket$7:
    349:349:void <init>(io.socket.client.Socket,boolean[],int,io.socket.client.Socket) -> <init>
    352:352:void call(java.lang.Object[]) -> call
io.socket.client.Socket$7$1 -> io.socket.client.Socket$7$1:
    352:352:void <init>(io.socket.client.Socket$7,java.lang.Object[]) -> <init>
    355:368:void run() -> run
io.socket.client.Socket$8 -> io.socket.client.Socket$8:
    430:430:void <init>(io.socket.client.Socket) -> <init>
    433:441:void run() -> run
io.socket.client.SocketIOException -> io.socket.client.SocketIOException:
    6:6:void <init>() -> <init>
    10:10:void <init>(java.lang.String) -> <init>
    14:14:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    18:18:void <init>(java.lang.Throwable) -> <init>
io.socket.client.Url -> io.socket.client.Url:
    11:12:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    57:57:java.lang.String extractId(java.lang.String) -> extractId
    61:70:java.lang.String extractId(java.net.URL) -> extractId
    17:17:java.net.URL parse(java.lang.String) -> parse
    21:52:java.net.URL parse(java.net.URI) -> parse
io.socket.emitter.Emitter -> io.socket.emitter.Emitter:
    17:19:void <init>() -> <init>
    114:117:io.socket.emitter.Emitter emit(java.lang.String,java.lang.Object[]) -> emit
    142:143:boolean hasListeners(java.lang.String) -> hasListeners
    130:131:java.util.List listeners(java.lang.String) -> listeners
    59:59:io.socket.emitter.Emitter off() -> off
    70:70:io.socket.emitter.Emitter off(java.lang.String) -> off
    82:88:io.socket.emitter.Emitter off(java.lang.String,io.socket.emitter.Emitter$Listener) -> off
    29:37:io.socket.emitter.Emitter on(java.lang.String,io.socket.emitter.Emitter$Listener) -> on
    49:49:io.socket.emitter.Emitter once(java.lang.String,io.socket.emitter.Emitter$Listener) -> once
    97:100:boolean sameAs(io.socket.emitter.Emitter$Listener,io.socket.emitter.Emitter$Listener) -> sameAs
io.socket.emitter.Emitter$OnceListener -> io.socket.emitter.Emitter$OnceListener:
    156:158:void <init>(io.socket.emitter.Emitter,java.lang.String,io.socket.emitter.Emitter$Listener) -> <init>
    163:164:void call(java.lang.Object[]) -> call
io.socket.engineio.client.EngineIOException -> io.socket.engineio.client.EngineIOException:
    9:9:void <init>() -> <init>
    13:13:void <init>(java.lang.String) -> <init>
    17:17:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    21:21:void <init>(java.lang.Throwable) -> <init>
io.socket.engineio.client.HandshakeData -> io.socket.engineio.client.HandshakeData:
    16:16:void <init>(java.lang.String) -> <init>
    19:30:void <init>(org.json.JSONObject) -> <init>
io.socket.engineio.client.Socket -> io.socket.engineio.client.Socket:
    33:99:void <clinit>() -> <clinit>
    141:141:void <init>() -> <init>
    151:151:void <init>(java.lang.String) -> <init>
    155:155:void <init>(java.net.URI) -> <init>
    166:166:void <init>(java.lang.String,io.socket.engineio.client.Socket$Options) -> <init>
    170:170:void <init>(java.net.URI,io.socket.engineio.client.Socket$Options) -> <init>
    173:209:void <init>(io.socket.engineio.client.Socket$Options) -> <init>
    31:31:void access$000(io.socket.engineio.client.Socket,long) -> access$000
    31:31:void access$1000(io.socket.engineio.client.Socket,io.socket.engineio.parser.Packet) -> access$1000
    31:31:void access$1100(io.socket.engineio.client.Socket) -> access$1100
    31:31:java.util.logging.Logger access$1200() -> access$1200
    31:31:boolean access$1300(io.socket.engineio.client.Socket) -> access$1300
    31:31:boolean access$1302(io.socket.engineio.client.Socket,boolean) -> access$1302
    31:31:void access$1400(io.socket.engineio.client.Socket) -> access$1400
    31:31:long access$1500(io.socket.engineio.client.Socket) -> access$1500
    31:31:void access$1600(io.socket.engineio.client.Socket) -> access$1600
    31:31:void access$1700(io.socket.engineio.client.Socket,java.lang.String,java.lang.Runnable) -> access$1700
    31:31:void access$1800(io.socket.engineio.client.Socket,java.lang.String,java.lang.String,java.lang.Runnable) -> access$1800
    31:31:void access$1900(io.socket.engineio.client.Socket,java.lang.String,byte[],java.lang.Runnable) -> access$1900
    31:31:boolean access$200(io.socket.engineio.client.Socket) -> access$200
    31:31:boolean access$300() -> access$300
    31:31:boolean access$302(boolean) -> access$302
    31:31:java.util.List access$400(io.socket.engineio.client.Socket) -> access$400
    31:31:io.socket.engineio.client.Socket$ReadyState access$500(io.socket.engineio.client.Socket) -> access$500
    31:31:io.socket.engineio.client.Socket$ReadyState access$502(io.socket.engineio.client.Socket,io.socket.engineio.client.Socket$ReadyState) -> access$502
    31:31:io.socket.engineio.client.Transport access$600(io.socket.engineio.client.Socket,java.lang.String) -> access$600
    31:31:void access$700(io.socket.engineio.client.Socket,io.socket.engineio.client.Transport) -> access$700
    31:31:void access$800(io.socket.engineio.client.Socket,java.lang.String) -> access$800
    31:31:void access$900(io.socket.engineio.client.Socket,java.lang.Exception) -> access$900
    711:711:io.socket.engineio.client.Socket close() -> close
    255:286:io.socket.engineio.client.Transport createTransport(java.lang.String) -> createTransport
    822:825:java.util.List filterUpgrades(java.util.List) -> filterUpgrades
    611:616:void flush() -> flush
    838:841:java.util.concurrent.ScheduledExecutorService getHeartbeatScheduler() -> getHeartbeatScheduler
    834:834:java.lang.String id() -> id
    777:777:void onClose(java.lang.String) -> onClose
    781:817:void onClose(java.lang.String,java.lang.Exception) -> onClose
    598:606:void onDrain() -> onDrain
    770:773:void onError(java.lang.Exception) -> onError
    520:532:void onHandshake(io.socket.engineio.client.HandshakeData) -> onHandshake
    536:545:void onHeartbeat(long) -> onHeartbeat
    476:485:void onOpen() -> onOpen
    491:512:void onPacket(io.socket.engineio.parser.Packet) -> onPacket
    226:226:io.socket.engineio.client.Socket open() -> open
    584:584:void ping() -> ping
    329:472:void probe(java.lang.String) -> probe
    642:642:void send(java.lang.String) -> send
    646:646:void send(byte[]) -> send
    656:656:void send(java.lang.String,java.lang.Runnable) -> send
    665:665:void send(byte[],java.lang.Runnable) -> send
    674:674:void sendPacket(java.lang.String,java.lang.Runnable) -> sendPacket
    678:679:void sendPacket(java.lang.String,java.lang.String,java.lang.Runnable) -> sendPacket
    683:684:void sendPacket(java.lang.String,byte[],java.lang.Runnable) -> sendPacket
    688:702:void sendPacket(io.socket.engineio.parser.Packet,java.lang.Runnable) -> sendPacket
    217:217:void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setDefaultHostnameVerifier
    213:213:void setDefaultSSLContext(javax.net.ssl.SSLContext) -> setDefaultSSLContext
    560:565:void setPing() -> setPing
    295:320:void setTransport(io.socket.engineio.client.Transport) -> setTransport
    621:621:void write(java.lang.String) -> write
    625:625:void write(java.lang.String,java.lang.Runnable) -> write
    629:629:void write(byte[]) -> write
    633:633:void write(byte[],java.lang.Runnable) -> write
io.socket.engineio.client.Socket$1 -> io.socket.engineio.client.Socket$1:
    133:133:void <init>(io.socket.engineio.client.Socket) -> <init>
    136:136:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$10 -> io.socket.engineio.client.Socket$10:
    427:427:void <init>(io.socket.engineio.client.Socket,io.socket.emitter.Emitter$Listener) -> <init>
    430:430:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$11 -> io.socket.engineio.client.Socket$11:
    435:435:void <init>(io.socket.engineio.client.Socket,io.socket.emitter.Emitter$Listener) -> <init>
    438:438:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$12 -> io.socket.engineio.client.Socket$12:
    443:443:void <init>(io.socket.engineio.client.Socket,io.socket.engineio.client.Transport[],io.socket.emitter.Emitter$Listener) -> <init>
    446:449:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$13 -> io.socket.engineio.client.Socket$13:
    454:454:void <init>(io.socket.engineio.client.Socket,io.socket.engineio.client.Transport[],io.socket.emitter.Emitter$Listener,io.socket.emitter.Emitter$Listener,io.socket.emitter.Emitter$Listener,io.socket.engineio.client.Socket,io.socket.emitter.Emitter$Listener,io.socket.emitter.Emitter$Listener) -> <init>
    457:461:void run() -> run
io.socket.engineio.client.Socket$14 -> io.socket.engineio.client.Socket$14:
    545:545:void <init>(io.socket.engineio.client.Socket,io.socket.engineio.client.Socket) -> <init>
    548:548:void run() -> run
io.socket.engineio.client.Socket$14$1 -> io.socket.engineio.client.Socket$14$1:
    548:548:void <init>(io.socket.engineio.client.Socket$14) -> <init>
    551:552:void run() -> run
io.socket.engineio.client.Socket$15 -> io.socket.engineio.client.Socket$15:
    565:565:void <init>(io.socket.engineio.client.Socket,io.socket.engineio.client.Socket) -> <init>
    568:568:void run() -> run
io.socket.engineio.client.Socket$15$1 -> io.socket.engineio.client.Socket$15$1:
    568:568:void <init>(io.socket.engineio.client.Socket$15) -> <init>
    571:573:void run() -> run
io.socket.engineio.client.Socket$16 -> io.socket.engineio.client.Socket$16:
    584:584:void <init>(io.socket.engineio.client.Socket) -> <init>
    587:587:void run() -> run
io.socket.engineio.client.Socket$16$1 -> io.socket.engineio.client.Socket$16$1:
    587:587:void <init>(io.socket.engineio.client.Socket$16) -> <init>
    590:590:void run() -> run
io.socket.engineio.client.Socket$17 -> io.socket.engineio.client.Socket$17:
    656:656:void <init>(io.socket.engineio.client.Socket,java.lang.String,java.lang.Runnable) -> <init>
    659:659:void run() -> run
io.socket.engineio.client.Socket$18 -> io.socket.engineio.client.Socket$18:
    665:665:void <init>(io.socket.engineio.client.Socket,byte[],java.lang.Runnable) -> <init>
    668:668:void run() -> run
io.socket.engineio.client.Socket$19 -> io.socket.engineio.client.Socket$19:
    695:695:void <init>(io.socket.engineio.client.Socket,java.lang.Runnable) -> <init>
    698:698:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$2 -> io.socket.engineio.client.Socket$2:
    226:226:void <init>(io.socket.engineio.client.Socket) -> <init>
    230:248:void run() -> run
io.socket.engineio.client.Socket$2$1 -> io.socket.engineio.client.Socket$2$1:
    235:235:void <init>(io.socket.engineio.client.Socket$2,io.socket.engineio.client.Socket) -> <init>
    238:238:void run() -> run
io.socket.engineio.client.Socket$20 -> io.socket.engineio.client.Socket$20:
    711:711:void <init>(io.socket.engineio.client.Socket) -> <init>
    714:761:void run() -> run
io.socket.engineio.client.Socket$20$1 -> io.socket.engineio.client.Socket$20$1:
    719:719:void <init>(io.socket.engineio.client.Socket$20,io.socket.engineio.client.Socket) -> <init>
    722:724:void run() -> run
io.socket.engineio.client.Socket$20$2 -> io.socket.engineio.client.Socket$20$2:
    729:729:void <init>(io.socket.engineio.client.Socket$20,io.socket.engineio.client.Socket,io.socket.emitter.Emitter$Listener[],java.lang.Runnable) -> <init>
    732:734:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$20$3 -> io.socket.engineio.client.Socket$20$3:
    738:738:void <init>(io.socket.engineio.client.Socket$20,io.socket.engineio.client.Socket,io.socket.emitter.Emitter$Listener[]) -> <init>
    742:743:void run() -> run
io.socket.engineio.client.Socket$20$4 -> io.socket.engineio.client.Socket$20$4:
    748:748:void <init>(io.socket.engineio.client.Socket$20,java.lang.Runnable,java.lang.Runnable) -> <init>
    751:754:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$3 -> io.socket.engineio.client.Socket$3:
    320:320:void <init>(io.socket.engineio.client.Socket,io.socket.engineio.client.Socket) -> <init>
    323:323:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$4 -> io.socket.engineio.client.Socket$4:
    315:315:void <init>(io.socket.engineio.client.Socket,io.socket.engineio.client.Socket) -> <init>
    318:318:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$5 -> io.socket.engineio.client.Socket$5:
    310:310:void <init>(io.socket.engineio.client.Socket,io.socket.engineio.client.Socket) -> <init>
    313:313:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$6 -> io.socket.engineio.client.Socket$6:
    305:305:void <init>(io.socket.engineio.client.Socket,io.socket.engineio.client.Socket) -> <init>
    308:308:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$7 -> io.socket.engineio.client.Socket$7:
    338:338:void <init>(io.socket.engineio.client.Socket,boolean[],java.lang.String,io.socket.engineio.client.Transport[],io.socket.engineio.client.Socket,java.lang.Runnable[]) -> <init>
    341:346:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$7$1 -> io.socket.engineio.client.Socket$7$1:
    346:346:void <init>(io.socket.engineio.client.Socket$7) -> <init>
    349:383:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$7$1$1 -> io.socket.engineio.client.Socket$7$1$1:
    360:360:void <init>(io.socket.engineio.client.Socket$7$1) -> <init>
    363:376:void run() -> run
io.socket.engineio.client.Socket$8 -> io.socket.engineio.client.Socket$8:
    390:390:void <init>(io.socket.engineio.client.Socket,boolean[],java.lang.Runnable[],io.socket.engineio.client.Transport[]) -> <init>
    393:400:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$9 -> io.socket.engineio.client.Socket$9:
    405:405:void <init>(io.socket.engineio.client.Socket,io.socket.engineio.client.Transport[],io.socket.emitter.Emitter$Listener,java.lang.String,io.socket.engineio.client.Socket) -> <init>
    408:423:void call(java.lang.Object[]) -> call
io.socket.engineio.client.Socket$Options -> io.socket.engineio.client.Socket$Options:
    844:854:void <init>() -> <init>
    844:844:io.socket.engineio.client.Socket$Options access$100(java.net.URI,io.socket.engineio.client.Socket$Options) -> access$100
    863:872:io.socket.engineio.client.Socket$Options fromURI(java.net.URI,io.socket.engineio.client.Socket$Options) -> fromURI
io.socket.engineio.client.Socket$ReadyState -> io.socket.engineio.client.Socket$ReadyState:
    39:38:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String,int) -> <init>
    43:43:java.lang.String toString() -> toString
    38:38:io.socket.engineio.client.Socket$ReadyState valueOf(java.lang.String) -> valueOf
    38:38:io.socket.engineio.client.Socket$ReadyState[] values() -> values
io.socket.engineio.client.Transport -> io.socket.engineio.client.Transport:
    53:66:void <init>(io.socket.engineio.client.Transport$Options) -> <init>
    90:90:io.socket.engineio.client.Transport close() -> close
    138:139:void onClose() -> onClose
    126:126:void onData(java.lang.String) -> onData
    130:130:void onData(byte[]) -> onData
    71:72:io.socket.engineio.client.Transport onError(java.lang.String,java.lang.Exception) -> onError
    120:122:void onOpen() -> onOpen
    134:134:void onPacket(io.socket.engineio.parser.Packet) -> onPacket
    77:77:io.socket.engineio.client.Transport open() -> open
    103:103:void send(io.socket.engineio.parser.Packet[]) -> send
io.socket.engineio.client.Transport$1 -> io.socket.engineio.client.Transport$1:
    77:77:void <init>(io.socket.engineio.client.Transport) -> <init>
    80:82:void run() -> run
io.socket.engineio.client.Transport$2 -> io.socket.engineio.client.Transport$2:
    90:90:void <init>(io.socket.engineio.client.Transport) -> <init>
    93:95:void run() -> run
io.socket.engineio.client.Transport$3 -> io.socket.engineio.client.Transport$3:
    103:103:void <init>(io.socket.engineio.client.Transport,io.socket.engineio.parser.Packet[]) -> <init>
    106:113:void run() -> run
io.socket.engineio.client.Transport$Options -> io.socket.engineio.client.Transport$Options:
    149:157:void <init>() -> <init>
io.socket.engineio.client.Transport$ReadyState -> io.socket.engineio.client.Transport$ReadyState:
    18:17:void <clinit>() -> <clinit>
    17:17:void <init>(java.lang.String,int) -> <init>
    22:22:java.lang.String toString() -> toString
    17:17:io.socket.engineio.client.Transport$ReadyState valueOf(java.lang.String) -> valueOf
    17:17:io.socket.engineio.client.Transport$ReadyState[] values() -> values
io.socket.engineio.client.transports.Polling -> io.socket.engineio.client.transports.Polling:
    19:19:void <clinit>() -> <clinit>
    30:31:void <init>(io.socket.engineio.client.Transport$Options) -> <init>
    111:144:void _onData(java.lang.Object) -> _onData
    17:17:io.socket.engineio.client.Transport$ReadyState access$002(io.socket.engineio.client.transports.Polling,io.socket.engineio.client.Transport$ReadyState) -> access$002
    17:17:java.util.logging.Logger access$100() -> access$100
    17:17:io.socket.engineio.client.Transport$ReadyState access$202(io.socket.engineio.client.transports.Polling,io.socket.engineio.client.Transport$ReadyState) -> access$202
    17:17:boolean access$300(io.socket.engineio.client.transports.Polling) -> access$300
    17:17:io.socket.engineio.client.Transport$ReadyState access$400(io.socket.engineio.client.transports.Polling) -> access$400
    17:17:void access$500(io.socket.engineio.client.transports.Polling) -> access$500
    17:17:void access$600(io.socket.engineio.client.transports.Polling) -> access$600
    17:17:void access$700(io.socket.engineio.client.transports.Polling,io.socket.engineio.parser.Packet) -> access$700
    152:171:void doClose() -> doClose
    35:35:void doOpen() -> doOpen
    101:101:void onData(java.lang.String) -> onData
    106:106:void onData(byte[]) -> onData
    39:39:void pause(java.lang.Runnable) -> pause
    93:96:void poll() -> poll
    195:218:java.lang.String uri() -> uri
    177:186:void write(io.socket.engineio.parser.Packet[]) -> write
io.socket.engineio.client.transports.Polling$1 -> io.socket.engineio.client.transports.Polling$1:
    39:39:void <init>(io.socket.engineio.client.transports.Polling,java.lang.Runnable) -> <init>
    42:75:void run() -> run
io.socket.engineio.client.transports.Polling$1$1 -> io.socket.engineio.client.transports.Polling$1$1:
    46:46:void <init>(io.socket.engineio.client.transports.Polling$1,io.socket.engineio.client.transports.Polling) -> <init>
    49:51:void run() -> run
io.socket.engineio.client.transports.Polling$1$2 -> io.socket.engineio.client.transports.Polling$1$2:
    61:61:void <init>(io.socket.engineio.client.transports.Polling$1,int[],java.lang.Runnable) -> <init>
    64:66:void call(java.lang.Object[]) -> call
io.socket.engineio.client.transports.Polling$1$3 -> io.socket.engineio.client.transports.Polling$1$3:
    75:75:void <init>(io.socket.engineio.client.transports.Polling$1,int[],java.lang.Runnable) -> <init>
    78:80:void call(java.lang.Object[]) -> call
io.socket.engineio.client.transports.Polling$2 -> io.socket.engineio.client.transports.Polling$2:
    112:112:void <init>(io.socket.engineio.client.transports.Polling,io.socket.engineio.client.transports.Polling) -> <init>
    115:124:boolean call(io.socket.engineio.parser.Packet,int,int) -> call
io.socket.engineio.client.transports.Polling$3 -> io.socket.engineio.client.transports.Polling$3:
    152:152:void <init>(io.socket.engineio.client.transports.Polling,io.socket.engineio.client.transports.Polling) -> <init>
    155:159:void call(java.lang.Object[]) -> call
io.socket.engineio.client.transports.Polling$4 -> io.socket.engineio.client.transports.Polling$4:
    178:178:void <init>(io.socket.engineio.client.transports.Polling,io.socket.engineio.client.transports.Polling) -> <init>
    181:182:void run() -> run
io.socket.engineio.client.transports.Polling$5 -> io.socket.engineio.client.transports.Polling$5:
    186:186:void <init>(io.socket.engineio.client.transports.Polling,io.socket.engineio.client.transports.Polling,java.lang.Runnable) -> <init>
    186:186:void call(java.lang.Object) -> call
    189:189:void call(byte[]) -> call
io.socket.engineio.client.transports.PollingXHR -> io.socket.engineio.client.transports.PollingXHR:
    21:21:void <clinit>() -> <clinit>
    24:24:void <init>(io.socket.engineio.client.Transport$Options) -> <init>
    19:19:io.socket.engineio.client.Transport access$000(io.socket.engineio.client.transports.PollingXHR,java.lang.String,java.lang.Exception) -> access$000
    19:19:io.socket.engineio.client.Transport access$100(io.socket.engineio.client.transports.PollingXHR,java.lang.String,java.lang.Exception) -> access$100
    19:19:java.util.logging.Logger access$200() -> access$200
    98:129:void doPoll() -> doPoll
    65:93:void doWrite(byte[],java.lang.Runnable) -> doWrite
    28:28:io.socket.engineio.client.transports.PollingXHR$Request request() -> request
    33:49:io.socket.engineio.client.transports.PollingXHR$Request request(io.socket.engineio.client.transports.PollingXHR$Request$Options) -> request
io.socket.engineio.client.transports.PollingXHR$1 -> io.socket.engineio.client.transports.PollingXHR$1:
    49:49:void <init>(io.socket.engineio.client.transports.PollingXHR,io.socket.engineio.client.transports.PollingXHR) -> <init>
    52:52:void call(java.lang.Object[]) -> call
io.socket.engineio.client.transports.PollingXHR$1$1 -> io.socket.engineio.client.transports.PollingXHR$1$1:
    52:52:void <init>(io.socket.engineio.client.transports.PollingXHR$1,java.lang.Object[]) -> <init>
    55:55:void run() -> run
io.socket.engineio.client.transports.PollingXHR$2 -> io.socket.engineio.client.transports.PollingXHR$2:
    43:43:void <init>(io.socket.engineio.client.transports.PollingXHR,io.socket.engineio.client.transports.PollingXHR) -> <init>
    47:47:void call(java.lang.Object[]) -> call
io.socket.engineio.client.transports.PollingXHR$3 -> io.socket.engineio.client.transports.PollingXHR$3:
    70:70:void <init>(io.socket.engineio.client.transports.PollingXHR,java.lang.Runnable) -> <init>
    73:73:void call(java.lang.Object[]) -> call
io.socket.engineio.client.transports.PollingXHR$3$1 -> io.socket.engineio.client.transports.PollingXHR$3$1:
    73:73:void <init>(io.socket.engineio.client.transports.PollingXHR$3) -> <init>
    76:76:void run() -> run
io.socket.engineio.client.transports.PollingXHR$4 -> io.socket.engineio.client.transports.PollingXHR$4:
    81:81:void <init>(io.socket.engineio.client.transports.PollingXHR,io.socket.engineio.client.transports.PollingXHR) -> <init>
    84:84:void call(java.lang.Object[]) -> call
io.socket.engineio.client.transports.PollingXHR$4$1 -> io.socket.engineio.client.transports.PollingXHR$4$1:
    84:84:void <init>(io.socket.engineio.client.transports.PollingXHR$4,java.lang.Object[]) -> <init>
    87:88:void run() -> run
io.socket.engineio.client.transports.PollingXHR$5 -> io.socket.engineio.client.transports.PollingXHR$5:
    101:101:void <init>(io.socket.engineio.client.transports.PollingXHR,io.socket.engineio.client.transports.PollingXHR) -> <init>
    104:104:void call(java.lang.Object[]) -> call
io.socket.engineio.client.transports.PollingXHR$5$1 -> io.socket.engineio.client.transports.PollingXHR$5$1:
    104:104:void <init>(io.socket.engineio.client.transports.PollingXHR$5,java.lang.Object[]) -> <init>
    107:111:void run() -> run
io.socket.engineio.client.transports.PollingXHR$6 -> io.socket.engineio.client.transports.PollingXHR$6:
    117:117:void <init>(io.socket.engineio.client.transports.PollingXHR,io.socket.engineio.client.transports.PollingXHR) -> <init>
    120:120:void call(java.lang.Object[]) -> call
io.socket.engineio.client.transports.PollingXHR$6$1 -> io.socket.engineio.client.transports.PollingXHR$6$1:
    120:120:void <init>(io.socket.engineio.client.transports.PollingXHR$6,java.lang.Object[]) -> <init>
    123:124:void run() -> run
io.socket.engineio.client.transports.PollingXHR$Request -> io.socket.engineio.client.transports.PollingXHR$Request:
    151:157:void <init>(io.socket.engineio.client.transports.PollingXHR$Request$Options) -> <init>
    132:132:byte[] access$300(io.socket.engineio.client.transports.PollingXHR$Request) -> access$300
    132:132:java.net.HttpURLConnection access$400(io.socket.engineio.client.transports.PollingXHR$Request) -> access$400
    132:132:void access$500(io.socket.engineio.client.transports.PollingXHR$Request,java.util.Map) -> access$500
    132:132:void access$600(io.socket.engineio.client.transports.PollingXHR$Request) -> access$600
    132:132:void access$700(io.socket.engineio.client.transports.PollingXHR$Request,java.lang.Exception) -> access$700
    262:267:void cleanup() -> cleanup
    163:169:void create() -> create
    240:241:void onData(java.lang.String) -> onData
    245:246:void onData(byte[]) -> onData
    250:250:void onError(java.lang.Exception) -> onError
    273:310:void onLoad() -> onLoad
    254:254:void onRequestHeaders(java.util.Map) -> onRequestHeaders
    258:258:void onResponseHeaders(java.util.Map) -> onResponseHeaders
    236:236:void onSuccess() -> onSuccess
io.socket.engineio.client.transports.PollingXHR$Request$1 -> io.socket.engineio.client.transports.PollingXHR$Request$1:
    199:199:void <init>(io.socket.engineio.client.transports.PollingXHR$Request,io.socket.engineio.client.transports.PollingXHR$Request) -> <init>
    204:229:void run() -> run
io.socket.engineio.client.transports.PollingXHR$Request$Options -> io.socket.engineio.client.transports.PollingXHR$Request$Options:
    314:314:void <init>() -> <init>
io.socket.engineio.client.transports.WebSocket -> io.socket.engineio.client.transports.WebSocket:
    28:28:void <clinit>() -> <clinit>
    33:34:void <init>(io.socket.engineio.client.Transport$Options) -> <init>
    24:24:void access$000(io.socket.engineio.client.transports.WebSocket) -> access$000
    24:24:void access$100(io.socket.engineio.client.transports.WebSocket,java.lang.String) -> access$100
    24:24:void access$200(io.socket.engineio.client.transports.WebSocket,byte[]) -> access$200
    24:24:void access$300(io.socket.engineio.client.transports.WebSocket) -> access$300
    24:24:io.socket.engineio.client.Transport access$400(io.socket.engineio.client.transports.WebSocket,java.lang.String,java.lang.Exception) -> access$400
    24:24:okhttp3.WebSocket access$500(io.socket.engineio.client.transports.WebSocket) -> access$500
    24:24:java.util.logging.Logger access$600() -> access$600
    189:197:void doClose() -> doClose
    38:140:void doOpen() -> doOpen
    202:224:java.lang.String uri() -> uri
    145:169:void write(io.socket.engineio.parser.Packet[]) -> write
io.socket.engineio.client.transports.WebSocket$1 -> io.socket.engineio.client.transports.WebSocket$1:
    61:61:void <init>(io.socket.engineio.client.transports.WebSocket,java.lang.String) -> <init>
    64:66:okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> authenticate
io.socket.engineio.client.transports.WebSocket$2 -> io.socket.engineio.client.transports.WebSocket$2:
    78:78:void <init>(io.socket.engineio.client.transports.WebSocket,io.socket.engineio.client.transports.WebSocket) -> <init>
    119:119:void onClosed(okhttp3.WebSocket,int,java.lang.String) -> onClosed
    129:132:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response) -> onFailure
    96:96:void onMessage(okhttp3.WebSocket,java.lang.String) -> onMessage
    109:109:void onMessage(okhttp3.WebSocket,okio.ByteString) -> onMessage
    81:82:void onOpen(okhttp3.WebSocket,okhttp3.Response) -> onOpen
io.socket.engineio.client.transports.WebSocket$2$1 -> io.socket.engineio.client.transports.WebSocket$2$1:
    82:82:void <init>(io.socket.engineio.client.transports.WebSocket$2,java.util.Map) -> <init>
    85:86:void run() -> run
io.socket.engineio.client.transports.WebSocket$2$2 -> io.socket.engineio.client.transports.WebSocket$2$2:
    96:96:void <init>(io.socket.engineio.client.transports.WebSocket$2,java.lang.String) -> <init>
    99:99:void run() -> run
io.socket.engineio.client.transports.WebSocket$2$3 -> io.socket.engineio.client.transports.WebSocket$2$3:
    109:109:void <init>(io.socket.engineio.client.transports.WebSocket$2,okio.ByteString) -> <init>
    112:112:void run() -> run
io.socket.engineio.client.transports.WebSocket$2$4 -> io.socket.engineio.client.transports.WebSocket$2$4:
    119:119:void <init>(io.socket.engineio.client.transports.WebSocket$2) -> <init>
    122:122:void run() -> run
io.socket.engineio.client.transports.WebSocket$2$5 -> io.socket.engineio.client.transports.WebSocket$2$5:
    132:132:void <init>(io.socket.engineio.client.transports.WebSocket$2,java.lang.Throwable) -> <init>
    135:135:void run() -> run
io.socket.engineio.client.transports.WebSocket$3 -> io.socket.engineio.client.transports.WebSocket$3:
    147:147:void <init>(io.socket.engineio.client.transports.WebSocket,io.socket.engineio.client.transports.WebSocket) -> <init>
    152:152:void run() -> run
io.socket.engineio.client.transports.WebSocket$3$1 -> io.socket.engineio.client.transports.WebSocket$3$1:
    152:152:void <init>(io.socket.engineio.client.transports.WebSocket$3) -> <init>
    155:156:void run() -> run
io.socket.engineio.client.transports.WebSocket$4 -> io.socket.engineio.client.transports.WebSocket$4:
    169:169:void <init>(io.socket.engineio.client.transports.WebSocket,io.socket.engineio.client.transports.WebSocket,int[],java.lang.Runnable) -> <init>
    173:182:void call(java.lang.Object) -> call
io.socket.engineio.parser.Buffer -> io.socket.engineio.parser.Buffer:
    292:292:void <init>() -> <init>
    296:299:byte[] concat(byte[][]) -> concat
    303:314:byte[] concat(byte[][],int) -> concat
io.socket.engineio.parser.Packet -> io.socket.engineio.parser.Packet:
    20:20:void <init>(java.lang.String) -> <init>
    23:25:void <init>(java.lang.String,java.lang.Object) -> <init>
io.socket.engineio.parser.Parser -> io.socket.engineio.parser.Parser:
    15:36:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    13:13:byte[] access$000(java.lang.String) -> access$000
    261:265:java.lang.String byteArrayToString(byte[]) -> byteArrayToString
    75:75:io.socket.engineio.parser.Packet decodePacket(java.lang.String) -> decodePacket
    81:95:io.socket.engineio.parser.Packet decodePacket(java.lang.String,boolean) -> decodePacket
    106:109:io.socket.engineio.parser.Packet decodePacket(byte[]) -> decodePacket
    153:154:void decodePayload(java.lang.String,io.socket.engineio.parser.Parser$DecodePayloadCallback) -> decodePayload
    203:255:void decodePayload(byte[],io.socket.engineio.parser.Parser$DecodePayloadCallback) -> decodePayload
    67:71:void encodeByteArray(io.socket.engineio.parser.Packet,io.socket.engineio.parser.Parser$EncodeCallback) -> encodeByteArray
    42:42:void encodePacket(io.socket.engineio.parser.Packet,io.socket.engineio.parser.Parser$EncodeCallback) -> encodePacket
    46:63:void encodePacket(io.socket.engineio.parser.Packet,boolean,io.socket.engineio.parser.Parser$EncodeCallback) -> encodePacket
    113:149:void encodePayload(io.socket.engineio.parser.Packet[],io.socket.engineio.parser.Parser$EncodeCallback) -> encodePayload
    269:272:byte[] stringToByteArray(java.lang.String) -> stringToByteArray
io.socket.engineio.parser.Parser$1 -> io.socket.engineio.parser.Parser$1:
    19:26:void <init>() -> <init>
io.socket.engineio.parser.Parser$2 -> io.socket.engineio.parser.Parser$2:
    121:121:void <init>(java.util.ArrayList) -> <init>
    124:144:void call(java.lang.Object) -> call
io.socket.global.Global -> io.socket.global.Global:
    10:10:void <init>() -> <init>
    28:30:java.lang.String decodeURIComponent(java.lang.String) -> decodeURIComponent
    14:22:java.lang.String encodeURIComponent(java.lang.String) -> encodeURIComponent
io.socket.hasbinary.HasBinary -> io.socket.hasbinary.HasBinary:
    13:13:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    24:52:boolean _hasBinary(java.lang.Object) -> _hasBinary
    18:18:boolean hasBinary(java.lang.Object) -> hasBinary
io.socket.parseqs.ParseQS -> io.socket.parseqs.ParseQS:
    11:11:void <init>() -> <init>
    24:28:java.util.Map decode(java.lang.String) -> decode
    14:20:java.lang.String encode(java.util.Map) -> encode
io.socket.parser.Binary -> io.socket.parser.Binary:
    19:19:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    37:70:java.lang.Object _deconstructPacket(java.lang.Object,java.util.List) -> _deconstructPacket
    87:111:java.lang.Object _reconstructPacket(java.lang.Object,byte[][]) -> _reconstructPacket
    23:30:io.socket.parser.Binary$DeconstructedPacket deconstructPacket(io.socket.parser.Packet) -> deconstructPacket
    81:82:io.socket.parser.Packet reconstructPacket(io.socket.parser.Packet,byte[][]) -> reconstructPacket
io.socket.parser.Binary$DeconstructedPacket -> io.socket.parser.Binary$DeconstructedPacket:
    120:120:void <init>() -> <init>
io.socket.parser.Packet -> io.socket.parser.Packet:
    12:7:void <init>() -> <init>
    14:15:void <init>(int) -> <init>
    18:20:void <init>(int,java.lang.Object) -> <init>
io.socket.parser.Parser -> io.socket.parser.Parser:
    15:57:void <clinit>() -> <clinit>
    68:68:void <init>() -> <init>
    13:13:java.util.logging.Logger access$000() -> access$000
    13:13:io.socket.parser.Packet access$100() -> access$100
    71:71:io.socket.parser.Packet error() -> error
io.socket.parser.Parser$BinaryReconstructor -> io.socket.parser.Parser$BinaryReconstructor:
    254:256:void <init>(io.socket.parser.Packet) -> <init>
    271:272:void finishReconstruction() -> finishReconstruction
    260:264:io.socket.parser.Packet takeBinaryData(byte[]) -> takeBinaryData
io.socket.parser.Parser$Decoder -> io.socket.parser.Parser$Decoder:
    144:145:void <init>() -> <init>
    149:154:void add(java.lang.String) -> add
    162:163:void add(byte[]) -> add
    174:179:io.socket.parser.Packet decodeString(java.lang.String) -> decodeString
    241:242:void destroy() -> destroy
io.socket.parser.Parser$Encoder -> io.socket.parser.Parser$Encoder:
    77:77:void <init>() -> <init>
    80:83:void encode(io.socket.parser.Packet,io.socket.parser.Parser$Encoder$Callback) -> encode
    124:129:void encodeAsBinary(io.socket.parser.Packet,io.socket.parser.Parser$Encoder$Callback) -> encodeAsBinary
    91:120:java.lang.String encodeAsString(io.socket.parser.Packet) -> encodeAsString
io.socket.thread.EventThread -> io.socket.thread.EventThread:
    16:32:void <clinit>() -> <clinit>
    14:14:void <init>(java.lang.Runnable,io.socket.thread.EventThread$1) -> <init>
    36:36:void <init>(java.lang.Runnable) -> <init>
    14:14:io.socket.thread.EventThread access$000() -> access$000
    14:14:io.socket.thread.EventThread access$002(io.socket.thread.EventThread) -> access$002
    14:14:java.util.logging.Logger access$200() -> access$200
    14:14:int access$300() -> access$300
    14:14:int access$310() -> access$310
    14:14:java.util.concurrent.ExecutorService access$400() -> access$400
    14:14:java.util.concurrent.ExecutorService access$402(java.util.concurrent.ExecutorService) -> access$402
    54:57:void exec(java.lang.Runnable) -> exec
    45:45:boolean isCurrent() -> isCurrent
    68:74:void nextTick(java.lang.Runnable) -> nextTick
io.socket.thread.EventThread$1 -> io.socket.thread.EventThread$1:
    18:18:void <init>() -> <init>
    21:24:java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.socket.thread.EventThread$2 -> io.socket.thread.EventThread$2:
    76:76:void <init>(java.lang.Runnable) -> <init>
    80:92:void run() -> run
io.socket.utf8.UTF8 -> io.socket.utf8.UTF8:
    18:18:void <init>() -> <init>
    163:164:void checkScalarValue(int) -> checkScalarValue
    78:78:char[] createByte(int,int) -> createByte
    34:42:java.lang.String decode(java.lang.String) -> decode
    88:89:int decodeSymbol() -> decodeSymbol
    21:30:java.lang.String encode(java.lang.String) -> encode
    58:74:java.lang.String encodeCodePoint(int) -> encodeCodePoint
    171:174:int[] listToArray(java.util.List) -> listToArray
    139:140:int readContinuationByte() -> readContinuationByte
    46:50:int[] ucs2decode(java.lang.String) -> ucs2decode
    154:158:java.lang.String ucs2encode(int[]) -> ucs2encode
io.socket.utf8.UTF8Exception -> io.socket.utf8.UTF8Exception:
    8:8:void <init>() -> <init>
    12:12:void <init>(java.lang.String) -> <init>
    16:16:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    20:20:void <init>(java.lang.Throwable) -> <init>
io.socket.yeast.Yeast -> io.socket.yeast.Yeast:
    11:19:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    39:40:long decode(java.lang.String) -> decode
    26:33:java.lang.String encode(long) -> encode
    47:55:java.lang.String yeast() -> yeast
kotlin.ArrayIntrinsicsKt -> kotlin.ArrayIntrinsicsKt:
    26:26:java.lang.Object[] emptyArray() -> emptyArray
kotlin.DeprecationLevel -> kotlin.DeprecationLevel:
    63:63:void <init>(java.lang.String,int) -> <init>
kotlin.ExceptionsKt__ExceptionsKt -> kotlin.ExceptionsKt__ExceptionsKt:
    48:48:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    42:42:java.lang.StackTraceElement[] getStackTrace(java.lang.Throwable) -> getStackTrace
    20:20:void printStackTrace(java.lang.Throwable) -> printStackTrace
    27:27:void printStackTrace(java.lang.Throwable,java.io.PrintWriter) -> printStackTrace
    34:34:void printStackTrace(java.lang.Throwable,java.io.PrintStream) -> printStackTrace
kotlin.Experimental$Level -> kotlin.Experimental$Level:
    34:34:void <init>(java.lang.String,int) -> <init>
kotlin.HashCodeKt -> kotlin.HashCodeKt:
    18:18:int hashCode(java.lang.Object) -> hashCode
kotlin.InitializedLazyImpl -> kotlin.InitializedLazyImpl:
    95:95:void <init>(java.lang.Object) -> <init>
    95:95:java.lang.Object getValue() -> getValue
    99:99:java.lang.String toString() -> toString
kotlin.KotlinNullPointerException -> kotlin.KotlinNullPointerException:
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.KotlinVersion -> kotlin.KotlinVersion:
    75:75:void <clinit>() -> <clinit>
    17:23:void <init>(int,int,int) -> <init>
    21:21:void <init>(int,int) -> <init>
    17:17:int compareTo(java.lang.Object) -> compareTo
    45:45:int compareTo(kotlin.KotlinVersion) -> compareTo
    39:40:boolean equals(java.lang.Object) -> equals
    17:17:int getMajor() -> getMajor
    17:17:int getMinor() -> getMinor
    17:17:int getPatch() -> getPatch
    43:43:int hashCode() -> hashCode
    53:53:boolean isAtLeast(int,int) -> isAtLeast
    62:62:boolean isAtLeast(int,int,int) -> isAtLeast
    35:35:java.lang.String toString() -> toString
    27:26:int versionOf(int,int,int) -> versionOf
kotlin.KotlinVersion$Companion -> kotlin.KotlinVersion$Companion:
    64:64:void <init>() -> <init>
    64:64:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.LateinitKt -> kotlin.LateinitKt:
    23:23:boolean isInitialized(kotlin.reflect.KProperty0) -> isInitialized
kotlin.LazyKt__LazyJVMKt -> kotlin.LazyKt__LazyJVMKt:
    21:21:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
    34:35:kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0) -> lazy
    51:51:kotlin.Lazy lazy(java.lang.Object,kotlin.jvm.functions.Function0) -> lazy
kotlin.LazyKt__LazyKt -> kotlin.LazyKt__LazyKt:
    44:44:java.lang.Object getValue(kotlin.Lazy,java.lang.Object,kotlin.reflect.KProperty) -> getValue
    35:35:kotlin.Lazy lazyOf(java.lang.Object) -> lazyOf
kotlin.LazyThreadSafetyMode -> kotlin.LazyThreadSafetyMode:
    49:49:void <init>(java.lang.String,int) -> <init>
kotlin.NoWhenBranchMatchedException -> kotlin.NoWhenBranchMatchedException:
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    15:15:void <init>(java.lang.Throwable) -> <init>
kotlin.NotImplementedError -> kotlin.NotImplementedError:
    15:15:void <init>(java.lang.String) -> <init>
    15:15:void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.NumbersKt__BigDecimalsKt -> kotlin.NumbersKt__BigDecimalsKt:
    73:73:java.math.BigDecimal dec(java.math.BigDecimal) -> dec
    40:40:java.math.BigDecimal div(java.math.BigDecimal,java.math.BigDecimal) -> div
    66:66:java.math.BigDecimal inc(java.math.BigDecimal) -> inc
    25:25:java.math.BigDecimal minus(java.math.BigDecimal,java.math.BigDecimal) -> minus
    47:47:java.math.BigDecimal mod(java.math.BigDecimal,java.math.BigDecimal) -> mod
    19:19:java.math.BigDecimal plus(java.math.BigDecimal,java.math.BigDecimal) -> plus
    53:53:java.math.BigDecimal rem(java.math.BigDecimal,java.math.BigDecimal) -> rem
    31:31:java.math.BigDecimal times(java.math.BigDecimal,java.math.BigDecimal) -> times
    80:80:java.math.BigDecimal toBigDecimal(int) -> toBigDecimal
    89:89:java.math.BigDecimal toBigDecimal(int,java.math.MathContext) -> toBigDecimal
    96:96:java.math.BigDecimal toBigDecimal(long) -> toBigDecimal
    104:104:java.math.BigDecimal toBigDecimal(long,java.math.MathContext) -> toBigDecimal
    114:114:java.math.BigDecimal toBigDecimal(float) -> toBigDecimal
    125:125:java.math.BigDecimal toBigDecimal(float,java.math.MathContext) -> toBigDecimal
    134:134:java.math.BigDecimal toBigDecimal(double) -> toBigDecimal
    145:145:java.math.BigDecimal toBigDecimal(double,java.math.MathContext) -> toBigDecimal
    59:59:java.math.BigDecimal unaryMinus(java.math.BigDecimal) -> unaryMinus
kotlin.NumbersKt__BigIntegersKt -> kotlin.NumbersKt__BigIntegersKt:
    74:74:java.math.BigInteger and(java.math.BigInteger,java.math.BigInteger) -> and
    64:64:java.math.BigInteger dec(java.math.BigInteger) -> dec
    37:37:java.math.BigInteger div(java.math.BigInteger,java.math.BigInteger) -> div
    57:57:java.math.BigInteger inc(java.math.BigInteger) -> inc
    69:69:java.math.BigInteger inv(java.math.BigInteger) -> inv
    25:25:java.math.BigInteger minus(java.math.BigInteger,java.math.BigInteger) -> minus
    79:79:java.math.BigInteger or(java.math.BigInteger,java.math.BigInteger) -> or
    19:19:java.math.BigInteger plus(java.math.BigInteger,java.math.BigInteger) -> plus
    44:44:java.math.BigInteger rem(java.math.BigInteger,java.math.BigInteger) -> rem
    89:89:java.math.BigInteger shl(java.math.BigInteger,int) -> shl
    94:94:java.math.BigInteger shr(java.math.BigInteger,int) -> shr
    31:31:java.math.BigInteger times(java.math.BigInteger,java.math.BigInteger) -> times
    116:116:java.math.BigDecimal toBigDecimal(java.math.BigInteger) -> toBigDecimal
    128:128:java.math.BigDecimal toBigDecimal(java.math.BigInteger,int,java.math.MathContext) -> toBigDecimal
    127:131:java.math.BigDecimal toBigDecimal$default(java.math.BigInteger,int,java.math.MathContext,int,java.lang.Object) -> toBigDecimal$default
    102:102:java.math.BigInteger toBigInteger(int) -> toBigInteger
    109:109:java.math.BigInteger toBigInteger(long) -> toBigInteger
    50:50:java.math.BigInteger unaryMinus(java.math.BigInteger) -> unaryMinus
    84:84:java.math.BigInteger xor(java.math.BigInteger,java.math.BigInteger) -> xor
kotlin.NumbersKt__NumbersJVMKt -> kotlin.NumbersKt__NumbersJVMKt:
    111:111:int countLeadingZeroBits(int) -> countLeadingZeroBits
    185:185:int countLeadingZeroBits(long) -> countLeadingZeroBits
    103:103:int countOneBits(int) -> countOneBits
    177:177:int countOneBits(long) -> countOneBits
    119:119:int countTrailingZeroBits(int) -> countTrailingZeroBits
    193:193:int countTrailingZeroBits(long) -> countTrailingZeroBits
    70:70:double fromBits(kotlin.jvm.internal.DoubleCompanionObject,long) -> fromBits
    94:94:float fromBits(kotlin.jvm.internal.FloatCompanionObject,int) -> fromBits
    40:40:boolean isFinite(double) -> isFinite
    46:46:boolean isFinite(float) -> isFinite
    28:28:boolean isInfinite(double) -> isInfinite
    34:34:boolean isInfinite(float) -> isInfinite
    15:15:boolean isNaN(double) -> isNaN
    22:22:boolean isNaN(float) -> isNaN
    152:152:int rotateLeft(int,int) -> rotateLeft
    226:226:long rotateLeft(long,int) -> rotateLeft
    168:168:int rotateRight(int,int) -> rotateRight
    241:241:long rotateRight(long,int) -> rotateRight
    128:128:int takeHighestOneBit(int) -> takeHighestOneBit
    202:202:long takeHighestOneBit(long) -> takeHighestOneBit
    137:137:int takeLowestOneBit(int) -> takeLowestOneBit
    211:211:long takeLowestOneBit(long) -> takeLowestOneBit
    54:54:long toBits(double) -> toBits
    78:78:int toBits(float) -> toBits
    63:63:long toRawBits(double) -> toRawBits
    87:87:int toRawBits(float) -> toRawBits
kotlin.NumbersKt__NumbersKt -> kotlin.NumbersKt__NumbersKt:
    156:156:int countLeadingZeroBits(byte) -> countLeadingZeroBits
    230:230:int countLeadingZeroBits(short) -> countLeadingZeroBits
    148:148:int countOneBits(byte) -> countOneBits
    221:221:int countOneBits(short) -> countOneBits
    164:164:int countTrailingZeroBits(byte) -> countTrailingZeroBits
    238:238:int countTrailingZeroBits(short) -> countTrailingZeroBits
    173:173:byte takeHighestOneBit(byte) -> takeHighestOneBit
    247:247:short takeHighestOneBit(short) -> takeHighestOneBit
    182:182:byte takeLowestOneBit(byte) -> takeLowestOneBit
    256:256:short takeLowestOneBit(short) -> takeLowestOneBit
kotlin.Pair -> kotlin.Pair:
    26:26:void <init>(java.lang.Object,java.lang.Object) -> <init>
    27:27:java.lang.Object getFirst() -> getFirst
    28:28:java.lang.Object getSecond() -> getSecond
    34:34:java.lang.String toString() -> toString
kotlin.PreconditionsKt__AssertionsJVMKt -> kotlin.PreconditionsKt__AssertionsJVMKt:
    23:23:void assert(boolean) -> assert
    32:35:void assert(boolean,kotlin.jvm.functions.Function0) -> assert
kotlin.PreconditionsKt__PreconditionsKt -> kotlin.PreconditionsKt__PreconditionsKt:
    83:83:void check(boolean) -> check
    97:98:void check(boolean,kotlin.jvm.functions.Function0) -> check
    113:113:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    129:130:java.lang.Object checkNotNull(java.lang.Object,kotlin.jvm.functions.Function0) -> checkNotNull
    143:143:java.lang.Void error(java.lang.Object) -> error
    23:23:void require(boolean) -> require
    37:38:void require(boolean,kotlin.jvm.functions.Function0) -> require
    50:50:java.lang.Object requireNotNull(java.lang.Object) -> requireNotNull
    66:67:java.lang.Object requireNotNull(java.lang.Object,kotlin.jvm.functions.Function0) -> requireNotNull
kotlin.Result -> kotlin.Result:
    20:20:void <init>(java.lang.Object) -> <init>
    1:1:boolean equals(java.lang.Object) -> equals
    62:62:java.lang.Throwable exceptionOrNull-impl(java.lang.Object) -> exceptionOrNull-impl
    50:50:java.lang.Object getOrNull-impl(java.lang.Object) -> getOrNull-impl
    1:1:int hashCode() -> hashCode
    36:36:boolean isFailure-impl(java.lang.Object) -> isFailure-impl
    30:30:boolean isSuccess-impl(java.lang.Object) -> isSuccess-impl
    1:1:java.lang.String toString() -> toString
    73:74:java.lang.String toString-impl(java.lang.Object) -> toString-impl
kotlin.Result$Companion -> kotlin.Result$Companion:
    83:83:void <init>() -> <init>
    83:83:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:java.lang.Object failure(java.lang.Throwable) -> failure
    89:89:java.lang.Object success(java.lang.Object) -> success
kotlin.Result$Failure -> kotlin.Result$Failure:
    99:99:void <init>(java.lang.Throwable) -> <init>
    103:103:boolean equals(java.lang.Object) -> equals
    104:104:int hashCode() -> hashCode
    105:105:java.lang.String toString() -> toString
kotlin.ResultKt -> kotlin.ResultKt:
    116:116:java.lang.Object createFailure(java.lang.Throwable) -> createFailure
    221:223:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> fold
    201:201:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    186:188:java.lang.Object getOrElse(java.lang.Object,kotlin.jvm.functions.Function1) -> getOrElse
    168:168:java.lang.Object getOrThrow(java.lang.Object) -> getOrThrow
    244:245:java.lang.Object map(java.lang.Object,kotlin.jvm.functions.Function1) -> map
    261:262:java.lang.Object mapCatching(java.lang.Object,kotlin.jvm.functions.Function1) -> mapCatching
    316:316:java.lang.Object onFailure(java.lang.Object,kotlin.jvm.functions.Function1) -> onFailure
    330:330:java.lang.Object onSuccess(java.lang.Object,kotlin.jvm.functions.Function1) -> onSuccess
    280:282:java.lang.Object recover(java.lang.Object,kotlin.jvm.functions.Function1) -> recover
    298:300:java.lang.Object recoverCatching(java.lang.Object,kotlin.jvm.functions.Function1) -> recoverCatching
    137:139:java.lang.Object runCatching(kotlin.jvm.functions.Function0) -> runCatching
    151:153:java.lang.Object runCatching(java.lang.Object,kotlin.jvm.functions.Function1) -> runCatching
    126:126:void throwOnFailure(java.lang.Object) -> throwOnFailure
kotlin.SafePublicationLazyImpl -> kotlin.SafePublicationLazyImpl:
    125:124:void <clinit>() -> <clinit>
    90:94:void <init>(kotlin.jvm.functions.Function0) -> <init>
    98:114:java.lang.Object getValue() -> getValue
    117:117:boolean isInitialized() -> isInitialized
    119:119:java.lang.String toString() -> toString
    121:121:java.lang.Object writeReplace() -> writeReplace
kotlin.SafePublicationLazyImpl$Companion -> kotlin.SafePublicationLazyImpl$Companion:
    123:123:void <init>() -> <init>
    123:123:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.StandardKt__StandardKt -> kotlin.StandardKt__StandardKt:
    22:22:java.lang.Void TODO() -> TODO
    30:30:java.lang.Void TODO(java.lang.String) -> TODO
    98:98:java.lang.Object also(java.lang.Object,kotlin.jvm.functions.Function1) -> also
    83:83:java.lang.Object apply(java.lang.Object,kotlin.jvm.functions.Function1) -> apply
    112:112:java.lang.Object let(java.lang.Object,kotlin.jvm.functions.Function1) -> let
    151:151:void repeat(int,kotlin.jvm.functions.Function1) -> repeat
    44:44:java.lang.Object run(kotlin.jvm.functions.Function0) -> run
    57:57:java.lang.Object run(java.lang.Object,kotlin.jvm.functions.Function1) -> run
    124:124:java.lang.Object takeIf(java.lang.Object,kotlin.jvm.functions.Function1) -> takeIf
    136:136:java.lang.Object takeUnless(java.lang.Object,kotlin.jvm.functions.Function1) -> takeUnless
    70:70:java.lang.Object with(java.lang.Object,kotlin.jvm.functions.Function1) -> with
kotlin.StandardKt__SynchronizedKt -> kotlin.StandardKt__SynchronizedKt:
    23:29:java.lang.Object synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> synchronized
kotlin.SynchronizedLazyImpl -> kotlin.SynchronizedLazyImpl:
    55:59:void <init>(kotlin.jvm.functions.Function0,java.lang.Object) -> <init>
    55:55:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    63:69:java.lang.Object getValue() -> getValue
    82:82:boolean isInitialized() -> isInitialized
    84:84:java.lang.String toString() -> toString
    86:86:java.lang.Object writeReplace() -> writeReplace
kotlin.Triple -> kotlin.Triple:
    66:66:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    67:67:java.lang.Object getFirst() -> getFirst
    68:68:java.lang.Object getSecond() -> getSecond
    69:69:java.lang.Object getThird() -> getThird
    75:75:java.lang.String toString() -> toString
kotlin.TuplesKt -> kotlin.TuplesKt:
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> to
    49:49:java.util.List toList(kotlin.Pair) -> toList
    82:82:java.util.List toList(kotlin.Triple) -> toList
kotlin.TypeCastException -> kotlin.TypeCastException:
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.UByte -> kotlin.UByte:
    15:15:void <init>(byte) -> <init>
    150:150:byte and-7apg3OU(byte,byte) -> and-7apg3OU
    15:15:int compareTo(java.lang.Object) -> compareTo
    1:1:int compareTo-7apg3OU(byte) -> compareTo-7apg3OU
    46:46:int compareTo-7apg3OU(byte,byte) -> compareTo-7apg3OU
    70:70:int compareTo-VKZWuLQ(byte,long) -> compareTo-VKZWuLQ
    62:62:int compareTo-WZ4Q5Ns(byte,int) -> compareTo-WZ4Q5Ns
    54:54:int compareTo-xj2QHRw(byte,short) -> compareTo-xj2QHRw
    142:142:byte dec-impl(byte) -> dec-impl
    113:113:int div-7apg3OU(byte,byte) -> div-7apg3OU
    122:122:long div-VKZWuLQ(byte,long) -> div-VKZWuLQ
    119:119:int div-WZ4Q5Ns(byte,int) -> div-WZ4Q5Ns
    116:116:int div-xj2QHRw(byte,short) -> div-xj2QHRw
    1:1:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    139:139:byte inc-impl(byte) -> inc-impl
    159:159:byte inv-impl(byte) -> inv-impl
    87:87:int minus-7apg3OU(byte,byte) -> minus-7apg3OU
    96:96:long minus-VKZWuLQ(byte,long) -> minus-VKZWuLQ
    93:93:int minus-WZ4Q5Ns(byte,int) -> minus-WZ4Q5Ns
    90:90:int minus-xj2QHRw(byte,short) -> minus-xj2QHRw
    153:153:byte or-7apg3OU(byte,byte) -> or-7apg3OU
    74:74:int plus-7apg3OU(byte,byte) -> plus-7apg3OU
    83:83:long plus-VKZWuLQ(byte,long) -> plus-VKZWuLQ
    80:80:int plus-WZ4Q5Ns(byte,int) -> plus-WZ4Q5Ns
    77:77:int plus-xj2QHRw(byte,short) -> plus-xj2QHRw
    146:146:kotlin.ranges.UIntRange rangeTo-7apg3OU(byte,byte) -> rangeTo-7apg3OU
    126:126:int rem-7apg3OU(byte,byte) -> rem-7apg3OU
    135:135:long rem-VKZWuLQ(byte,long) -> rem-VKZWuLQ
    132:132:int rem-WZ4Q5Ns(byte,int) -> rem-WZ4Q5Ns
    129:129:int rem-xj2QHRw(byte,short) -> rem-xj2QHRw
    100:100:int times-7apg3OU(byte,byte) -> times-7apg3OU
    109:109:long times-VKZWuLQ(byte,long) -> times-VKZWuLQ
    106:106:int times-WZ4Q5Ns(byte,int) -> times-WZ4Q5Ns
    103:103:int times-xj2QHRw(byte,short) -> times-xj2QHRw
    1:1:java.lang.String toString() -> toString
    251:251:java.lang.String toString-impl(byte) -> toString-impl
    224:224:int toUInt-impl(byte) -> toUInt-impl
    234:234:long toULong-impl(byte) -> toULong-impl
    214:214:short toUShort-impl(byte) -> toUShort-impl
    156:156:byte xor-7apg3OU(byte,byte) -> xor-7apg3OU
kotlin.UByte$Companion -> kotlin.UByte$Companion:
    17:17:void <init>() -> <init>
    17:17:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.UByteArray -> kotlin.UByteArray:
    15:15:void <init>(byte[]) -> <init>
    18:18:byte[] constructor-impl(int) -> constructor-impl
    12:12:boolean contains(java.lang.Object) -> contains
    1:1:boolean contains-7apg3OU(byte) -> contains-7apg3OU
    55:55:boolean contains-7apg3OU(byte[],byte) -> contains-7apg3OU
    1:1:boolean containsAll(java.util.Collection) -> containsAll
    84:59:boolean containsAll-impl(byte[],java.util.Collection) -> containsAll-impl
    1:1:boolean equals(java.lang.Object) -> equals
    26:26:byte get-impl(byte[],int) -> get-impl
    1:1:int getSize() -> getSize
    39:39:int getSize-impl(byte[]) -> getSize-impl
    1:1:int hashCode() -> hashCode
    1:1:boolean isEmpty() -> isEmpty
    62:62:boolean isEmpty-impl(byte[]) -> isEmpty-impl
    1:1:kotlin.collections.UByteIterator iterator() -> iterator
    12:12:java.util.Iterator iterator() -> iterator
    42:42:kotlin.collections.UByteIterator iterator-impl(byte[]) -> iterator-impl
    35:35:void set-VurrAj0(byte[],int,byte) -> set-VurrAj0
    12:12:int size() -> size
    1:1:java.lang.String toString() -> toString
kotlin.UByteArray$Iterator -> kotlin.UByteArray$Iterator:
    44:44:void <init>(byte[]) -> <init>
    46:46:boolean hasNext() -> hasNext
    47:47:byte nextUByte() -> nextUByte
kotlin.UByteArrayKt -> kotlin.UByteArrayKt:
    76:76:byte[] UByteArray(int,kotlin.jvm.functions.Function1) -> UByteArray
kotlin.UByteKt -> kotlin.UByteKt:
    265:265:byte toUByte(byte) -> toUByte
    277:277:byte toUByte(short) -> toUByte
    289:289:byte toUByte(int) -> toUByte
    301:301:byte toUByte(long) -> toUByte
kotlin.UInt -> kotlin.UInt:
    15:15:void <init>(int) -> <init>
    156:156:int and-WZ4Q5Ns(int,int) -> and-WZ4Q5Ns
    15:15:int compareTo(java.lang.Object) -> compareTo
    45:45:int compareTo-7apg3OU(int,byte) -> compareTo-7apg3OU
    70:70:int compareTo-VKZWuLQ(int,long) -> compareTo-VKZWuLQ
    1:1:int compareTo-WZ4Q5Ns(int) -> compareTo-WZ4Q5Ns
    62:62:int compareTo-WZ4Q5Ns(int,int) -> compareTo-WZ4Q5Ns
    53:53:int compareTo-xj2QHRw(int,short) -> compareTo-xj2QHRw
    142:142:int dec-impl(int) -> dec-impl
    113:113:int div-7apg3OU(int,byte) -> div-7apg3OU
    122:122:long div-VKZWuLQ(int,long) -> div-VKZWuLQ
    119:119:int div-WZ4Q5Ns(int,int) -> div-WZ4Q5Ns
    116:116:int div-xj2QHRw(int,short) -> div-xj2QHRw
    1:1:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    139:139:int inc-impl(int) -> inc-impl
    165:165:int inv-impl(int) -> inv-impl
    87:87:int minus-7apg3OU(int,byte) -> minus-7apg3OU
    96:96:long minus-VKZWuLQ(int,long) -> minus-VKZWuLQ
    93:93:int minus-WZ4Q5Ns(int,int) -> minus-WZ4Q5Ns
    90:90:int minus-xj2QHRw(int,short) -> minus-xj2QHRw
    159:159:int or-WZ4Q5Ns(int,int) -> or-WZ4Q5Ns
    74:74:int plus-7apg3OU(int,byte) -> plus-7apg3OU
    83:83:long plus-VKZWuLQ(int,long) -> plus-VKZWuLQ
    80:80:int plus-WZ4Q5Ns(int,int) -> plus-WZ4Q5Ns
    77:77:int plus-xj2QHRw(int,short) -> plus-xj2QHRw
    146:146:kotlin.ranges.UIntRange rangeTo-WZ4Q5Ns(int,int) -> rangeTo-WZ4Q5Ns
    126:126:int rem-7apg3OU(int,byte) -> rem-7apg3OU
    135:135:long rem-VKZWuLQ(int,long) -> rem-VKZWuLQ
    132:132:int rem-WZ4Q5Ns(int,int) -> rem-WZ4Q5Ns
    129:129:int rem-xj2QHRw(int,short) -> rem-xj2QHRw
    150:150:int shl-impl(int,int) -> shl-impl
    153:153:int shr-impl(int,int) -> shr-impl
    100:100:int times-7apg3OU(int,byte) -> times-7apg3OU
    109:109:long times-VKZWuLQ(int,long) -> times-VKZWuLQ
    106:106:int times-WZ4Q5Ns(int,int) -> times-WZ4Q5Ns
    103:103:int times-xj2QHRw(int,short) -> times-xj2QHRw
    259:259:double toDouble-impl(int) -> toDouble-impl
    252:252:float toFloat-impl(int) -> toFloat-impl
    1:1:java.lang.String toString() -> toString
    261:261:java.lang.String toString-impl(int) -> toString-impl
    219:219:byte toUByte-impl(int) -> toUByte-impl
    242:242:long toULong-impl(int) -> toULong-impl
    229:229:short toUShort-impl(int) -> toUShort-impl
    162:162:int xor-WZ4Q5Ns(int,int) -> xor-WZ4Q5Ns
kotlin.UInt$Companion -> kotlin.UInt$Companion:
    17:17:void <init>() -> <init>
    17:17:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.UIntArray -> kotlin.UIntArray:
    15:15:void <init>(int[]) -> <init>
    18:18:int[] constructor-impl(int) -> constructor-impl
    12:12:boolean contains(java.lang.Object) -> contains
    1:1:boolean contains-WZ4Q5Ns(int) -> contains-WZ4Q5Ns
    55:55:boolean contains-WZ4Q5Ns(int[],int) -> contains-WZ4Q5Ns
    1:1:boolean containsAll(java.util.Collection) -> containsAll
    84:59:boolean containsAll-impl(int[],java.util.Collection) -> containsAll-impl
    1:1:boolean equals(java.lang.Object) -> equals
    26:26:int get-impl(int[],int) -> get-impl
    1:1:int getSize() -> getSize
    39:39:int getSize-impl(int[]) -> getSize-impl
    1:1:int hashCode() -> hashCode
    1:1:boolean isEmpty() -> isEmpty
    62:62:boolean isEmpty-impl(int[]) -> isEmpty-impl
    1:1:kotlin.collections.UIntIterator iterator() -> iterator
    12:12:java.util.Iterator iterator() -> iterator
    42:42:kotlin.collections.UIntIterator iterator-impl(int[]) -> iterator-impl
    35:35:void set-VXSXFK8(int[],int,int) -> set-VXSXFK8
    12:12:int size() -> size
    1:1:java.lang.String toString() -> toString
kotlin.UIntArray$Iterator -> kotlin.UIntArray$Iterator:
    44:44:void <init>(int[]) -> <init>
    46:46:boolean hasNext() -> hasNext
    47:47:int nextUInt() -> nextUInt
kotlin.UIntArrayKt -> kotlin.UIntArrayKt:
    76:76:int[] UIntArray(int,kotlin.jvm.functions.Function1) -> UIntArray
kotlin.UIntKt -> kotlin.UIntKt:
    276:276:int toUInt(byte) -> toUInt
    288:288:int toUInt(short) -> toUInt
    299:299:int toUInt(int) -> toUInt
    311:311:int toUInt(long) -> toUInt
    322:322:int toUInt(float) -> toUInt
    332:332:int toUInt(double) -> toUInt
kotlin.ULong -> kotlin.ULong:
    15:15:void <init>(long) -> <init>
    156:156:long and-VKZWuLQ(long,long) -> and-VKZWuLQ
    15:15:int compareTo(java.lang.Object) -> compareTo
    45:45:int compareTo-7apg3OU(long,byte) -> compareTo-7apg3OU
    1:1:int compareTo-VKZWuLQ(long) -> compareTo-VKZWuLQ
    70:70:int compareTo-VKZWuLQ(long,long) -> compareTo-VKZWuLQ
    61:61:int compareTo-WZ4Q5Ns(long,int) -> compareTo-WZ4Q5Ns
    53:53:int compareTo-xj2QHRw(long,short) -> compareTo-xj2QHRw
    142:142:long dec-impl(long) -> dec-impl
    113:113:long div-7apg3OU(long,byte) -> div-7apg3OU
    122:122:long div-VKZWuLQ(long,long) -> div-VKZWuLQ
    119:119:long div-WZ4Q5Ns(long,int) -> div-WZ4Q5Ns
    116:116:long div-xj2QHRw(long,short) -> div-xj2QHRw
    1:1:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    139:139:long inc-impl(long) -> inc-impl
    165:165:long inv-impl(long) -> inv-impl
    87:87:long minus-7apg3OU(long,byte) -> minus-7apg3OU
    96:96:long minus-VKZWuLQ(long,long) -> minus-VKZWuLQ
    93:93:long minus-WZ4Q5Ns(long,int) -> minus-WZ4Q5Ns
    90:90:long minus-xj2QHRw(long,short) -> minus-xj2QHRw
    159:159:long or-VKZWuLQ(long,long) -> or-VKZWuLQ
    74:74:long plus-7apg3OU(long,byte) -> plus-7apg3OU
    83:83:long plus-VKZWuLQ(long,long) -> plus-VKZWuLQ
    80:80:long plus-WZ4Q5Ns(long,int) -> plus-WZ4Q5Ns
    77:77:long plus-xj2QHRw(long,short) -> plus-xj2QHRw
    146:146:kotlin.ranges.ULongRange rangeTo-VKZWuLQ(long,long) -> rangeTo-VKZWuLQ
    126:126:long rem-7apg3OU(long,byte) -> rem-7apg3OU
    135:135:long rem-VKZWuLQ(long,long) -> rem-VKZWuLQ
    132:132:long rem-WZ4Q5Ns(long,int) -> rem-WZ4Q5Ns
    129:129:long rem-xj2QHRw(long,short) -> rem-xj2QHRw
    150:150:long shl-impl(long,int) -> shl-impl
    153:153:long shr-impl(long,int) -> shr-impl
    100:100:long times-7apg3OU(long,byte) -> times-7apg3OU
    109:109:long times-VKZWuLQ(long,long) -> times-VKZWuLQ
    106:106:long times-WZ4Q5Ns(long,int) -> times-WZ4Q5Ns
    103:103:long times-xj2QHRw(long,short) -> times-xj2QHRw
    262:262:double toDouble-impl(long) -> toDouble-impl
    253:253:float toFloat-impl(long) -> toFloat-impl
    1:1:java.lang.String toString() -> toString
    264:264:java.lang.String toString-impl(long) -> toString-impl
    220:220:byte toUByte-impl(long) -> toUByte-impl
    240:240:int toUInt-impl(long) -> toUInt-impl
    230:230:short toUShort-impl(long) -> toUShort-impl
    162:162:long xor-VKZWuLQ(long,long) -> xor-VKZWuLQ
kotlin.ULong$Companion -> kotlin.ULong$Companion:
    17:17:void <init>() -> <init>
    17:17:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.ULongArray -> kotlin.ULongArray:
    15:15:void <init>(long[]) -> <init>
    18:18:long[] constructor-impl(int) -> constructor-impl
    12:12:boolean contains(java.lang.Object) -> contains
    1:1:boolean contains-VKZWuLQ(long) -> contains-VKZWuLQ
    55:55:boolean contains-VKZWuLQ(long[],long) -> contains-VKZWuLQ
    1:1:boolean containsAll(java.util.Collection) -> containsAll
    84:59:boolean containsAll-impl(long[],java.util.Collection) -> containsAll-impl
    1:1:boolean equals(java.lang.Object) -> equals
    26:26:long get-impl(long[],int) -> get-impl
    1:1:int getSize() -> getSize
    39:39:int getSize-impl(long[]) -> getSize-impl
    1:1:int hashCode() -> hashCode
    1:1:boolean isEmpty() -> isEmpty
    62:62:boolean isEmpty-impl(long[]) -> isEmpty-impl
    1:1:kotlin.collections.ULongIterator iterator() -> iterator
    12:12:java.util.Iterator iterator() -> iterator
    42:42:kotlin.collections.ULongIterator iterator-impl(long[]) -> iterator-impl
    35:35:void set-k8EXiF4(long[],int,long) -> set-k8EXiF4
    12:12:int size() -> size
    1:1:java.lang.String toString() -> toString
kotlin.ULongArray$Iterator -> kotlin.ULongArray$Iterator:
    44:44:void <init>(long[]) -> <init>
    46:46:boolean hasNext() -> hasNext
    47:47:long nextULong() -> nextULong
kotlin.ULongArrayKt -> kotlin.ULongArrayKt:
    76:76:long[] ULongArray(int,kotlin.jvm.functions.Function1) -> ULongArray
kotlin.ULongKt -> kotlin.ULongKt:
    279:279:long toULong(byte) -> toULong
    291:291:long toULong(short) -> toULong
    303:303:long toULong(int) -> toULong
    314:314:long toULong(long) -> toULong
    325:325:long toULong(float) -> toULong
    335:335:long toULong(double) -> toULong
kotlin.UNINITIALIZED_VALUE -> kotlin.UNINITIALIZED_VALUE:
    71:71:void <clinit>() -> <clinit>
    71:71:void <init>() -> <init>
kotlin.UNumbersKt -> kotlin.UNumbersKt:
    185:185:int countLeadingZeroBits-7apg3OU(byte) -> countLeadingZeroBits-7apg3OU
    106:106:int countLeadingZeroBits-VKZWuLQ(long) -> countLeadingZeroBits-VKZWuLQ
    25:25:int countLeadingZeroBits-WZ4Q5Ns(int) -> countLeadingZeroBits-WZ4Q5Ns
    265:265:int countLeadingZeroBits-xj2QHRw(short) -> countLeadingZeroBits-xj2QHRw
    176:176:int countOneBits-7apg3OU(byte) -> countOneBits-7apg3OU
    97:97:int countOneBits-VKZWuLQ(long) -> countOneBits-VKZWuLQ
    16:16:int countOneBits-WZ4Q5Ns(int) -> countOneBits-WZ4Q5Ns
    256:256:int countOneBits-xj2QHRw(short) -> countOneBits-xj2QHRw
    194:194:int countTrailingZeroBits-7apg3OU(byte) -> countTrailingZeroBits-7apg3OU
    115:115:int countTrailingZeroBits-VKZWuLQ(long) -> countTrailingZeroBits-VKZWuLQ
    34:34:int countTrailingZeroBits-WZ4Q5Ns(int) -> countTrailingZeroBits-WZ4Q5Ns
    274:274:int countTrailingZeroBits-xj2QHRw(short) -> countTrailingZeroBits-xj2QHRw
    151:151:long rotateLeft-JSWoG40(long,int) -> rotateLeft-JSWoG40
    231:231:byte rotateLeft-LxnNnR4(byte,int) -> rotateLeft-LxnNnR4
    70:70:int rotateLeft-V7xB4Y4(int,int) -> rotateLeft-V7xB4Y4
    311:311:short rotateLeft-olVBNx4(short,int) -> rotateLeft-olVBNx4
    167:167:long rotateRight-JSWoG40(long,int) -> rotateRight-JSWoG40
    247:247:byte rotateRight-LxnNnR4(byte,int) -> rotateRight-LxnNnR4
    87:87:int rotateRight-V7xB4Y4(int,int) -> rotateRight-V7xB4Y4
    327:327:short rotateRight-olVBNx4(short,int) -> rotateRight-olVBNx4
    204:204:byte takeHighestOneBit-7apg3OU(byte) -> takeHighestOneBit-7apg3OU
    125:125:long takeHighestOneBit-VKZWuLQ(long) -> takeHighestOneBit-VKZWuLQ
    44:44:int takeHighestOneBit-WZ4Q5Ns(int) -> takeHighestOneBit-WZ4Q5Ns
    284:284:short takeHighestOneBit-xj2QHRw(short) -> takeHighestOneBit-xj2QHRw
    214:214:byte takeLowestOneBit-7apg3OU(byte) -> takeLowestOneBit-7apg3OU
    135:135:long takeLowestOneBit-VKZWuLQ(long) -> takeLowestOneBit-VKZWuLQ
    54:54:int takeLowestOneBit-WZ4Q5Ns(int) -> takeLowestOneBit-WZ4Q5Ns
    294:294:short takeLowestOneBit-xj2QHRw(short) -> takeLowestOneBit-xj2QHRw
kotlin.UShort -> kotlin.UShort:
    15:15:void <init>(short) -> <init>
    150:150:short and-xj2QHRw(short,short) -> and-xj2QHRw
    15:15:int compareTo(java.lang.Object) -> compareTo
    45:45:int compareTo-7apg3OU(short,byte) -> compareTo-7apg3OU
    70:70:int compareTo-VKZWuLQ(short,long) -> compareTo-VKZWuLQ
    62:62:int compareTo-WZ4Q5Ns(short,int) -> compareTo-WZ4Q5Ns
    1:1:int compareTo-xj2QHRw(short) -> compareTo-xj2QHRw
    54:54:int compareTo-xj2QHRw(short,short) -> compareTo-xj2QHRw
    142:142:short dec-impl(short) -> dec-impl
    113:113:int div-7apg3OU(short,byte) -> div-7apg3OU
    122:122:long div-VKZWuLQ(short,long) -> div-VKZWuLQ
    119:119:int div-WZ4Q5Ns(short,int) -> div-WZ4Q5Ns
    116:116:int div-xj2QHRw(short,short) -> div-xj2QHRw
    1:1:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    139:139:short inc-impl(short) -> inc-impl
    159:159:short inv-impl(short) -> inv-impl
    87:87:int minus-7apg3OU(short,byte) -> minus-7apg3OU
    96:96:long minus-VKZWuLQ(short,long) -> minus-VKZWuLQ
    93:93:int minus-WZ4Q5Ns(short,int) -> minus-WZ4Q5Ns
    90:90:int minus-xj2QHRw(short,short) -> minus-xj2QHRw
    153:153:short or-xj2QHRw(short,short) -> or-xj2QHRw
    74:74:int plus-7apg3OU(short,byte) -> plus-7apg3OU
    83:83:long plus-VKZWuLQ(short,long) -> plus-VKZWuLQ
    80:80:int plus-WZ4Q5Ns(short,int) -> plus-WZ4Q5Ns
    77:77:int plus-xj2QHRw(short,short) -> plus-xj2QHRw
    146:146:kotlin.ranges.UIntRange rangeTo-xj2QHRw(short,short) -> rangeTo-xj2QHRw
    126:126:int rem-7apg3OU(short,byte) -> rem-7apg3OU
    135:135:long rem-VKZWuLQ(short,long) -> rem-VKZWuLQ
    132:132:int rem-WZ4Q5Ns(short,int) -> rem-WZ4Q5Ns
    129:129:int rem-xj2QHRw(short,short) -> rem-xj2QHRw
    100:100:int times-7apg3OU(short,byte) -> times-7apg3OU
    109:109:long times-VKZWuLQ(short,long) -> times-VKZWuLQ
    106:106:int times-WZ4Q5Ns(short,int) -> times-WZ4Q5Ns
    103:103:int times-xj2QHRw(short,short) -> times-xj2QHRw
    1:1:java.lang.String toString() -> toString
    252:252:java.lang.String toString-impl(short) -> toString-impl
    212:212:byte toUByte-impl(short) -> toUByte-impl
    225:225:int toUInt-impl(short) -> toUInt-impl
    235:235:long toULong-impl(short) -> toULong-impl
    156:156:short xor-xj2QHRw(short,short) -> xor-xj2QHRw
kotlin.UShort$Companion -> kotlin.UShort$Companion:
    17:17:void <init>() -> <init>
    17:17:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.UShortArray -> kotlin.UShortArray:
    15:15:void <init>(short[]) -> <init>
    18:18:short[] constructor-impl(int) -> constructor-impl
    12:12:boolean contains(java.lang.Object) -> contains
    1:1:boolean contains-xj2QHRw(short) -> contains-xj2QHRw
    55:55:boolean contains-xj2QHRw(short[],short) -> contains-xj2QHRw
    1:1:boolean containsAll(java.util.Collection) -> containsAll
    84:59:boolean containsAll-impl(short[],java.util.Collection) -> containsAll-impl
    1:1:boolean equals(java.lang.Object) -> equals
    26:26:short get-impl(short[],int) -> get-impl
    1:1:int getSize() -> getSize
    39:39:int getSize-impl(short[]) -> getSize-impl
    1:1:int hashCode() -> hashCode
    1:1:boolean isEmpty() -> isEmpty
    62:62:boolean isEmpty-impl(short[]) -> isEmpty-impl
    1:1:kotlin.collections.UShortIterator iterator() -> iterator
    12:12:java.util.Iterator iterator() -> iterator
    42:42:kotlin.collections.UShortIterator iterator-impl(short[]) -> iterator-impl
    35:35:void set-01HTLdE(short[],int,short) -> set-01HTLdE
    12:12:int size() -> size
    1:1:java.lang.String toString() -> toString
kotlin.UShortArray$Iterator -> kotlin.UShortArray$Iterator:
    44:44:void <init>(short[]) -> <init>
    46:46:boolean hasNext() -> hasNext
    47:47:short nextUShort() -> nextUShort
kotlin.UShortArrayKt -> kotlin.UShortArrayKt:
    76:76:short[] UShortArray(int,kotlin.jvm.functions.Function1) -> UShortArray
kotlin.UShortKt -> kotlin.UShortKt:
    267:267:short toUShort(byte) -> toUShort
    278:278:short toUShort(short) -> toUShort
    290:290:short toUShort(int) -> toUShort
    302:302:short toUShort(long) -> toUShort
kotlin.UninitializedPropertyAccessException -> kotlin.UninitializedPropertyAccessException:
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    15:15:void <init>(java.lang.Throwable) -> <init>
kotlin.Unit -> kotlin.Unit:
    22:22:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
kotlin.UnsafeLazyImpl -> kotlin.UnsafeLazyImpl:
    74:76:void <init>(kotlin.jvm.functions.Function0) -> <init>
    80:85:java.lang.Object getValue() -> getValue
    88:88:boolean isInitialized() -> isInitialized
    90:90:java.lang.String toString() -> toString
    92:92:java.lang.Object writeReplace() -> writeReplace
kotlin.UnsignedKt -> kotlin.UnsignedKt:
    67:71:int doubleToUInt(double) -> doubleToUInt
    76:82:long doubleToULong(double) -> doubleToULong
    10:10:int uintCompare(int,int) -> uintCompare
    15:15:int uintDivide-J1ME1BU(int,int) -> uintDivide-J1ME1BU
    17:17:int uintRemainder-J1ME1BU(int,int) -> uintRemainder-J1ME1BU
    27:38:long ulongDivide-eb3DHEI(long,long) -> ulongDivide-eb3DHEI
    47:62:long ulongRemainder-eb3DHEI(long,long) -> ulongRemainder-eb3DHEI
    93:93:java.lang.String ulongToString(long) -> ulongToString
    96:104:java.lang.String ulongToString(long,int) -> ulongToString
kotlin._Assertions -> kotlin._Assertions:
    11:14:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
kotlin.annotation.AnnotationRetention -> kotlin.annotation.AnnotationRetention:
    63:63:void <init>(java.lang.String,int) -> <init>
kotlin.annotation.AnnotationTarget -> kotlin.annotation.AnnotationTarget:
    24:24:void <init>(java.lang.String,int) -> <init>
kotlin.collections.AbstractCollection -> kotlin.collections.AbstractCollection:
    15:15:void <init>() -> <init>
    43:19:boolean contains(java.lang.Object) -> contains
    46:22:boolean containsAll(java.util.Collection) -> containsAll
    24:24:boolean isEmpty() -> isEmpty
    15:15:int size() -> size
    34:34:java.lang.Object[] toArray() -> toArray
    40:40:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    26:26:java.lang.String toString() -> toString
kotlin.collections.AbstractCollection$toString$1 -> kotlin.collections.AbstractCollection$toString$1:
    15:15:java.lang.Object invoke(java.lang.Object) -> invoke
    27:27:java.lang.CharSequence invoke(java.lang.Object) -> invoke
kotlin.collections.AbstractIterator -> kotlin.collections.AbstractIterator:
    20:21:void <init>() -> <init>
    70:70:void done() -> done
    25:25:boolean hasNext() -> hasNext
    34:34:java.lang.Object next() -> next
    62:63:void setNext(java.lang.Object) -> setNext
    41:43:boolean tryToComputeNext() -> tryToComputeNext
kotlin.collections.AbstractList -> kotlin.collections.AbstractList:
    20:20:void <init>() -> <init>
    60:62:boolean equals(java.lang.Object) -> equals
    68:68:int hashCode() -> hashCode
    158:26:int indexOf(java.lang.Object) -> indexOf
    24:24:java.util.Iterator iterator() -> iterator
    164:167:int lastIndexOf(java.lang.Object) -> lastIndexOf
    30:30:java.util.ListIterator listIterator() -> listIterator
    32:32:java.util.ListIterator listIterator(int) -> listIterator
    34:34:java.util.List subList(int,int) -> subList
kotlin.collections.AbstractList$Companion -> kotlin.collections.AbstractList$Companion:
    104:104:void <init>() -> <init>
    104:104:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    131:128:void checkBoundsIndexes$kotlin_stdlib(int,int,int) -> checkBoundsIndexes$kotlin_stdlib
    107:107:void checkElementIndex$kotlin_stdlib(int,int) -> checkElementIndex$kotlin_stdlib
    113:113:void checkPositionIndex$kotlin_stdlib(int,int) -> checkPositionIndex$kotlin_stdlib
    122:119:void checkRangeIndexes$kotlin_stdlib(int,int,int) -> checkRangeIndexes$kotlin_stdlib
    144:149:boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection) -> orderedEquals$kotlin_stdlib
    137:138:int orderedHashCode$kotlin_stdlib(java.util.Collection) -> orderedHashCode$kotlin_stdlib
kotlin.collections.AbstractList$IteratorImpl -> kotlin.collections.AbstractList$IteratorImpl:
    70:70:void <init>(kotlin.collections.AbstractList) -> <init>
    72:72:int getIndex() -> getIndex
    74:74:boolean hasNext() -> hasNext
    77:77:java.lang.Object next() -> next
    72:72:void setIndex(int) -> setIndex
kotlin.collections.AbstractList$ListIteratorImpl -> kotlin.collections.AbstractList$ListIteratorImpl:
    85:89:void <init>(kotlin.collections.AbstractList,int) -> <init>
    92:92:boolean hasPrevious() -> hasPrevious
    94:94:int nextIndex() -> nextIndex
    97:97:java.lang.Object previous() -> previous
    101:101:int previousIndex() -> previousIndex
kotlin.collections.AbstractList$SubList -> kotlin.collections.AbstractList$SubList:
    36:41:void <init>(kotlin.collections.AbstractList,int,int) -> <init>
    45:47:java.lang.Object get(int) -> get
    50:50:int getSize() -> getSize
kotlin.collections.AbstractMap -> kotlin.collections.AbstractMap:
    21:21:void <init>() -> <init>
    21:21:java.lang.String access$toString(kotlin.collections.AbstractMap,java.util.Map$Entry) -> access$toString
    31:41:boolean containsEntry$kotlin_stdlib(java.util.Map$Entry) -> containsEntry$kotlin_stdlib
    24:24:boolean containsKey(java.lang.Object) -> containsKey
    27:27:boolean containsValue(java.lang.Object) -> containsValue
    21:21:java.util.Set entrySet() -> entrySet
    56:59:boolean equals(java.lang.Object) -> equals
    62:62:java.lang.Object get(java.lang.Object) -> get
    83:98:java.util.Set getKeys() -> getKeys
    73:73:int getSize() -> getSize
    119:134:java.util.Collection getValues() -> getValues
    70:70:int hashCode() -> hashCode
    140:160:java.util.Map$Entry implFindEntry(java.lang.Object) -> implFindEntry
    72:72:boolean isEmpty() -> isEmpty
    21:21:java.util.Set keySet() -> keySet
    21:21:int size() -> size
    105:105:java.lang.String toString() -> toString
    107:107:java.lang.String toString(java.util.Map$Entry) -> toString
    109:109:java.lang.String toString(java.lang.Object) -> toString
    21:21:java.util.Collection values() -> values
kotlin.collections.AbstractMap$Companion -> kotlin.collections.AbstractMap$Companion:
    142:142:void <init>() -> <init>
    142:142:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    147:148:boolean entryEquals$kotlin_stdlib(java.util.Map$Entry,java.lang.Object) -> entryEquals$kotlin_stdlib
    144:144:int entryHashCode$kotlin_stdlib(java.util.Map$Entry) -> entryHashCode$kotlin_stdlib
    145:145:java.lang.String entryToString$kotlin_stdlib(java.util.Map$Entry) -> entryToString$kotlin_stdlib
kotlin.collections.AbstractMap$keys$1 -> kotlin.collections.AbstractMap$keys$1:
    84:84:void <init>(kotlin.collections.AbstractMap) -> <init>
    85:85:boolean contains(java.lang.Object) -> contains
    95:95:int getSize() -> getSize
    88:89:java.util.Iterator iterator() -> iterator
kotlin.collections.AbstractMap$keys$1$iterator$1 -> kotlin.collections.AbstractMap$keys$1$iterator$1:
    89:89:void <init>(java.util.Iterator) -> <init>
    90:90:boolean hasNext() -> hasNext
    91:91:java.lang.Object next() -> next
kotlin.collections.AbstractMap$toString$1 -> kotlin.collections.AbstractMap$toString$1:
    21:21:java.lang.Object invoke(java.lang.Object) -> invoke
    105:105:java.lang.String invoke(java.util.Map$Entry) -> invoke
kotlin.collections.AbstractMap$values$1 -> kotlin.collections.AbstractMap$values$1:
    120:120:void <init>(kotlin.collections.AbstractMap) -> <init>
    121:121:boolean contains(java.lang.Object) -> contains
    131:131:int getSize() -> getSize
    124:125:java.util.Iterator iterator() -> iterator
kotlin.collections.AbstractMap$values$1$iterator$1 -> kotlin.collections.AbstractMap$values$1$iterator$1:
    125:125:void <init>(java.util.Iterator) -> <init>
    126:126:boolean hasNext() -> hasNext
    127:127:java.lang.Object next() -> next
kotlin.collections.AbstractMutableCollection -> kotlin.collections.AbstractMutableCollection:
    16:16:void <init>() -> <init>
    16:16:int size() -> size
kotlin.collections.AbstractMutableList -> kotlin.collections.AbstractMutableList:
    16:16:void <init>() -> <init>
    16:16:java.lang.Object remove(int) -> remove
    16:16:int size() -> size
kotlin.collections.AbstractMutableMap -> kotlin.collections.AbstractMutableMap:
    19:19:void <init>() -> <init>
    19:19:java.util.Set entrySet() -> entrySet
    19:19:java.util.Set getKeys() -> getKeys
    19:19:int getSize() -> getSize
    19:19:java.util.Collection getValues() -> getValues
    19:19:java.util.Set keySet() -> keySet
    19:19:int size() -> size
    19:19:java.util.Collection values() -> values
kotlin.collections.AbstractMutableSet -> kotlin.collections.AbstractMutableSet:
    16:16:void <init>() -> <init>
    16:16:int size() -> size
kotlin.collections.AbstractSet -> kotlin.collections.AbstractSet:
    15:15:void <init>() -> <init>
    24:25:boolean equals(java.lang.Object) -> equals
    31:31:int hashCode() -> hashCode
kotlin.collections.AbstractSet$Companion -> kotlin.collections.AbstractSet$Companion:
    33:33:void <init>() -> <init>
    33:33:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    43:44:boolean setEquals$kotlin_stdlib(java.util.Set,java.util.Set) -> setEquals$kotlin_stdlib
    36:37:int unorderedHashCode$kotlin_stdlib(java.util.Collection) -> unorderedHashCode$kotlin_stdlib
kotlin.collections.ArrayAsCollection -> kotlin.collections.ArrayAsCollection:
    55:55:void <init>(java.lang.Object[],boolean) -> <init>
    58:58:boolean contains(java.lang.Object) -> contains
    407:59:boolean containsAll(java.util.Collection) -> containsAll
    56:56:int getSize() -> getSize
    55:55:java.lang.Object[] getValues() -> getValues
    57:57:boolean isEmpty() -> isEmpty
    55:55:boolean isVarargs() -> isVarargs
    60:60:java.util.Iterator iterator() -> iterator
    55:55:int size() -> size
    62:62:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArraysKt__ArraysJVMKt -> kotlin.collections.ArraysKt__ArraysJVMKt:
    44:44:java.lang.Object[] arrayOfNulls(java.lang.Object[],int) -> arrayOfNulls
    60:60:int contentDeepHashCode(java.lang.Object[]) -> contentDeepHashCode
    49:49:void copyOfRangeToIndexCheck(int,int) -> copyOfRangeToIndexCheck
    18:18:java.lang.Object[] orEmpty(java.lang.Object[]) -> orEmpty
    25:25:java.lang.String toString(byte[],java.nio.charset.Charset) -> toString
    38:38:java.lang.Object[] toTypedArray(java.util.Collection) -> toTypedArray
kotlin.collections.ArraysKt__ArraysKt -> kotlin.collections.ArraysKt__ArraysKt:
    77:105:boolean contentDeepEquals(java.lang.Object[],java.lang.Object[]) -> contentDeepEquals
    117:118:java.lang.String contentDeepToString(java.lang.Object[]) -> contentDeepToString
    125:159:void contentDeepToStringInternal$ArraysKt__ArraysKt(java.lang.Object[],java.lang.StringBuilder,java.util.List) -> contentDeepToStringInternal$ArraysKt__ArraysKt
    162:22:java.util.List flatten(java.lang.Object[][]) -> flatten
    67:67:java.lang.Object ifEmpty(java.lang.Object[],kotlin.jvm.functions.Function0) -> ifEmpty
    54:54:boolean isNullOrEmpty(java.lang.Object[]) -> isNullOrEmpty
    34:40:kotlin.Pair unzip(kotlin.Pair[]) -> unzip
kotlin.collections.ArraysKt___ArraysJvmKt -> kotlin.collections.ArraysKt___ArraysJvmKt:
    129:129:java.util.List asList(java.lang.Object[]) -> asList
    136:136:java.util.List asList(byte[]) -> asList
    150:150:java.util.List asList(short[]) -> asList
    164:164:java.util.List asList(int[]) -> asList
    178:178:java.util.List asList(long[]) -> asList
    192:192:java.util.List asList(float[]) -> asList
    206:206:java.util.List asList(double[]) -> asList
    220:220:java.util.List asList(boolean[]) -> asList
    234:234:java.util.List asList(char[]) -> asList
    256:256:int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int) -> binarySearch
    271:271:int binarySearch(java.lang.Object[],java.lang.Object,int,int) -> binarySearch
    286:286:int binarySearch(byte[],byte,int,int) -> binarySearch
    301:301:int binarySearch(short[],short,int,int) -> binarySearch
    316:316:int binarySearch(int[],int,int,int) -> binarySearch
    331:331:int binarySearch(long[],long,int,int) -> binarySearch
    346:346:int binarySearch(float[],float,int,int) -> binarySearch
    361:361:int binarySearch(double[],double,int,int) -> binarySearch
    376:376:int binarySearch(char[],char,int,int) -> binarySearch
    255:255:int binarySearch$default(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object) -> binarySearch$default
    270:270:int binarySearch$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> binarySearch$default
    285:285:int binarySearch$default(byte[],byte,int,int,int,java.lang.Object) -> binarySearch$default
    300:300:int binarySearch$default(short[],short,int,int,int,java.lang.Object) -> binarySearch$default
    315:315:int binarySearch$default(int[],int,int,int,int,java.lang.Object) -> binarySearch$default
    330:330:int binarySearch$default(long[],long,int,int,int,java.lang.Object) -> binarySearch$default
    345:345:int binarySearch$default(float[],float,int,int,int,java.lang.Object) -> binarySearch$default
    360:360:int binarySearch$default(double[],double,int,int,int,java.lang.Object) -> binarySearch$default
    375:375:int binarySearch$default(char[],char,int,int,int,java.lang.Object) -> binarySearch$default
    393:396:boolean contentDeepEqualsInline(java.lang.Object[],java.lang.Object[]) -> contentDeepEqualsInline
    409:412:int contentDeepHashCodeInline(java.lang.Object[]) -> contentDeepHashCodeInline
    428:431:java.lang.String contentDeepToStringInline(java.lang.Object[]) -> contentDeepToStringInline
    444:444:boolean contentEquals(java.lang.Object[],java.lang.Object[]) -> contentEquals
    457:457:boolean contentEquals(byte[],byte[]) -> contentEquals
    470:470:boolean contentEquals(short[],short[]) -> contentEquals
    483:483:boolean contentEquals(int[],int[]) -> contentEquals
    496:496:boolean contentEquals(long[],long[]) -> contentEquals
    509:509:boolean contentEquals(float[],float[]) -> contentEquals
    522:522:boolean contentEquals(double[],double[]) -> contentEquals
    535:535:boolean contentEquals(boolean[],boolean[]) -> contentEquals
    548:548:boolean contentEquals(char[],char[]) -> contentEquals
    557:557:int contentHashCode(java.lang.Object[]) -> contentHashCode
    566:566:int contentHashCode(byte[]) -> contentHashCode
    575:575:int contentHashCode(short[]) -> contentHashCode
    584:584:int contentHashCode(int[]) -> contentHashCode
    593:593:int contentHashCode(long[]) -> contentHashCode
    602:602:int contentHashCode(float[]) -> contentHashCode
    611:611:int contentHashCode(double[]) -> contentHashCode
    620:620:int contentHashCode(boolean[]) -> contentHashCode
    629:629:int contentHashCode(char[]) -> contentHashCode
    640:640:java.lang.String contentToString(java.lang.Object[]) -> contentToString
    651:651:java.lang.String contentToString(byte[]) -> contentToString
    662:662:java.lang.String contentToString(short[]) -> contentToString
    673:673:java.lang.String contentToString(int[]) -> contentToString
    684:684:java.lang.String contentToString(long[]) -> contentToString
    695:695:java.lang.String contentToString(float[]) -> contentToString
    706:706:java.lang.String contentToString(double[]) -> contentToString
    717:717:java.lang.String contentToString(boolean[]) -> contentToString
    728:728:java.lang.String contentToString(char[]) -> contentToString
    750:750:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int) -> copyInto
    773:773:byte[] copyInto(byte[],byte[],int,int,int) -> copyInto
    796:796:short[] copyInto(short[],short[],int,int,int) -> copyInto
    819:819:int[] copyInto(int[],int[],int,int,int) -> copyInto
    842:842:long[] copyInto(long[],long[],int,int,int) -> copyInto
    865:865:float[] copyInto(float[],float[],int,int,int) -> copyInto
    888:888:double[] copyInto(double[],double[],int,int,int) -> copyInto
    911:911:boolean[] copyInto(boolean[],boolean[],int,int,int) -> copyInto
    934:934:char[] copyInto(char[],char[],int,int,int) -> copyInto
    749:749:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object) -> copyInto$default
    772:772:byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object) -> copyInto$default
    795:795:short[] copyInto$default(short[],short[],int,int,int,int,java.lang.Object) -> copyInto$default
    818:818:int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object) -> copyInto$default
    841:841:long[] copyInto$default(long[],long[],int,int,int,int,java.lang.Object) -> copyInto$default
    864:864:float[] copyInto$default(float[],float[],int,int,int,int,java.lang.Object) -> copyInto$default
    887:887:double[] copyInto$default(double[],double[],int,int,int,int,java.lang.Object) -> copyInto$default
    910:910:boolean[] copyInto$default(boolean[],boolean[],int,int,int,int,java.lang.Object) -> copyInto$default
    933:933:char[] copyInto$default(char[],char[],int,int,int,int,java.lang.Object) -> copyInto$default
    945:945:java.lang.Object[] copyOf(java.lang.Object[]) -> copyOf
    955:955:byte[] copyOf(byte[]) -> copyOf
    965:965:short[] copyOf(short[]) -> copyOf
    975:975:int[] copyOf(int[]) -> copyOf
    985:985:long[] copyOf(long[]) -> copyOf
    995:995:float[] copyOf(float[]) -> copyOf
    1005:1005:double[] copyOf(double[]) -> copyOf
    1015:1015:boolean[] copyOf(boolean[]) -> copyOf
    1025:1025:char[] copyOf(char[]) -> copyOf
    1039:1039:byte[] copyOf(byte[],int) -> copyOf
    1053:1053:short[] copyOf(short[],int) -> copyOf
    1067:1067:int[] copyOf(int[],int) -> copyOf
    1081:1081:long[] copyOf(long[],int) -> copyOf
    1095:1095:float[] copyOf(float[],int) -> copyOf
    1109:1109:double[] copyOf(double[],int) -> copyOf
    1123:1123:boolean[] copyOf(boolean[],int) -> copyOf
    1137:1137:char[] copyOf(char[],int) -> copyOf
    1151:1151:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    1311:1312:java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> copyOfRange
    1319:1320:byte[] copyOfRange(byte[],int,int) -> copyOfRange
    1327:1328:short[] copyOfRange(short[],int,int) -> copyOfRange
    1335:1336:int[] copyOfRange(int[],int,int) -> copyOfRange
    1343:1344:long[] copyOfRange(long[],int,int) -> copyOfRange
    1351:1352:float[] copyOfRange(float[],int,int) -> copyOfRange
    1359:1360:double[] copyOfRange(double[],int,int) -> copyOfRange
    1367:1368:boolean[] copyOfRange(boolean[],int,int) -> copyOfRange
    1375:1376:char[] copyOfRange(char[],int,int) -> copyOfRange
    1163:1166:java.lang.Object[] copyOfRangeInline(java.lang.Object[],int,int) -> copyOfRangeInline
    1180:1183:byte[] copyOfRangeInline(byte[],int,int) -> copyOfRangeInline
    1197:1200:short[] copyOfRangeInline(short[],int,int) -> copyOfRangeInline
    1214:1217:int[] copyOfRangeInline(int[],int,int) -> copyOfRangeInline
    1231:1234:long[] copyOfRangeInline(long[],int,int) -> copyOfRangeInline
    1248:1251:float[] copyOfRangeInline(float[],int,int) -> copyOfRangeInline
    1265:1268:double[] copyOfRangeInline(double[],int,int) -> copyOfRangeInline
    1282:1285:boolean[] copyOfRangeInline(boolean[],int,int) -> copyOfRangeInline
    1299:1302:char[] copyOfRangeInline(char[],int,int) -> copyOfRangeInline
    26:26:java.lang.Object elementAt(java.lang.Object[],int) -> elementAt
    36:36:byte elementAt(byte[],int) -> elementAt
    46:46:short elementAt(short[],int) -> elementAt
    56:56:int elementAt(int[],int) -> elementAt
    66:66:long elementAt(long[],int) -> elementAt
    76:76:float elementAt(float[],int) -> elementAt
    86:86:double elementAt(double[],int) -> elementAt
    96:96:boolean elementAt(boolean[],int) -> elementAt
    106:106:char elementAt(char[],int) -> elementAt
    1390:1390:void fill(java.lang.Object[],java.lang.Object,int,int) -> fill
    1404:1404:void fill(byte[],byte,int,int) -> fill
    1418:1418:void fill(short[],short,int,int) -> fill
    1432:1432:void fill(int[],int,int,int) -> fill
    1446:1446:void fill(long[],long,int,int) -> fill
    1460:1460:void fill(float[],float,int,int) -> fill
    1474:1474:void fill(double[],double,int,int) -> fill
    1488:1488:void fill(boolean[],boolean,int,int) -> fill
    1502:1502:void fill(char[],char,int,int) -> fill
    1389:1389:void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> fill$default
    1403:1403:void fill$default(byte[],byte,int,int,int,java.lang.Object) -> fill$default
    1417:1417:void fill$default(short[],short,int,int,int,java.lang.Object) -> fill$default
    1431:1431:void fill$default(int[],int,int,int,int,java.lang.Object) -> fill$default
    1445:1445:void fill$default(long[],long,int,int,int,java.lang.Object) -> fill$default
    1459:1459:void fill$default(float[],float,int,int,int,java.lang.Object) -> fill$default
    1473:1473:void fill$default(double[],double,int,int,int,java.lang.Object) -> fill$default
    1487:1487:void fill$default(boolean[],boolean,int,int,int,java.lang.Object) -> fill$default
    1501:1501:void fill$default(char[],char,int,int,int,java.lang.Object) -> fill$default
    113:113:java.util.List filterIsInstance(java.lang.Object[],java.lang.Class) -> filterIsInstance
    121:121:java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection,java.lang.Class) -> filterIsInstanceTo
    1509:1512:java.lang.Object[] plus(java.lang.Object[],java.lang.Object) -> plus
    1519:1522:byte[] plus(byte[],byte) -> plus
    1529:1532:short[] plus(short[],short) -> plus
    1539:1542:int[] plus(int[],int) -> plus
    1549:1552:long[] plus(long[],long) -> plus
    1559:1562:float[] plus(float[],float) -> plus
    1569:1572:double[] plus(double[],double) -> plus
    1579:1582:boolean[] plus(boolean[],boolean) -> plus
    1589:1592:char[] plus(char[],char) -> plus
    1599:1602:java.lang.Object[] plus(java.lang.Object[],java.util.Collection) -> plus
    1609:1612:byte[] plus(byte[],java.util.Collection) -> plus
    1619:1622:short[] plus(short[],java.util.Collection) -> plus
    1629:1632:int[] plus(int[],java.util.Collection) -> plus
    1639:1642:long[] plus(long[],java.util.Collection) -> plus
    1649:1652:float[] plus(float[],java.util.Collection) -> plus
    1659:1662:double[] plus(double[],java.util.Collection) -> plus
    1669:1672:boolean[] plus(boolean[],java.util.Collection) -> plus
    1679:1682:char[] plus(char[],java.util.Collection) -> plus
    1689:1693:java.lang.Object[] plus(java.lang.Object[],java.lang.Object[]) -> plus
    1700:1704:byte[] plus(byte[],byte[]) -> plus
    1711:1715:short[] plus(short[],short[]) -> plus
    1722:1726:int[] plus(int[],int[]) -> plus
    1733:1737:long[] plus(long[],long[]) -> plus
    1744:1748:float[] plus(float[],float[]) -> plus
    1755:1759:double[] plus(double[],double[]) -> plus
    1766:1770:boolean[] plus(boolean[],boolean[]) -> plus
    1777:1781:char[] plus(char[],char[]) -> plus
    1789:1789:java.lang.Object[] plusElement(java.lang.Object[],java.lang.Object) -> plusElement
    1798:1798:void sort(int[]) -> sort
    1807:1807:void sort(long[]) -> sort
    1816:1816:void sort(byte[]) -> sort
    1825:1825:void sort(short[]) -> sort
    1834:1834:void sort(double[]) -> sort
    1843:1843:void sort(float[]) -> sort
    1852:1852:void sort(char[]) -> sort
    1865:1865:void sort(java.lang.Comparable[]) -> sort
    1876:1876:void sort(java.lang.Object[]) -> sort
    1887:1887:void sort(java.lang.Object[],int,int) -> sort
    1896:1896:void sort(byte[],int,int) -> sort
    1905:1905:void sort(short[],int,int) -> sort
    1914:1914:void sort(int[],int,int) -> sort
    1923:1923:void sort(long[],int,int) -> sort
    1932:1932:void sort(float[],int,int) -> sort
    1941:1941:void sort(double[],int,int) -> sort
    1950:1950:void sort(char[],int,int) -> sort
    1886:1886:void sort$default(java.lang.Object[],int,int,int,java.lang.Object) -> sort$default
    1895:1895:void sort$default(byte[],int,int,int,java.lang.Object) -> sort$default
    1904:1904:void sort$default(short[],int,int,int,java.lang.Object) -> sort$default
    1913:1913:void sort$default(int[],int,int,int,java.lang.Object) -> sort$default
    1922:1922:void sort$default(long[],int,int,int,java.lang.Object) -> sort$default
    1931:1931:void sort$default(float[],int,int,int,java.lang.Object) -> sort$default
    1940:1940:void sort$default(double[],int,int,int,java.lang.Object) -> sort$default
    1949:1949:void sort$default(char[],int,int,int,java.lang.Object) -> sort$default
    1959:1959:void sortWith(java.lang.Object[],java.util.Comparator) -> sortWith
    1968:1968:void sortWith(java.lang.Object[],java.util.Comparator,int,int) -> sortWith
    1967:1967:void sortWith$default(java.lang.Object[],java.util.Comparator,int,int,int,java.lang.Object) -> sortWith$default
    2063:2063:java.util.SortedSet toSortedSet(java.lang.Comparable[]) -> toSortedSet
    2070:2070:java.util.SortedSet toSortedSet(byte[]) -> toSortedSet
    2077:2077:java.util.SortedSet toSortedSet(short[]) -> toSortedSet
    2084:2084:java.util.SortedSet toSortedSet(int[]) -> toSortedSet
    2091:2091:java.util.SortedSet toSortedSet(long[]) -> toSortedSet
    2098:2098:java.util.SortedSet toSortedSet(float[]) -> toSortedSet
    2105:2105:java.util.SortedSet toSortedSet(double[]) -> toSortedSet
    2112:2112:java.util.SortedSet toSortedSet(boolean[]) -> toSortedSet
    2119:2119:java.util.SortedSet toSortedSet(char[]) -> toSortedSet
    2128:2128:java.util.SortedSet toSortedSet(java.lang.Object[],java.util.Comparator) -> toSortedSet
    1975:1977:java.lang.Byte[] toTypedArray(byte[]) -> toTypedArray
    1986:1988:java.lang.Short[] toTypedArray(short[]) -> toTypedArray
    1997:1999:java.lang.Integer[] toTypedArray(int[]) -> toTypedArray
    2008:2010:java.lang.Long[] toTypedArray(long[]) -> toTypedArray
    2019:2021:java.lang.Float[] toTypedArray(float[]) -> toTypedArray
    2030:2032:java.lang.Double[] toTypedArray(double[]) -> toTypedArray
    2041:2043:java.lang.Boolean[] toTypedArray(boolean[]) -> toTypedArray
    2052:2054:java.lang.Character[] toTypedArray(char[]) -> toTypedArray
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$1:
    136:136:void <init>(byte[]) -> <init>
    136:136:boolean contains(java.lang.Object) -> contains
    139:139:boolean contains(byte) -> contains
    136:136:java.lang.Object get(int) -> get
    140:140:java.lang.Byte get(int) -> get
    137:137:int getSize() -> getSize
    136:136:int indexOf(java.lang.Object) -> indexOf
    141:141:int indexOf(byte) -> indexOf
    138:138:boolean isEmpty() -> isEmpty
    136:136:int lastIndexOf(java.lang.Object) -> lastIndexOf
    142:142:int lastIndexOf(byte) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$2:
    150:150:void <init>(short[]) -> <init>
    150:150:boolean contains(java.lang.Object) -> contains
    153:153:boolean contains(short) -> contains
    150:150:java.lang.Object get(int) -> get
    154:154:java.lang.Short get(int) -> get
    151:151:int getSize() -> getSize
    150:150:int indexOf(java.lang.Object) -> indexOf
    155:155:int indexOf(short) -> indexOf
    152:152:boolean isEmpty() -> isEmpty
    150:150:int lastIndexOf(java.lang.Object) -> lastIndexOf
    156:156:int lastIndexOf(short) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$3:
    164:164:void <init>(int[]) -> <init>
    164:164:boolean contains(java.lang.Object) -> contains
    167:167:boolean contains(int) -> contains
    164:164:java.lang.Object get(int) -> get
    168:168:java.lang.Integer get(int) -> get
    165:165:int getSize() -> getSize
    164:164:int indexOf(java.lang.Object) -> indexOf
    169:169:int indexOf(int) -> indexOf
    166:166:boolean isEmpty() -> isEmpty
    164:164:int lastIndexOf(java.lang.Object) -> lastIndexOf
    170:170:int lastIndexOf(int) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$4:
    178:178:void <init>(long[]) -> <init>
    178:178:boolean contains(java.lang.Object) -> contains
    181:181:boolean contains(long) -> contains
    178:178:java.lang.Object get(int) -> get
    182:182:java.lang.Long get(int) -> get
    179:179:int getSize() -> getSize
    178:178:int indexOf(java.lang.Object) -> indexOf
    183:183:int indexOf(long) -> indexOf
    180:180:boolean isEmpty() -> isEmpty
    178:178:int lastIndexOf(java.lang.Object) -> lastIndexOf
    184:184:int lastIndexOf(long) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$5:
    192:192:void <init>(float[]) -> <init>
    192:192:boolean contains(java.lang.Object) -> contains
    195:195:boolean contains(float) -> contains
    192:192:java.lang.Object get(int) -> get
    196:196:java.lang.Float get(int) -> get
    193:193:int getSize() -> getSize
    192:192:int indexOf(java.lang.Object) -> indexOf
    197:197:int indexOf(float) -> indexOf
    194:194:boolean isEmpty() -> isEmpty
    192:192:int lastIndexOf(java.lang.Object) -> lastIndexOf
    198:198:int lastIndexOf(float) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$6:
    206:206:void <init>(double[]) -> <init>
    206:206:boolean contains(java.lang.Object) -> contains
    209:209:boolean contains(double) -> contains
    206:206:java.lang.Object get(int) -> get
    210:210:java.lang.Double get(int) -> get
    207:207:int getSize() -> getSize
    206:206:int indexOf(java.lang.Object) -> indexOf
    211:211:int indexOf(double) -> indexOf
    208:208:boolean isEmpty() -> isEmpty
    206:206:int lastIndexOf(java.lang.Object) -> lastIndexOf
    212:212:int lastIndexOf(double) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$7:
    220:220:void <init>(boolean[]) -> <init>
    220:220:boolean contains(java.lang.Object) -> contains
    223:223:boolean contains(boolean) -> contains
    220:220:java.lang.Object get(int) -> get
    224:224:java.lang.Boolean get(int) -> get
    221:221:int getSize() -> getSize
    220:220:int indexOf(java.lang.Object) -> indexOf
    225:225:int indexOf(boolean) -> indexOf
    222:222:boolean isEmpty() -> isEmpty
    220:220:int lastIndexOf(java.lang.Object) -> lastIndexOf
    226:226:int lastIndexOf(boolean) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$8:
    234:234:void <init>(char[]) -> <init>
    234:234:boolean contains(java.lang.Object) -> contains
    237:237:boolean contains(char) -> contains
    234:234:java.lang.Object get(int) -> get
    238:238:java.lang.Character get(int) -> get
    235:235:int getSize() -> getSize
    234:234:int indexOf(java.lang.Object) -> indexOf
    239:239:int indexOf(char) -> indexOf
    236:236:boolean isEmpty() -> isEmpty
    234:234:int lastIndexOf(java.lang.Object) -> lastIndexOf
    240:240:int lastIndexOf(char) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysKt -> kotlin.collections.ArraysKt___ArraysKt:
    10068:10068:boolean all(java.lang.Object[],kotlin.jvm.functions.Function1) -> all
    10078:10078:boolean all(byte[],kotlin.jvm.functions.Function1) -> all
    10088:10088:boolean all(short[],kotlin.jvm.functions.Function1) -> all
    10098:10098:boolean all(int[],kotlin.jvm.functions.Function1) -> all
    10108:10108:boolean all(long[],kotlin.jvm.functions.Function1) -> all
    10118:10118:boolean all(float[],kotlin.jvm.functions.Function1) -> all
    10128:10128:boolean all(double[],kotlin.jvm.functions.Function1) -> all
    10138:10138:boolean all(boolean[],kotlin.jvm.functions.Function1) -> all
    10148:10148:boolean all(char[],kotlin.jvm.functions.Function1) -> all
    10158:10158:boolean any(java.lang.Object[]) -> any
    10167:10167:boolean any(byte[]) -> any
    10176:10176:boolean any(short[]) -> any
    10185:10185:boolean any(int[]) -> any
    10194:10194:boolean any(long[]) -> any
    10203:10203:boolean any(float[]) -> any
    10212:10212:boolean any(double[]) -> any
    10221:10221:boolean any(boolean[]) -> any
    10230:10230:boolean any(char[]) -> any
    10239:10239:boolean any(java.lang.Object[],kotlin.jvm.functions.Function1) -> any
    10249:10249:boolean any(byte[],kotlin.jvm.functions.Function1) -> any
    10259:10259:boolean any(short[],kotlin.jvm.functions.Function1) -> any
    10269:10269:boolean any(int[],kotlin.jvm.functions.Function1) -> any
    10279:10279:boolean any(long[],kotlin.jvm.functions.Function1) -> any
    10289:10289:boolean any(float[],kotlin.jvm.functions.Function1) -> any
    10299:10299:boolean any(double[],kotlin.jvm.functions.Function1) -> any
    10309:10309:boolean any(boolean[],kotlin.jvm.functions.Function1) -> any
    10319:10319:boolean any(char[],kotlin.jvm.functions.Function1) -> any
    14108:14109:java.lang.Iterable asIterable(java.lang.Object[]) -> asIterable
    14116:14117:java.lang.Iterable asIterable(byte[]) -> asIterable
    14124:14125:java.lang.Iterable asIterable(short[]) -> asIterable
    14132:14133:java.lang.Iterable asIterable(int[]) -> asIterable
    14140:14141:java.lang.Iterable asIterable(long[]) -> asIterable
    14148:14149:java.lang.Iterable asIterable(float[]) -> asIterable
    14156:14157:java.lang.Iterable asIterable(double[]) -> asIterable
    14164:14165:java.lang.Iterable asIterable(boolean[]) -> asIterable
    14172:14173:java.lang.Iterable asIterable(char[]) -> asIterable
    14182:14183:kotlin.sequences.Sequence asSequence(java.lang.Object[]) -> asSequence
    14192:14193:kotlin.sequences.Sequence asSequence(byte[]) -> asSequence
    14202:14203:kotlin.sequences.Sequence asSequence(short[]) -> asSequence
    14212:14213:kotlin.sequences.Sequence asSequence(int[]) -> asSequence
    14222:14223:kotlin.sequences.Sequence asSequence(long[]) -> asSequence
    14232:14233:kotlin.sequences.Sequence asSequence(float[]) -> asSequence
    14242:14243:kotlin.sequences.Sequence asSequence(double[]) -> asSequence
    14252:14253:kotlin.sequences.Sequence asSequence(boolean[]) -> asSequence
    14262:14263:kotlin.sequences.Sequence asSequence(char[]) -> asSequence
    7015:14759:java.util.Map associate(java.lang.Object[],kotlin.jvm.functions.Function1) -> associate
    7028:14763:java.util.Map associate(byte[],kotlin.jvm.functions.Function1) -> associate
    7041:14767:java.util.Map associate(short[],kotlin.jvm.functions.Function1) -> associate
    7054:14771:java.util.Map associate(int[],kotlin.jvm.functions.Function1) -> associate
    7067:14775:java.util.Map associate(long[],kotlin.jvm.functions.Function1) -> associate
    7080:14779:java.util.Map associate(float[],kotlin.jvm.functions.Function1) -> associate
    7093:14783:java.util.Map associate(double[],kotlin.jvm.functions.Function1) -> associate
    7106:14787:java.util.Map associate(boolean[],kotlin.jvm.functions.Function1) -> associate
    7119:14791:java.util.Map associate(char[],kotlin.jvm.functions.Function1) -> associate
    7132:14795:java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> associateBy
    7145:14799:java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1) -> associateBy
    7158:14803:java.util.Map associateBy(short[],kotlin.jvm.functions.Function1) -> associateBy
    7171:14807:java.util.Map associateBy(int[],kotlin.jvm.functions.Function1) -> associateBy
    7184:14811:java.util.Map associateBy(long[],kotlin.jvm.functions.Function1) -> associateBy
    7197:14815:java.util.Map associateBy(float[],kotlin.jvm.functions.Function1) -> associateBy
    7210:14819:java.util.Map associateBy(double[],kotlin.jvm.functions.Function1) -> associateBy
    7223:14823:java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1) -> associateBy
    7236:14827:java.util.Map associateBy(char[],kotlin.jvm.functions.Function1) -> associateBy
    7248:14831:java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    7260:14835:java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    7272:14839:java.util.Map associateBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    7284:14843:java.util.Map associateBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    7296:14847:java.util.Map associateBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    7308:14851:java.util.Map associateBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    7320:14855:java.util.Map associateBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    7332:14859:java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    7344:14863:java.util.Map associateBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    7356:7357:java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    7370:7371:java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    7384:7385:java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    7398:7399:java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    7412:7413:java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    7426:7427:java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    7440:7441:java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    7454:7455:java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    7468:7469:java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    7482:7483:java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    7496:7497:java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    7510:7511:java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    7524:7525:java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    7538:7539:java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    7552:7553:java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    7566:7567:java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    7580:7581:java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    7594:7595:java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    7607:7608:java.util.Map associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    7620:7621:java.util.Map associateTo(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    7633:7634:java.util.Map associateTo(short[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    7646:7647:java.util.Map associateTo(int[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    7659:7660:java.util.Map associateTo(long[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    7672:7673:java.util.Map associateTo(float[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    7685:7686:java.util.Map associateTo(double[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    7698:7699:java.util.Map associateTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    7711:7712:java.util.Map associateTo(char[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    14356:14360:double average(byte[]) -> average
    14369:14373:double average(short[]) -> average
    14382:14386:double average(int[]) -> average
    14395:14399:double average(long[]) -> average
    14408:14412:double average(float[]) -> average
    14421:14425:double average(double[]) -> average
    14273:14277:double averageOfByte(java.lang.Byte[]) -> averageOfByte
    14343:14347:double averageOfDouble(java.lang.Double[]) -> averageOfDouble
    14329:14333:double averageOfFloat(java.lang.Float[]) -> averageOfFloat
    14301:14305:double averageOfInt(java.lang.Integer[]) -> averageOfInt
    14315:14319:double averageOfLong(java.lang.Long[]) -> averageOfLong
    14287:14291:double averageOfShort(java.lang.Short[]) -> averageOfShort
    25:25:java.lang.Object component1(java.lang.Object[]) -> component1
    33:33:byte component1(byte[]) -> component1
    41:41:short component1(short[]) -> component1
    49:49:int component1(int[]) -> component1
    57:57:long component1(long[]) -> component1
    65:65:float component1(float[]) -> component1
    73:73:double component1(double[]) -> component1
    81:81:boolean component1(boolean[]) -> component1
    89:89:char component1(char[]) -> component1
    97:97:java.lang.Object component2(java.lang.Object[]) -> component2
    105:105:byte component2(byte[]) -> component2
    113:113:short component2(short[]) -> component2
    121:121:int component2(int[]) -> component2
    129:129:long component2(long[]) -> component2
    137:137:float component2(float[]) -> component2
    145:145:double component2(double[]) -> component2
    153:153:boolean component2(boolean[]) -> component2
    161:161:char component2(char[]) -> component2
    169:169:java.lang.Object component3(java.lang.Object[]) -> component3
    177:177:byte component3(byte[]) -> component3
    185:185:short component3(short[]) -> component3
    193:193:int component3(int[]) -> component3
    201:201:long component3(long[]) -> component3
    209:209:float component3(float[]) -> component3
    217:217:double component3(double[]) -> component3
    225:225:boolean component3(boolean[]) -> component3
    233:233:char component3(char[]) -> component3
    241:241:java.lang.Object component4(java.lang.Object[]) -> component4
    249:249:byte component4(byte[]) -> component4
    257:257:short component4(short[]) -> component4
    265:265:int component4(int[]) -> component4
    273:273:long component4(long[]) -> component4
    281:281:float component4(float[]) -> component4
    289:289:double component4(double[]) -> component4
    297:297:boolean component4(boolean[]) -> component4
    305:305:char component4(char[]) -> component4
    313:313:java.lang.Object component5(java.lang.Object[]) -> component5
    321:321:byte component5(byte[]) -> component5
    329:329:short component5(short[]) -> component5
    337:337:int component5(int[]) -> component5
    345:345:long component5(long[]) -> component5
    353:353:float component5(float[]) -> component5
    361:361:double component5(double[]) -> component5
    369:369:boolean component5(boolean[]) -> component5
    377:377:char component5(char[]) -> component5
    384:384:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    391:391:boolean contains(byte[],byte) -> contains
    398:398:boolean contains(short[],short) -> contains
    405:405:boolean contains(int[],int) -> contains
    412:412:boolean contains(long[],long) -> contains
    419:419:boolean contains(float[],float) -> contains
    426:426:boolean contains(double[],double) -> contains
    433:433:boolean contains(boolean[],boolean) -> contains
    440:440:boolean contains(char[],char) -> contains
    10328:10328:int count(java.lang.Object[]) -> count
    10336:10336:int count(byte[]) -> count
    10344:10344:int count(short[]) -> count
    10352:10352:int count(int[]) -> count
    10360:10360:int count(long[]) -> count
    10368:10368:int count(float[]) -> count
    10376:10376:int count(double[]) -> count
    10384:10384:int count(boolean[]) -> count
    10392:10392:int count(char[]) -> count
    10400:10400:int count(java.lang.Object[],kotlin.jvm.functions.Function1) -> count
    10409:10409:int count(byte[],kotlin.jvm.functions.Function1) -> count
    10418:10418:int count(short[],kotlin.jvm.functions.Function1) -> count
    10427:10427:int count(int[],kotlin.jvm.functions.Function1) -> count
    10436:10436:int count(long[],kotlin.jvm.functions.Function1) -> count
    10445:10445:int count(float[],kotlin.jvm.functions.Function1) -> count
    10454:10454:int count(double[],kotlin.jvm.functions.Function1) -> count
    10463:10463:int count(boolean[],kotlin.jvm.functions.Function1) -> count
    10472:10472:int count(char[],kotlin.jvm.functions.Function1) -> count
    9384:9384:java.util.List distinct(java.lang.Object[]) -> distinct
    9393:9393:java.util.List distinct(byte[]) -> distinct
    9402:9402:java.util.List distinct(short[]) -> distinct
    9411:9411:java.util.List distinct(int[]) -> distinct
    9420:9420:java.util.List distinct(long[]) -> distinct
    9429:9429:java.util.List distinct(float[]) -> distinct
    9438:9438:java.util.List distinct(double[]) -> distinct
    9447:9447:java.util.List distinct(boolean[]) -> distinct
    9456:9456:java.util.List distinct(char[]) -> distinct
    9466:9471:java.util.List distinctBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> distinctBy
    9483:9488:java.util.List distinctBy(byte[],kotlin.jvm.functions.Function1) -> distinctBy
    9500:9505:java.util.List distinctBy(short[],kotlin.jvm.functions.Function1) -> distinctBy
    9517:9522:java.util.List distinctBy(int[],kotlin.jvm.functions.Function1) -> distinctBy
    9534:9539:java.util.List distinctBy(long[],kotlin.jvm.functions.Function1) -> distinctBy
    9551:9556:java.util.List distinctBy(float[],kotlin.jvm.functions.Function1) -> distinctBy
    9568:9573:java.util.List distinctBy(double[],kotlin.jvm.functions.Function1) -> distinctBy
    9585:9590:java.util.List distinctBy(boolean[],kotlin.jvm.functions.Function1) -> distinctBy
    9602:9607:java.util.List distinctBy(char[],kotlin.jvm.functions.Function1) -> distinctBy
    2772:2771:java.util.List drop(java.lang.Object[],int) -> drop
    2784:2783:java.util.List drop(byte[],int) -> drop
    2796:2795:java.util.List drop(short[],int) -> drop
    2808:2807:java.util.List drop(int[],int) -> drop
    2820:2819:java.util.List drop(long[],int) -> drop
    2832:2831:java.util.List drop(float[],int) -> drop
    2844:2843:java.util.List drop(double[],int) -> drop
    2856:2855:java.util.List drop(boolean[],int) -> drop
    2868:2867:java.util.List drop(char[],int) -> drop
    2880:2879:java.util.List dropLast(java.lang.Object[],int) -> dropLast
    2892:2891:java.util.List dropLast(byte[],int) -> dropLast
    2904:2903:java.util.List dropLast(short[],int) -> dropLast
    2916:2915:java.util.List dropLast(int[],int) -> dropLast
    2928:2927:java.util.List dropLast(long[],int) -> dropLast
    2940:2939:java.util.List dropLast(float[],int) -> dropLast
    2952:2951:java.util.List dropLast(double[],int) -> dropLast
    2964:2963:java.util.List dropLast(boolean[],int) -> dropLast
    2976:2975:java.util.List dropLast(char[],int) -> dropLast
    2985:2990:java.util.List dropLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1) -> dropLastWhile
    2999:3004:java.util.List dropLastWhile(byte[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3013:3018:java.util.List dropLastWhile(short[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3027:3032:java.util.List dropLastWhile(int[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3041:3046:java.util.List dropLastWhile(long[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3055:3060:java.util.List dropLastWhile(float[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3069:3074:java.util.List dropLastWhile(double[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3083:3088:java.util.List dropLastWhile(boolean[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3097:3102:java.util.List dropLastWhile(char[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3112:3117:java.util.List dropWhile(java.lang.Object[],kotlin.jvm.functions.Function1) -> dropWhile
    3130:3135:java.util.List dropWhile(byte[],kotlin.jvm.functions.Function1) -> dropWhile
    3148:3153:java.util.List dropWhile(short[],kotlin.jvm.functions.Function1) -> dropWhile
    3166:3171:java.util.List dropWhile(int[],kotlin.jvm.functions.Function1) -> dropWhile
    3184:3189:java.util.List dropWhile(long[],kotlin.jvm.functions.Function1) -> dropWhile
    3202:3207:java.util.List dropWhile(float[],kotlin.jvm.functions.Function1) -> dropWhile
    3220:3225:java.util.List dropWhile(double[],kotlin.jvm.functions.Function1) -> dropWhile
    3238:3243:java.util.List dropWhile(boolean[],kotlin.jvm.functions.Function1) -> dropWhile
    3256:3261:java.util.List dropWhile(char[],kotlin.jvm.functions.Function1) -> dropWhile
    513:513:java.lang.Object elementAtOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    523:523:byte elementAtOrElse(byte[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    533:533:short elementAtOrElse(short[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    543:543:int elementAtOrElse(int[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    553:553:long elementAtOrElse(long[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    563:563:float elementAtOrElse(float[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    573:573:double elementAtOrElse(double[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    583:583:boolean elementAtOrElse(boolean[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    593:593:char elementAtOrElse(char[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    603:603:java.lang.Object elementAtOrNull(java.lang.Object[],int) -> elementAtOrNull
    613:613:java.lang.Byte elementAtOrNull(byte[],int) -> elementAtOrNull
    623:623:java.lang.Short elementAtOrNull(short[],int) -> elementAtOrNull
    633:633:java.lang.Integer elementAtOrNull(int[],int) -> elementAtOrNull
    643:643:java.lang.Long elementAtOrNull(long[],int) -> elementAtOrNull
    653:653:java.lang.Float elementAtOrNull(float[],int) -> elementAtOrNull
    663:663:java.lang.Double elementAtOrNull(double[],int) -> elementAtOrNull
    673:673:java.lang.Boolean elementAtOrNull(boolean[],int) -> elementAtOrNull
    683:683:java.lang.Character elementAtOrNull(char[],int) -> elementAtOrNull
    3271:14630:java.util.List filter(java.lang.Object[],kotlin.jvm.functions.Function1) -> filter
    3278:14632:java.util.List filter(byte[],kotlin.jvm.functions.Function1) -> filter
    3285:14634:java.util.List filter(short[],kotlin.jvm.functions.Function1) -> filter
    3292:14636:java.util.List filter(int[],kotlin.jvm.functions.Function1) -> filter
    3299:14638:java.util.List filter(long[],kotlin.jvm.functions.Function1) -> filter
    3306:14640:java.util.List filter(float[],kotlin.jvm.functions.Function1) -> filter
    3313:14642:java.util.List filter(double[],kotlin.jvm.functions.Function1) -> filter
    3320:14644:java.util.List filter(boolean[],kotlin.jvm.functions.Function1) -> filter
    3327:14646:java.util.List filter(char[],kotlin.jvm.functions.Function1) -> filter
    3336:14651:java.util.List filterIndexed(java.lang.Object[],kotlin.jvm.functions.Function2) -> filterIndexed
    3345:14658:java.util.List filterIndexed(byte[],kotlin.jvm.functions.Function2) -> filterIndexed
    3354:14665:java.util.List filterIndexed(short[],kotlin.jvm.functions.Function2) -> filterIndexed
    3363:14672:java.util.List filterIndexed(int[],kotlin.jvm.functions.Function2) -> filterIndexed
    3372:14679:java.util.List filterIndexed(long[],kotlin.jvm.functions.Function2) -> filterIndexed
    3381:14686:java.util.List filterIndexed(float[],kotlin.jvm.functions.Function2) -> filterIndexed
    3390:14693:java.util.List filterIndexed(double[],kotlin.jvm.functions.Function2) -> filterIndexed
    3399:14700:java.util.List filterIndexed(boolean[],kotlin.jvm.functions.Function2) -> filterIndexed
    3408:14707:java.util.List filterIndexed(char[],kotlin.jvm.functions.Function2) -> filterIndexed
    14712:3418:java.util.Collection filterIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    14715:3430:java.util.Collection filterIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    14718:3442:java.util.Collection filterIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    14721:3454:java.util.Collection filterIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    14724:3466:java.util.Collection filterIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    14727:3478:java.util.Collection filterIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    14730:3490:java.util.Collection filterIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    14733:3502:java.util.Collection filterIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    14736:3514:java.util.Collection filterIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    3523:14738:java.util.List filterIsInstance(java.lang.Object[]) -> filterIsInstance
    3530:3530:java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection) -> filterIsInstanceTo
    3538:14740:java.util.List filterNot(java.lang.Object[],kotlin.jvm.functions.Function1) -> filterNot
    3545:14742:java.util.List filterNot(byte[],kotlin.jvm.functions.Function1) -> filterNot
    3552:14744:java.util.List filterNot(short[],kotlin.jvm.functions.Function1) -> filterNot
    3559:14746:java.util.List filterNot(int[],kotlin.jvm.functions.Function1) -> filterNot
    3566:14748:java.util.List filterNot(long[],kotlin.jvm.functions.Function1) -> filterNot
    3573:14750:java.util.List filterNot(float[],kotlin.jvm.functions.Function1) -> filterNot
    3580:14752:java.util.List filterNot(double[],kotlin.jvm.functions.Function1) -> filterNot
    3587:14754:java.util.List filterNot(boolean[],kotlin.jvm.functions.Function1) -> filterNot
    3594:14756:java.util.List filterNot(char[],kotlin.jvm.functions.Function1) -> filterNot
    3601:3601:java.util.List filterNotNull(java.lang.Object[]) -> filterNotNull
    3608:3608:java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection) -> filterNotNullTo
    3616:3616:java.util.Collection filterNotTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    3624:3624:java.util.Collection filterNotTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    3632:3632:java.util.Collection filterNotTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    3640:3640:java.util.Collection filterNotTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    3648:3648:java.util.Collection filterNotTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    3656:3656:java.util.Collection filterNotTo(float[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    3664:3664:java.util.Collection filterNotTo(double[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    3672:3672:java.util.Collection filterNotTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    3680:3680:java.util.Collection filterNotTo(char[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    3688:3688:java.util.Collection filterTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3696:3696:java.util.Collection filterTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3704:3704:java.util.Collection filterTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3712:3712:java.util.Collection filterTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3720:3720:java.util.Collection filterTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3728:3728:java.util.Collection filterTo(float[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3736:3736:java.util.Collection filterTo(double[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3744:3744:java.util.Collection filterTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3752:3752:java.util.Collection filterTo(char[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    14567:14567:java.lang.Object find(java.lang.Object[],kotlin.jvm.functions.Function1) -> find
    14569:14569:java.lang.Byte find(byte[],kotlin.jvm.functions.Function1) -> find
    14571:14571:java.lang.Short find(short[],kotlin.jvm.functions.Function1) -> find
    14573:14573:java.lang.Integer find(int[],kotlin.jvm.functions.Function1) -> find
    14575:14575:java.lang.Long find(long[],kotlin.jvm.functions.Function1) -> find
    14577:14577:java.lang.Float find(float[],kotlin.jvm.functions.Function1) -> find
    14579:14579:java.lang.Double find(double[],kotlin.jvm.functions.Function1) -> find
    14581:14581:java.lang.Boolean find(boolean[],kotlin.jvm.functions.Function1) -> find
    14583:14583:java.lang.Character find(char[],kotlin.jvm.functions.Function1) -> find
    14585:14587:java.lang.Object findLast(java.lang.Object[],kotlin.jvm.functions.Function1) -> findLast
    14590:14592:java.lang.Byte findLast(byte[],kotlin.jvm.functions.Function1) -> findLast
    14595:14597:java.lang.Short findLast(short[],kotlin.jvm.functions.Function1) -> findLast
    14600:14602:java.lang.Integer findLast(int[],kotlin.jvm.functions.Function1) -> findLast
    14605:14607:java.lang.Long findLast(long[],kotlin.jvm.functions.Function1) -> findLast
    14610:14612:java.lang.Float findLast(float[],kotlin.jvm.functions.Function1) -> findLast
    14615:14617:java.lang.Double findLast(double[],kotlin.jvm.functions.Function1) -> findLast
    14620:14622:java.lang.Boolean findLast(boolean[],kotlin.jvm.functions.Function1) -> findLast
    14625:14627:java.lang.Character findLast(char[],kotlin.jvm.functions.Function1) -> findLast
    835:836:java.lang.Object first(java.lang.Object[]) -> first
    845:846:byte first(byte[]) -> first
    855:856:short first(short[]) -> first
    865:866:int first(int[]) -> first
    875:876:long first(long[]) -> first
    885:886:float first(float[]) -> first
    895:896:double first(double[]) -> first
    905:906:boolean first(boolean[]) -> first
    915:916:char first(char[]) -> first
    925:926:java.lang.Object first(java.lang.Object[],kotlin.jvm.functions.Function1) -> first
    934:935:byte first(byte[],kotlin.jvm.functions.Function1) -> first
    943:944:short first(short[],kotlin.jvm.functions.Function1) -> first
    952:953:int first(int[],kotlin.jvm.functions.Function1) -> first
    961:962:long first(long[],kotlin.jvm.functions.Function1) -> first
    970:971:float first(float[],kotlin.jvm.functions.Function1) -> first
    979:980:double first(double[],kotlin.jvm.functions.Function1) -> first
    988:989:boolean first(boolean[],kotlin.jvm.functions.Function1) -> first
    997:998:char first(char[],kotlin.jvm.functions.Function1) -> first
    1005:1005:java.lang.Object firstOrNull(java.lang.Object[]) -> firstOrNull
    1012:1012:java.lang.Byte firstOrNull(byte[]) -> firstOrNull
    1019:1019:java.lang.Short firstOrNull(short[]) -> firstOrNull
    1026:1026:java.lang.Integer firstOrNull(int[]) -> firstOrNull
    1033:1033:java.lang.Long firstOrNull(long[]) -> firstOrNull
    1040:1040:java.lang.Float firstOrNull(float[]) -> firstOrNull
    1047:1047:java.lang.Double firstOrNull(double[]) -> firstOrNull
    1054:1054:java.lang.Boolean firstOrNull(boolean[]) -> firstOrNull
    1061:1061:java.lang.Character firstOrNull(char[]) -> firstOrNull
    1068:1068:java.lang.Object firstOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> firstOrNull
    1076:1076:java.lang.Byte firstOrNull(byte[],kotlin.jvm.functions.Function1) -> firstOrNull
    1084:1084:java.lang.Short firstOrNull(short[],kotlin.jvm.functions.Function1) -> firstOrNull
    1092:1092:java.lang.Integer firstOrNull(int[],kotlin.jvm.functions.Function1) -> firstOrNull
    1100:1100:java.lang.Long firstOrNull(long[],kotlin.jvm.functions.Function1) -> firstOrNull
    1108:1108:java.lang.Float firstOrNull(float[],kotlin.jvm.functions.Function1) -> firstOrNull
    1116:1116:java.lang.Double firstOrNull(double[],kotlin.jvm.functions.Function1) -> firstOrNull
    1124:1124:java.lang.Boolean firstOrNull(boolean[],kotlin.jvm.functions.Function1) -> firstOrNull
    1132:1132:java.lang.Character firstOrNull(char[],kotlin.jvm.functions.Function1) -> firstOrNull
    8169:14868:java.util.List flatMap(java.lang.Object[],kotlin.jvm.functions.Function1) -> flatMap
    8176:14873:java.util.List flatMap(byte[],kotlin.jvm.functions.Function1) -> flatMap
    8183:14878:java.util.List flatMap(short[],kotlin.jvm.functions.Function1) -> flatMap
    8190:14883:java.util.List flatMap(int[],kotlin.jvm.functions.Function1) -> flatMap
    8197:14888:java.util.List flatMap(long[],kotlin.jvm.functions.Function1) -> flatMap
    8204:14893:java.util.List flatMap(float[],kotlin.jvm.functions.Function1) -> flatMap
    8211:14898:java.util.List flatMap(double[],kotlin.jvm.functions.Function1) -> flatMap
    8218:14903:java.util.List flatMap(boolean[],kotlin.jvm.functions.Function1) -> flatMap
    8225:14908:java.util.List flatMap(char[],kotlin.jvm.functions.Function1) -> flatMap
    8232:8234:java.util.Collection flatMapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    8243:8245:java.util.Collection flatMapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    8254:8256:java.util.Collection flatMapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    8265:8267:java.util.Collection flatMapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    8276:8278:java.util.Collection flatMapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    8287:8289:java.util.Collection flatMapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    8298:8300:java.util.Collection flatMapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    8309:8311:java.util.Collection flatMapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    8320:8322:java.util.Collection flatMapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    10481:10481:java.lang.Object fold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    10490:10490:java.lang.Object fold(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    10499:10499:java.lang.Object fold(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    10508:10508:java.lang.Object fold(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    10517:10517:java.lang.Object fold(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    10526:10526:java.lang.Object fold(float[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    10535:10535:java.lang.Object fold(double[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    10544:10544:java.lang.Object fold(boolean[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    10553:10553:java.lang.Object fold(char[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    10566:10566:java.lang.Object foldIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    10579:10579:java.lang.Object foldIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    10592:10592:java.lang.Object foldIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    10605:10605:java.lang.Object foldIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    10618:10618:java.lang.Object foldIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    10631:10631:java.lang.Object foldIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    10644:10644:java.lang.Object foldIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    10657:10657:java.lang.Object foldIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    10670:10670:java.lang.Object foldIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    10678:10681:java.lang.Object foldRight(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    10690:10693:java.lang.Object foldRight(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    10702:10705:java.lang.Object foldRight(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    10714:10717:java.lang.Object foldRight(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    10726:10729:java.lang.Object foldRight(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    10738:10741:java.lang.Object foldRight(float[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    10750:10753:java.lang.Object foldRight(double[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    10762:10765:java.lang.Object foldRight(boolean[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    10774:10777:java.lang.Object foldRight(char[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    10789:10792:java.lang.Object foldRightIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    10805:10808:java.lang.Object foldRightIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    10821:10824:java.lang.Object foldRightIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    10837:10840:java.lang.Object foldRightIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    10853:10856:java.lang.Object foldRightIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    10869:10872:java.lang.Object foldRightIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    10885:10888:java.lang.Object foldRightIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    10901:10904:java.lang.Object foldRightIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    10917:10920:java.lang.Object foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    10930:10930:void forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> forEach
    10937:10937:void forEach(byte[],kotlin.jvm.functions.Function1) -> forEach
    10944:10944:void forEach(short[],kotlin.jvm.functions.Function1) -> forEach
    10951:10951:void forEach(int[],kotlin.jvm.functions.Function1) -> forEach
    10958:10958:void forEach(long[],kotlin.jvm.functions.Function1) -> forEach
    10965:10965:void forEach(float[],kotlin.jvm.functions.Function1) -> forEach
    10972:10972:void forEach(double[],kotlin.jvm.functions.Function1) -> forEach
    10979:10979:void forEach(boolean[],kotlin.jvm.functions.Function1) -> forEach
    10986:10986:void forEach(char[],kotlin.jvm.functions.Function1) -> forEach
    10996:10996:void forEachIndexed(java.lang.Object[],kotlin.jvm.functions.Function2) -> forEachIndexed
    11006:11006:void forEachIndexed(byte[],kotlin.jvm.functions.Function2) -> forEachIndexed
    11016:11016:void forEachIndexed(short[],kotlin.jvm.functions.Function2) -> forEachIndexed
    11026:11026:void forEachIndexed(int[],kotlin.jvm.functions.Function2) -> forEachIndexed
    11036:11036:void forEachIndexed(long[],kotlin.jvm.functions.Function2) -> forEachIndexed
    11046:11046:void forEachIndexed(float[],kotlin.jvm.functions.Function2) -> forEachIndexed
    11056:11056:void forEachIndexed(double[],kotlin.jvm.functions.Function2) -> forEachIndexed
    11066:11066:void forEachIndexed(boolean[],kotlin.jvm.functions.Function2) -> forEachIndexed
    11076:11076:void forEachIndexed(char[],kotlin.jvm.functions.Function2) -> forEachIndexed
    6453:6453:kotlin.ranges.IntRange getIndices(java.lang.Object[]) -> getIndices
    6459:6459:kotlin.ranges.IntRange getIndices(byte[]) -> getIndices
    6465:6465:kotlin.ranges.IntRange getIndices(short[]) -> getIndices
    6471:6471:kotlin.ranges.IntRange getIndices(int[]) -> getIndices
    6477:6477:kotlin.ranges.IntRange getIndices(long[]) -> getIndices
    6483:6483:kotlin.ranges.IntRange getIndices(float[]) -> getIndices
    6489:6489:kotlin.ranges.IntRange getIndices(double[]) -> getIndices
    6495:6495:kotlin.ranges.IntRange getIndices(boolean[]) -> getIndices
    6501:6501:kotlin.ranges.IntRange getIndices(char[]) -> getIndices
    6651:6651:int getLastIndex(java.lang.Object[]) -> getLastIndex
    6657:6657:int getLastIndex(byte[]) -> getLastIndex
    6663:6663:int getLastIndex(short[]) -> getLastIndex
    6669:6669:int getLastIndex(int[]) -> getLastIndex
    6675:6675:int getLastIndex(long[]) -> getLastIndex
    6681:6681:int getLastIndex(float[]) -> getLastIndex
    6687:6687:int getLastIndex(double[]) -> getLastIndex
    6693:6693:int getLastIndex(boolean[]) -> getLastIndex
    6699:6699:int getLastIndex(char[]) -> getLastIndex
    1141:1141:java.lang.Object getOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1149:1149:byte getOrElse(byte[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1157:1157:short getOrElse(short[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1165:1165:int getOrElse(int[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1173:1173:long getOrElse(long[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1181:1181:float getOrElse(float[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1189:1189:double getOrElse(double[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1197:1197:boolean getOrElse(boolean[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1205:1205:char getOrElse(char[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1212:1212:java.lang.Object getOrNull(java.lang.Object[],int) -> getOrNull
    1219:1219:java.lang.Byte getOrNull(byte[],int) -> getOrNull
    1226:1226:java.lang.Short getOrNull(short[],int) -> getOrNull
    1233:1233:java.lang.Integer getOrNull(int[],int) -> getOrNull
    1240:1240:java.lang.Long getOrNull(long[],int) -> getOrNull
    1247:1247:java.lang.Float getOrNull(float[],int) -> getOrNull
    1254:1254:java.lang.Double getOrNull(double[],int) -> getOrNull
    1261:1261:java.lang.Boolean getOrNull(boolean[],int) -> getOrNull
    1268:1268:java.lang.Character getOrNull(char[],int) -> getOrNull
    8336:14921:java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> groupBy
    8348:14934:java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1) -> groupBy
    8360:14947:java.util.Map groupBy(short[],kotlin.jvm.functions.Function1) -> groupBy
    8372:14960:java.util.Map groupBy(int[],kotlin.jvm.functions.Function1) -> groupBy
    8384:14973:java.util.Map groupBy(long[],kotlin.jvm.functions.Function1) -> groupBy
    8396:14986:java.util.Map groupBy(float[],kotlin.jvm.functions.Function1) -> groupBy
    8408:14999:java.util.Map groupBy(double[],kotlin.jvm.functions.Function1) -> groupBy
    8420:15012:java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1) -> groupBy
    8432:15025:java.util.Map groupBy(char[],kotlin.jvm.functions.Function1) -> groupBy
    8445:15038:java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    8458:15051:java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    8471:15064:java.util.Map groupBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    8484:15077:java.util.Map groupBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    8497:15090:java.util.Map groupBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    8510:15103:java.util.Map groupBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    8523:15116:java.util.Map groupBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    8536:15129:java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    8549:15142:java.util.Map groupBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    8561:8564:java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    8578:8581:java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    8595:8598:java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    8612:8615:java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    8629:8632:java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    8646:8649:java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    8663:8666:java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    8680:8683:java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    8697:8700:java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    8715:8718:java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    8733:8736:java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    8751:8754:java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    8769:8772:java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    8787:8790:java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    8805:8808:java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    8823:8826:java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    8841:8844:java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    8859:8862:java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    8875:8875:kotlin.collections.Grouping groupingBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> groupingBy
    1276:1283:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    1295:1296:int indexOf(byte[],byte) -> indexOf
    1307:1308:int indexOf(short[],short) -> indexOf
    1319:1320:int indexOf(int[],int) -> indexOf
    1331:1332:int indexOf(long[],long) -> indexOf
    1343:1344:int indexOf(float[],float) -> indexOf
    1355:1356:int indexOf(double[],double) -> indexOf
    1367:1368:int indexOf(boolean[],boolean) -> indexOf
    1379:1380:int indexOf(char[],char) -> indexOf
    1391:1392:int indexOfFirst(java.lang.Object[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1403:1404:int indexOfFirst(byte[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1415:1416:int indexOfFirst(short[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1427:1428:int indexOfFirst(int[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1439:1440:int indexOfFirst(long[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1451:1452:int indexOfFirst(float[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1463:1464:int indexOfFirst(double[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1475:1476:int indexOfFirst(boolean[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1487:1488:int indexOfFirst(char[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1499:1500:int indexOfLast(java.lang.Object[],kotlin.jvm.functions.Function1) -> indexOfLast
    1511:1512:int indexOfLast(byte[],kotlin.jvm.functions.Function1) -> indexOfLast
    1523:1524:int indexOfLast(short[],kotlin.jvm.functions.Function1) -> indexOfLast
    1535:1536:int indexOfLast(int[],kotlin.jvm.functions.Function1) -> indexOfLast
    1547:1548:int indexOfLast(long[],kotlin.jvm.functions.Function1) -> indexOfLast
    1559:1560:int indexOfLast(float[],kotlin.jvm.functions.Function1) -> indexOfLast
    1571:1572:int indexOfLast(double[],kotlin.jvm.functions.Function1) -> indexOfLast
    1583:1584:int indexOfLast(boolean[],kotlin.jvm.functions.Function1) -> indexOfLast
    1595:1596:int indexOfLast(char[],kotlin.jvm.functions.Function1) -> indexOfLast
    9620:9621:java.util.Set intersect(java.lang.Object[],java.lang.Iterable) -> intersect
    9633:9634:java.util.Set intersect(byte[],java.lang.Iterable) -> intersect
    9646:9647:java.util.Set intersect(short[],java.lang.Iterable) -> intersect
    9659:9660:java.util.Set intersect(int[],java.lang.Iterable) -> intersect
    9672:9673:java.util.Set intersect(long[],java.lang.Iterable) -> intersect
    9685:9686:java.util.Set intersect(float[],java.lang.Iterable) -> intersect
    9698:9699:java.util.Set intersect(double[],java.lang.Iterable) -> intersect
    9711:9712:java.util.Set intersect(boolean[],java.lang.Iterable) -> intersect
    9724:9725:java.util.Set intersect(char[],java.lang.Iterable) -> intersect
    6508:6508:boolean isEmpty(java.lang.Object[]) -> isEmpty
    6516:6516:boolean isEmpty(byte[]) -> isEmpty
    6524:6524:boolean isEmpty(short[]) -> isEmpty
    6532:6532:boolean isEmpty(int[]) -> isEmpty
    6540:6540:boolean isEmpty(long[]) -> isEmpty
    6548:6548:boolean isEmpty(float[]) -> isEmpty
    6556:6556:boolean isEmpty(double[]) -> isEmpty
    6564:6564:boolean isEmpty(boolean[]) -> isEmpty
    6572:6572:boolean isEmpty(char[]) -> isEmpty
    6580:6580:boolean isNotEmpty(java.lang.Object[]) -> isNotEmpty
    6588:6588:boolean isNotEmpty(byte[]) -> isNotEmpty
    6596:6596:boolean isNotEmpty(short[]) -> isNotEmpty
    6604:6604:boolean isNotEmpty(int[]) -> isNotEmpty
    6612:6612:boolean isNotEmpty(long[]) -> isNotEmpty
    6620:6620:boolean isNotEmpty(float[]) -> isNotEmpty
    6628:6628:boolean isNotEmpty(double[]) -> isNotEmpty
    6636:6636:boolean isNotEmpty(boolean[]) -> isNotEmpty
    6644:6644:boolean isNotEmpty(char[]) -> isNotEmpty
    13783:13792:java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    13805:13817:java.lang.Appendable joinTo(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    13830:13842:java.lang.Appendable joinTo(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    13855:13867:java.lang.Appendable joinTo(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    13880:13892:java.lang.Appendable joinTo(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    13905:13917:java.lang.Appendable joinTo(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    13930:13942:java.lang.Appendable joinTo(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    13955:13967:java.lang.Appendable joinTo(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    13980:13992:java.lang.Appendable joinTo(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    13782:13782:java.lang.Appendable joinTo$default(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    13804:13804:java.lang.Appendable joinTo$default(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    13829:13829:java.lang.Appendable joinTo$default(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    13854:13854:java.lang.Appendable joinTo$default(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    13879:13879:java.lang.Appendable joinTo$default(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    13904:13904:java.lang.Appendable joinTo$default(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    13929:13929:java.lang.Appendable joinTo$default(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    13954:13954:java.lang.Appendable joinTo$default(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    13979:13979:java.lang.Appendable joinTo$default(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    14005:14005:java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    14017:14017:java.lang.String joinToString(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    14029:14029:java.lang.String joinToString(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    14041:14041:java.lang.String joinToString(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    14053:14053:java.lang.String joinToString(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    14065:14065:java.lang.String joinToString(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    14077:14077:java.lang.String joinToString(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    14089:14089:java.lang.String joinToString(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    14101:14101:java.lang.String joinToString(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    14004:14004:java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    14016:14016:java.lang.String joinToString$default(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    14028:14028:java.lang.String joinToString$default(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    14040:14040:java.lang.String joinToString$default(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    14052:14052:java.lang.String joinToString$default(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    14064:14064:java.lang.String joinToString$default(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    14076:14076:java.lang.String joinToString$default(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    14088:14088:java.lang.String joinToString$default(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    14100:14100:java.lang.String joinToString$default(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    1608:1609:java.lang.Object last(java.lang.Object[]) -> last
    1618:1619:byte last(byte[]) -> last
    1628:1629:short last(short[]) -> last
    1638:1639:int last(int[]) -> last
    1648:1649:long last(long[]) -> last
    1658:1659:float last(float[]) -> last
    1668:1669:double last(double[]) -> last
    1678:1679:boolean last(boolean[]) -> last
    1688:1689:char last(char[]) -> last
    1698:1702:java.lang.Object last(java.lang.Object[],kotlin.jvm.functions.Function1) -> last
    1710:1714:byte last(byte[],kotlin.jvm.functions.Function1) -> last
    1722:1726:short last(short[],kotlin.jvm.functions.Function1) -> last
    1734:1738:int last(int[],kotlin.jvm.functions.Function1) -> last
    1746:1750:long last(long[],kotlin.jvm.functions.Function1) -> last
    1758:1762:float last(float[],kotlin.jvm.functions.Function1) -> last
    1770:1774:double last(double[],kotlin.jvm.functions.Function1) -> last
    1782:1786:boolean last(boolean[],kotlin.jvm.functions.Function1) -> last
    1794:1798:char last(char[],kotlin.jvm.functions.Function1) -> last
    1806:1813:int lastIndexOf(java.lang.Object[],java.lang.Object) -> lastIndexOf
    1825:1826:int lastIndexOf(byte[],byte) -> lastIndexOf
    1837:1838:int lastIndexOf(short[],short) -> lastIndexOf
    1849:1850:int lastIndexOf(int[],int) -> lastIndexOf
    1861:1862:int lastIndexOf(long[],long) -> lastIndexOf
    1873:1874:int lastIndexOf(float[],float) -> lastIndexOf
    1885:1886:int lastIndexOf(double[],double) -> lastIndexOf
    1897:1898:int lastIndexOf(boolean[],boolean) -> lastIndexOf
    1909:1910:int lastIndexOf(char[],char) -> lastIndexOf
    1921:1921:java.lang.Object lastOrNull(java.lang.Object[]) -> lastOrNull
    1928:1928:java.lang.Byte lastOrNull(byte[]) -> lastOrNull
    1935:1935:java.lang.Short lastOrNull(short[]) -> lastOrNull
    1942:1942:java.lang.Integer lastOrNull(int[]) -> lastOrNull
    1949:1949:java.lang.Long lastOrNull(long[]) -> lastOrNull
    1956:1956:java.lang.Float lastOrNull(float[]) -> lastOrNull
    1963:1963:java.lang.Double lastOrNull(double[]) -> lastOrNull
    1970:1970:java.lang.Boolean lastOrNull(boolean[]) -> lastOrNull
    1977:1977:java.lang.Character lastOrNull(char[]) -> lastOrNull
    1984:1986:java.lang.Object lastOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> lastOrNull
    1995:1997:java.lang.Byte lastOrNull(byte[],kotlin.jvm.functions.Function1) -> lastOrNull
    2006:2008:java.lang.Short lastOrNull(short[],kotlin.jvm.functions.Function1) -> lastOrNull
    2017:2019:java.lang.Integer lastOrNull(int[],kotlin.jvm.functions.Function1) -> lastOrNull
    2028:2030:java.lang.Long lastOrNull(long[],kotlin.jvm.functions.Function1) -> lastOrNull
    2039:2041:java.lang.Float lastOrNull(float[],kotlin.jvm.functions.Function1) -> lastOrNull
    2050:2052:java.lang.Double lastOrNull(double[],kotlin.jvm.functions.Function1) -> lastOrNull
    2061:2063:java.lang.Boolean lastOrNull(boolean[],kotlin.jvm.functions.Function1) -> lastOrNull
    2072:2074:java.lang.Character lastOrNull(char[],kotlin.jvm.functions.Function1) -> lastOrNull
    8888:15272:java.util.List map(java.lang.Object[],kotlin.jvm.functions.Function1) -> map
    8898:15275:java.util.List map(byte[],kotlin.jvm.functions.Function1) -> map
    8908:15278:java.util.List map(short[],kotlin.jvm.functions.Function1) -> map
    8918:15281:java.util.List map(int[],kotlin.jvm.functions.Function1) -> map
    8928:15284:java.util.List map(long[],kotlin.jvm.functions.Function1) -> map
    8938:15287:java.util.List map(float[],kotlin.jvm.functions.Function1) -> map
    8948:15290:java.util.List map(double[],kotlin.jvm.functions.Function1) -> map
    8958:15293:java.util.List map(boolean[],kotlin.jvm.functions.Function1) -> map
    8968:15296:java.util.List map(char[],kotlin.jvm.functions.Function1) -> map
    8978:15300:java.util.List mapIndexed(java.lang.Object[],kotlin.jvm.functions.Function2) -> mapIndexed
    8988:15304:java.util.List mapIndexed(byte[],kotlin.jvm.functions.Function2) -> mapIndexed
    8998:15308:java.util.List mapIndexed(short[],kotlin.jvm.functions.Function2) -> mapIndexed
    9008:15312:java.util.List mapIndexed(int[],kotlin.jvm.functions.Function2) -> mapIndexed
    9018:15316:java.util.List mapIndexed(long[],kotlin.jvm.functions.Function2) -> mapIndexed
    9028:15320:java.util.List mapIndexed(float[],kotlin.jvm.functions.Function2) -> mapIndexed
    9038:15324:java.util.List mapIndexed(double[],kotlin.jvm.functions.Function2) -> mapIndexed
    9048:15328:java.util.List mapIndexed(boolean[],kotlin.jvm.functions.Function2) -> mapIndexed
    9058:15332:java.util.List mapIndexed(char[],kotlin.jvm.functions.Function2) -> mapIndexed
    9068:15334:java.util.List mapIndexedNotNull(java.lang.Object[],kotlin.jvm.functions.Function2) -> mapIndexedNotNull
    15340:9078:java.util.Collection mapIndexedNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedNotNullTo
    9090:9091:java.util.Collection mapIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    9103:9104:java.util.Collection mapIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    9116:9117:java.util.Collection mapIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    9129:9130:java.util.Collection mapIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    9142:9143:java.util.Collection mapIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    9155:9156:java.util.Collection mapIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    9168:9169:java.util.Collection mapIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    9181:9182:java.util.Collection mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    9194:9195:java.util.Collection mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    9204:15342:java.util.List mapNotNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> mapNotNull
    15346:9212:java.util.Collection mapNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    9221:9222:java.util.Collection mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    9231:9232:java.util.Collection mapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    9241:9242:java.util.Collection mapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    9251:9252:java.util.Collection mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    9261:9262:java.util.Collection mapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    9271:9272:java.util.Collection mapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    9281:9282:java.util.Collection mapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    9291:9292:java.util.Collection mapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    9301:9302:java.util.Collection mapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    11086:11094:java.lang.Double max(java.lang.Double[]) -> max
    11104:11112:java.lang.Float max(java.lang.Float[]) -> max
    11119:11123:java.lang.Comparable max(java.lang.Comparable[]) -> max
    11132:11138:java.lang.Byte max(byte[]) -> max
    11145:11151:java.lang.Short max(short[]) -> max
    11158:11164:java.lang.Integer max(int[]) -> max
    11171:11177:java.lang.Long max(long[]) -> max
    11186:11194:java.lang.Float max(float[]) -> max
    11203:11211:java.lang.Double max(double[]) -> max
    11218:11224:java.lang.Character max(char[]) -> max
    11233:11241:java.lang.Object maxBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxBy
    11255:11268:java.lang.Byte maxBy(byte[],kotlin.jvm.functions.Function1) -> maxBy
    11277:11290:java.lang.Short maxBy(short[],kotlin.jvm.functions.Function1) -> maxBy
    11299:11312:java.lang.Integer maxBy(int[],kotlin.jvm.functions.Function1) -> maxBy
    11321:11334:java.lang.Long maxBy(long[],kotlin.jvm.functions.Function1) -> maxBy
    11343:11356:java.lang.Float maxBy(float[],kotlin.jvm.functions.Function1) -> maxBy
    11365:11378:java.lang.Double maxBy(double[],kotlin.jvm.functions.Function1) -> maxBy
    11387:11400:java.lang.Boolean maxBy(boolean[],kotlin.jvm.functions.Function1) -> maxBy
    11409:11422:java.lang.Character maxBy(char[],kotlin.jvm.functions.Function1) -> maxBy
    11429:11433:java.lang.Object maxWith(java.lang.Object[],java.util.Comparator) -> maxWith
    11442:11448:java.lang.Byte maxWith(byte[],java.util.Comparator) -> maxWith
    11455:11461:java.lang.Short maxWith(short[],java.util.Comparator) -> maxWith
    11468:11474:java.lang.Integer maxWith(int[],java.util.Comparator) -> maxWith
    11481:11487:java.lang.Long maxWith(long[],java.util.Comparator) -> maxWith
    11494:11500:java.lang.Float maxWith(float[],java.util.Comparator) -> maxWith
    11507:11513:java.lang.Double maxWith(double[],java.util.Comparator) -> maxWith
    11520:11526:java.lang.Boolean maxWith(boolean[],java.util.Comparator) -> maxWith
    11533:11539:java.lang.Character maxWith(char[],java.util.Comparator) -> maxWith
    11549:11557:java.lang.Double min(java.lang.Double[]) -> min
    11567:11575:java.lang.Float min(java.lang.Float[]) -> min
    11582:11586:java.lang.Comparable min(java.lang.Comparable[]) -> min
    11595:11601:java.lang.Byte min(byte[]) -> min
    11608:11614:java.lang.Short min(short[]) -> min
    11621:11627:java.lang.Integer min(int[]) -> min
    11634:11640:java.lang.Long min(long[]) -> min
    11649:11657:java.lang.Float min(float[]) -> min
    11666:11674:java.lang.Double min(double[]) -> min
    11681:11687:java.lang.Character min(char[]) -> min
    11696:11704:java.lang.Object minBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> minBy
    11718:11731:java.lang.Byte minBy(byte[],kotlin.jvm.functions.Function1) -> minBy
    11740:11753:java.lang.Short minBy(short[],kotlin.jvm.functions.Function1) -> minBy
    11762:11775:java.lang.Integer minBy(int[],kotlin.jvm.functions.Function1) -> minBy
    11784:11797:java.lang.Long minBy(long[],kotlin.jvm.functions.Function1) -> minBy
    11806:11819:java.lang.Float minBy(float[],kotlin.jvm.functions.Function1) -> minBy
    11828:11841:java.lang.Double minBy(double[],kotlin.jvm.functions.Function1) -> minBy
    11850:11863:java.lang.Boolean minBy(boolean[],kotlin.jvm.functions.Function1) -> minBy
    11872:11885:java.lang.Character minBy(char[],kotlin.jvm.functions.Function1) -> minBy
    11892:11896:java.lang.Object minWith(java.lang.Object[],java.util.Comparator) -> minWith
    11905:11911:java.lang.Byte minWith(byte[],java.util.Comparator) -> minWith
    11918:11924:java.lang.Short minWith(short[],java.util.Comparator) -> minWith
    11931:11937:java.lang.Integer minWith(int[],java.util.Comparator) -> minWith
    11944:11950:java.lang.Long minWith(long[],java.util.Comparator) -> minWith
    11957:11963:java.lang.Float minWith(float[],java.util.Comparator) -> minWith
    11970:11976:java.lang.Double minWith(double[],java.util.Comparator) -> minWith
    11983:11989:java.lang.Boolean minWith(boolean[],java.util.Comparator) -> minWith
    11996:12002:java.lang.Character minWith(char[],java.util.Comparator) -> minWith
    12011:12011:boolean none(java.lang.Object[]) -> none
    12020:12020:boolean none(byte[]) -> none
    12029:12029:boolean none(short[]) -> none
    12038:12038:boolean none(int[]) -> none
    12047:12047:boolean none(long[]) -> none
    12056:12056:boolean none(float[]) -> none
    12065:12065:boolean none(double[]) -> none
    12074:12074:boolean none(boolean[]) -> none
    12083:12083:boolean none(char[]) -> none
    12092:12092:boolean none(java.lang.Object[],kotlin.jvm.functions.Function1) -> none
    12102:12102:boolean none(byte[],kotlin.jvm.functions.Function1) -> none
    12112:12112:boolean none(short[],kotlin.jvm.functions.Function1) -> none
    12122:12122:boolean none(int[],kotlin.jvm.functions.Function1) -> none
    12132:12132:boolean none(long[],kotlin.jvm.functions.Function1) -> none
    12142:12142:boolean none(float[],kotlin.jvm.functions.Function1) -> none
    12152:12152:boolean none(double[],kotlin.jvm.functions.Function1) -> none
    12162:12162:boolean none(boolean[],kotlin.jvm.functions.Function1) -> none
    12172:12172:boolean none(char[],kotlin.jvm.functions.Function1) -> none
    12924:12933:kotlin.Pair partition(java.lang.Object[],kotlin.jvm.functions.Function1) -> partition
    12942:12951:kotlin.Pair partition(byte[],kotlin.jvm.functions.Function1) -> partition
    12960:12969:kotlin.Pair partition(short[],kotlin.jvm.functions.Function1) -> partition
    12978:12987:kotlin.Pair partition(int[],kotlin.jvm.functions.Function1) -> partition
    12996:13005:kotlin.Pair partition(long[],kotlin.jvm.functions.Function1) -> partition
    13014:13023:kotlin.Pair partition(float[],kotlin.jvm.functions.Function1) -> partition
    13032:13041:kotlin.Pair partition(double[],kotlin.jvm.functions.Function1) -> partition
    13050:13059:kotlin.Pair partition(boolean[],kotlin.jvm.functions.Function1) -> partition
    13068:13077:kotlin.Pair partition(char[],kotlin.jvm.functions.Function1) -> partition
    2087:2087:java.lang.Object random(java.lang.Object[]) -> random
    2098:2098:byte random(byte[]) -> random
    2109:2109:short random(short[]) -> random
    2120:2120:int random(int[]) -> random
    2131:2131:long random(long[]) -> random
    2142:2142:float random(float[]) -> random
    2153:2153:double random(double[]) -> random
    2164:2164:boolean random(boolean[]) -> random
    2175:2175:char random(char[]) -> random
    2185:2186:java.lang.Object random(java.lang.Object[],kotlin.random.Random) -> random
    2197:2198:byte random(byte[],kotlin.random.Random) -> random
    2209:2210:short random(short[],kotlin.random.Random) -> random
    2221:2222:int random(int[],kotlin.random.Random) -> random
    2233:2234:long random(long[],kotlin.random.Random) -> random
    2245:2246:float random(float[],kotlin.random.Random) -> random
    2257:2258:double random(double[],kotlin.random.Random) -> random
    2269:2270:boolean random(boolean[],kotlin.random.Random) -> random
    2281:2282:char random(char[],kotlin.random.Random) -> random
    12180:12181:java.lang.Object reduce(java.lang.Object[],kotlin.jvm.functions.Function2) -> reduce
    12193:12194:byte reduce(byte[],kotlin.jvm.functions.Function2) -> reduce
    12206:12207:short reduce(short[],kotlin.jvm.functions.Function2) -> reduce
    12219:12220:int reduce(int[],kotlin.jvm.functions.Function2) -> reduce
    12232:12233:long reduce(long[],kotlin.jvm.functions.Function2) -> reduce
    12245:12246:float reduce(float[],kotlin.jvm.functions.Function2) -> reduce
    12258:12259:double reduce(double[],kotlin.jvm.functions.Function2) -> reduce
    12271:12272:boolean reduce(boolean[],kotlin.jvm.functions.Function2) -> reduce
    12284:12285:char reduce(char[],kotlin.jvm.functions.Function2) -> reduce
    12300:12301:java.lang.Object reduceIndexed(java.lang.Object[],kotlin.jvm.functions.Function3) -> reduceIndexed
    12316:12317:byte reduceIndexed(byte[],kotlin.jvm.functions.Function3) -> reduceIndexed
    12332:12333:short reduceIndexed(short[],kotlin.jvm.functions.Function3) -> reduceIndexed
    12348:12349:int reduceIndexed(int[],kotlin.jvm.functions.Function3) -> reduceIndexed
    12364:12365:long reduceIndexed(long[],kotlin.jvm.functions.Function3) -> reduceIndexed
    12380:12381:float reduceIndexed(float[],kotlin.jvm.functions.Function3) -> reduceIndexed
    12396:12397:double reduceIndexed(double[],kotlin.jvm.functions.Function3) -> reduceIndexed
    12412:12413:boolean reduceIndexed(boolean[],kotlin.jvm.functions.Function3) -> reduceIndexed
    12428:12429:char reduceIndexed(char[],kotlin.jvm.functions.Function3) -> reduceIndexed
    12441:12442:java.lang.Object reduceRight(java.lang.Object[],kotlin.jvm.functions.Function2) -> reduceRight
    12454:12455:byte reduceRight(byte[],kotlin.jvm.functions.Function2) -> reduceRight
    12467:12468:short reduceRight(short[],kotlin.jvm.functions.Function2) -> reduceRight
    12480:12481:int reduceRight(int[],kotlin.jvm.functions.Function2) -> reduceRight
    12493:12494:long reduceRight(long[],kotlin.jvm.functions.Function2) -> reduceRight
    12506:12507:float reduceRight(float[],kotlin.jvm.functions.Function2) -> reduceRight
    12519:12520:double reduceRight(double[],kotlin.jvm.functions.Function2) -> reduceRight
    12532:12533:boolean reduceRight(boolean[],kotlin.jvm.functions.Function2) -> reduceRight
    12545:12546:char reduceRight(char[],kotlin.jvm.functions.Function2) -> reduceRight
    12561:12562:java.lang.Object reduceRightIndexed(java.lang.Object[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    12578:12579:byte reduceRightIndexed(byte[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    12595:12596:short reduceRightIndexed(short[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    12612:12613:int reduceRightIndexed(int[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    12629:12630:long reduceRightIndexed(long[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    12646:12647:float reduceRightIndexed(float[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    12663:12664:double reduceRightIndexed(double[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    12680:12681:boolean reduceRightIndexed(boolean[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    12697:12698:char reduceRightIndexed(char[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    12909:12911:java.lang.Object[] requireNoNulls(java.lang.Object[]) -> requireNoNulls
    4759:4765:void reverse(java.lang.Object[]) -> reverse
    4774:4780:void reverse(byte[]) -> reverse
    4789:4795:void reverse(short[]) -> reverse
    4804:4810:void reverse(int[]) -> reverse
    4819:4825:void reverse(long[]) -> reverse
    4834:4840:void reverse(float[]) -> reverse
    4849:4855:void reverse(double[]) -> reverse
    4864:4870:void reverse(boolean[]) -> reverse
    4879:4885:void reverse(char[]) -> reverse
    4894:4896:java.util.List reversed(java.lang.Object[]) -> reversed
    4904:4906:java.util.List reversed(byte[]) -> reversed
    4914:4916:java.util.List reversed(short[]) -> reversed
    4924:4926:java.util.List reversed(int[]) -> reversed
    4934:4936:java.util.List reversed(long[]) -> reversed
    4944:4946:java.util.List reversed(float[]) -> reversed
    4954:4956:java.util.List reversed(double[]) -> reversed
    4964:4966:java.util.List reversed(boolean[]) -> reversed
    4974:4976:java.util.List reversed(char[]) -> reversed
    4984:4988:java.lang.Object[] reversedArray(java.lang.Object[]) -> reversedArray
    4996:5000:byte[] reversedArray(byte[]) -> reversedArray
    5008:5012:short[] reversedArray(short[]) -> reversedArray
    5020:5024:int[] reversedArray(int[]) -> reversedArray
    5032:5036:long[] reversedArray(long[]) -> reversedArray
    5044:5048:float[] reversedArray(float[]) -> reversedArray
    5056:5060:double[] reversedArray(double[]) -> reversedArray
    5068:5072:boolean[] reversedArray(boolean[]) -> reversedArray
    5080:5084:char[] reversedArray(char[]) -> reversedArray
    2290:2291:java.lang.Object single(java.lang.Object[]) -> single
    2301:2302:byte single(byte[]) -> single
    2312:2313:short single(short[]) -> single
    2323:2324:int single(int[]) -> single
    2334:2335:long single(long[]) -> single
    2345:2346:float single(float[]) -> single
    2356:2357:double single(double[]) -> single
    2367:2368:boolean single(boolean[]) -> single
    2378:2379:char single(char[]) -> single
    2391:2398:java.lang.Object single(java.lang.Object[],kotlin.jvm.functions.Function1) -> single
    2409:2416:byte single(byte[],kotlin.jvm.functions.Function1) -> single
    2427:2434:short single(short[],kotlin.jvm.functions.Function1) -> single
    2445:2452:int single(int[],kotlin.jvm.functions.Function1) -> single
    2463:2470:long single(long[],kotlin.jvm.functions.Function1) -> single
    2481:2488:float single(float[],kotlin.jvm.functions.Function1) -> single
    2499:2506:double single(double[],kotlin.jvm.functions.Function1) -> single
    2517:2524:boolean single(boolean[],kotlin.jvm.functions.Function1) -> single
    2535:2542:char single(char[],kotlin.jvm.functions.Function1) -> single
    2551:2551:java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
    2558:2558:java.lang.Byte singleOrNull(byte[]) -> singleOrNull
    2565:2565:java.lang.Short singleOrNull(short[]) -> singleOrNull
    2572:2572:java.lang.Integer singleOrNull(int[]) -> singleOrNull
    2579:2579:java.lang.Long singleOrNull(long[]) -> singleOrNull
    2586:2586:java.lang.Float singleOrNull(float[]) -> singleOrNull
    2593:2593:java.lang.Double singleOrNull(double[]) -> singleOrNull
    2600:2600:java.lang.Boolean singleOrNull(boolean[]) -> singleOrNull
    2607:2607:java.lang.Character singleOrNull(char[]) -> singleOrNull
    2616:2617:java.lang.Object singleOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> singleOrNull
    2633:2636:java.lang.Byte singleOrNull(byte[],kotlin.jvm.functions.Function1) -> singleOrNull
    2650:2653:java.lang.Short singleOrNull(short[],kotlin.jvm.functions.Function1) -> singleOrNull
    2667:2670:java.lang.Integer singleOrNull(int[],kotlin.jvm.functions.Function1) -> singleOrNull
    2684:2687:java.lang.Long singleOrNull(long[],kotlin.jvm.functions.Function1) -> singleOrNull
    2701:2704:java.lang.Float singleOrNull(float[],kotlin.jvm.functions.Function1) -> singleOrNull
    2718:2721:java.lang.Double singleOrNull(double[],kotlin.jvm.functions.Function1) -> singleOrNull
    2735:2738:java.lang.Boolean singleOrNull(boolean[],kotlin.jvm.functions.Function1) -> singleOrNull
    2752:2755:java.lang.Character singleOrNull(char[],kotlin.jvm.functions.Function1) -> singleOrNull
    3760:3761:java.util.List slice(java.lang.Object[],kotlin.ranges.IntRange) -> slice
    3768:3769:java.util.List slice(byte[],kotlin.ranges.IntRange) -> slice
    3776:3777:java.util.List slice(short[],kotlin.ranges.IntRange) -> slice
    3784:3785:java.util.List slice(int[],kotlin.ranges.IntRange) -> slice
    3792:3793:java.util.List slice(long[],kotlin.ranges.IntRange) -> slice
    3800:3801:java.util.List slice(float[],kotlin.ranges.IntRange) -> slice
    3808:3809:java.util.List slice(double[],kotlin.ranges.IntRange) -> slice
    3816:3817:java.util.List slice(boolean[],kotlin.ranges.IntRange) -> slice
    3824:3825:java.util.List slice(char[],kotlin.ranges.IntRange) -> slice
    3832:3836:java.util.List slice(java.lang.Object[],java.lang.Iterable) -> slice
    3845:3849:java.util.List slice(byte[],java.lang.Iterable) -> slice
    3858:3862:java.util.List slice(short[],java.lang.Iterable) -> slice
    3871:3875:java.util.List slice(int[],java.lang.Iterable) -> slice
    3884:3888:java.util.List slice(long[],java.lang.Iterable) -> slice
    3897:3901:java.util.List slice(float[],java.lang.Iterable) -> slice
    3910:3914:java.util.List slice(double[],java.lang.Iterable) -> slice
    3923:3927:java.util.List slice(boolean[],java.lang.Iterable) -> slice
    3936:3940:java.util.List slice(char[],java.lang.Iterable) -> slice
    3949:3952:java.lang.Object[] sliceArray(java.lang.Object[],java.util.Collection) -> sliceArray
    3961:3964:byte[] sliceArray(byte[],java.util.Collection) -> sliceArray
    3973:3976:short[] sliceArray(short[],java.util.Collection) -> sliceArray
    3985:3988:int[] sliceArray(int[],java.util.Collection) -> sliceArray
    3997:4000:long[] sliceArray(long[],java.util.Collection) -> sliceArray
    4009:4012:float[] sliceArray(float[],java.util.Collection) -> sliceArray
    4021:4024:double[] sliceArray(double[],java.util.Collection) -> sliceArray
    4033:4036:boolean[] sliceArray(boolean[],java.util.Collection) -> sliceArray
    4045:4048:char[] sliceArray(char[],java.util.Collection) -> sliceArray
    4057:4058:java.lang.Object[] sliceArray(java.lang.Object[],kotlin.ranges.IntRange) -> sliceArray
    4065:4066:byte[] sliceArray(byte[],kotlin.ranges.IntRange) -> sliceArray
    4073:4074:short[] sliceArray(short[],kotlin.ranges.IntRange) -> sliceArray
    4081:4082:int[] sliceArray(int[],kotlin.ranges.IntRange) -> sliceArray
    4089:4090:long[] sliceArray(long[],kotlin.ranges.IntRange) -> sliceArray
    4097:4098:float[] sliceArray(float[],kotlin.ranges.IntRange) -> sliceArray
    4105:4106:double[] sliceArray(double[],kotlin.ranges.IntRange) -> sliceArray
    4113:4114:boolean[] sliceArray(boolean[],kotlin.ranges.IntRange) -> sliceArray
    4121:4122:char[] sliceArray(char[],kotlin.ranges.IntRange) -> sliceArray
    5094:5094:void sortBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> sortBy
    5103:5103:void sortByDescending(java.lang.Object[],kotlin.jvm.functions.Function1) -> sortByDescending
    5112:5112:void sortDescending(java.lang.Comparable[]) -> sortDescending
    5119:5121:void sortDescending(byte[]) -> sortDescending
    5129:5131:void sortDescending(short[]) -> sortDescending
    5139:5141:void sortDescending(int[]) -> sortDescending
    5149:5151:void sortDescending(long[]) -> sortDescending
    5159:5161:void sortDescending(float[]) -> sortDescending
    5169:5171:void sortDescending(double[]) -> sortDescending
    5179:5181:void sortDescending(char[]) -> sortDescending
    5191:5191:java.util.List sorted(java.lang.Comparable[]) -> sorted
    5198:5198:java.util.List sorted(byte[]) -> sorted
    5205:5205:java.util.List sorted(short[]) -> sorted
    5212:5212:java.util.List sorted(int[]) -> sorted
    5219:5219:java.util.List sorted(long[]) -> sorted
    5226:5226:java.util.List sorted(float[]) -> sorted
    5233:5233:java.util.List sorted(double[]) -> sorted
    5240:5240:java.util.List sorted(char[]) -> sorted
    5249:5250:java.lang.Comparable[] sortedArray(java.lang.Comparable[]) -> sortedArray
    5257:5258:byte[] sortedArray(byte[]) -> sortedArray
    5265:5266:short[] sortedArray(short[]) -> sortedArray
    5273:5274:int[] sortedArray(int[]) -> sortedArray
    5281:5282:long[] sortedArray(long[]) -> sortedArray
    5289:5290:float[] sortedArray(float[]) -> sortedArray
    5297:5298:double[] sortedArray(double[]) -> sortedArray
    5305:5306:char[] sortedArray(char[]) -> sortedArray
    5315:5316:java.lang.Comparable[] sortedArrayDescending(java.lang.Comparable[]) -> sortedArrayDescending
    5323:5324:byte[] sortedArrayDescending(byte[]) -> sortedArrayDescending
    5331:5332:short[] sortedArrayDescending(short[]) -> sortedArrayDescending
    5339:5340:int[] sortedArrayDescending(int[]) -> sortedArrayDescending
    5347:5348:long[] sortedArrayDescending(long[]) -> sortedArrayDescending
    5355:5356:float[] sortedArrayDescending(float[]) -> sortedArrayDescending
    5363:5364:double[] sortedArrayDescending(double[]) -> sortedArrayDescending
    5371:5372:char[] sortedArrayDescending(char[]) -> sortedArrayDescending
    5381:5382:java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator) -> sortedArrayWith
    5391:5391:java.util.List sortedBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> sortedBy
    5398:5398:java.util.List sortedBy(byte[],kotlin.jvm.functions.Function1) -> sortedBy
    5405:5405:java.util.List sortedBy(short[],kotlin.jvm.functions.Function1) -> sortedBy
    5412:5412:java.util.List sortedBy(int[],kotlin.jvm.functions.Function1) -> sortedBy
    5419:5419:java.util.List sortedBy(long[],kotlin.jvm.functions.Function1) -> sortedBy
    5426:5426:java.util.List sortedBy(float[],kotlin.jvm.functions.Function1) -> sortedBy
    5433:5433:java.util.List sortedBy(double[],kotlin.jvm.functions.Function1) -> sortedBy
    5440:5440:java.util.List sortedBy(boolean[],kotlin.jvm.functions.Function1) -> sortedBy
    5447:5447:java.util.List sortedBy(char[],kotlin.jvm.functions.Function1) -> sortedBy
    5456:5456:java.util.List sortedByDescending(java.lang.Object[],kotlin.jvm.functions.Function1) -> sortedByDescending
    5463:5463:java.util.List sortedByDescending(byte[],kotlin.jvm.functions.Function1) -> sortedByDescending
    5470:5470:java.util.List sortedByDescending(short[],kotlin.jvm.functions.Function1) -> sortedByDescending
    5477:5477:java.util.List sortedByDescending(int[],kotlin.jvm.functions.Function1) -> sortedByDescending
    5484:5484:java.util.List sortedByDescending(long[],kotlin.jvm.functions.Function1) -> sortedByDescending
    5491:5491:java.util.List sortedByDescending(float[],kotlin.jvm.functions.Function1) -> sortedByDescending
    5498:5498:java.util.List sortedByDescending(double[],kotlin.jvm.functions.Function1) -> sortedByDescending
    5505:5505:java.util.List sortedByDescending(boolean[],kotlin.jvm.functions.Function1) -> sortedByDescending
    5512:5512:java.util.List sortedByDescending(char[],kotlin.jvm.functions.Function1) -> sortedByDescending
    5521:5521:java.util.List sortedDescending(java.lang.Comparable[]) -> sortedDescending
    5528:5528:java.util.List sortedDescending(byte[]) -> sortedDescending
    5535:5535:java.util.List sortedDescending(short[]) -> sortedDescending
    5542:5542:java.util.List sortedDescending(int[]) -> sortedDescending
    5549:5549:java.util.List sortedDescending(long[]) -> sortedDescending
    5556:5556:java.util.List sortedDescending(float[]) -> sortedDescending
    5563:5563:java.util.List sortedDescending(double[]) -> sortedDescending
    5570:5570:java.util.List sortedDescending(char[]) -> sortedDescending
    5579:5579:java.util.List sortedWith(java.lang.Object[],java.util.Comparator) -> sortedWith
    5586:5586:java.util.List sortedWith(byte[],java.util.Comparator) -> sortedWith
    5593:5593:java.util.List sortedWith(short[],java.util.Comparator) -> sortedWith
    5600:5600:java.util.List sortedWith(int[],java.util.Comparator) -> sortedWith
    5607:5607:java.util.List sortedWith(long[],java.util.Comparator) -> sortedWith
    5614:5614:java.util.List sortedWith(float[],java.util.Comparator) -> sortedWith
    5621:5621:java.util.List sortedWith(double[],java.util.Comparator) -> sortedWith
    5628:5628:java.util.List sortedWith(boolean[],java.util.Comparator) -> sortedWith
    5635:5635:java.util.List sortedWith(char[],java.util.Comparator) -> sortedWith
    9735:9736:java.util.Set subtract(java.lang.Object[],java.lang.Iterable) -> subtract
    9746:9747:java.util.Set subtract(byte[],java.lang.Iterable) -> subtract
    9757:9758:java.util.Set subtract(short[],java.lang.Iterable) -> subtract
    9768:9769:java.util.Set subtract(int[],java.lang.Iterable) -> subtract
    9779:9780:java.util.Set subtract(long[],java.lang.Iterable) -> subtract
    9790:9791:java.util.Set subtract(float[],java.lang.Iterable) -> subtract
    9801:9802:java.util.Set subtract(double[],java.lang.Iterable) -> subtract
    9812:9813:java.util.Set subtract(boolean[],java.lang.Iterable) -> subtract
    9823:9824:java.util.Set subtract(char[],java.lang.Iterable) -> subtract
    14505:14505:int sum(byte[]) -> sum
    14516:14516:int sum(short[]) -> sum
    14527:14527:int sum(int[]) -> sum
    14538:14538:long sum(long[]) -> sum
    14549:14549:float sum(float[]) -> sum
    14560:14560:double sum(double[]) -> sum
    12712:12713:int sumBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumBy
    12723:12724:int sumBy(byte[],kotlin.jvm.functions.Function1) -> sumBy
    12734:12735:int sumBy(short[],kotlin.jvm.functions.Function1) -> sumBy
    12745:12746:int sumBy(int[],kotlin.jvm.functions.Function1) -> sumBy
    12756:12757:int sumBy(long[],kotlin.jvm.functions.Function1) -> sumBy
    12767:12768:int sumBy(float[],kotlin.jvm.functions.Function1) -> sumBy
    12778:12779:int sumBy(double[],kotlin.jvm.functions.Function1) -> sumBy
    12789:12790:int sumBy(boolean[],kotlin.jvm.functions.Function1) -> sumBy
    12800:12801:int sumBy(char[],kotlin.jvm.functions.Function1) -> sumBy
    12811:12812:double sumByDouble(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumByDouble
    12822:12823:double sumByDouble(byte[],kotlin.jvm.functions.Function1) -> sumByDouble
    12833:12834:double sumByDouble(short[],kotlin.jvm.functions.Function1) -> sumByDouble
    12844:12845:double sumByDouble(int[],kotlin.jvm.functions.Function1) -> sumByDouble
    12855:12856:double sumByDouble(long[],kotlin.jvm.functions.Function1) -> sumByDouble
    12866:12867:double sumByDouble(float[],kotlin.jvm.functions.Function1) -> sumByDouble
    12877:12878:double sumByDouble(double[],kotlin.jvm.functions.Function1) -> sumByDouble
    12888:12889:double sumByDouble(boolean[],kotlin.jvm.functions.Function1) -> sumByDouble
    12899:12900:double sumByDouble(char[],kotlin.jvm.functions.Function1) -> sumByDouble
    14434:14434:int sumOfByte(java.lang.Byte[]) -> sumOfByte
    14494:14494:double sumOfDouble(java.lang.Double[]) -> sumOfDouble
    14482:14482:float sumOfFloat(java.lang.Float[]) -> sumOfFloat
    14458:14458:int sumOfInt(java.lang.Integer[]) -> sumOfInt
    14470:14470:long sumOfLong(java.lang.Long[]) -> sumOfLong
    14446:14446:int sumOfShort(java.lang.Short[]) -> sumOfShort
    4134:4133:java.util.List take(java.lang.Object[],int) -> take
    4156:4155:java.util.List take(byte[],int) -> take
    4178:4177:java.util.List take(short[],int) -> take
    4200:4199:java.util.List take(int[],int) -> take
    4222:4221:java.util.List take(long[],int) -> take
    4244:4243:java.util.List take(float[],int) -> take
    4266:4265:java.util.List take(double[],int) -> take
    4288:4287:java.util.List take(boolean[],int) -> take
    4310:4309:java.util.List take(char[],int) -> take
    4332:4331:java.util.List takeLast(java.lang.Object[],int) -> takeLast
    4351:4350:java.util.List takeLast(byte[],int) -> takeLast
    4370:4369:java.util.List takeLast(short[],int) -> takeLast
    4389:4388:java.util.List takeLast(int[],int) -> takeLast
    4408:4407:java.util.List takeLast(long[],int) -> takeLast
    4427:4426:java.util.List takeLast(float[],int) -> takeLast
    4446:4445:java.util.List takeLast(double[],int) -> takeLast
    4465:4464:java.util.List takeLast(boolean[],int) -> takeLast
    4484:4483:java.util.List takeLast(char[],int) -> takeLast
    4500:4505:java.util.List takeLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1) -> takeLastWhile
    4514:4519:java.util.List takeLastWhile(byte[],kotlin.jvm.functions.Function1) -> takeLastWhile
    4528:4533:java.util.List takeLastWhile(short[],kotlin.jvm.functions.Function1) -> takeLastWhile
    4542:4547:java.util.List takeLastWhile(int[],kotlin.jvm.functions.Function1) -> takeLastWhile
    4556:4561:java.util.List takeLastWhile(long[],kotlin.jvm.functions.Function1) -> takeLastWhile
    4570:4575:java.util.List takeLastWhile(float[],kotlin.jvm.functions.Function1) -> takeLastWhile
    4584:4589:java.util.List takeLastWhile(double[],kotlin.jvm.functions.Function1) -> takeLastWhile
    4598:4603:java.util.List takeLastWhile(boolean[],kotlin.jvm.functions.Function1) -> takeLastWhile
    4612:4617:java.util.List takeLastWhile(char[],kotlin.jvm.functions.Function1) -> takeLastWhile
    4626:4630:java.util.List takeWhile(java.lang.Object[],kotlin.jvm.functions.Function1) -> takeWhile
    4641:4645:java.util.List takeWhile(byte[],kotlin.jvm.functions.Function1) -> takeWhile
    4656:4660:java.util.List takeWhile(short[],kotlin.jvm.functions.Function1) -> takeWhile
    4671:4675:java.util.List takeWhile(int[],kotlin.jvm.functions.Function1) -> takeWhile
    4686:4690:java.util.List takeWhile(long[],kotlin.jvm.functions.Function1) -> takeWhile
    4701:4705:java.util.List takeWhile(float[],kotlin.jvm.functions.Function1) -> takeWhile
    4716:4720:java.util.List takeWhile(double[],kotlin.jvm.functions.Function1) -> takeWhile
    4731:4735:java.util.List takeWhile(boolean[],kotlin.jvm.functions.Function1) -> takeWhile
    4746:4750:java.util.List takeWhile(char[],kotlin.jvm.functions.Function1) -> takeWhile
    6914:6914:boolean[] toBooleanArray(java.lang.Boolean[]) -> toBooleanArray
    6921:6921:byte[] toByteArray(java.lang.Byte[]) -> toByteArray
    6928:6928:char[] toCharArray(java.lang.Character[]) -> toCharArray
    7721:7722:java.util.Collection toCollection(java.lang.Object[],java.util.Collection) -> toCollection
    7731:7732:java.util.Collection toCollection(byte[],java.util.Collection) -> toCollection
    7741:7742:java.util.Collection toCollection(short[],java.util.Collection) -> toCollection
    7751:7752:java.util.Collection toCollection(int[],java.util.Collection) -> toCollection
    7761:7762:java.util.Collection toCollection(long[],java.util.Collection) -> toCollection
    7771:7772:java.util.Collection toCollection(float[],java.util.Collection) -> toCollection
    7781:7782:java.util.Collection toCollection(double[],java.util.Collection) -> toCollection
    7791:7792:java.util.Collection toCollection(boolean[],java.util.Collection) -> toCollection
    7801:7802:java.util.Collection toCollection(char[],java.util.Collection) -> toCollection
    6935:6935:double[] toDoubleArray(java.lang.Double[]) -> toDoubleArray
    6942:6942:float[] toFloatArray(java.lang.Float[]) -> toFloatArray
    7811:7811:java.util.HashSet toHashSet(java.lang.Object[]) -> toHashSet
    7818:7818:java.util.HashSet toHashSet(byte[]) -> toHashSet
    7825:7825:java.util.HashSet toHashSet(short[]) -> toHashSet
    7832:7832:java.util.HashSet toHashSet(int[]) -> toHashSet
    7839:7839:java.util.HashSet toHashSet(long[]) -> toHashSet
    7846:7846:java.util.HashSet toHashSet(float[]) -> toHashSet
    7853:7853:java.util.HashSet toHashSet(double[]) -> toHashSet
    7860:7860:java.util.HashSet toHashSet(boolean[]) -> toHashSet
    7867:7867:java.util.HashSet toHashSet(char[]) -> toHashSet
    6949:6949:int[] toIntArray(java.lang.Integer[]) -> toIntArray
    7874:7875:java.util.List toList(java.lang.Object[]) -> toList
    7885:7886:java.util.List toList(byte[]) -> toList
    7896:7897:java.util.List toList(short[]) -> toList
    7907:7908:java.util.List toList(int[]) -> toList
    7918:7919:java.util.List toList(long[]) -> toList
    7929:7930:java.util.List toList(float[]) -> toList
    7940:7941:java.util.List toList(double[]) -> toList
    7951:7952:java.util.List toList(boolean[]) -> toList
    7962:7963:java.util.List toList(char[]) -> toList
    6956:6956:long[] toLongArray(java.lang.Long[]) -> toLongArray
    7973:7973:java.util.List toMutableList(java.lang.Object[]) -> toMutableList
    7980:7981:java.util.List toMutableList(byte[]) -> toMutableList
    7989:7990:java.util.List toMutableList(short[]) -> toMutableList
    7998:7999:java.util.List toMutableList(int[]) -> toMutableList
    8007:8008:java.util.List toMutableList(long[]) -> toMutableList
    8016:8017:java.util.List toMutableList(float[]) -> toMutableList
    8025:8026:java.util.List toMutableList(double[]) -> toMutableList
    8034:8035:java.util.List toMutableList(boolean[]) -> toMutableList
    8043:8044:java.util.List toMutableList(char[]) -> toMutableList
    9834:9835:java.util.Set toMutableSet(java.lang.Object[]) -> toMutableSet
    9845:9846:java.util.Set toMutableSet(byte[]) -> toMutableSet
    9856:9857:java.util.Set toMutableSet(short[]) -> toMutableSet
    9867:9868:java.util.Set toMutableSet(int[]) -> toMutableSet
    9878:9879:java.util.Set toMutableSet(long[]) -> toMutableSet
    9889:9890:java.util.Set toMutableSet(float[]) -> toMutableSet
    9900:9901:java.util.Set toMutableSet(double[]) -> toMutableSet
    9911:9912:java.util.Set toMutableSet(boolean[]) -> toMutableSet
    9922:9923:java.util.Set toMutableSet(char[]) -> toMutableSet
    8054:8055:java.util.Set toSet(java.lang.Object[]) -> toSet
    8067:8068:java.util.Set toSet(byte[]) -> toSet
    8080:8081:java.util.Set toSet(short[]) -> toSet
    8093:8094:java.util.Set toSet(int[]) -> toSet
    8106:8107:java.util.Set toSet(long[]) -> toSet
    8119:8120:java.util.Set toSet(float[]) -> toSet
    8132:8133:java.util.Set toSet(double[]) -> toSet
    8145:8146:java.util.Set toSet(boolean[]) -> toSet
    8158:8159:java.util.Set toSet(char[]) -> toSet
    6963:6963:short[] toShortArray(java.lang.Short[]) -> toShortArray
    9937:9938:java.util.Set union(java.lang.Object[],java.lang.Iterable) -> union
    9952:9953:java.util.Set union(byte[],java.lang.Iterable) -> union
    9967:9968:java.util.Set union(short[],java.lang.Iterable) -> union
    9982:9983:java.util.Set union(int[],java.lang.Iterable) -> union
    9997:9998:java.util.Set union(long[],java.lang.Iterable) -> union
    10012:10013:java.util.Set union(float[],java.lang.Iterable) -> union
    10027:10028:java.util.Set union(double[],java.lang.Iterable) -> union
    10042:10043:java.util.Set union(boolean[],java.lang.Iterable) -> union
    10057:10058:java.util.Set union(char[],java.lang.Iterable) -> union
    9311:9311:java.lang.Iterable withIndex(java.lang.Object[]) -> withIndex
    9319:9319:java.lang.Iterable withIndex(byte[]) -> withIndex
    9327:9327:java.lang.Iterable withIndex(short[]) -> withIndex
    9335:9335:java.lang.Iterable withIndex(int[]) -> withIndex
    9343:9343:java.lang.Iterable withIndex(long[]) -> withIndex
    9351:9351:java.lang.Iterable withIndex(float[]) -> withIndex
    9359:9359:java.lang.Iterable withIndex(double[]) -> withIndex
    9367:9367:java.lang.Iterable withIndex(boolean[]) -> withIndex
    9375:9375:java.lang.Iterable withIndex(char[]) -> withIndex
    13178:13181:java.util.List zip(java.lang.Object[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    13194:13197:java.util.List zip(byte[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    13210:13213:java.util.List zip(short[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    13226:13229:java.util.List zip(int[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    13242:13245:java.util.List zip(long[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    13258:13261:java.util.List zip(float[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    13274:13277:java.util.List zip(double[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    13290:13293:java.util.List zip(boolean[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    13306:13309:java.util.List zip(char[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    13412:13417:java.util.List zip(java.lang.Object[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    13430:13435:java.util.List zip(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    13448:13453:java.util.List zip(short[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    13466:13471:java.util.List zip(int[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    13484:13489:java.util.List zip(long[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    13502:13507:java.util.List zip(float[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    13520:13525:java.util.List zip(double[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    13538:13543:java.util.List zip(boolean[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    13556:13561:java.util.List zip(char[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    13654:13657:java.util.List zip(byte[],byte[],kotlin.jvm.functions.Function2) -> zip
    13670:13673:java.util.List zip(short[],short[],kotlin.jvm.functions.Function2) -> zip
    13686:13689:java.util.List zip(int[],int[],kotlin.jvm.functions.Function2) -> zip
    13702:13705:java.util.List zip(long[],long[],kotlin.jvm.functions.Function2) -> zip
    13718:13721:java.util.List zip(float[],float[],kotlin.jvm.functions.Function2) -> zip
    13734:13737:java.util.List zip(double[],double[],kotlin.jvm.functions.Function2) -> zip
    13750:13753:java.util.List zip(boolean[],boolean[],kotlin.jvm.functions.Function2) -> zip
    13766:13769:java.util.List zip(char[],char[],kotlin.jvm.functions.Function2) -> zip
    15348:13087:java.util.List zip(java.lang.Object[],java.lang.Object[]) -> zip
    15354:13097:java.util.List zip(byte[],java.lang.Object[]) -> zip
    15360:13107:java.util.List zip(short[],java.lang.Object[]) -> zip
    15366:13117:java.util.List zip(int[],java.lang.Object[]) -> zip
    15372:13127:java.util.List zip(long[],java.lang.Object[]) -> zip
    15378:13137:java.util.List zip(float[],java.lang.Object[]) -> zip
    15384:13147:java.util.List zip(double[],java.lang.Object[]) -> zip
    15390:13157:java.util.List zip(boolean[],java.lang.Object[]) -> zip
    15396:13167:java.util.List zip(char[],java.lang.Object[]) -> zip
    15402:13321:java.util.List zip(java.lang.Object[],java.lang.Iterable) -> zip
    15410:13331:java.util.List zip(byte[],java.lang.Iterable) -> zip
    15418:13341:java.util.List zip(short[],java.lang.Iterable) -> zip
    15426:13351:java.util.List zip(int[],java.lang.Iterable) -> zip
    15434:13361:java.util.List zip(long[],java.lang.Iterable) -> zip
    15442:13371:java.util.List zip(float[],java.lang.Iterable) -> zip
    15450:13381:java.util.List zip(double[],java.lang.Iterable) -> zip
    15458:13391:java.util.List zip(boolean[],java.lang.Iterable) -> zip
    15466:13401:java.util.List zip(char[],java.lang.Iterable) -> zip
    15474:13573:java.util.List zip(byte[],byte[]) -> zip
    15480:13583:java.util.List zip(short[],short[]) -> zip
    15486:13593:java.util.List zip(int[],int[]) -> zip
    15492:13603:java.util.List zip(long[],long[]) -> zip
    15498:13613:java.util.List zip(float[],float[]) -> zip
    15504:13623:java.util.List zip(double[],double[]) -> zip
    15510:13633:java.util.List zip(boolean[],boolean[]) -> zip
    15516:13643:java.util.List zip(char[],char[]) -> zip
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1:
    16:16:void <init>(java.lang.Object[]) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2:
    16:16:void <init>(byte[]) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3:
    16:16:void <init>(short[]) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4:
    16:16:void <init>(int[]) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5:
    16:16:void <init>(long[]) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6:
    16:16:void <init>(float[]) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7:
    16:16:void <init>(double[]) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8:
    16:16:void <init>(boolean[]) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9:
    16:16:void <init>(char[]) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1:
    19:19:void <init>(java.lang.Object[]) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2:
    19:19:void <init>(byte[]) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3:
    19:19:void <init>(short[]) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4:
    19:19:void <init>(int[]) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5:
    19:19:void <init>(long[]) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6:
    19:19:void <init>(float[]) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7:
    19:19:void <init>(double[]) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8:
    19:19:void <init>(boolean[]) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9:
    19:19:void <init>(char[]) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1 -> kotlin.collections.ArraysKt___ArraysKt$groupingBy$1:
    8875:8875:void <init>(java.lang.Object[],kotlin.jvm.functions.Function1) -> <init>
    8877:8877:java.lang.Object keyOf(java.lang.Object) -> keyOf
    8876:8876:java.util.Iterator sourceIterator() -> sourceIterator
kotlin.collections.ArraysKt___ArraysKt$withIndex$1 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$1:
    9311:9311:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$2 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$2:
    9319:9319:kotlin.collections.ByteIterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$3 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$3:
    9327:9327:kotlin.collections.ShortIterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$4 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$4:
    9335:9335:kotlin.collections.IntIterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$5 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$5:
    9343:9343:kotlin.collections.LongIterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$6 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$6:
    9351:9351:kotlin.collections.FloatIterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$7 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$7:
    9359:9359:kotlin.collections.DoubleIterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$8 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$8:
    9367:9367:kotlin.collections.BooleanIterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$9 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$9:
    9375:9375:kotlin.collections.CharIterator invoke() -> invoke
kotlin.collections.ArraysUtilJVM -> kotlin.collections.ArraysUtilJVM:
    11:11:void <init>() -> <init>
    13:13:java.util.List asList(java.lang.Object[]) -> asList
kotlin.collections.BooleanIterator -> kotlin.collections.BooleanIterator:
    67:67:void <init>() -> <init>
    67:67:java.lang.Object next() -> next
    68:68:java.lang.Boolean next() -> next
kotlin.collections.ByteIterator -> kotlin.collections.ByteIterator:
    11:11:void <init>() -> <init>
    11:11:java.lang.Object next() -> next
    12:12:java.lang.Byte next() -> next
kotlin.collections.CharIterator -> kotlin.collections.CharIterator:
    19:19:void <init>() -> <init>
    19:19:java.lang.Object next() -> next
    20:20:java.lang.Character next() -> next
kotlin.collections.CollectionsKt__CollectionsJVMKt -> kotlin.collections.CollectionsKt__CollectionsJVMKt:
    67:70:int checkCountOverflow(int) -> checkCountOverflow
    54:57:int checkIndexOverflow(int) -> checkIndexOverflow
    33:33:java.lang.Object[] copyToArrayImpl(java.util.Collection) -> copyToArrayImpl
    38:38:java.lang.Object[] copyToArrayImpl(java.util.Collection,java.lang.Object[]) -> copyToArrayImpl
    42:46:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean) -> copyToArrayOfAny
    19:19:java.util.List listOf(java.lang.Object) -> listOf
    28:28:java.util.List toList(java.util.Enumeration) -> toList
kotlin.collections.CollectionsKt__CollectionsKt -> kotlin.collections.CollectionsKt__CollectionsKt:
    137:137:java.util.List List(int,kotlin.jvm.functions.Function1) -> List
    151:152:java.util.List MutableList(int,kotlin.jvm.functions.Function1) -> MutableList
    98:98:java.util.ArrayList arrayListOf() -> arrayListOf
    112:112:java.util.ArrayList arrayListOf(java.lang.Object[]) -> arrayListOf
    53:53:java.util.Collection asCollection(java.lang.Object[]) -> asCollection
    251:259:int binarySearch(java.util.List,java.lang.Comparable,int,int) -> binarySearch
    287:295:int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,int,int) -> binarySearch
    356:364:int binarySearch(java.util.List,int,int,kotlin.jvm.functions.Function1) -> binarySearch
    250:250:int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object) -> binarySearch$default
    286:286:int binarySearch$default(java.util.List,java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object) -> binarySearch$default
    355:355:int binarySearch$default(java.util.List,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> binarySearch$default
    329:329:int binarySearchBy(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1) -> binarySearchBy
    326:407:int binarySearchBy$default(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> binarySearchBy$default
    226:226:boolean containsAll(java.util.Collection,java.util.Collection) -> containsAll
    69:69:java.util.List emptyList() -> emptyList
    161:161:kotlin.ranges.IntRange getIndices(java.util.Collection) -> getIndices
    169:169:int getLastIndex(java.util.List) -> getLastIndex
    215:215:java.lang.Object ifEmpty(java.util.Collection,kotlin.jvm.functions.Function0) -> ifEmpty
    176:176:boolean isNotEmpty(java.util.Collection) -> isNotEmpty
    189:189:boolean isNullOrEmpty(java.util.Collection) -> isNullOrEmpty
    75:75:java.util.List listOf(java.lang.Object[]) -> listOf
    82:82:java.util.List listOf() -> listOf
    118:118:java.util.List listOfNotNull(java.lang.Object) -> listOfNotNull
    124:124:java.util.List listOfNotNull(java.lang.Object[]) -> listOfNotNull
    90:90:java.util.List mutableListOf() -> mutableListOf
    105:105:java.util.List mutableListOf(java.lang.Object[]) -> mutableListOf
    228:229:java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
    197:197:java.util.Collection orEmpty(java.util.Collection) -> orEmpty
    204:204:java.util.List orEmpty(java.util.List) -> orEmpty
    384:382:void rangeCheck$CollectionsKt__CollectionsKt(int,int,int) -> rangeCheck$CollectionsKt__CollectionsKt
    404:404:void throwCountOverflow() -> throwCountOverflow
    400:400:void throwIndexOverflow() -> throwIndexOverflow
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1 -> kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1:
    329:329:int invoke(java.lang.Object) -> invoke
kotlin.collections.CollectionsKt__IterablesKt -> kotlin.collections.CollectionsKt__IterablesKt:
    16:16:java.lang.Iterable Iterable(kotlin.jvm.functions.Function0) -> Iterable
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
    33:33:java.lang.Integer collectionSizeOrNull(java.lang.Iterable) -> collectionSizeOrNull
    59:61:java.util.Collection convertToSetForSetOperation(java.lang.Iterable) -> convertToSetForSetOperation
    47:53:java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable) -> convertToSetForSetOperationWith
    70:72:java.util.List flatten(java.lang.Iterable) -> flatten
    42:42:boolean safeToConvertToSet$CollectionsKt__IterablesKt(java.util.Collection) -> safeToConvertToSet$CollectionsKt__IterablesKt
    84:91:kotlin.Pair unzip(java.lang.Iterable) -> unzip
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1 -> kotlin.collections.CollectionsKt__IterablesKt$Iterable$1:
    16:16:void <init>(kotlin.jvm.functions.Function0) -> <init>
    17:17:java.util.Iterator iterator() -> iterator
kotlin.collections.CollectionsKt__IteratorsJVMKt -> kotlin.collections.CollectionsKt__IteratorsJVMKt:
    15:15:java.util.Iterator iterator(java.util.Enumeration) -> iterator
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1 -> kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1:
    15:15:void <init>(java.util.Enumeration) -> <init>
    16:16:boolean hasNext() -> hasNext
    18:18:java.lang.Object next() -> next
kotlin.collections.CollectionsKt__IteratorsKt -> kotlin.collections.CollectionsKt__IteratorsKt:
    32:32:void forEach(java.util.Iterator,kotlin.jvm.functions.Function1) -> forEach
    25:25:java.util.Iterator withIndex(java.util.Iterator) -> withIndex
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> kotlin.collections.CollectionsKt__MutableCollectionsJVMKt:
    53:53:void fill(java.util.List,java.lang.Object) -> fill
    63:63:void shuffle(java.util.List) -> shuffle
    72:72:void shuffle(java.util.List,java.util.Random) -> shuffle
    79:79:java.util.List shuffled(java.lang.Iterable) -> shuffled
    86:86:java.util.List shuffled(java.lang.Iterable,java.util.Random) -> shuffled
    15:15:void sort(java.util.List,java.util.Comparator) -> sort
    20:20:void sort(java.util.List,kotlin.jvm.functions.Function2) -> sort
    31:31:void sort(java.util.List) -> sort
    42:42:void sortWith(java.util.List,java.util.Comparator) -> sortWith
kotlin.collections.CollectionsKt__MutableCollectionsKt -> kotlin.collections.CollectionsKt__MutableCollectionsKt:
    124:128:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    139:140:boolean addAll(java.util.Collection,kotlin.sequences.Sequence) -> addAll
    149:149:boolean addAll(java.util.Collection,java.lang.Object[]) -> addAll
    168:171:boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean) -> filterInPlace$CollectionsKt__MutableCollectionsKt
    193:209:boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.util.List,kotlin.jvm.functions.Function1,boolean) -> filterInPlace$CollectionsKt__MutableCollectionsKt
    92:92:void minusAssign(java.util.Collection,java.lang.Object) -> minusAssign
    100:100:void minusAssign(java.util.Collection,java.lang.Iterable) -> minusAssign
    108:108:void minusAssign(java.util.Collection,java.lang.Object[]) -> minusAssign
    116:116:void minusAssign(java.util.Collection,kotlin.sequences.Sequence) -> minusAssign
    60:60:void plusAssign(java.util.Collection,java.lang.Object) -> plusAssign
    68:68:void plusAssign(java.util.Collection,java.lang.Iterable) -> plusAssign
    76:76:void plusAssign(java.util.Collection,java.lang.Object[]) -> plusAssign
    84:84:void plusAssign(java.util.Collection,kotlin.sequences.Sequence) -> plusAssign
    23:23:boolean remove(java.util.Collection,java.lang.Object) -> remove
    53:53:java.lang.Object remove(java.util.List,int) -> remove
    34:34:boolean removeAll(java.util.Collection,java.util.Collection) -> removeAll
    157:157:boolean removeAll(java.lang.Iterable,kotlin.jvm.functions.Function1) -> removeAll
    183:183:boolean removeAll(java.util.List,kotlin.jvm.functions.Function1) -> removeAll
    221:221:boolean removeAll(java.util.Collection,java.lang.Iterable) -> removeAll
    228:229:boolean removeAll(java.util.Collection,kotlin.sequences.Sequence) -> removeAll
    236:236:boolean removeAll(java.util.Collection,java.lang.Object[]) -> removeAll
    45:45:boolean retainAll(java.util.Collection,java.util.Collection) -> retainAll
    164:164:boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1) -> retainAll
    190:190:boolean retainAll(java.util.List,kotlin.jvm.functions.Function1) -> retainAll
    243:243:boolean retainAll(java.util.Collection,java.lang.Iterable) -> retainAll
    250:253:boolean retainAll(java.util.Collection,java.lang.Object[]) -> retainAll
    260:264:boolean retainAll(java.util.Collection,kotlin.sequences.Sequence) -> retainAll
    268:269:boolean retainNothing$CollectionsKt__MutableCollectionsKt(java.util.Collection) -> retainNothing$CollectionsKt__MutableCollectionsKt
    280:284:void shuffle(java.util.List,kotlin.random.Random) -> shuffle
    293:293:java.util.List shuffled(java.lang.Iterable,kotlin.random.Random) -> shuffled
kotlin.collections.CollectionsKt__ReversedViewsKt -> kotlin.collections.CollectionsKt__ReversedViewsKt:
    1:1:int access$reverseElementIndex(java.util.List,int) -> access$reverseElementIndex
    1:1:int access$reversePositionIndex(java.util.List,int) -> access$reversePositionIndex
    41:41:java.util.List asReversed(java.util.List) -> asReversed
    49:49:java.util.List asReversedMutable(java.util.List) -> asReversedMutable
    30:30:int reverseElementIndex$CollectionsKt__ReversedViewsKt(java.util.List,int) -> reverseElementIndex$CollectionsKt__ReversedViewsKt
    33:33:int reversePositionIndex$CollectionsKt__ReversedViewsKt(java.util.List,int) -> reversePositionIndex$CollectionsKt__ReversedViewsKt
kotlin.collections.CollectionsKt___CollectionsJvmKt -> kotlin.collections.CollectionsKt___CollectionsJvmKt:
    23:23:java.util.List filterIsInstance(java.lang.Iterable,java.lang.Class) -> filterIsInstance
    31:31:java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection,java.lang.Class) -> filterIsInstanceTo
    39:39:void reverse(java.util.List) -> reverse
    46:46:java.util.SortedSet toSortedSet(java.lang.Iterable) -> toSortedSet
    55:55:java.util.SortedSet toSortedSet(java.lang.Iterable,java.util.Comparator) -> toSortedSet
kotlin.collections.CollectionsKt___CollectionsKt -> kotlin.collections.CollectionsKt___CollectionsKt:
    1478:1479:boolean all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> all
    1489:1490:boolean any(java.lang.Iterable) -> any
    1499:1500:boolean any(java.lang.Iterable,kotlin.jvm.functions.Function1) -> any
    2347:2347:kotlin.sequences.Sequence asSequence(java.lang.Iterable) -> asSequence
    1051:2543:java.util.Map associate(java.lang.Iterable,kotlin.jvm.functions.Function1) -> associate
    1064:2547:java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> associateBy
    1076:2551:java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    1088:1089:java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    1102:1103:java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    1115:1116:java.util.Map associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    1133:2555:java.util.Map associateWith(java.lang.Iterable,kotlin.jvm.functions.Function1) -> associateWith
    1145:1146:java.util.Map associateWithTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    2357:2361:double averageOfByte(java.lang.Iterable) -> averageOfByte
    2427:2431:double averageOfDouble(java.lang.Iterable) -> averageOfDouble
    2413:2417:double averageOfFloat(java.lang.Iterable) -> averageOfFloat
    2385:2389:double averageOfInt(java.lang.Iterable) -> averageOfInt
    2399:2403:double averageOfLong(java.lang.Iterable) -> averageOfLong
    2371:2375:double averageOfShort(java.lang.Iterable) -> averageOfShort
    1930:1930:java.util.List chunked(java.lang.Iterable,int) -> chunked
    1949:1949:java.util.List chunked(java.lang.Iterable,int,kotlin.jvm.functions.Function1) -> chunked
    25:25:java.lang.Object component1(java.util.List) -> component1
    33:33:java.lang.Object component2(java.util.List) -> component2
    41:41:java.lang.Object component3(java.util.List) -> component3
    49:49:java.lang.Object component4(java.util.List) -> component4
    57:57:java.lang.Object component5(java.util.List) -> component5
    64:66:boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    1508:1510:int count(java.lang.Iterable) -> count
    1519:1519:int count(java.util.Collection) -> count
    1526:1528:int count(java.lang.Iterable,kotlin.jvm.functions.Function1) -> count
    1401:1401:java.util.List distinct(java.lang.Iterable) -> distinct
    1411:1416:java.util.List distinctBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> distinctBy
    592:591:java.util.List drop(java.lang.Iterable,int) -> drop
    631:630:java.util.List dropLast(java.util.List,int) -> dropLast
    640:648:java.util.List dropLastWhile(java.util.List,kotlin.jvm.functions.Function1) -> dropLastWhile
    658:663:java.util.List dropWhile(java.lang.Iterable,kotlin.jvm.functions.Function1) -> dropWhile
    75:77:java.lang.Object elementAt(java.lang.Iterable,int) -> elementAt
    87:87:java.lang.Object elementAt(java.util.List,int) -> elementAt
    96:107:java.lang.Object elementAtOrElse(java.lang.Iterable,int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    117:117:java.lang.Object elementAtOrElse(java.util.List,int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    126:133:java.lang.Object elementAtOrNull(java.lang.Iterable,int) -> elementAtOrNull
    147:147:java.lang.Object elementAtOrNull(java.util.List,int) -> elementAtOrNull
    673:2522:java.util.List filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> filter
    682:2527:java.util.List filterIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> filterIndexed
    2532:692:java.util.Collection filterIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    701:2534:java.util.List filterIsInstance(java.lang.Iterable) -> filterIsInstance
    708:708:java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection) -> filterIsInstanceTo
    716:2536:java.util.List filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1) -> filterNot
    723:723:java.util.List filterNotNull(java.lang.Iterable) -> filterNotNull
    730:730:java.util.Collection filterNotNullTo(java.lang.Iterable,java.util.Collection) -> filterNotNullTo
    738:738:java.util.Collection filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    746:746:java.util.Collection filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    2507:2507:java.lang.Object find(java.lang.Iterable,kotlin.jvm.functions.Function1) -> find
    2510:2511:java.lang.Object findLast(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findLast
    2516:2519:java.lang.Object findLast(java.util.List,kotlin.jvm.functions.Function1) -> findLast
    180:184:java.lang.Object first(java.lang.Iterable) -> first
    195:196:java.lang.Object first(java.util.List) -> first
    205:206:java.lang.Object first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> first
    214:224:java.lang.Object firstOrNull(java.lang.Iterable) -> firstOrNull
    233:233:java.lang.Object firstOrNull(java.util.List) -> firstOrNull
    240:240:java.lang.Object firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> firstOrNull
    1218:2560:java.util.List flatMap(java.lang.Iterable,kotlin.jvm.functions.Function1) -> flatMap
    1225:1227:java.util.Collection flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    1537:1537:java.lang.Object fold(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    1550:1550:java.lang.Object foldIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    1559:1562:java.lang.Object foldRight(java.util.List,java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    1576:1580:java.lang.Object foldRightIndexed(java.util.List,java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    1591:1591:void forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> forEach
    1601:1601:void forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> forEachIndexed
    249:249:java.lang.Object getOrElse(java.util.List,int,kotlin.jvm.functions.Function1) -> getOrElse
    256:256:java.lang.Object getOrNull(java.util.List,int) -> getOrNull
    1241:2573:java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> groupBy
    1254:2586:java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    1266:1269:java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    1284:1287:java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    1300:1300:kotlin.collections.Grouping groupingBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> groupingBy
    263:267:int indexOf(java.lang.Iterable,java.lang.Object) -> indexOf
    279:279:int indexOf(java.util.List,java.lang.Object) -> indexOf
    287:289:int indexOfFirst(java.lang.Iterable,kotlin.jvm.functions.Function1) -> indexOfFirst
    301:302:int indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> indexOfFirst
    315:317:int indexOfLast(java.lang.Iterable,kotlin.jvm.functions.Function1) -> indexOfLast
    328:331:int indexOfLast(java.util.List,kotlin.jvm.functions.Function1) -> indexOfLast
    1429:1430:java.util.Set intersect(java.lang.Iterable,java.lang.Iterable) -> intersect
    2308:2317:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    2307:2307:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    2330:2330:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    2329:2329:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    343:347:java.lang.Object last(java.lang.Iterable) -> last
    361:362:java.lang.Object last(java.util.List) -> last
    373:379:java.lang.Object last(java.lang.Iterable,kotlin.jvm.functions.Function1) -> last
    389:394:java.lang.Object last(java.util.List,kotlin.jvm.functions.Function1) -> last
    401:406:int lastIndexOf(java.lang.Iterable,java.lang.Object) -> lastIndexOf
    418:418:int lastIndexOf(java.util.List,java.lang.Object) -> lastIndexOf
    426:433:java.lang.Object lastOrNull(java.lang.Iterable) -> lastOrNull
    443:443:java.lang.Object lastOrNull(java.util.List) -> lastOrNull
    451:452:java.lang.Object lastOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> lastOrNull
    463:466:java.lang.Object lastOrNull(java.util.List,kotlin.jvm.functions.Function1) -> lastOrNull
    1313:2604:java.util.List map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> map
    1323:2608:java.util.List mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> mapIndexed
    1333:2610:java.util.List mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> mapIndexedNotNull
    2616:1343:java.util.Collection mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedNotNullTo
    1355:1356:java.util.Collection mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    1365:2618:java.util.List mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> mapNotNull
    2622:1373:java.util.Collection mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    1382:1383:java.util.Collection mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    1611:1620:java.lang.Double max(java.lang.Iterable) -> max
    1630:1639:java.lang.Float max(java.lang.Iterable) -> max
    1646:1651:java.lang.Comparable max(java.lang.Iterable) -> max
    1662:1674:java.lang.Object maxBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxBy
    1682:1687:java.lang.Object maxWith(java.lang.Iterable,java.util.Comparator) -> maxWith
    1699:1708:java.lang.Double min(java.lang.Iterable) -> min
    1718:1727:java.lang.Float min(java.lang.Iterable) -> min
    1734:1739:java.lang.Comparable min(java.lang.Iterable) -> min
    1750:1762:java.lang.Object minBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minBy
    1770:1775:java.lang.Object minWith(java.lang.Iterable,java.util.Comparator) -> minWith
    1956:1958:java.util.List minus(java.lang.Iterable,java.lang.Object) -> minus
    1968:1970:java.util.List minus(java.lang.Iterable,java.lang.Object[]) -> minus
    1980:1983:java.util.List minus(java.lang.Iterable,java.lang.Iterable) -> minus
    1993:1996:java.util.List minus(java.lang.Iterable,kotlin.sequences.Sequence) -> minus
    2004:2004:java.util.List minusElement(java.lang.Iterable,java.lang.Object) -> minusElement
    1786:1787:boolean none(java.lang.Iterable) -> none
    1796:1797:boolean none(java.lang.Iterable,kotlin.jvm.functions.Function1) -> none
    1806:1806:java.lang.Iterable onEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onEach
    2013:2022:kotlin.Pair partition(java.lang.Iterable,kotlin.jvm.functions.Function1) -> partition
    2029:2032:java.util.List plus(java.lang.Iterable,java.lang.Object) -> plus
    2040:2042:java.util.List plus(java.util.Collection,java.lang.Object) -> plus
    2050:2053:java.util.List plus(java.lang.Iterable,java.lang.Object[]) -> plus
    2061:2063:java.util.List plus(java.util.Collection,java.lang.Object[]) -> plus
    2071:2074:java.util.List plus(java.lang.Iterable,java.lang.Iterable) -> plus
    2082:2089:java.util.List plus(java.util.Collection,java.lang.Iterable) -> plus
    2098:2100:java.util.List plus(java.lang.Iterable,kotlin.sequences.Sequence) -> plus
    2108:2110:java.util.List plus(java.util.Collection,kotlin.sequences.Sequence) -> plus
    2119:2119:java.util.List plusElement(java.lang.Iterable,java.lang.Object) -> plusElement
    2127:2127:java.util.List plusElement(java.util.Collection,java.lang.Object) -> plusElement
    479:479:java.lang.Object random(java.util.Collection) -> random
    489:490:java.lang.Object random(java.util.Collection,kotlin.random.Random) -> random
    1813:1814:java.lang.Object reduce(java.lang.Iterable,kotlin.jvm.functions.Function2) -> reduce
    1829:1830:java.lang.Object reduceIndexed(java.lang.Iterable,kotlin.jvm.functions.Function3) -> reduceIndexed
    1843:1845:java.lang.Object reduceRight(java.util.List,kotlin.jvm.functions.Function2) -> reduceRight
    1860:1862:java.lang.Object reduceRightIndexed(java.util.List,kotlin.jvm.functions.Function3) -> reduceRightIndexed
    1897:1899:java.lang.Iterable requireNoNulls(java.lang.Iterable) -> requireNoNulls
    1910:1912:java.util.List requireNoNulls(java.util.List) -> requireNoNulls
    866:868:java.util.List reversed(java.lang.Iterable) -> reversed
    499:503:java.lang.Object single(java.lang.Iterable) -> single
    516:517:java.lang.Object single(java.util.List) -> single
    529:536:java.lang.Object single(java.lang.Iterable,kotlin.jvm.functions.Function1) -> single
    546:552:java.lang.Object singleOrNull(java.lang.Iterable) -> singleOrNull
    563:563:java.lang.Object singleOrNull(java.util.List) -> singleOrNull
    572:573:java.lang.Object singleOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> singleOrNull
    754:755:java.util.List slice(java.util.List,kotlin.ranges.IntRange) -> slice
    762:766:java.util.List slice(java.util.List,java.lang.Iterable) -> slice
    878:878:void sortBy(java.util.List,kotlin.jvm.functions.Function1) -> sortBy
    887:887:void sortByDescending(java.util.List,kotlin.jvm.functions.Function1) -> sortByDescending
    896:896:void sortDescending(java.util.List) -> sortDescending
    905:910:java.util.List sorted(java.lang.Iterable) -> sorted
    919:919:java.util.List sortedBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sortedBy
    928:928:java.util.List sortedByDescending(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sortedByDescending
    937:937:java.util.List sortedDescending(java.lang.Iterable) -> sortedDescending
    946:951:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator) -> sortedWith
    1440:1441:java.util.Set subtract(java.lang.Iterable,java.lang.Iterable) -> subtract
    1876:1877:int sumBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumBy
    1887:1888:double sumByDouble(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumByDouble
    2440:2440:int sumOfByte(java.lang.Iterable) -> sumOfByte
    2500:2500:double sumOfDouble(java.lang.Iterable) -> sumOfDouble
    2488:2488:float sumOfFloat(java.lang.Iterable) -> sumOfFloat
    2464:2464:int sumOfInt(java.lang.Iterable) -> sumOfInt
    2476:2476:long sumOfLong(java.lang.Iterable) -> sumOfLong
    2452:2452:int sumOfShort(java.lang.Iterable) -> sumOfShort
    780:779:java.util.List take(java.lang.Iterable,int) -> take
    804:803:java.util.List takeLast(java.util.List,int) -> takeLast
    825:839:java.util.List takeLastWhile(java.util.List,kotlin.jvm.functions.Function1) -> takeLastWhile
    848:852:java.util.List takeWhile(java.lang.Iterable,kotlin.jvm.functions.Function1) -> takeWhile
    958:961:boolean[] toBooleanArray(java.util.Collection) -> toBooleanArray
    969:972:byte[] toByteArray(java.util.Collection) -> toByteArray
    980:983:char[] toCharArray(java.util.Collection) -> toCharArray
    1155:1156:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection) -> toCollection
    991:994:double[] toDoubleArray(java.util.Collection) -> toDoubleArray
    1002:1005:float[] toFloatArray(java.util.Collection) -> toFloatArray
    1165:1165:java.util.HashSet toHashSet(java.lang.Iterable) -> toHashSet
    1013:1016:int[] toIntArray(java.util.Collection) -> toIntArray
    1172:1179:java.util.List toList(java.lang.Iterable) -> toList
    1024:1027:long[] toLongArray(java.util.Collection) -> toLongArray
    1186:1188:java.util.List toMutableList(java.lang.Iterable) -> toMutableList
    1195:1195:java.util.List toMutableList(java.util.Collection) -> toMutableList
    1452:1453:java.util.Set toMutableSet(java.lang.Iterable) -> toMutableSet
    1204:1211:java.util.Set toSet(java.lang.Iterable) -> toSet
    1035:1038:short[] toShortArray(java.util.Collection) -> toShortArray
    1467:1468:java.util.Set union(java.lang.Iterable,java.lang.Iterable) -> union
    2147:2163:java.util.List windowed(java.lang.Iterable,int,int,boolean) -> windowed
    2187:2205:java.util.List windowed(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1) -> windowed
    2146:2146:java.util.List windowed$default(java.lang.Iterable,int,int,boolean,int,java.lang.Object) -> windowed$default
    2186:2186:java.util.List windowed$default(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> windowed$default
    1392:1392:java.lang.Iterable withIndex(java.lang.Iterable) -> withIndex
    2228:2233:java.util.List zip(java.lang.Iterable,java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    2256:2260:java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    2639:2217:java.util.List zip(java.lang.Iterable,java.lang.Object[]) -> zip
    2647:2245:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
    2287:2293:java.util.List zipWithNext(java.lang.Iterable,kotlin.jvm.functions.Function2) -> zipWithNext
    2654:2274:java.util.List zipWithNext(java.lang.Iterable) -> zipWithNext
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1 -> kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1:
    19:19:void <init>(java.lang.Iterable) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1 -> kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1:
    77:77:java.lang.Void invoke(int) -> invoke
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1 -> kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1:
    1300:1300:void <init>(java.lang.Iterable,kotlin.jvm.functions.Function1) -> <init>
    1302:1302:java.lang.Object keyOf(java.lang.Object) -> keyOf
    1301:1301:java.util.Iterator sourceIterator() -> sourceIterator
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1 -> kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1:
    1392:1392:java.util.Iterator invoke() -> invoke
kotlin.collections.DoubleIterator -> kotlin.collections.DoubleIterator:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object next() -> next
    60:60:java.lang.Double next() -> next
kotlin.collections.EmptyIterator -> kotlin.collections.EmptyIterator:
    13:13:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    13:13:java.lang.Object next() -> next
    18:18:java.lang.Void next() -> next
    13:13:java.lang.Object previous() -> previous
    19:19:java.lang.Void previous() -> previous
kotlin.collections.EmptyList -> kotlin.collections.EmptyList:
    22:22:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    22:22:boolean contains(java.lang.Object) -> contains
    32:32:boolean containsAll(java.util.Collection) -> containsAll
    25:25:boolean equals(java.lang.Object) -> equals
    22:22:java.lang.Object get(int) -> get
    34:34:java.lang.Void get(int) -> get
    22:22:int indexOf(java.lang.Object) -> indexOf
    38:38:java.util.Iterator iterator() -> iterator
    22:22:int lastIndexOf(java.lang.Object) -> lastIndexOf
    39:39:java.util.ListIterator listIterator() -> listIterator
    42:41:java.util.ListIterator listIterator(int) -> listIterator
    50:50:java.lang.Object readResolve() -> readResolve
    22:22:int size() -> size
    47:47:java.util.List subList(int,int) -> subList
kotlin.collections.EmptyMap -> kotlin.collections.EmptyMap:
    13:13:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    13:13:boolean containsValue(java.lang.Object) -> containsValue
    13:13:java.util.Set entrySet() -> entrySet
    16:16:boolean equals(java.lang.Object) -> equals
    13:13:java.lang.Object get(java.lang.Object) -> get
    26:26:java.util.Set getEntries() -> getEntries
    27:27:java.util.Set getKeys() -> getKeys
    28:28:java.util.Collection getValues() -> getValues
    13:13:java.util.Set keySet() -> keySet
    30:30:java.lang.Object readResolve() -> readResolve
    13:13:int size() -> size
    13:13:java.util.Collection values() -> values
kotlin.collections.EmptySet -> kotlin.collections.EmptySet:
    12:12:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    12:12:boolean contains(java.lang.Object) -> contains
    22:22:boolean containsAll(java.util.Collection) -> containsAll
    15:15:boolean equals(java.lang.Object) -> equals
    24:24:java.util.Iterator iterator() -> iterator
    26:26:java.lang.Object readResolve() -> readResolve
    12:12:int size() -> size
kotlin.collections.FloatIterator -> kotlin.collections.FloatIterator:
    51:51:void <init>() -> <init>
    51:51:java.lang.Object next() -> next
    52:52:java.lang.Float next() -> next
kotlin.collections.GroupingKt__GroupingJVMKt -> kotlin.collections.GroupingKt__GroupingJVMKt:
    22:25:java.util.Map eachCount(kotlin.collections.Grouping) -> eachCount
    48:51:java.util.Map mapValuesInPlace(java.util.Map,kotlin.jvm.functions.Function1) -> mapValuesInPlace
kotlin.collections.GroupingKt__GroupingKt -> kotlin.collections.GroupingKt__GroupingKt:
    53:295:java.util.Map aggregate(kotlin.collections.Grouping,kotlin.jvm.functions.Function4) -> aggregate
    80:83:java.util.Map aggregateTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function4) -> aggregateTo
    257:257:java.util.Map eachCountTo(kotlin.collections.Grouping,java.util.Map) -> eachCountTo
    298:112:java.util.Map fold(kotlin.collections.Grouping,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3) -> fold
    311:164:java.util.Map fold(kotlin.collections.Grouping,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    305:143:java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3) -> foldTo
    318:189:java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,java.lang.Object,kotlin.jvm.functions.Function2) -> foldTo
    324:213:java.util.Map reduce(kotlin.collections.Grouping,kotlin.jvm.functions.Function3) -> reduce
    331:241:java.util.Map reduceTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function3) -> reduceTo
kotlin.collections.IndexedValue -> kotlin.collections.IndexedValue:
    14:14:void <init>(int,java.lang.Object) -> <init>
    14:14:int getIndex() -> getIndex
    14:14:java.lang.Object getValue() -> getValue
kotlin.collections.IndexingIterable -> kotlin.collections.IndexingIterable:
    24:24:void <init>(kotlin.jvm.functions.Function0) -> <init>
    25:25:java.util.Iterator iterator() -> iterator
kotlin.collections.IndexingIterator -> kotlin.collections.IndexingIterator:
    38:38:void <init>(java.util.Iterator) -> <init>
    40:40:boolean hasNext() -> hasNext
    38:38:java.lang.Object next() -> next
    41:41:kotlin.collections.IndexedValue next() -> next
kotlin.collections.IntIterator -> kotlin.collections.IntIterator:
    35:35:void <init>() -> <init>
    35:35:java.lang.Object next() -> next
    36:36:java.lang.Integer next() -> next
kotlin.collections.LongIterator -> kotlin.collections.LongIterator:
    43:43:void <init>() -> <init>
    43:43:java.lang.Object next() -> next
    44:44:java.lang.Long next() -> next
kotlin.collections.MapAccessorsKt -> kotlin.collections.MapAccessorsKt:
    23:23:java.lang.Object getValue(java.util.Map,java.lang.Object,kotlin.reflect.KProperty) -> getValue
    36:36:java.lang.Object getVar(java.util.Map,java.lang.Object,kotlin.reflect.KProperty) -> getVar
    43:43:java.lang.Object getVarContravariant(java.util.Map,java.lang.Object,kotlin.reflect.KProperty) -> getVarContravariant
    53:53:void setValue(java.util.Map,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
kotlin.collections.MapWithDefaultImpl -> kotlin.collections.MapWithDefaultImpl:
    67:67:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> <init>
    73:73:boolean containsKey(java.lang.Object) -> containsKey
    74:74:boolean containsValue(java.lang.Object) -> containsValue
    67:67:java.util.Set entrySet() -> entrySet
    68:68:boolean equals(java.lang.Object) -> equals
    75:75:java.lang.Object get(java.lang.Object) -> get
    78:78:java.util.Set getEntries() -> getEntries
    76:76:java.util.Set getKeys() -> getKeys
    67:67:java.util.Map getMap() -> getMap
    80:80:java.lang.Object getOrImplicitDefault(java.lang.Object) -> getOrImplicitDefault
    71:71:int getSize() -> getSize
    77:77:java.util.Collection getValues() -> getValues
    69:69:int hashCode() -> hashCode
    72:72:boolean isEmpty() -> isEmpty
    67:67:java.util.Set keySet() -> keySet
    67:67:int size() -> size
    70:70:java.lang.String toString() -> toString
    67:67:java.util.Collection values() -> values
kotlin.collections.MapsKt__MapWithDefaultKt -> kotlin.collections.MapsKt__MapWithDefaultKt:
    21:24:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object) -> getOrImplicitDefaultNullable
    37:38:java.util.Map withDefault(java.util.Map,kotlin.jvm.functions.Function1) -> withDefault
    52:53:java.util.Map withDefaultMutable(java.util.Map,kotlin.jvm.functions.Function1) -> withDefaultMutable
kotlin.collections.MapsKt__MapsJVMKt -> kotlin.collections.MapsKt__MapsJVMKt:
    41:42:java.lang.Object getOrPut(java.util.concurrent.ConcurrentMap,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrPut
    27:27:java.util.Map mapOf(kotlin.Pair) -> mapOf
    77:77:java.util.SortedMap sortedMapOf(kotlin.Pair[]) -> sortedMapOf
    87:87:java.util.Properties toProperties(java.util.Map) -> toProperties
    96:96:java.util.Map toSingletonMap(java.util.Map) -> toSingletonMap
    92:92:java.util.Map toSingletonMapOrSelf(java.util.Map) -> toSingletonMapOrSelf
    56:56:java.util.SortedMap toSortedMap(java.util.Map) -> toSortedMap
    66:66:java.util.SortedMap toSortedMap(java.util.Map,java.util.Comparator) -> toSortedMap
kotlin.collections.MapsKt__MapsKt -> kotlin.collections.MapsKt__MapsKt:
    246:246:java.lang.Object component1(java.util.Map$Entry) -> component1
    259:259:java.lang.Object component2(java.util.Map$Entry) -> component2
    186:186:boolean contains(java.util.Map,java.lang.Object) -> contains
    210:210:boolean containsKey(java.util.Map,java.lang.Object) -> containsKey
    221:221:boolean containsValue(java.util.Map,java.lang.Object) -> containsValue
    39:39:java.util.Map emptyMap() -> emptyMap
    461:760:java.util.Map filter(java.util.Map,kotlin.jvm.functions.Function1) -> filter
    413:416:java.util.Map filterKeys(java.util.Map,kotlin.jvm.functions.Function1) -> filterKeys
    486:766:java.util.Map filterNot(java.util.Map,kotlin.jvm.functions.Function1) -> filterNot
    471:473:java.util.Map filterNotTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> filterNotTo
    446:448:java.util.Map filterTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> filterTo
    429:432:java.util.Map filterValues(java.util.Map,kotlin.jvm.functions.Function1) -> filterValues
    193:193:java.lang.Object get(java.util.Map,java.lang.Object) -> get
    273:273:java.lang.Object getOrElse(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrElse
    277:279:java.lang.Object getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrElseNullable
    307:310:java.lang.Object getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrPut
    296:296:java.lang.Object getValue(java.util.Map,java.lang.Object) -> getValue
    96:96:java.util.HashMap hashMapOf() -> hashMapOf
    104:104:java.util.HashMap hashMapOf(kotlin.Pair[]) -> hashMapOf
    178:178:java.lang.Object ifEmpty(java.util.Map,kotlin.jvm.functions.Function0) -> ifEmpty
    145:145:boolean isNotEmpty(java.util.Map) -> isNotEmpty
    158:158:boolean isNullOrEmpty(java.util.Map) -> isNullOrEmpty
    323:323:java.util.Iterator iterator(java.util.Map) -> iterator
    111:111:java.util.LinkedHashMap linkedMapOf() -> linkedMapOf
    123:123:java.util.LinkedHashMap linkedMapOf(kotlin.Pair[]) -> linkedMapOf
    136:136:int mapCapacity(int) -> mapCapacity
    403:753:java.util.Map mapKeys(java.util.Map,kotlin.jvm.functions.Function1) -> mapKeys
    349:349:java.util.Map mapKeysTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> mapKeysTo
    54:54:java.util.Map mapOf(kotlin.Pair[]) -> mapOf
    63:63:java.util.Map mapOf() -> mapOf
    388:748:java.util.Map mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> mapValues
    338:338:java.util.Map mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> mapValuesTo
    664:664:java.util.Map minus(java.util.Map,java.lang.Object) -> minus
    674:674:java.util.Map minus(java.util.Map,java.lang.Iterable) -> minus
    684:684:java.util.Map minus(java.util.Map,java.lang.Object[]) -> minus
    694:694:java.util.Map minus(java.util.Map,kotlin.sequences.Sequence) -> minus
    702:702:void minusAssign(java.util.Map,java.lang.Object) -> minusAssign
    711:711:void minusAssign(java.util.Map,java.lang.Iterable) -> minusAssign
    720:720:void minusAssign(java.util.Map,java.lang.Object[]) -> minusAssign
    729:729:void minusAssign(java.util.Map,kotlin.sequences.Sequence) -> minusAssign
    331:331:java.util.Iterator mutableIterator(java.util.Map) -> mutableIterator
    73:73:java.util.Map mutableMapOf() -> mutableMapOf
    87:87:java.util.Map mutableMapOf(kotlin.Pair[]) -> mutableMapOf
    734:735:java.util.Map optimizeReadOnlyMap(java.util.Map) -> optimizeReadOnlyMap
    167:167:java.util.Map orEmpty(java.util.Map) -> orEmpty
    578:578:java.util.Map plus(java.util.Map,kotlin.Pair) -> plus
    587:587:java.util.Map plus(java.util.Map,java.lang.Iterable) -> plus
    596:596:java.util.Map plus(java.util.Map,kotlin.Pair[]) -> plus
    605:605:java.util.Map plus(java.util.Map,kotlin.sequences.Sequence) -> plus
    614:614:java.util.Map plus(java.util.Map,java.util.Map) -> plus
    622:622:void plusAssign(java.util.Map,kotlin.Pair) -> plusAssign
    630:630:void plusAssign(java.util.Map,java.lang.Iterable) -> plusAssign
    638:638:void plusAssign(java.util.Map,kotlin.Pair[]) -> plusAssign
    646:646:void plusAssign(java.util.Map,kotlin.sequences.Sequence) -> plusAssign
    654:654:void plusAssign(java.util.Map,java.util.Map) -> plusAssign
    356:357:void putAll(java.util.Map,kotlin.Pair[]) -> putAll
    365:366:void putAll(java.util.Map,java.lang.Iterable) -> putAll
    374:375:void putAll(java.util.Map,kotlin.sequences.Sequence) -> putAll
    233:233:java.lang.Object remove(java.util.Map,java.lang.Object) -> remove
    200:200:void set(java.util.Map,java.lang.Object,java.lang.Object) -> set
    496:503:java.util.Map toMap(java.lang.Iterable) -> toMap
    510:510:java.util.Map toMap(java.lang.Iterable,java.util.Map) -> toMap
    518:519:java.util.Map toMap(kotlin.Pair[]) -> toMap
    528:528:java.util.Map toMap(kotlin.Pair[],java.util.Map) -> toMap
    536:536:java.util.Map toMap(kotlin.sequences.Sequence) -> toMap
    542:542:java.util.Map toMap(kotlin.sequences.Sequence,java.util.Map) -> toMap
    550:551:java.util.Map toMap(java.util.Map) -> toMap
    569:569:java.util.Map toMap(java.util.Map,java.util.Map) -> toMap
    562:562:java.util.Map toMutableMap(java.util.Map) -> toMutableMap
    265:265:kotlin.Pair toPair(java.util.Map$Entry) -> toPair
kotlin.collections.MapsKt___MapsKt -> kotlin.collections.MapsKt___MapsKt:
    101:102:boolean all(java.util.Map,kotlin.jvm.functions.Function1) -> all
    112:112:boolean any(java.util.Map) -> any
    121:122:boolean any(java.util.Map,kotlin.jvm.functions.Function1) -> any
    219:219:java.lang.Iterable asIterable(java.util.Map) -> asIterable
    226:226:kotlin.sequences.Sequence asSequence(java.util.Map) -> asSequence
    131:131:int count(java.util.Map) -> count
    138:140:int count(java.util.Map,kotlin.jvm.functions.Function1) -> count
    44:232:java.util.List flatMap(java.util.Map,kotlin.jvm.functions.Function1) -> flatMap
    51:53:java.util.Collection flatMapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    149:149:void forEach(java.util.Map,kotlin.jvm.functions.Function1) -> forEach
    65:236:java.util.List map(java.util.Map,kotlin.jvm.functions.Function1) -> map
    73:238:java.util.List mapNotNull(java.util.Map,kotlin.jvm.functions.Function1) -> mapNotNull
    242:81:java.util.Collection mapNotNullTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    90:91:java.util.Collection mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    159:257:java.util.Map$Entry maxBy(java.util.Map,kotlin.jvm.functions.Function1) -> maxBy
    167:167:java.util.Map$Entry maxWith(java.util.Map,java.util.Comparator) -> maxWith
    176:271:java.util.Map$Entry minBy(java.util.Map,kotlin.jvm.functions.Function1) -> minBy
    183:183:java.util.Map$Entry minWith(java.util.Map,java.util.Comparator) -> minWith
    192:192:boolean none(java.util.Map) -> none
    201:202:boolean none(java.util.Map,kotlin.jvm.functions.Function1) -> none
    211:211:java.util.Map onEach(java.util.Map,kotlin.jvm.functions.Function1) -> onEach
    24:36:java.util.List toList(java.util.Map) -> toList
kotlin.collections.MovingSubList -> kotlin.collections.MovingSubList:
    64:64:void <init>(java.util.List) -> <init>
    75:77:java.lang.Object get(int) -> get
    80:80:int getSize() -> getSize
    69:71:void move(int,int) -> move
kotlin.collections.MutableMapWithDefaultImpl -> kotlin.collections.MutableMapWithDefaultImpl:
    83:83:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> <init>
    99:99:void clear() -> clear
    89:89:boolean containsKey(java.lang.Object) -> containsKey
    90:90:boolean containsValue(java.lang.Object) -> containsValue
    83:83:java.util.Set entrySet() -> entrySet
    84:84:boolean equals(java.lang.Object) -> equals
    91:91:java.lang.Object get(java.lang.Object) -> get
    94:94:java.util.Set getEntries() -> getEntries
    92:92:java.util.Set getKeys() -> getKeys
    83:83:java.util.Map getMap() -> getMap
    101:101:java.lang.Object getOrImplicitDefault(java.lang.Object) -> getOrImplicitDefault
    87:87:int getSize() -> getSize
    93:93:java.util.Collection getValues() -> getValues
    85:85:int hashCode() -> hashCode
    88:88:boolean isEmpty() -> isEmpty
    83:83:java.util.Set keySet() -> keySet
    96:96:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    98:98:void putAll(java.util.Map) -> putAll
    97:97:java.lang.Object remove(java.lang.Object) -> remove
    83:83:int size() -> size
    86:86:java.lang.String toString() -> toString
    83:83:java.util.Collection values() -> values
kotlin.collections.ReversedList -> kotlin.collections.ReversedList:
    16:16:void <init>(java.util.List) -> <init>
    25:25:void add(int,java.lang.Object) -> add
    20:20:void clear() -> clear
    18:18:java.lang.Object get(int) -> get
    17:17:int getSize() -> getSize
    21:21:java.lang.Object removeAt(int) -> removeAt
    23:23:java.lang.Object set(int,java.lang.Object) -> set
kotlin.collections.ReversedListReadOnly -> kotlin.collections.ReversedListReadOnly:
    11:11:void <init>(java.util.List) -> <init>
    13:13:java.lang.Object get(int) -> get
    12:12:int getSize() -> getSize
kotlin.collections.RingBuffer -> kotlin.collections.RingBuffer:
    89:91:void <init>(java.lang.Object[],int) -> <init>
    95:95:void <init>(int) -> <init>
    89:89:int access$forward(kotlin.collections.RingBuffer,int,int) -> access$forward
    89:89:java.lang.Object[] access$getBuffer$p(kotlin.collections.RingBuffer) -> access$getBuffer$p
    89:89:int access$getCapacity$p(kotlin.collections.RingBuffer) -> access$getCapacity$p
    89:89:int access$getSize$p(kotlin.collections.RingBuffer) -> access$getSize$p
    89:89:int access$getStartIndex$p(kotlin.collections.RingBuffer) -> access$getStartIndex$p
    89:89:void access$setSize$p(kotlin.collections.RingBuffer,int) -> access$setSize$p
    89:89:void access$setStartIndex$p(kotlin.collections.RingBuffer,int) -> access$setStartIndex$p
    172:173:void add(java.lang.Object) -> add
    163:165:kotlin.collections.RingBuffer expanded(int) -> expanded
    205:205:int forward(int,int) -> forward
    104:208:java.lang.Object get(int) -> get
    100:100:int getSize() -> getSize
    109:109:boolean isFull() -> isFull
    111:111:java.util.Iterator iterator() -> iterator
    185:184:void removeFirst(int) -> removeFirst
    130:151:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    155:155:java.lang.Object[] toArray() -> toArray
kotlin.collections.RingBuffer$iterator$1 -> kotlin.collections.RingBuffer$iterator$1:
    111:113:void <init>(kotlin.collections.RingBuffer) -> <init>
    116:122:void computeNext() -> computeNext
kotlin.collections.SetsKt__SetsJVMKt -> kotlin.collections.SetsKt__SetsJVMKt:
    16:16:java.util.Set setOf(java.lang.Object) -> setOf
    22:22:java.util.TreeSet sortedSetOf(java.lang.Object[]) -> sortedSetOf
    27:27:java.util.TreeSet sortedSetOf(java.util.Comparator,java.lang.Object[]) -> sortedSetOf
kotlin.collections.SetsKt__SetsKt -> kotlin.collections.SetsKt__SetsKt:
    34:34:java.util.Set emptySet() -> emptySet
    71:71:java.util.HashSet hashSetOf() -> hashSetOf
    74:74:java.util.HashSet hashSetOf(java.lang.Object[]) -> hashSetOf
    79:79:java.util.LinkedHashSet linkedSetOf() -> linkedSetOf
    85:85:java.util.LinkedHashSet linkedSetOf(java.lang.Object[]) -> linkedSetOf
    59:59:java.util.Set mutableSetOf() -> mutableSetOf
    66:66:java.util.Set mutableSetOf(java.lang.Object[]) -> mutableSetOf
    91:92:java.util.Set optimizeReadOnlySet(java.util.Set) -> optimizeReadOnlySet
    89:89:java.util.Set orEmpty(java.util.Set) -> orEmpty
    42:42:java.util.Set setOf(java.lang.Object[]) -> setOf
    49:49:java.util.Set setOf() -> setOf
kotlin.collections.SetsKt___SetsKt -> kotlin.collections.SetsKt___SetsKt:
    26:28:java.util.Set minus(java.util.Set,java.lang.Object) -> minus
    40:41:java.util.Set minus(java.util.Set,java.lang.Object[]) -> minus
    54:60:java.util.Set minus(java.util.Set,java.lang.Iterable) -> minus
    73:74:java.util.Set minus(java.util.Set,kotlin.sequences.Sequence) -> minus
    85:85:java.util.Set minusElement(java.util.Set,java.lang.Object) -> minusElement
    94:96:java.util.Set plus(java.util.Set,java.lang.Object) -> plus
    107:109:java.util.Set plus(java.util.Set,java.lang.Object[]) -> plus
    119:121:java.util.Set plus(java.util.Set,java.lang.Iterable) -> plus
    132:134:java.util.Set plus(java.util.Set,kotlin.sequences.Sequence) -> plus
    145:145:java.util.Set plusElement(java.util.Set,java.lang.Object) -> plusElement
kotlin.collections.ShortIterator -> kotlin.collections.ShortIterator:
    27:27:void <init>() -> <init>
    27:27:java.lang.Object next() -> next
    28:28:java.lang.Short next() -> next
kotlin.collections.SlidingWindowKt -> kotlin.collections.SlidingWindowKt:
    11:9:void checkWindowSizeStep(int,int) -> checkWindowSizeStep
    23:24:java.util.Iterator windowedIterator(java.util.Iterator,int,int,boolean,boolean) -> windowedIterator
    18:19:kotlin.sequences.Sequence windowedSequence(kotlin.sequences.Sequence,int,int,boolean,boolean) -> windowedSequence
kotlin.collections.SlidingWindowKt$windowedIterator$1 -> kotlin.collections.SlidingWindowKt$windowedIterator$1:
    24:61:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1 -> kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1:
    19:19:void <init>(kotlin.sequences.Sequence,int,int,boolean,boolean) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.collections.State -> kotlin.collections.State:
    9:9:void <init>(java.lang.String,int) -> <init>
kotlin.collections.UArraySortingKt -> kotlin.collections.UArraySortingKt:
    113:122:int partition--nroSd4(long[],int,int) -> partition--nroSd4
    14:23:int partition-4UcCI2c(byte[],int,int) -> partition-4UcCI2c
    47:56:int partition-Aa5vz7o(short[],int,int) -> partition-Aa5vz7o
    80:89:int partition-oBK06Vg(int[],int,int) -> partition-oBK06Vg
    133:137:void quickSort--nroSd4(long[],int,int) -> quickSort--nroSd4
    34:38:void quickSort-4UcCI2c(byte[],int,int) -> quickSort-4UcCI2c
    67:71:void quickSort-Aa5vz7o(short[],int,int) -> quickSort-Aa5vz7o
    100:104:void quickSort-oBK06Vg(int[],int,int) -> quickSort-oBK06Vg
    150:150:void sortArray--ajY-9A(int[]) -> sortArray--ajY-9A
    146:146:void sortArray-GBYM_sE(byte[]) -> sortArray-GBYM_sE
    152:152:void sortArray-QwZRm1k(long[]) -> sortArray-QwZRm1k
    148:148:void sortArray-rL5Bavg(short[]) -> sortArray-rL5Bavg
kotlin.collections.UArraysKt -> kotlin.collections.UArraysKt:
    11:11:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    48:48:boolean contentEquals-ctEhBpI(int[],int[]) -> contentEquals-ctEhBpI
    60:60:boolean contentEquals-kdPth3s(byte[],byte[]) -> contentEquals-kdPth3s
    66:66:boolean contentEquals-mazbYpA(short[],short[]) -> contentEquals-mazbYpA
    54:54:boolean contentEquals-us8wMrg(long[],long[]) -> contentEquals-us8wMrg
    72:72:int contentHashCode--ajY-9A(int[]) -> contentHashCode--ajY-9A
    84:84:int contentHashCode-GBYM_sE(byte[]) -> contentHashCode-GBYM_sE
    78:78:int contentHashCode-QwZRm1k(long[]) -> contentHashCode-QwZRm1k
    90:90:int contentHashCode-rL5Bavg(short[]) -> contentHashCode-rL5Bavg
    96:96:java.lang.String contentToString--ajY-9A(int[]) -> contentToString--ajY-9A
    108:108:java.lang.String contentToString-GBYM_sE(byte[]) -> contentToString-GBYM_sE
    102:102:java.lang.String contentToString-QwZRm1k(long[]) -> contentToString-QwZRm1k
    114:114:java.lang.String contentToString-rL5Bavg(short[]) -> contentToString-rL5Bavg
    16:17:int random-2D5oskM(int[],kotlin.random.Random) -> random-2D5oskM
    24:25:long random-JzugnMA(long[],kotlin.random.Random) -> random-JzugnMA
    32:33:byte random-oSF2wD8(byte[],kotlin.random.Random) -> random-oSF2wD8
    40:41:short random-s5X_as8(short[],kotlin.random.Random) -> random-s5X_as8
    120:120:kotlin.UInt[] toTypedArray--ajY-9A(int[]) -> toTypedArray--ajY-9A
    132:132:kotlin.UByte[] toTypedArray-GBYM_sE(byte[]) -> toTypedArray-GBYM_sE
    126:126:kotlin.ULong[] toTypedArray-QwZRm1k(long[]) -> toTypedArray-QwZRm1k
    138:138:kotlin.UShort[] toTypedArray-rL5Bavg(short[]) -> toTypedArray-rL5Bavg
kotlin.collections.UByteIterator -> kotlin.collections.UByteIterator:
    13:13:void <init>() -> <init>
    13:13:java.lang.Object next() -> next
    14:14:kotlin.UByte next() -> next
kotlin.collections.UCollectionsKt___UCollectionsKt -> kotlin.collections.UCollectionsKt___UCollectionsKt:
    108:109:int sumOfUByte(java.lang.Iterable) -> sumOfUByte
    80:81:int sumOfUInt(java.lang.Iterable) -> sumOfUInt
    94:95:long sumOfULong(java.lang.Iterable) -> sumOfULong
    122:123:int sumOfUShort(java.lang.Iterable) -> sumOfUShort
    26:29:byte[] toUByteArray(java.util.Collection) -> toUByteArray
    39:42:int[] toUIntArray(java.util.Collection) -> toUIntArray
    52:55:long[] toULongArray(java.util.Collection) -> toULongArray
    65:68:short[] toUShortArray(java.util.Collection) -> toUShortArray
kotlin.collections.UIntIterator -> kotlin.collections.UIntIterator:
    33:33:void <init>() -> <init>
    33:33:java.lang.Object next() -> next
    34:34:kotlin.UInt next() -> next
kotlin.collections.ULongIterator -> kotlin.collections.ULongIterator:
    43:43:void <init>() -> <init>
    43:43:java.lang.Object next() -> next
    44:44:kotlin.ULong next() -> next
kotlin.collections.UShortIterator -> kotlin.collections.UShortIterator:
    23:23:void <init>() -> <init>
    23:23:java.lang.Object next() -> next
    24:24:kotlin.UShort next() -> next
kotlin.collections.jdk8.CollectionsJDK8Kt -> kotlin.collections.jdk8.CollectionsJDK8Kt:
    30:30:java.lang.Object getOrDefault(java.util.Map,java.lang.Object,java.lang.Object) -> getOrDefault
    40:40:boolean remove(java.util.Map,java.lang.Object,java.lang.Object) -> remove
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt:
    74:74:java.util.List asList--ajY-9A(int[]) -> asList--ajY-9A
    106:106:java.util.List asList-GBYM_sE(byte[]) -> asList-GBYM_sE
    90:90:java.util.List asList-QwZRm1k(long[]) -> asList-QwZRm1k
    122:122:java.util.List asList-rL5Bavg(short[]) -> asList-rL5Bavg
    146:153:int binarySearch-2fe2U9s(int[],int,int,int) -> binarySearch-2fe2U9s
    145:145:int binarySearch-2fe2U9s$default(int[],int,int,int,int,java.lang.Object) -> binarySearch-2fe2U9s$default
    242:249:int binarySearch-EtDCXyQ(short[],short,int,int) -> binarySearch-EtDCXyQ
    241:241:int binarySearch-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object) -> binarySearch-EtDCXyQ$default
    178:185:int binarySearch-K6DWlUc(long[],long,int,int) -> binarySearch-K6DWlUc
    177:177:int binarySearch-K6DWlUc$default(long[],long,int,int,int,java.lang.Object) -> binarySearch-K6DWlUc$default
    210:217:int binarySearch-WpHrYlw(byte[],byte,int,int) -> binarySearch-WpHrYlw
    209:209:int binarySearch-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object) -> binarySearch-WpHrYlw$default
    53:53:byte elementAt-PpDY95g(byte[],int) -> elementAt-PpDY95g
    65:65:short elementAt-nggk6HY(short[],int) -> elementAt-nggk6HY
    29:29:int elementAt-qFRl0hI(int[],int) -> elementAt-qFRl0hI
    41:41:long elementAt-r7IrZao(long[],int) -> elementAt-r7IrZao
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1 -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1:
    74:74:void <init>(int[]) -> <init>
    74:74:boolean contains(java.lang.Object) -> contains
    77:77:boolean contains-WZ4Q5Ns(int) -> contains-WZ4Q5Ns
    74:74:java.lang.Object get(int) -> get
    78:78:kotlin.UInt get(int) -> get
    75:75:int getSize() -> getSize
    74:74:int indexOf(java.lang.Object) -> indexOf
    79:79:int indexOf-WZ4Q5Ns(int) -> indexOf-WZ4Q5Ns
    76:76:boolean isEmpty() -> isEmpty
    74:74:int lastIndexOf(java.lang.Object) -> lastIndexOf
    80:80:int lastIndexOf-WZ4Q5Ns(int) -> lastIndexOf-WZ4Q5Ns
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2 -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2:
    90:90:void <init>(long[]) -> <init>
    90:90:boolean contains(java.lang.Object) -> contains
    93:93:boolean contains-VKZWuLQ(long) -> contains-VKZWuLQ
    90:90:java.lang.Object get(int) -> get
    94:94:kotlin.ULong get(int) -> get
    91:91:int getSize() -> getSize
    90:90:int indexOf(java.lang.Object) -> indexOf
    95:95:int indexOf-VKZWuLQ(long) -> indexOf-VKZWuLQ
    92:92:boolean isEmpty() -> isEmpty
    90:90:int lastIndexOf(java.lang.Object) -> lastIndexOf
    96:96:int lastIndexOf-VKZWuLQ(long) -> lastIndexOf-VKZWuLQ
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3 -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3:
    106:106:void <init>(byte[]) -> <init>
    106:106:boolean contains(java.lang.Object) -> contains
    109:109:boolean contains-7apg3OU(byte) -> contains-7apg3OU
    106:106:java.lang.Object get(int) -> get
    110:110:kotlin.UByte get(int) -> get
    107:107:int getSize() -> getSize
    106:106:int indexOf(java.lang.Object) -> indexOf
    111:111:int indexOf-7apg3OU(byte) -> indexOf-7apg3OU
    108:108:boolean isEmpty() -> isEmpty
    106:106:int lastIndexOf(java.lang.Object) -> lastIndexOf
    112:112:int lastIndexOf-7apg3OU(byte) -> lastIndexOf-7apg3OU
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4 -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4:
    122:122:void <init>(short[]) -> <init>
    122:122:boolean contains(java.lang.Object) -> contains
    125:125:boolean contains-xj2QHRw(short) -> contains-xj2QHRw
    122:122:java.lang.Object get(int) -> get
    126:126:kotlin.UShort get(int) -> get
    123:123:int getSize() -> getSize
    122:122:int indexOf(java.lang.Object) -> indexOf
    127:127:int indexOf-xj2QHRw(short) -> indexOf-xj2QHRw
    124:124:boolean isEmpty() -> isEmpty
    122:122:int lastIndexOf(java.lang.Object) -> lastIndexOf
    128:128:int lastIndexOf-xj2QHRw(short) -> lastIndexOf-xj2QHRw
kotlin.collections.unsigned.UArraysKt___UArraysKt -> kotlin.collections.unsigned.UArraysKt___UArraysKt:
    4368:4368:boolean all-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> all-JOV_ifY
    4355:4355:boolean all-MShoTSo(long[],kotlin.jvm.functions.Function1) -> all-MShoTSo
    4342:4342:boolean all-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> all-jgv0xPQ
    4381:4381:boolean all-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> all-xTcfx_M
    4394:4394:boolean any--ajY-9A(int[]) -> any--ajY-9A
    4418:4418:boolean any-GBYM_sE(byte[]) -> any-GBYM_sE
    4468:4468:boolean any-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> any-JOV_ifY
    4455:4455:boolean any-MShoTSo(long[],kotlin.jvm.functions.Function1) -> any-MShoTSo
    4406:4406:boolean any-QwZRm1k(long[]) -> any-QwZRm1k
    4442:4442:boolean any-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> any-jgv0xPQ
    4430:4430:boolean any-rL5Bavg(short[]) -> any-rL5Bavg
    4481:4481:boolean any-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> any-xTcfx_M
    2825:2825:byte[] asUByteArray(byte[]) -> asUByteArray
    2836:2836:int[] asUIntArray(int[]) -> asUIntArray
    2847:2847:long[] asULongArray(long[]) -> asULongArray
    2858:2858:short[] asUShortArray(short[]) -> asUShortArray
    28:28:int component1--ajY-9A(int[]) -> component1--ajY-9A
    48:48:byte component1-GBYM_sE(byte[]) -> component1-GBYM_sE
    38:38:long component1-QwZRm1k(long[]) -> component1-QwZRm1k
    58:58:short component1-rL5Bavg(short[]) -> component1-rL5Bavg
    68:68:int component2--ajY-9A(int[]) -> component2--ajY-9A
    88:88:byte component2-GBYM_sE(byte[]) -> component2-GBYM_sE
    78:78:long component2-QwZRm1k(long[]) -> component2-QwZRm1k
    98:98:short component2-rL5Bavg(short[]) -> component2-rL5Bavg
    108:108:int component3--ajY-9A(int[]) -> component3--ajY-9A
    128:128:byte component3-GBYM_sE(byte[]) -> component3-GBYM_sE
    118:118:long component3-QwZRm1k(long[]) -> component3-QwZRm1k
    138:138:short component3-rL5Bavg(short[]) -> component3-rL5Bavg
    148:148:int component4--ajY-9A(int[]) -> component4--ajY-9A
    168:168:byte component4-GBYM_sE(byte[]) -> component4-GBYM_sE
    158:158:long component4-QwZRm1k(long[]) -> component4-QwZRm1k
    178:178:short component4-rL5Bavg(short[]) -> component4-rL5Bavg
    188:188:int component5--ajY-9A(int[]) -> component5--ajY-9A
    208:208:byte component5-GBYM_sE(byte[]) -> component5-GBYM_sE
    198:198:long component5-QwZRm1k(long[]) -> component5-QwZRm1k
    218:218:short component5-rL5Bavg(short[]) -> component5-rL5Bavg
    2868:2868:boolean contentEquals-ctEhBpI(int[],int[]) -> contentEquals-ctEhBpI
    2888:2888:boolean contentEquals-kdPth3s(byte[],byte[]) -> contentEquals-kdPth3s
    2898:2898:boolean contentEquals-mazbYpA(short[],short[]) -> contentEquals-mazbYpA
    2878:2878:boolean contentEquals-us8wMrg(long[],long[]) -> contentEquals-us8wMrg
    2907:2907:int contentHashCode--ajY-9A(int[]) -> contentHashCode--ajY-9A
    2925:2925:int contentHashCode-GBYM_sE(byte[]) -> contentHashCode-GBYM_sE
    2916:2916:int contentHashCode-QwZRm1k(long[]) -> contentHashCode-QwZRm1k
    2934:2934:int contentHashCode-rL5Bavg(short[]) -> contentHashCode-rL5Bavg
    2945:2945:java.lang.String contentToString--ajY-9A(int[]) -> contentToString--ajY-9A
    2967:2967:java.lang.String contentToString-GBYM_sE(byte[]) -> contentToString-GBYM_sE
    2956:2956:java.lang.String contentToString-QwZRm1k(long[]) -> contentToString-QwZRm1k
    2978:2978:java.lang.String contentToString-rL5Bavg(short[]) -> contentToString-rL5Bavg
    3025:3025:long[] copyInto--B0-L2c(long[],long[],int,int,int) -> copyInto--B0-L2c
    3024:6364:long[] copyInto--B0-L2c$default(long[],long[],int,int,int,int,java.lang.Object) -> copyInto--B0-L2c$default
    3073:3073:short[] copyInto-9-ak10g(short[],short[],int,int,int) -> copyInto-9-ak10g
    3072:6368:short[] copyInto-9-ak10g$default(short[],short[],int,int,int,int,java.lang.Object) -> copyInto-9-ak10g$default
    3049:3049:byte[] copyInto-FUQE5sA(byte[],byte[],int,int,int) -> copyInto-FUQE5sA
    3048:6366:byte[] copyInto-FUQE5sA$default(byte[],byte[],int,int,int,int,java.lang.Object) -> copyInto-FUQE5sA$default
    3001:3001:int[] copyInto-sIZ3KeM(int[],int[],int,int,int) -> copyInto-sIZ3KeM
    3000:6362:int[] copyInto-sIZ3KeM$default(int[],int[],int,int,int,int,java.lang.Object) -> copyInto-sIZ3KeM$default
    3086:3086:int[] copyOf--ajY-9A(int[]) -> copyOf--ajY-9A
    3110:3110:byte[] copyOf-GBYM_sE(byte[]) -> copyOf-GBYM_sE
    3164:3164:byte[] copyOf-PpDY95g(byte[],int) -> copyOf-PpDY95g
    3098:3098:long[] copyOf-QwZRm1k(long[]) -> copyOf-QwZRm1k
    3178:3178:short[] copyOf-nggk6HY(short[],int) -> copyOf-nggk6HY
    3136:3136:int[] copyOf-qFRl0hI(int[],int) -> copyOf-qFRl0hI
    3150:3150:long[] copyOf-r7IrZao(long[],int) -> copyOf-r7IrZao
    3122:3122:short[] copyOf-rL5Bavg(short[]) -> copyOf-rL5Bavg
    3204:3204:long[] copyOfRange--nroSd4(long[],int,int) -> copyOfRange--nroSd4
    3217:3217:byte[] copyOfRange-4UcCI2c(byte[],int,int) -> copyOfRange-4UcCI2c
    3230:3230:short[] copyOfRange-Aa5vz7o(short[],int,int) -> copyOfRange-Aa5vz7o
    3191:3191:int[] copyOfRange-oBK06Vg(int[],int,int) -> copyOfRange-oBK06Vg
    4517:4517:int count-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> count-JOV_ifY
    4505:4505:int count-MShoTSo(long[],kotlin.jvm.functions.Function1) -> count-MShoTSo
    4493:4493:int count-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> count-jgv0xPQ
    4529:4529:int count-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> count-xTcfx_M
    1416:1415:java.util.List drop-PpDY95g(byte[],int) -> drop-PpDY95g
    1430:1429:java.util.List drop-nggk6HY(short[],int) -> drop-nggk6HY
    1388:1387:java.util.List drop-qFRl0hI(int[],int) -> drop-qFRl0hI
    1402:1401:java.util.List drop-r7IrZao(long[],int) -> drop-r7IrZao
    1472:1471:java.util.List dropLast-PpDY95g(byte[],int) -> dropLast-PpDY95g
    1486:1485:java.util.List dropLast-nggk6HY(short[],int) -> dropLast-nggk6HY
    1444:1443:java.util.List dropLast-qFRl0hI(int[],int) -> dropLast-qFRl0hI
    1458:1457:java.util.List dropLast-r7IrZao(long[],int) -> dropLast-r7IrZao
    6356:1537:java.util.List dropLastWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> dropLastWhile-JOV_ifY
    6355:1520:java.util.List dropLastWhile-MShoTSo(long[],kotlin.jvm.functions.Function1) -> dropLastWhile-MShoTSo
    6354:1503:java.util.List dropLastWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> dropLastWhile-jgv0xPQ
    6357:1554:java.util.List dropLastWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> dropLastWhile-xTcfx_M
    1609:1614:java.util.List dropWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> dropWhile-JOV_ifY
    1588:1593:java.util.List dropWhile-MShoTSo(long[],kotlin.jvm.functions.Function1) -> dropWhile-MShoTSo
    1567:1572:java.util.List dropWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> dropWhile-jgv0xPQ
    1630:1635:java.util.List dropWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> dropWhile-xTcfx_M
    6289:302:short elementAtOrElse-CVVdw08(short[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse-CVVdw08
    6286:266:int elementAtOrElse-QxvSvLU(int[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse-QxvSvLU
    6287:278:long elementAtOrElse-Xw8i6dc(long[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse-Xw8i6dc
    6288:290:byte elementAtOrElse-cO-VybQ(byte[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse-cO-VybQ
    338:338:kotlin.UByte elementAtOrNull-PpDY95g(byte[],int) -> elementAtOrNull-PpDY95g
    350:350:kotlin.UShort elementAtOrNull-nggk6HY(short[],int) -> elementAtOrNull-nggk6HY
    314:314:kotlin.UInt elementAtOrNull-qFRl0hI(int[],int) -> elementAtOrNull-qFRl0hI
    326:326:kotlin.ULong elementAtOrNull-r7IrZao(long[],int) -> elementAtOrNull-r7IrZao
    3245:3245:void fill-2fe2U9s(int[],int,int,int) -> fill-2fe2U9s
    3244:3244:void fill-2fe2U9s$default(int[],int,int,int,int,java.lang.Object) -> fill-2fe2U9s$default
    3290:3290:void fill-EtDCXyQ(short[],short,int,int) -> fill-EtDCXyQ
    3289:3289:void fill-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object) -> fill-EtDCXyQ$default
    3260:3260:void fill-K6DWlUc(long[],long,int,int) -> fill-K6DWlUc
    3259:3259:void fill-K6DWlUc$default(long[],long,int,int,int,java.lang.Object) -> fill-K6DWlUc$default
    3275:3275:void fill-WpHrYlw(byte[],byte,int,int) -> fill-WpHrYlw
    3274:3274:void fill-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object) -> fill-WpHrYlw$default
    1668:1668:java.util.List filter-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> filter-JOV_ifY
    1658:1658:java.util.List filter-MShoTSo(long[],kotlin.jvm.functions.Function1) -> filter-MShoTSo
    1648:1648:java.util.List filter-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> filter-jgv0xPQ
    1678:1678:java.util.List filter-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> filter-xTcfx_M
    1714:1714:java.util.List filterIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2) -> filterIndexed-ELGow60
    1690:1690:java.util.List filterIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> filterIndexed-WyvcNBI
    1702:1702:java.util.List filterIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> filterIndexed-s8dVfGU
    1726:1726:java.util.List filterIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> filterIndexed-xzaTVY8
    1738:1739:java.util.Collection filterIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo--6EtJGI
    1783:1784:java.util.Collection filterIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo-QqktQ3k
    1768:1769:java.util.Collection filterIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo-eNpIKz8
    1753:1754:java.util.Collection filterIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo-pe2Q0Dw
    1816:1816:java.util.List filterNot-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> filterNot-JOV_ifY
    1806:1806:java.util.List filterNot-MShoTSo(long[],kotlin.jvm.functions.Function1) -> filterNot-MShoTSo
    1796:1796:java.util.List filterNot-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> filterNot-jgv0xPQ
    1826:1826:java.util.List filterNot-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> filterNot-xTcfx_M
    1847:1847:java.util.Collection filterNotTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo-HqK1JgA
    1869:1869:java.util.Collection filterNotTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo-oEOeDjA
    1836:1836:java.util.Collection filterNotTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo-wU5IKMo
    1858:1858:java.util.Collection filterNotTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo-wzUQCXU
    1891:1891:java.util.Collection filterTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo-HqK1JgA
    1913:1913:java.util.Collection filterTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo-oEOeDjA
    1880:1880:java.util.Collection filterTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo-wU5IKMo
    1902:1902:java.util.Collection filterTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo-wzUQCXU
    380:380:kotlin.UByte find-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> find-JOV_ifY
    370:370:kotlin.ULong find-MShoTSo(long[],kotlin.jvm.functions.Function1) -> find-MShoTSo
    360:360:kotlin.UInt find-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> find-jgv0xPQ
    390:390:kotlin.UShort find-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> find-xTcfx_M
    420:420:kotlin.UByte findLast-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> findLast-JOV_ifY
    410:410:kotlin.ULong findLast-MShoTSo(long[],kotlin.jvm.functions.Function1) -> findLast-MShoTSo
    400:400:kotlin.UInt findLast-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> findLast-jgv0xPQ
    430:430:kotlin.UShort findLast-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> findLast-xTcfx_M
    441:441:int first--ajY-9A(int[]) -> first--ajY-9A
    463:463:byte first-GBYM_sE(byte[]) -> first-GBYM_sE
    509:510:byte first-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> first-JOV_ifY
    497:498:long first-MShoTSo(long[],kotlin.jvm.functions.Function1) -> first-MShoTSo
    452:452:long first-QwZRm1k(long[]) -> first-QwZRm1k
    485:486:int first-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> first-jgv0xPQ
    474:474:short first-rL5Bavg(short[]) -> first-rL5Bavg
    521:522:short first-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> first-xTcfx_M
    531:531:kotlin.UInt firstOrNull--ajY-9A(int[]) -> firstOrNull--ajY-9A
    549:549:kotlin.UByte firstOrNull-GBYM_sE(byte[]) -> firstOrNull-GBYM_sE
    590:590:kotlin.UByte firstOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> firstOrNull-JOV_ifY
    579:579:kotlin.ULong firstOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> firstOrNull-MShoTSo
    540:540:kotlin.ULong firstOrNull-QwZRm1k(long[]) -> firstOrNull-QwZRm1k
    568:568:kotlin.UInt firstOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> firstOrNull-jgv0xPQ
    558:558:kotlin.UShort firstOrNull-rL5Bavg(short[]) -> firstOrNull-rL5Bavg
    601:601:kotlin.UShort firstOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> firstOrNull-xTcfx_M
    3716:3716:java.util.List flatMap-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> flatMap-JOV_ifY
    3706:3706:java.util.List flatMap-MShoTSo(long[],kotlin.jvm.functions.Function1) -> flatMap-MShoTSo
    3696:3696:java.util.List flatMap-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> flatMap-jgv0xPQ
    3726:3726:java.util.List flatMap-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> flatMap-xTcfx_M
    3750:3752:java.util.Collection flatMapTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo-HqK1JgA
    3778:3780:java.util.Collection flatMapTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo-oEOeDjA
    3736:3738:java.util.Collection flatMapTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo-wU5IKMo
    3764:3766:java.util.Collection flatMapTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo-wzUQCXU
    4553:4553:java.lang.Object fold-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold-A8wKCXQ
    4565:4565:java.lang.Object fold-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold-yXmHNn8
    4541:4541:java.lang.Object fold-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold-zi1B2BA
    4577:4577:java.lang.Object fold-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold-zww5nb8
    4625:4625:java.lang.Object foldIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed-3iWJZGE
    4641:4641:java.lang.Object foldIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed-bzxtMww
    4609:4609:java.lang.Object foldIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed-mwnnOCs
    4593:4593:java.lang.Object foldIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed-yVwIW0Q
    6427:4670:java.lang.Object foldRight-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight-A8wKCXQ
    6428:4685:java.lang.Object foldRight-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight-yXmHNn8
    6426:4655:java.lang.Object foldRight-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight-zi1B2BA
    6429:4700:java.lang.Object foldRight-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight-zww5nb8
    6432:4756:java.lang.Object foldRightIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed-3iWJZGE
    6433:4775:java.lang.Object foldRightIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed-bzxtMww
    6431:4737:java.lang.Object foldRightIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed-mwnnOCs
    6430:4718:java.lang.Object foldRightIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed-yVwIW0Q
    4808:4808:void forEach-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> forEach-JOV_ifY
    4798:4798:void forEach-MShoTSo(long[],kotlin.jvm.functions.Function1) -> forEach-MShoTSo
    4788:4788:void forEach-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> forEach-jgv0xPQ
    4818:4818:void forEach-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> forEach-xTcfx_M
    4857:4857:void forEachIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2) -> forEachIndexed-ELGow60
    4831:4831:void forEachIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> forEachIndexed-WyvcNBI
    4844:4844:void forEachIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> forEachIndexed-s8dVfGU
    4870:4870:void forEachIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> forEachIndexed-xzaTVY8
    3299:3299:kotlin.ranges.IntRange getIndices--ajY-9A(int[]) -> getIndices--ajY-9A
    3315:3315:kotlin.ranges.IntRange getIndices-GBYM_sE(byte[]) -> getIndices-GBYM_sE
    3307:3307:kotlin.ranges.IntRange getIndices-QwZRm1k(long[]) -> getIndices-QwZRm1k
    3323:3323:kotlin.ranges.IntRange getIndices-rL5Bavg(short[]) -> getIndices-rL5Bavg
    3331:3331:int getLastIndex--ajY-9A(int[]) -> getLastIndex--ajY-9A
    3347:3347:int getLastIndex-GBYM_sE(byte[]) -> getLastIndex-GBYM_sE
    3339:3339:int getLastIndex-QwZRm1k(long[]) -> getLastIndex-QwZRm1k
    3355:3355:int getLastIndex-rL5Bavg(short[]) -> getLastIndex-rL5Bavg
    6293:642:short getOrElse-CVVdw08(short[],int,kotlin.jvm.functions.Function1) -> getOrElse-CVVdw08
    6290:612:int getOrElse-QxvSvLU(int[],int,kotlin.jvm.functions.Function1) -> getOrElse-QxvSvLU
    6291:622:long getOrElse-Xw8i6dc(long[],int,kotlin.jvm.functions.Function1) -> getOrElse-Xw8i6dc
    6292:632:byte getOrElse-cO-VybQ(byte[],int,kotlin.jvm.functions.Function1) -> getOrElse-cO-VybQ
    6296:669:kotlin.UByte getOrNull-PpDY95g(byte[],int) -> getOrNull-PpDY95g
    6297:678:kotlin.UShort getOrNull-nggk6HY(short[],int) -> getOrNull-nggk6HY
    6294:651:kotlin.UInt getOrNull-qFRl0hI(int[],int) -> getOrNull-qFRl0hI
    6295:660:kotlin.ULong getOrNull-r7IrZao(long[],int) -> getOrNull-r7IrZao
    3874:3874:java.util.Map groupBy--_j2Y-Q(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy--_j2Y-Q
    3906:3906:java.util.Map groupBy-3bBvP4M(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy-3bBvP4M
    3827:3827:java.util.Map groupBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> groupBy-JOV_ifY
    3858:3858:java.util.Map groupBy-L4rlFek(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy-L4rlFek
    3812:3812:java.util.Map groupBy-MShoTSo(long[],kotlin.jvm.functions.Function1) -> groupBy-MShoTSo
    3890:3890:java.util.Map groupBy-bBsjw1Y(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy-bBsjw1Y
    3797:3797:java.util.Map groupBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> groupBy-jgv0xPQ
    3842:3842:java.util.Map groupBy-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> groupBy-xTcfx_M
    3921:3924:java.util.Map groupByTo-4D70W2E(int[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo-4D70W2E
    3961:3964:java.util.Map groupByTo-H21X9dk(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo-H21X9dk
    4002:4005:java.util.Map groupByTo-JM6gNCM(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo-JM6gNCM
    4023:4026:java.util.Map groupByTo-QxgOkWg(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo-QxgOkWg
    3941:3944:java.util.Map groupByTo-X6OPwNk(long[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo-X6OPwNk
    3981:3984:java.util.Map groupByTo-ciTST-8(short[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo-ciTST-8
    4065:4068:java.util.Map groupByTo-q8RuPII(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo-q8RuPII
    4044:4047:java.util.Map groupByTo-qOZmbk8(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo-qOZmbk8
    698:698:int indexOf-3uqUaXg(long[],long) -> indexOf-3uqUaXg
    718:718:int indexOf-XzdR7RA(short[],short) -> indexOf-XzdR7RA
    708:708:int indexOf-gMuBH34(byte[],byte) -> indexOf-gMuBH34
    688:688:int indexOf-uWY9BYg(int[],int) -> indexOf-uWY9BYg
    6310:748:int indexOfFirst-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> indexOfFirst-JOV_ifY
    6304:738:int indexOfFirst-MShoTSo(long[],kotlin.jvm.functions.Function1) -> indexOfFirst-MShoTSo
    6298:728:int indexOfFirst-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> indexOfFirst-jgv0xPQ
    6316:758:int indexOfFirst-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> indexOfFirst-xTcfx_M
    6334:788:int indexOfLast-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> indexOfLast-JOV_ifY
    6328:778:int indexOfLast-MShoTSo(long[],kotlin.jvm.functions.Function1) -> indexOfLast-MShoTSo
    6322:768:int indexOfLast-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> indexOfLast-jgv0xPQ
    6340:798:int indexOfLast-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> indexOfLast-xTcfx_M
    809:809:int last--ajY-9A(int[]) -> last--ajY-9A
    831:831:byte last-GBYM_sE(byte[]) -> last-GBYM_sE
    6348:887:byte last-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> last-JOV_ifY
    6347:872:long last-MShoTSo(long[],kotlin.jvm.functions.Function1) -> last-MShoTSo
    820:820:long last-QwZRm1k(long[]) -> last-QwZRm1k
    6346:857:int last-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> last-jgv0xPQ
    842:842:short last-rL5Bavg(short[]) -> last-rL5Bavg
    6349:902:short last-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> last-xTcfx_M
    922:922:int lastIndexOf-3uqUaXg(long[],long) -> lastIndexOf-3uqUaXg
    942:942:int lastIndexOf-XzdR7RA(short[],short) -> lastIndexOf-XzdR7RA
    932:932:int lastIndexOf-gMuBH34(byte[],byte) -> lastIndexOf-gMuBH34
    912:912:int lastIndexOf-uWY9BYg(int[],int) -> lastIndexOf-uWY9BYg
    951:951:kotlin.UInt lastOrNull--ajY-9A(int[]) -> lastOrNull--ajY-9A
    969:969:kotlin.UByte lastOrNull-GBYM_sE(byte[]) -> lastOrNull-GBYM_sE
    6352:1018:kotlin.UByte lastOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> lastOrNull-JOV_ifY
    6351:1004:kotlin.ULong lastOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> lastOrNull-MShoTSo
    960:960:kotlin.ULong lastOrNull-QwZRm1k(long[]) -> lastOrNull-QwZRm1k
    6350:990:kotlin.UInt lastOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> lastOrNull-jgv0xPQ
    978:978:kotlin.UShort lastOrNull-rL5Bavg(short[]) -> lastOrNull-rL5Bavg
    6353:1032:kotlin.UShort lastOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> lastOrNull-xTcfx_M
    4109:4109:java.util.List map-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> map-JOV_ifY
    4096:4096:java.util.List map-MShoTSo(long[],kotlin.jvm.functions.Function1) -> map-MShoTSo
    4083:4083:java.util.List map-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> map-jgv0xPQ
    4122:4122:java.util.List map-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> map-xTcfx_M
    4161:4161:java.util.List mapIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2) -> mapIndexed-ELGow60
    4135:4135:java.util.List mapIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> mapIndexed-WyvcNBI
    4148:4148:java.util.List mapIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> mapIndexed-s8dVfGU
    4174:4174:java.util.List mapIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> mapIndexed-xzaTVY8
    4188:4189:java.util.Collection mapIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo--6EtJGI
    4236:4237:java.util.Collection mapIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo-QqktQ3k
    4220:4221:java.util.Collection mapIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo-eNpIKz8
    4204:4205:java.util.Collection mapIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo-pe2Q0Dw
    4262:4263:java.util.Collection mapTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo-HqK1JgA
    4288:4289:java.util.Collection mapTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo-oEOeDjA
    4249:4250:java.util.Collection mapTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo-wU5IKMo
    4275:4276:java.util.Collection mapTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo-wzUQCXU
    4879:4885:kotlin.UInt max--ajY-9A(int[]) -> max--ajY-9A
    4909:4915:kotlin.UByte max-GBYM_sE(byte[]) -> max-GBYM_sE
    4894:4900:kotlin.ULong max-QwZRm1k(long[]) -> max-QwZRm1k
    4924:4930:kotlin.UShort max-rL5Bavg(short[]) -> max-rL5Bavg
    4992:5005:kotlin.UByte maxBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> maxBy-JOV_ifY
    4967:4980:kotlin.ULong maxBy-MShoTSo(long[],kotlin.jvm.functions.Function1) -> maxBy-MShoTSo
    4942:4955:kotlin.UInt maxBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> maxBy-jgv0xPQ
    5017:5030:kotlin.UShort maxBy-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> maxBy-xTcfx_M
    5069:5075:kotlin.UByte maxWith-XMRcp5o(byte[],java.util.Comparator) -> maxWith-XMRcp5o
    5039:5045:kotlin.UInt maxWith-YmdZ_VM(int[],java.util.Comparator) -> maxWith-YmdZ_VM
    5084:5090:kotlin.UShort maxWith-eOHTfZs(short[],java.util.Comparator) -> maxWith-eOHTfZs
    5054:5060:kotlin.ULong maxWith-zrEWJaI(long[],java.util.Comparator) -> maxWith-zrEWJaI
    5099:5105:kotlin.UInt min--ajY-9A(int[]) -> min--ajY-9A
    5129:5135:kotlin.UByte min-GBYM_sE(byte[]) -> min-GBYM_sE
    5114:5120:kotlin.ULong min-QwZRm1k(long[]) -> min-QwZRm1k
    5144:5150:kotlin.UShort min-rL5Bavg(short[]) -> min-rL5Bavg
    5212:5225:kotlin.UByte minBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> minBy-JOV_ifY
    5187:5200:kotlin.ULong minBy-MShoTSo(long[],kotlin.jvm.functions.Function1) -> minBy-MShoTSo
    5162:5175:kotlin.UInt minBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> minBy-jgv0xPQ
    5237:5250:kotlin.UShort minBy-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> minBy-xTcfx_M
    5289:5295:kotlin.UByte minWith-XMRcp5o(byte[],java.util.Comparator) -> minWith-XMRcp5o
    5259:5265:kotlin.UInt minWith-YmdZ_VM(int[],java.util.Comparator) -> minWith-YmdZ_VM
    5304:5310:kotlin.UShort minWith-eOHTfZs(short[],java.util.Comparator) -> minWith-eOHTfZs
    5274:5280:kotlin.ULong minWith-zrEWJaI(long[],java.util.Comparator) -> minWith-zrEWJaI
    5322:5322:boolean none--ajY-9A(int[]) -> none--ajY-9A
    5346:5346:boolean none-GBYM_sE(byte[]) -> none-GBYM_sE
    5396:5396:boolean none-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> none-JOV_ifY
    5383:5383:boolean none-MShoTSo(long[],kotlin.jvm.functions.Function1) -> none-MShoTSo
    5334:5334:boolean none-QwZRm1k(long[]) -> none-QwZRm1k
    5370:5370:boolean none-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> none-jgv0xPQ
    5358:5358:boolean none-rL5Bavg(short[]) -> none-rL5Bavg
    5409:5409:boolean none-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> none-xTcfx_M
    3374:3374:long[] plus-3uqUaXg(long[],long) -> plus-3uqUaXg
    3403:3406:int[] plus-CFIt9YE(int[],java.util.Collection) -> plus-CFIt9YE
    3394:3394:short[] plus-XzdR7RA(short[],short) -> plus-XzdR7RA
    3452:3452:int[] plus-ctEhBpI(int[],int[]) -> plus-ctEhBpI
    3384:3384:byte[] plus-gMuBH34(byte[],byte) -> plus-gMuBH34
    3472:3472:byte[] plus-kdPth3s(byte[],byte[]) -> plus-kdPth3s
    3415:3418:long[] plus-kzHmqpY(long[],java.util.Collection) -> plus-kzHmqpY
    3482:3482:short[] plus-mazbYpA(short[],short[]) -> plus-mazbYpA
    3439:3442:short[] plus-ojwP5H8(short[],java.util.Collection) -> plus-ojwP5H8
    3364:3364:int[] plus-uWY9BYg(int[],int) -> plus-uWY9BYg
    3462:3462:long[] plus-us8wMrg(long[],long[]) -> plus-us8wMrg
    3427:3430:byte[] plus-xo_DsdI(byte[],java.util.Collection) -> plus-xo_DsdI
    1046:1046:int random--ajY-9A(int[]) -> random--ajY-9A
    1093:1094:int random-2D5oskM(int[],kotlin.random.Random) -> random-2D5oskM
    1070:1070:byte random-GBYM_sE(byte[]) -> random-GBYM_sE
    1106:1107:long random-JzugnMA(long[],kotlin.random.Random) -> random-JzugnMA
    1058:1058:long random-QwZRm1k(long[]) -> random-QwZRm1k
    1119:1120:byte random-oSF2wD8(byte[],kotlin.random.Random) -> random-oSF2wD8
    1082:1082:short random-rL5Bavg(short[]) -> random-rL5Bavg
    1132:1133:short random-s5X_as8(short[],kotlin.random.Random) -> random-s5X_as8
    5452:5453:byte reduce-ELGow60(byte[],kotlin.jvm.functions.Function2) -> reduce-ELGow60
    5420:5421:int reduce-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> reduce-WyvcNBI
    5436:5437:long reduce-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> reduce-s8dVfGU
    5468:5469:short reduce-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> reduce-xzaTVY8
    5487:5488:int reduceIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3) -> reduceIndexed-D40WMg8
    5525:5526:byte reduceIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3) -> reduceIndexed-EOyYB1Y
    5544:5545:short reduceIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3) -> reduceIndexed-aLgx1Fo
    5506:5507:long reduceIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3) -> reduceIndexed-z1zDJgo
    6468:5593:byte reduceRight-ELGow60(byte[],kotlin.jvm.functions.Function2) -> reduceRight-ELGow60
    6466:5561:int reduceRight-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> reduceRight-WyvcNBI
    6467:5577:long reduceRight-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> reduceRight-s8dVfGU
    6469:5609:short reduceRight-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> reduceRight-xzaTVY8
    6470:5628:int reduceRightIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3) -> reduceRightIndexed-D40WMg8
    6472:5668:byte reduceRightIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3) -> reduceRightIndexed-EOyYB1Y
    6473:5688:short reduceRightIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3) -> reduceRightIndexed-aLgx1Fo
    6471:5648:long reduceRightIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3) -> reduceRightIndexed-z1zDJgo
    2416:2416:void reverse--ajY-9A(int[]) -> reverse--ajY-9A
    2436:2436:void reverse-GBYM_sE(byte[]) -> reverse-GBYM_sE
    2426:2426:void reverse-QwZRm1k(long[]) -> reverse-QwZRm1k
    2446:2446:void reverse-rL5Bavg(short[]) -> reverse-rL5Bavg
    2455:2457:java.util.List reversed--ajY-9A(int[]) -> reversed--ajY-9A
    2479:2481:java.util.List reversed-GBYM_sE(byte[]) -> reversed-GBYM_sE
    2467:2469:java.util.List reversed-QwZRm1k(long[]) -> reversed-QwZRm1k
    2491:2493:java.util.List reversed-rL5Bavg(short[]) -> reversed-rL5Bavg
    2504:2504:int[] reversedArray--ajY-9A(int[]) -> reversedArray--ajY-9A
    2524:2524:byte[] reversedArray-GBYM_sE(byte[]) -> reversedArray-GBYM_sE
    2514:2514:long[] reversedArray-QwZRm1k(long[]) -> reversedArray-QwZRm1k
    2534:2534:short[] reversedArray-rL5Bavg(short[]) -> reversedArray-rL5Bavg
    1144:1144:int single--ajY-9A(int[]) -> single--ajY-9A
    1164:1164:byte single-GBYM_sE(byte[]) -> single-GBYM_sE
    1228:1235:byte single-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> single-JOV_ifY
    1207:1214:long single-MShoTSo(long[],kotlin.jvm.functions.Function1) -> single-MShoTSo
    1154:1154:long single-QwZRm1k(long[]) -> single-QwZRm1k
    1186:1193:int single-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> single-jgv0xPQ
    1174:1174:short single-rL5Bavg(short[]) -> single-rL5Bavg
    1249:1256:short single-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> single-xTcfx_M
    1267:1267:kotlin.UInt singleOrNull--ajY-9A(int[]) -> singleOrNull--ajY-9A
    1285:1285:kotlin.UByte singleOrNull-GBYM_sE(byte[]) -> singleOrNull-GBYM_sE
    1346:1349:kotlin.UByte singleOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> singleOrNull-JOV_ifY
    1326:1329:kotlin.ULong singleOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> singleOrNull-MShoTSo
    1276:1276:kotlin.ULong singleOrNull-QwZRm1k(long[]) -> singleOrNull-QwZRm1k
    1306:1309:kotlin.UInt singleOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> singleOrNull-jgv0xPQ
    1294:1294:kotlin.UShort singleOrNull-rL5Bavg(short[]) -> singleOrNull-rL5Bavg
    1366:1369:kotlin.UShort singleOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> singleOrNull-xTcfx_M
    1978:1982:java.util.List slice-F7u83W8(long[],java.lang.Iterable) -> slice-F7u83W8
    1963:1967:java.util.List slice-HwE9HBo(int[],java.lang.Iterable) -> slice-HwE9HBo
    2008:2012:java.util.List slice-JGPC0-M(short[],java.lang.Iterable) -> slice-JGPC0-M
    1993:1997:java.util.List slice-JQknh5Q(byte[],java.lang.Iterable) -> slice-JQknh5Q
    1953:1954:java.util.List slice-Q6IL4kU(short[],kotlin.ranges.IntRange) -> slice-Q6IL4kU
    1933:1934:java.util.List slice-ZRhS8yI(long[],kotlin.ranges.IntRange) -> slice-ZRhS8yI
    1943:1944:java.util.List slice-c0bezYM(byte[],kotlin.ranges.IntRange) -> slice-c0bezYM
    1923:1924:java.util.List slice-tAntMlw(int[],kotlin.ranges.IntRange) -> slice-tAntMlw
    2023:2023:int[] sliceArray-CFIt9YE(int[],java.util.Collection) -> sliceArray-CFIt9YE
    2086:2086:short[] sliceArray-Q6IL4kU(short[],kotlin.ranges.IntRange) -> sliceArray-Q6IL4kU
    2068:2068:long[] sliceArray-ZRhS8yI(long[],kotlin.ranges.IntRange) -> sliceArray-ZRhS8yI
    2077:2077:byte[] sliceArray-c0bezYM(byte[],kotlin.ranges.IntRange) -> sliceArray-c0bezYM
    2032:2032:long[] sliceArray-kzHmqpY(long[],java.util.Collection) -> sliceArray-kzHmqpY
    2050:2050:short[] sliceArray-ojwP5H8(short[],java.util.Collection) -> sliceArray-ojwP5H8
    2059:2059:int[] sliceArray-tAntMlw(int[],kotlin.ranges.IntRange) -> sliceArray-tAntMlw
    2041:2041:byte[] sliceArray-xo_DsdI(byte[],java.util.Collection) -> sliceArray-xo_DsdI
    3493:3493:void sort--ajY-9A(int[]) -> sort--ajY-9A
    3515:3515:void sort-GBYM_sE(byte[]) -> sort-GBYM_sE
    3504:3504:void sort-QwZRm1k(long[]) -> sort-QwZRm1k
    3526:3526:void sort-rL5Bavg(short[]) -> sort-rL5Bavg
    2543:2545:void sortDescending--ajY-9A(int[]) -> sortDescending--ajY-9A
    2567:2569:void sortDescending-GBYM_sE(byte[]) -> sortDescending-GBYM_sE
    2555:2557:void sortDescending-QwZRm1k(long[]) -> sortDescending-QwZRm1k
    2579:2581:void sortDescending-rL5Bavg(short[]) -> sortDescending-rL5Bavg
    2591:2591:java.util.List sorted--ajY-9A(int[]) -> sorted--ajY-9A
    2609:2609:java.util.List sorted-GBYM_sE(byte[]) -> sorted-GBYM_sE
    2600:2600:java.util.List sorted-QwZRm1k(long[]) -> sorted-QwZRm1k
    2618:2618:java.util.List sorted-rL5Bavg(short[]) -> sorted-rL5Bavg
    2627:2628:int[] sortedArray--ajY-9A(int[]) -> sortedArray--ajY-9A
    2647:2648:byte[] sortedArray-GBYM_sE(byte[]) -> sortedArray-GBYM_sE
    2637:2638:long[] sortedArray-QwZRm1k(long[]) -> sortedArray-QwZRm1k
    2657:2658:short[] sortedArray-rL5Bavg(short[]) -> sortedArray-rL5Bavg
    2667:2668:int[] sortedArrayDescending--ajY-9A(int[]) -> sortedArrayDescending--ajY-9A
    2687:2688:byte[] sortedArrayDescending-GBYM_sE(byte[]) -> sortedArrayDescending-GBYM_sE
    2677:2678:long[] sortedArrayDescending-QwZRm1k(long[]) -> sortedArrayDescending-QwZRm1k
    2697:2698:short[] sortedArrayDescending-rL5Bavg(short[]) -> sortedArrayDescending-rL5Bavg
    2709:2709:java.util.List sortedDescending--ajY-9A(int[]) -> sortedDescending--ajY-9A
    2731:2731:java.util.List sortedDescending-GBYM_sE(byte[]) -> sortedDescending-GBYM_sE
    2720:2720:java.util.List sortedDescending-QwZRm1k(long[]) -> sortedDescending-QwZRm1k
    2742:2742:java.util.List sortedDescending-rL5Bavg(short[]) -> sortedDescending-rL5Bavg
    6252:6252:int sum--ajY-9A(int[]) -> sum--ajY-9A
    6272:6272:int sum-GBYM_sE(byte[]) -> sum-GBYM_sE
    6262:6262:long sum-QwZRm1k(long[]) -> sum-QwZRm1k
    6282:6282:int sum-rL5Bavg(short[]) -> sum-rL5Bavg
    5733:5734:int sumBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> sumBy-JOV_ifY
    5719:5720:int sumBy-MShoTSo(long[],kotlin.jvm.functions.Function1) -> sumBy-MShoTSo
    5705:5706:int sumBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> sumBy-jgv0xPQ
    5747:5748:int sumBy-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> sumBy-xTcfx_M
    5789:5790:double sumByDouble-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> sumByDouble-JOV_ifY
    5775:5776:double sumByDouble-MShoTSo(long[],kotlin.jvm.functions.Function1) -> sumByDouble-MShoTSo
    5761:5762:double sumByDouble-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> sumByDouble-jgv0xPQ
    5803:5804:double sumByDouble-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> sumByDouble-xTcfx_M
    6225:6226:int sumOfUByte(kotlin.UByte[]) -> sumOfUByte
    6197:6198:int sumOfUInt(kotlin.UInt[]) -> sumOfUInt
    6211:6212:long sumOfULong(kotlin.ULong[]) -> sumOfULong
    6239:6240:int sumOfUShort(kotlin.UShort[]) -> sumOfUShort
    2148:2147:java.util.List take-PpDY95g(byte[],int) -> take-PpDY95g
    2172:2171:java.util.List take-nggk6HY(short[],int) -> take-nggk6HY
    2100:2099:java.util.List take-qFRl0hI(int[],int) -> take-qFRl0hI
    2124:2123:java.util.List take-r7IrZao(long[],int) -> take-r7IrZao
    2238:2237:java.util.List takeLast-PpDY95g(byte[],int) -> takeLast-PpDY95g
    2259:2258:java.util.List takeLast-nggk6HY(short[],int) -> takeLast-nggk6HY
    2196:2195:java.util.List takeLast-qFRl0hI(int[],int) -> takeLast-qFRl0hI
    2217:2216:java.util.List takeLast-r7IrZao(long[],int) -> takeLast-r7IrZao
    6360:2317:java.util.List takeLastWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> takeLastWhile-JOV_ifY
    6359:2300:java.util.List takeLastWhile-MShoTSo(long[],kotlin.jvm.functions.Function1) -> takeLastWhile-MShoTSo
    6358:2283:java.util.List takeLastWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> takeLastWhile-jgv0xPQ
    6361:2334:java.util.List takeLastWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> takeLastWhile-xTcfx_M
    2382:2386:java.util.List takeWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> takeWhile-JOV_ifY
    2364:2368:java.util.List takeWhile-MShoTSo(long[],kotlin.jvm.functions.Function1) -> takeWhile-MShoTSo
    2346:2350:java.util.List takeWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> takeWhile-jgv0xPQ
    2400:2404:java.util.List takeWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> takeWhile-xTcfx_M
    3537:3537:byte[] toByteArray-GBYM_sE(byte[]) -> toByteArray-GBYM_sE
    3548:3548:int[] toIntArray--ajY-9A(int[]) -> toIntArray--ajY-9A
    3559:3559:long[] toLongArray-QwZRm1k(long[]) -> toLongArray-QwZRm1k
    3570:3570:short[] toShortArray-rL5Bavg(short[]) -> toShortArray-rL5Bavg
    3579:3579:kotlin.UInt[] toTypedArray--ajY-9A(int[]) -> toTypedArray--ajY-9A
    3597:3597:kotlin.UByte[] toTypedArray-GBYM_sE(byte[]) -> toTypedArray-GBYM_sE
    3588:3588:kotlin.ULong[] toTypedArray-QwZRm1k(long[]) -> toTypedArray-QwZRm1k
    3606:3606:kotlin.UShort[] toTypedArray-rL5Bavg(short[]) -> toTypedArray-rL5Bavg
    3615:3615:byte[] toUByteArray(kotlin.UByte[]) -> toUByteArray
    3626:3626:byte[] toUByteArray(byte[]) -> toUByteArray
    3635:3635:int[] toUIntArray(kotlin.UInt[]) -> toUIntArray
    3646:3646:int[] toUIntArray(int[]) -> toUIntArray
    3655:3655:long[] toULongArray(kotlin.ULong[]) -> toULongArray
    3666:3666:long[] toULongArray(long[]) -> toULongArray
    3675:3675:short[] toUShortArray(kotlin.UShort[]) -> toUShortArray
    3686:3686:short[] toUShortArray(short[]) -> toUShortArray
    4300:4300:java.lang.Iterable withIndex--ajY-9A(int[]) -> withIndex--ajY-9A
    4320:4320:java.lang.Iterable withIndex-GBYM_sE(byte[]) -> withIndex-GBYM_sE
    4310:4310:java.lang.Iterable withIndex-QwZRm1k(long[]) -> withIndex-QwZRm1k
    4330:4330:java.lang.Iterable withIndex-rL5Bavg(short[]) -> withIndex-rL5Bavg
    5992:5997:java.util.List zip-7znnbtw(int[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip-7znnbtw
    5887:5890:java.util.List zip-8LME4QE(long[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip-8LME4QE
    5818:5818:java.util.List zip-C-E_24M(int[],java.lang.Object[]) -> zip-C-E_24M
    5954:5954:java.util.List zip-F7u83W8(long[],java.lang.Iterable) -> zip-F7u83W8
    5942:5942:java.util.List zip-HwE9HBo(int[],java.lang.Iterable) -> zip-HwE9HBo
    6162:6165:java.util.List zip-JAKpvQM(byte[],byte[],kotlin.jvm.functions.Function2) -> zip-JAKpvQM
    5978:5978:java.util.List zip-JGPC0-M(short[],java.lang.Iterable) -> zip-JGPC0-M
    5966:5966:java.util.List zip-JQknh5Q(byte[],java.lang.Iterable) -> zip-JQknh5Q
    6124:6127:java.util.List zip-L83TJbI(int[],int[],kotlin.jvm.functions.Function2) -> zip-L83TJbI
    5906:5909:java.util.List zip-LuipOMY(byte[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip-LuipOMY
    6143:6146:java.util.List zip-PabeH-Q(long[],long[],kotlin.jvm.functions.Function2) -> zip-PabeH-Q
    6013:6018:java.util.List zip-TUPTUsU(long[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip-TUPTUsU
    6034:6039:java.util.List zip-UCnP4_w(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip-UCnP4_w
    5868:5871:java.util.List zip-ZjwqOic(int[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip-ZjwqOic
    6074:6074:java.util.List zip-ctEhBpI(int[],int[]) -> zip-ctEhBpI
    5925:5928:java.util.List zip-ePBmRWY(short[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip-ePBmRWY
    5830:5830:java.util.List zip-f7H3mmw(long[],java.lang.Object[]) -> zip-f7H3mmw
    6181:6184:java.util.List zip-gVVukQo(short[],short[],kotlin.jvm.functions.Function2) -> zip-gVVukQo
    6055:6060:java.util.List zip-kBb4a-s(short[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip-kBb4a-s
    6098:6098:java.util.List zip-kdPth3s(byte[],byte[]) -> zip-kdPth3s
    6110:6110:java.util.List zip-mazbYpA(short[],short[]) -> zip-mazbYpA
    5842:5842:java.util.List zip-nl983wc(byte[],java.lang.Object[]) -> zip-nl983wc
    5854:5854:java.util.List zip-uaTIQ5s(short[],java.lang.Object[]) -> zip-uaTIQ5s
    6086:6086:java.util.List zip-us8wMrg(long[],long[]) -> zip-us8wMrg
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1 -> kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1:
    4300:4300:kotlin.collections.UIntIterator invoke() -> invoke
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2 -> kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2:
    4310:4310:kotlin.collections.ULongIterator invoke() -> invoke
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3 -> kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3:
    4320:4320:kotlin.collections.UByteIterator invoke() -> invoke
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4 -> kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4:
    4330:4330:kotlin.collections.UShortIterator invoke() -> invoke
kotlin.comparisons.ComparisonsKt__ComparisonsKt -> kotlin.comparisons.ComparisonsKt__ComparisonsKt:
    1:1:int access$compareValuesByImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[]) -> access$compareValuesByImpl
    90:90:java.util.Comparator compareBy(kotlin.jvm.functions.Function1[]) -> compareBy
    102:102:java.util.Comparator compareBy(kotlin.jvm.functions.Function1) -> compareBy
    112:112:java.util.Comparator compareBy(java.util.Comparator,kotlin.jvm.functions.Function1) -> compareBy
    121:121:java.util.Comparator compareByDescending(kotlin.jvm.functions.Function1) -> compareByDescending
    133:133:java.util.Comparator compareByDescending(java.util.Comparator,kotlin.jvm.functions.Function1) -> compareByDescending
    78:78:int compareValues(java.lang.Comparable,java.lang.Comparable) -> compareValues
    19:19:int compareValuesBy(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[]) -> compareValuesBy
    42:42:int compareValuesBy(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1) -> compareValuesBy
    54:54:int compareValuesBy(java.lang.Object,java.lang.Object,java.util.Comparator,kotlin.jvm.functions.Function1) -> compareValuesBy
    24:27:int compareValuesByImpl$ComparisonsKt__ComparisonsKt(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[]) -> compareValuesByImpl$ComparisonsKt__ComparisonsKt
    280:280:java.util.Comparator naturalOrder() -> naturalOrder
    232:232:java.util.Comparator nullsFirst(java.util.Comparator) -> nullsFirst
    248:248:java.util.Comparator nullsFirst() -> nullsFirst
    257:257:java.util.Comparator nullsLast(java.util.Comparator) -> nullsLast
    273:273:java.util.Comparator nullsLast() -> nullsLast
    287:287:java.util.Comparator reverseOrder() -> reverseOrder
    295:298:java.util.Comparator reversed(java.util.Comparator) -> reversed
    207:207:java.util.Comparator then(java.util.Comparator,java.util.Comparator) -> then
    143:143:java.util.Comparator thenBy(java.util.Comparator,kotlin.jvm.functions.Function1) -> thenBy
    156:156:java.util.Comparator thenBy(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1) -> thenBy
    169:169:java.util.Comparator thenByDescending(java.util.Comparator,kotlin.jvm.functions.Function1) -> thenByDescending
    182:182:java.util.Comparator thenByDescending(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1) -> thenByDescending
    195:195:java.util.Comparator thenComparator(java.util.Comparator,kotlin.jvm.functions.Function2) -> thenComparator
    219:219:java.util.Comparator thenDescending(java.util.Comparator,java.util.Comparator) -> thenDescending
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1:
    91:91:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2:
    102:102:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3:
    112:112:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1:
    121:121:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2:
    133:133:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsFirst$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsFirst$1:
    237:237:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsLast$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsLast$1:
    262:262:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$then$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$then$1:
    208:209:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1:
    144:145:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2:
    157:158:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1:
    170:171:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2:
    183:184:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1:
    196:197:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenDescending$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenDescending$1:
    220:221:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt -> kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt:
    23:23:java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable) -> maxOf
    32:32:byte maxOf(byte,byte) -> maxOf
    41:41:short maxOf(short,short) -> maxOf
    50:50:int maxOf(int,int) -> maxOf
    59:59:long maxOf(long,long) -> maxOf
    68:68:float maxOf(float,float) -> maxOf
    77:77:double maxOf(double,double) -> maxOf
    85:85:java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> maxOf
    94:94:byte maxOf(byte,byte,byte) -> maxOf
    103:103:short maxOf(short,short,short) -> maxOf
    112:112:int maxOf(int,int,int) -> maxOf
    121:121:long maxOf(long,long,long) -> maxOf
    130:130:float maxOf(float,float,float) -> maxOf
    139:139:double maxOf(double,double,double) -> maxOf
    148:148:java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable) -> minOf
    157:157:byte minOf(byte,byte) -> minOf
    166:166:short minOf(short,short) -> minOf
    175:175:int minOf(int,int) -> minOf
    184:184:long minOf(long,long) -> minOf
    193:193:float minOf(float,float) -> minOf
    202:202:double minOf(double,double) -> minOf
    210:210:java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> minOf
    219:219:byte minOf(byte,byte,byte) -> minOf
    228:228:short minOf(short,short,short) -> minOf
    237:237:int minOf(int,int,int) -> minOf
    246:246:long minOf(long,long,long) -> minOf
    255:255:float minOf(float,float,float) -> minOf
    264:264:double minOf(double,double,double) -> minOf
kotlin.comparisons.ComparisonsKt___ComparisonsKt -> kotlin.comparisons.ComparisonsKt___ComparisonsKt:
    120:120:java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator) -> maxOf
    129:129:java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.util.Comparator) -> maxOf
    234:234:java.lang.Object minOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator) -> minOf
    243:243:java.lang.Object minOf(java.lang.Object,java.lang.Object,java.util.Comparator) -> minOf
kotlin.comparisons.NaturalOrderComparator -> kotlin.comparisons.NaturalOrderComparator:
    308:308:void <clinit>() -> <clinit>
    308:308:void <init>() -> <init>
    308:308:int compare(java.lang.Object,java.lang.Object) -> compare
    309:309:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    311:311:java.util.Comparator reversed() -> reversed
kotlin.comparisons.ReverseOrderComparator -> kotlin.comparisons.ReverseOrderComparator:
    314:314:void <clinit>() -> <clinit>
    314:314:void <init>() -> <init>
    314:314:int compare(java.lang.Object,java.lang.Object) -> compare
    315:315:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    317:317:java.util.Comparator reversed() -> reversed
kotlin.comparisons.ReversedComparator -> kotlin.comparisons.ReversedComparator:
    302:302:void <init>(java.util.Comparator) -> <init>
    303:303:int compare(java.lang.Object,java.lang.Object) -> compare
    302:302:java.util.Comparator getComparator() -> getComparator
    305:305:java.util.Comparator reversed() -> reversed
kotlin.comparisons.UComparisonsKt___UComparisonsKt -> kotlin.comparisons.UComparisonsKt___UComparisonsKt:
    51:51:short maxOf-5PvTz6A(short,short) -> maxOf-5PvTz6A
    24:24:int maxOf-J1ME1BU(int,int) -> maxOf-J1ME1BU
    42:42:byte maxOf-Kr8caGY(byte,byte) -> maxOf-Kr8caGY
    91:91:short maxOf-VKSA0NQ(short,short,short) -> maxOf-VKSA0NQ
    61:61:int maxOf-WZ9TVnA(int,int,int) -> maxOf-WZ9TVnA
    81:81:byte maxOf-b33U2AM(byte,byte,byte) -> maxOf-b33U2AM
    33:33:long maxOf-eb3DHEI(long,long) -> maxOf-eb3DHEI
    71:71:long maxOf-sambcqE(long,long,long) -> maxOf-sambcqE
    127:127:short minOf-5PvTz6A(short,short) -> minOf-5PvTz6A
    100:100:int minOf-J1ME1BU(int,int) -> minOf-J1ME1BU
    118:118:byte minOf-Kr8caGY(byte,byte) -> minOf-Kr8caGY
    167:167:short minOf-VKSA0NQ(short,short,short) -> minOf-VKSA0NQ
    137:137:int minOf-WZ9TVnA(int,int,int) -> minOf-WZ9TVnA
    157:157:byte minOf-b33U2AM(byte,byte,byte) -> minOf-b33U2AM
    109:109:long minOf-eb3DHEI(long,long) -> minOf-eb3DHEI
    147:147:long minOf-sambcqE(long,long,long) -> minOf-sambcqE
kotlin.concurrent.LocksKt -> kotlin.concurrent.LocksKt:
    33:38:java.lang.Object read(java.util.concurrent.locks.ReentrantReadWriteLock,kotlin.jvm.functions.Function0) -> read
    19:23:java.lang.Object withLock(java.util.concurrent.locks.Lock,kotlin.jvm.functions.Function0) -> withLock
    57:68:java.lang.Object write(java.util.concurrent.locks.ReentrantReadWriteLock,kotlin.jvm.functions.Function0) -> write
kotlin.concurrent.ThreadsKt -> kotlin.concurrent.ThreadsKt:
    59:59:java.lang.Object getOrSet(java.lang.ThreadLocal,kotlin.jvm.functions.Function0) -> getOrSet
    28:42:java.lang.Thread thread(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0) -> thread
    25:25:java.lang.Thread thread$default(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0,int,java.lang.Object) -> thread$default
kotlin.concurrent.ThreadsKt$thread$thread$1 -> kotlin.concurrent.ThreadsKt$thread$thread$1:
    28:28:void <init>(kotlin.jvm.functions.Function0) -> <init>
    30:30:void run() -> run
kotlin.concurrent.TimersKt -> kotlin.concurrent.TimersKt:
    123:124:java.util.Timer fixedRateTimer(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1) -> fixedRateTimer
    137:138:java.util.Timer fixedRateTimer(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1) -> fixedRateTimer
    155:156:java.util.Timer fixedRateTimer$default(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1,int,java.lang.Object) -> fixedRateTimer$default
    158:159:java.util.Timer fixedRateTimer$default(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1,int,java.lang.Object) -> fixedRateTimer$default
    18:19:java.util.TimerTask schedule(java.util.Timer,long,kotlin.jvm.functions.Function1) -> schedule
    28:29:java.util.TimerTask schedule(java.util.Timer,java.util.Date,kotlin.jvm.functions.Function1) -> schedule
    40:41:java.util.TimerTask schedule(java.util.Timer,long,long,kotlin.jvm.functions.Function1) -> schedule
    51:52:java.util.TimerTask schedule(java.util.Timer,java.util.Date,long,kotlin.jvm.functions.Function1) -> schedule
    63:64:java.util.TimerTask scheduleAtFixedRate(java.util.Timer,long,long,kotlin.jvm.functions.Function1) -> scheduleAtFixedRate
    74:75:java.util.TimerTask scheduleAtFixedRate(java.util.Timer,java.util.Date,long,kotlin.jvm.functions.Function1) -> scheduleAtFixedRate
    82:82:java.util.Timer timer(java.lang.String,boolean) -> timer
    94:95:java.util.Timer timer(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1) -> timer
    108:109:java.util.Timer timer(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1) -> timer
    149:150:java.util.Timer timer$default(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1,int,java.lang.Object) -> timer$default
    152:153:java.util.Timer timer$default(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1,int,java.lang.Object) -> timer$default
    146:146:java.util.TimerTask timerTask(kotlin.jvm.functions.Function1) -> timerTask
kotlin.concurrent.TimersKt$timerTask$1 -> kotlin.concurrent.TimersKt$timerTask$1:
    146:146:void <init>(kotlin.jvm.functions.Function1) -> <init>
    147:147:void run() -> run
kotlin.contracts.ContractBuilder$DefaultImpls -> kotlin.contracts.ContractBuilder$DefaultImpls:
    85:0:kotlin.contracts.CallsInPlace callsInPlace$default(kotlin.contracts.ContractBuilder,kotlin.Function,kotlin.contracts.InvocationKind,int,java.lang.Object) -> callsInPlace$default
kotlin.contracts.InvocationKind -> kotlin.contracts.InvocationKind:
    96:96:void <init>(java.lang.String,int) -> <init>
kotlin.coroutines.AbstractCoroutineContextElement -> kotlin.coroutines.AbstractCoroutineContextElement:
    15:15:void <init>(kotlin.coroutines.CoroutineContext$Key) -> <init>
    15:15:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    15:15:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    15:15:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    15:15:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    15:15:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CombinedContext -> kotlin.coroutines.CombinedContext:
    38:38:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> <init>
    79:79:boolean contains(kotlin.coroutines.CoroutineContext$Element) -> contains
    84:89:boolean containsAll(kotlin.coroutines.CombinedContext) -> containsAll
    95:95:boolean equals(java.lang.Object) -> equals
    57:57:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    46:51:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    97:97:int hashCode() -> hashCode
    60:65:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    38:38:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    73:73:int size() -> size
    100:100:java.lang.String toString() -> toString
    105:109:java.lang.Object writeReplace() -> writeReplace
kotlin.coroutines.CombinedContext$Serialized -> kotlin.coroutines.CombinedContext$Serialized:
    114:114:void <init>(kotlin.coroutines.CoroutineContext[]) -> <init>
    114:114:kotlin.coroutines.CoroutineContext[] getElements() -> getElements
    119:119:java.lang.Object readResolve() -> readResolve
kotlin.coroutines.CombinedContext$Serialized$Companion -> kotlin.coroutines.CombinedContext$Serialized$Companion:
    115:115:void <init>() -> <init>
    115:115:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.coroutines.CombinedContext$toString$1 -> kotlin.coroutines.CombinedContext$toString$1:
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    101:101:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.CombinedContext$writeReplace$1 -> kotlin.coroutines.CombinedContext$writeReplace$1:
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    108:108:void invoke(kotlin.Unit,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> kotlin.coroutines.ContinuationInterceptor$DefaultImpls:
    49:49:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> get
    53:53:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> minusKey
kotlin.coroutines.ContinuationInterceptor$Key -> kotlin.coroutines.ContinuationInterceptor$Key:
    18:18:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
kotlin.coroutines.ContinuationKt -> kotlin.coroutines.ContinuationKt:
    65:65:kotlin.coroutines.Continuation Continuation(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> Continuation
    86:86:kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> createCoroutine
    102:102:kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutine
    156:156:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    44:44:void resume(kotlin.coroutines.Continuation,java.lang.Object) -> resume
    53:53:void resumeWithException(kotlin.coroutines.Continuation,java.lang.Throwable) -> resumeWithException
    114:114:void startCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> startCoroutine
    128:128:void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutine
    142:142:java.lang.Object suspendCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> suspendCoroutine
kotlin.coroutines.ContinuationKt$Continuation$1 -> kotlin.coroutines.ContinuationKt$Continuation$1:
    65:65:void <init>(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    67:67:kotlin.coroutines.CoroutineContext getContext() -> getContext
    70:70:void resumeWith(java.lang.Object) -> resumeWith
kotlin.coroutines.CoroutineContext$DefaultImpls -> kotlin.coroutines.CoroutineContext$DefaultImpls:
    31:32:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> kotlin.coroutines.CoroutineContext$Element$DefaultImpls:
    70:70:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    67:67:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> get
    73:73:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> minusKey
kotlin.coroutines.CoroutineContext$plus$1 -> kotlin.coroutines.CoroutineContext$plus$1:
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    33:40:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.EmptyCoroutineContext -> kotlin.coroutines.EmptyCoroutineContext:
    21:21:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    23:23:java.lang.Object readResolve() -> readResolve
kotlin.coroutines.SafeContinuation -> kotlin.coroutines.SafeContinuation:
    32:31:void <clinit>() -> <clinit>
    15:26:void <init>(kotlin.coroutines.Continuation,java.lang.Object) -> <init>
    20:20:void <init>(kotlin.coroutines.Continuation) -> <init>
    67:67:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    23:23:kotlin.coroutines.CoroutineContext getContext() -> getContext
    52:59:java.lang.Object getOrThrow() -> getOrThrow
    38:45:void resumeWith(java.lang.Object) -> resumeWith
    73:73:java.lang.String toString() -> toString
kotlin.coroutines.SafeContinuation$Companion -> kotlin.coroutines.SafeContinuation$Companion:
    28:28:void <init>() -> <init>
    28:28:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.coroutines.experimental.AbstractCoroutineContextElement -> kotlin.coroutines.experimental.AbstractCoroutineContextElement:
    14:14:void <init>(kotlin.coroutines.experimental.CoroutineContext$Key) -> <init>
    14:14:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    14:14:kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Key) -> get
    14:14:kotlin.coroutines.experimental.CoroutineContext$Key getKey() -> getKey
    14:14:kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Key) -> minusKey
    14:14:kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext) -> plus
kotlin.coroutines.experimental.CombinedContext -> kotlin.coroutines.experimental.CombinedContext:
    33:33:void <init>(kotlin.coroutines.experimental.CoroutineContext,kotlin.coroutines.experimental.CoroutineContext$Element) -> <init>
    64:64:boolean contains(kotlin.coroutines.experimental.CoroutineContext$Element) -> contains
    69:74:boolean containsAll(kotlin.coroutines.experimental.CombinedContext) -> containsAll
    80:80:boolean equals(java.lang.Object) -> equals
    48:48:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    37:42:kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Key) -> get
    33:33:kotlin.coroutines.experimental.CoroutineContext$Element getElement() -> getElement
    33:33:kotlin.coroutines.experimental.CoroutineContext getLeft() -> getLeft
    82:82:int hashCode() -> hashCode
    51:56:kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Key) -> minusKey
    33:33:kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext) -> plus
    61:61:int size() -> size
    85:85:java.lang.String toString() -> toString
kotlin.coroutines.experimental.CombinedContext$toString$1 -> kotlin.coroutines.experimental.CombinedContext$toString$1:
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    86:86:java.lang.String invoke(java.lang.String,kotlin.coroutines.experimental.CoroutineContext$Element) -> invoke
kotlin.coroutines.experimental.ContinuationInterceptor$Key -> kotlin.coroutines.experimental.ContinuationInterceptor$Key:
    18:18:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
kotlin.coroutines.experimental.CoroutineContext$DefaultImpls -> kotlin.coroutines.experimental.CoroutineContext$DefaultImpls:
    33:34:kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext,kotlin.coroutines.experimental.CoroutineContext) -> plus
kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls -> kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls:
    68:68:java.lang.Object fold(kotlin.coroutines.experimental.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    65:65:kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Element,kotlin.coroutines.experimental.CoroutineContext$Key) -> get
    71:71:kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Element,kotlin.coroutines.experimental.CoroutineContext$Key) -> minusKey
kotlin.coroutines.experimental.CoroutineContext$plus$1 -> kotlin.coroutines.experimental.CoroutineContext$plus$1:
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    35:42:kotlin.coroutines.experimental.CoroutineContext invoke(kotlin.coroutines.experimental.CoroutineContext,kotlin.coroutines.experimental.CoroutineContext$Element) -> invoke
kotlin.coroutines.experimental.CoroutinesKt -> kotlin.coroutines.experimental.CoroutinesKt:
    56:56:kotlin.coroutines.experimental.Continuation createCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.experimental.Continuation) -> createCoroutine
    70:70:kotlin.coroutines.experimental.Continuation createCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation) -> createCoroutine
    101:101:kotlin.coroutines.experimental.CoroutineContext getCoroutineContext() -> getCoroutineContext
    109:115:void processBareContinuationResume(kotlin.coroutines.experimental.Continuation,kotlin.jvm.functions.Function0) -> processBareContinuationResume
    27:27:void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.experimental.Continuation) -> startCoroutine
    40:40:void startCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation) -> startCoroutine
    82:85:java.lang.Object suspendCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation) -> suspendCoroutine
    82:82:java.lang.Object suspendCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation) -> suspendCoroutine$$forInline
kotlin.coroutines.experimental.EmptyCoroutineContext -> kotlin.coroutines.experimental.EmptyCoroutineContext:
    20:20:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
kotlin.coroutines.experimental.SafeContinuation -> kotlin.coroutines.experimental.SafeContinuation:
    28:33:void <clinit>() -> <clinit>
    13:25:void <init>(kotlin.coroutines.experimental.Continuation,java.lang.Object) -> <init>
    19:19:void <init>(kotlin.coroutines.experimental.Continuation) -> <init>
    22:22:kotlin.coroutines.experimental.CoroutineContext getContext() -> getContext
    70:77:java.lang.Object getResult() -> getResult
    42:49:void resume(java.lang.Object) -> resume
    56:63:void resumeWithException(java.lang.Throwable) -> resumeWithException
kotlin.coroutines.experimental.SafeContinuation$Companion -> kotlin.coroutines.experimental.SafeContinuation$Companion:
    27:27:void <init>() -> <init>
    27:27:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.coroutines.experimental.SafeContinuation$Fail -> kotlin.coroutines.experimental.SafeContinuation$Fail:
    38:38:void <init>(java.lang.Throwable) -> <init>
    38:38:java.lang.Throwable getException() -> getException
kotlin.coroutines.experimental.SequenceBuilder -> kotlin.coroutines.experimental.SequenceBuilder:
    51:51:void <init>() -> <init>
    68:69:java.lang.Object yieldAll(java.lang.Iterable,kotlin.coroutines.experimental.Continuation) -> yieldAll
    77:77:java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.experimental.Continuation) -> yieldAll
kotlin.coroutines.experimental.SequenceBuilderIterator -> kotlin.coroutines.experimental.SequenceBuilderIterator:
    89:89:void <init>() -> <init>
    140:141:java.lang.Throwable exceptionalState() -> exceptionalState
    176:176:kotlin.coroutines.experimental.CoroutineContext getContext() -> getContext
    93:93:kotlin.coroutines.experimental.Continuation getNextStep() -> getNextStep
    97:114:boolean hasNext() -> hasNext
    119:120:java.lang.Object next() -> next
    137:137:java.lang.Object nextNotReady() -> nextNotReady
    89:89:void resume(java.lang.Object) -> resume
    168:168:void resume(kotlin.Unit) -> resume
    172:172:void resumeWithException(java.lang.Throwable) -> resumeWithException
    93:93:void setNextStep(kotlin.coroutines.experimental.Continuation) -> setNextStep
    148:152:java.lang.Object yield(java.lang.Object,kotlin.coroutines.experimental.Continuation) -> yield
    157:162:java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.experimental.Continuation) -> yieldAll
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt -> kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt:
    35:36:java.util.Iterator buildIterator(kotlin.jvm.functions.Function2) -> buildIterator
    24:24:kotlin.sequences.Sequence buildSequence(kotlin.jvm.functions.Function2) -> buildSequence
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1 -> kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1:
    19:19:void <init>(kotlin.jvm.functions.Function2) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt:
    98:111:kotlin.coroutines.experimental.Continuation buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.experimental.Continuation,kotlin.jvm.functions.Function0) -> buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt
    60:66:kotlin.coroutines.experimental.Continuation createCoroutineUnchecked(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation) -> createCoroutineUnchecked
    83:89:kotlin.coroutines.experimental.Continuation createCoroutineUnchecked(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.experimental.Continuation) -> createCoroutineUnchecked
    119:119:java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
    26:26:java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation) -> startCoroutineUninterceptedOrReturn
    41:41:java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.experimental.Continuation) -> startCoroutineUninterceptedOrReturn
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1 -> kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1:
    98:98:void <init>(kotlin.coroutines.experimental.Continuation,kotlin.jvm.functions.Function0) -> <init>
    100:100:kotlin.coroutines.experimental.CoroutineContext getContext() -> getContext
    98:98:void resume(java.lang.Object) -> resume
    103:103:void resume(kotlin.Unit) -> resume
    107:107:void resumeWithException(java.lang.Throwable) -> resumeWithException
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1 -> kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1:
    98:98:void <init>(kotlin.coroutines.experimental.Continuation,kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation) -> <init>
    100:100:kotlin.coroutines.experimental.CoroutineContext getContext() -> getContext
    98:98:void resume(java.lang.Object) -> resume
    103:122:void resume(kotlin.Unit) -> resume
    107:107:void resumeWithException(java.lang.Throwable) -> resumeWithException
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2 -> kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2:
    98:98:void <init>(kotlin.coroutines.experimental.Continuation,kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.experimental.Continuation) -> <init>
    100:100:kotlin.coroutines.experimental.CoroutineContext getContext() -> getContext
    98:98:void resume(java.lang.Object) -> resume
    103:122:void resume(kotlin.Unit) -> resume
    107:107:void resumeWithException(java.lang.Throwable) -> resumeWithException
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsKt -> kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsKt:
    54:54:kotlin.coroutines.experimental.Continuation intercepted(kotlin.coroutines.experimental.Continuation) -> intercepted
    34:34:java.lang.Object suspendCoroutineOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation) -> suspendCoroutineOrReturn
    46:46:java.lang.Object suspendCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation) -> suspendCoroutineUninterceptedOrReturn
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl -> kotlin.coroutines.experimental.jvm.internal.CoroutineImpl:
    21:28:void <init>(int,kotlin.coroutines.experimental.Continuation) -> <init>
    55:55:kotlin.coroutines.experimental.Continuation create(kotlin.coroutines.experimental.Continuation) -> create
    59:59:kotlin.coroutines.experimental.Continuation create(java.lang.Object,kotlin.coroutines.experimental.Continuation) -> create
    31:31:kotlin.coroutines.experimental.CoroutineContext getContext() -> getContext
    36:37:kotlin.coroutines.experimental.Continuation getFacade() -> getFacade
    41:41:void resume(java.lang.Object) -> resume
    47:47:void resumeWithException(java.lang.Throwable) -> resumeWithException
kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics -> kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics:
    23:23:kotlin.coroutines.experimental.Continuation interceptContinuationIfNeeded(kotlin.coroutines.experimental.CoroutineContext,kotlin.coroutines.experimental.Continuation) -> interceptContinuationIfNeeded
    18:18:kotlin.coroutines.experimental.Continuation normalizeContinuation(kotlin.coroutines.experimental.Continuation) -> normalizeContinuation
kotlin.coroutines.experimental.migration.ContextMigration -> kotlin.coroutines.experimental.migration.ContextMigration:
    93:93:void <init>(kotlin.coroutines.experimental.CoroutineContext) -> <init>
    93:93:kotlin.coroutines.experimental.CoroutineContext getContext() -> getContext
kotlin.coroutines.experimental.migration.ContextMigration$Key -> kotlin.coroutines.experimental.migration.ContextMigration$Key:
    94:94:void <init>() -> <init>
    94:94:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.coroutines.experimental.migration.ContinuationInterceptorMigration -> kotlin.coroutines.experimental.migration.ContinuationInterceptorMigration:
    105:105:void <init>(kotlin.coroutines.experimental.ContinuationInterceptor) -> <init>
    105:105:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    105:105:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    105:105:kotlin.coroutines.experimental.ContinuationInterceptor getInterceptor() -> getInterceptor
    107:107:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    110:110:kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation) -> interceptContinuation
    105:105:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    105:105:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    105:105:void releaseInterceptedContinuation(kotlin.coroutines.Continuation) -> releaseInterceptedContinuation
kotlin.coroutines.experimental.migration.ContinuationMigration -> kotlin.coroutines.experimental.migration.ContinuationMigration:
    80:81:void <init>(kotlin.coroutines.experimental.Continuation) -> <init>
    81:81:kotlin.coroutines.CoroutineContext getContext() -> getContext
    80:80:kotlin.coroutines.experimental.Continuation getContinuation() -> getContinuation
    84:85:void resumeWith(java.lang.Object) -> resumeWith
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt -> kotlin.coroutines.experimental.migration.CoroutinesMigrationKt:
    29:29:kotlin.coroutines.Continuation toContinuation(kotlin.coroutines.experimental.Continuation) -> toContinuation
    69:69:kotlin.coroutines.ContinuationInterceptor toContinuationInterceptor(kotlin.coroutines.experimental.ContinuationInterceptor) -> toContinuationInterceptor
    49:54:kotlin.coroutines.CoroutineContext toCoroutineContext(kotlin.coroutines.experimental.CoroutineContext) -> toCoroutineContext
    22:22:kotlin.coroutines.experimental.Continuation toExperimentalContinuation(kotlin.coroutines.Continuation) -> toExperimentalContinuation
    62:62:kotlin.coroutines.experimental.ContinuationInterceptor toExperimentalContinuationInterceptor(kotlin.coroutines.ContinuationInterceptor) -> toExperimentalContinuationInterceptor
    36:41:kotlin.coroutines.experimental.CoroutineContext toExperimentalCoroutineContext(kotlin.coroutines.CoroutineContext) -> toExperimentalCoroutineContext
    114:114:kotlin.jvm.functions.Function1 toExperimentalSuspendFunction(kotlin.jvm.functions.Function1) -> toExperimentalSuspendFunction
    117:117:kotlin.jvm.functions.Function2 toExperimentalSuspendFunction(kotlin.jvm.functions.Function2) -> toExperimentalSuspendFunction
    120:120:kotlin.jvm.functions.Function3 toExperimentalSuspendFunction(kotlin.jvm.functions.Function3) -> toExperimentalSuspendFunction
kotlin.coroutines.experimental.migration.ExperimentalContextMigration -> kotlin.coroutines.experimental.migration.ExperimentalContextMigration:
    89:89:void <init>(kotlin.coroutines.CoroutineContext) -> <init>
    89:89:kotlin.coroutines.CoroutineContext getContext() -> getContext
kotlin.coroutines.experimental.migration.ExperimentalContextMigration$Key -> kotlin.coroutines.experimental.migration.ExperimentalContextMigration$Key:
    90:90:void <init>() -> <init>
    90:90:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.coroutines.experimental.migration.ExperimentalContinuationInterceptorMigration -> kotlin.coroutines.experimental.migration.ExperimentalContinuationInterceptorMigration:
    97:97:void <init>(kotlin.coroutines.ContinuationInterceptor) -> <init>
    97:97:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    97:97:kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Key) -> get
    97:97:kotlin.coroutines.ContinuationInterceptor getInterceptor() -> getInterceptor
    99:99:kotlin.coroutines.experimental.CoroutineContext$Key getKey() -> getKey
    102:102:kotlin.coroutines.experimental.Continuation interceptContinuation(kotlin.coroutines.experimental.Continuation) -> interceptContinuation
    97:97:kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Key) -> minusKey
    97:97:kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext) -> plus
kotlin.coroutines.experimental.migration.ExperimentalContinuationMigration -> kotlin.coroutines.experimental.migration.ExperimentalContinuationMigration:
    74:75:void <init>(kotlin.coroutines.Continuation) -> <init>
    75:75:kotlin.coroutines.experimental.CoroutineContext getContext() -> getContext
    74:74:kotlin.coroutines.Continuation getContinuation() -> getContinuation
    76:76:void resume(java.lang.Object) -> resume
    77:77:void resumeWithException(java.lang.Throwable) -> resumeWithException
kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction0Migration -> kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction0Migration:
    122:122:void <init>(kotlin.jvm.functions.Function1) -> <init>
    123:123:kotlin.jvm.functions.Function1 getFunction() -> getFunction
    122:122:java.lang.Object invoke(java.lang.Object) -> invoke
    126:126:java.lang.Object invoke(kotlin.coroutines.experimental.Continuation) -> invoke
kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction1Migration -> kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction1Migration:
    130:130:void <init>(kotlin.jvm.functions.Function2) -> <init>
    131:131:kotlin.jvm.functions.Function2 getFunction() -> getFunction
    130:130:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    134:134:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.experimental.Continuation) -> invoke
kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction2Migration -> kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction2Migration:
    138:138:void <init>(kotlin.jvm.functions.Function3) -> <init>
    139:139:kotlin.jvm.functions.Function3 getFunction() -> getFunction
    138:138:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    142:142:java.lang.Object invoke(java.lang.Object,java.lang.Object,kotlin.coroutines.experimental.Continuation) -> invoke
kotlin.coroutines.intrinsics.CoroutineSingletons -> kotlin.coroutines.intrinsics.CoroutineSingletons:
    61:61:void <init>(java.lang.String,int) -> <init>
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt:
    159:180:kotlin.coroutines.Continuation createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt
    81:203:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
    116:208:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
    137:137:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation) -> intercepted
    32:32:java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> startCoroutineUninterceptedOrReturn
    51:51:java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUninterceptedOrReturn
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1:
    162:162:void <init>(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,kotlin.coroutines.Continuation) -> <init>
    166:170:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2:
    180:180:void <init>(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext) -> <init>
    184:188:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1:
    162:162:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> <init>
    166:199:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2:
    180:180:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    184:199:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3:
    162:162:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object) -> <init>
    166:199:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4:
    180:180:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object) -> <init>
    184:199:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt:
    54:54:java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
    41:41:java.lang.Object suspendCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> suspendCoroutineUninterceptedOrReturn
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> kotlin.coroutines.jvm.internal.BaseContinuationImpl:
    15:15:void <init>(kotlin.coroutines.Continuation) -> <init>
    60:60:kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation) -> create
    64:64:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    73:73:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    18:18:kotlin.coroutines.Continuation getCompletion() -> getCompletion
    76:76:java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    28:46:void resumeWith(java.lang.Object) -> resumeWith
    68:68:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.Boxing -> kotlin.coroutines.jvm.internal.Boxing:
    20:20:java.lang.Boolean boxBoolean(boolean) -> boxBoolean
    24:24:java.lang.Byte boxByte(byte) -> boxByte
    48:48:java.lang.Character boxChar(char) -> boxChar
    44:44:java.lang.Double boxDouble(double) -> boxDouble
    40:40:java.lang.Float boxFloat(float) -> boxFloat
    32:32:java.lang.Integer boxInt(int) -> boxInt
    36:36:java.lang.Long boxLong(long) -> boxLong
    28:28:java.lang.Short boxShort(short) -> boxShort
kotlin.coroutines.jvm.internal.CompletedContinuation -> kotlin.coroutines.jvm.internal.CompletedContinuation:
    124:124:void <clinit>() -> <clinit>
    124:124:void <init>() -> <init>
    126:126:kotlin.coroutines.CoroutineContext getContext() -> getContext
    129:129:void resumeWith(java.lang.Object) -> resumeWith
kotlin.coroutines.jvm.internal.ContinuationImpl -> kotlin.coroutines.jvm.internal.ContinuationImpl:
    101:101:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext) -> <init>
    102:102:void <init>(kotlin.coroutines.Continuation) -> <init>
    105:105:kotlin.coroutines.CoroutineContext getContext() -> getContext
    111:113:kotlin.coroutines.Continuation intercepted() -> intercepted
    116:120:void releaseIntercepted() -> releaseIntercepted
kotlin.coroutines.jvm.internal.DebugMetadataKt -> kotlin.coroutines.jvm.internal.DebugMetadataKt:
    104:104:void checkDebugMetadataVersion(int,int) -> checkDebugMetadataVersion
    91:91:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getDebugMetadataAnnotation
    95:97:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getLabel
    122:137:java.lang.String[] getSpilledVariableFieldMapping(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getSpilledVariableFieldMapping
    42:48:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getStackTraceElement
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> kotlin.coroutines.jvm.internal.ModuleNameRetriever:
    51:61:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    78:85:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> buildCache
    67:73:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getModuleName
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache:
    52:52:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl -> kotlin.coroutines.jvm.internal.RestrictedContinuationImpl:
    83:86:void <init>(kotlin.coroutines.Continuation) -> <init>
    93:93:kotlin.coroutines.CoroutineContext getContext() -> getContext
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda -> kotlin.coroutines.jvm.internal.RestrictedSuspendLambda:
    144:144:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    145:145:void <init>(int) -> <init>
    142:142:int getArity() -> getArity
    148:151:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.RunSuspend -> kotlin.coroutines.jvm.internal.RunSuspend:
    23:23:void <init>() -> <init>
    34:34:void await() -> await
    25:25:kotlin.coroutines.CoroutineContext getContext() -> getContext
    27:27:kotlin.Result getResult() -> getResult
    29:29:void resumeWith(java.lang.Object) -> resumeWith
    27:27:void setResult(kotlin.Result) -> setResult
kotlin.coroutines.jvm.internal.RunSuspendKt -> kotlin.coroutines.jvm.internal.RunSuspendKt:
    18:20:void runSuspend(kotlin.jvm.functions.Function1) -> runSuspend
kotlin.coroutines.jvm.internal.SuspendLambda -> kotlin.coroutines.jvm.internal.SuspendLambda:
    159:159:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    160:160:void <init>(int) -> <init>
    157:157:int getArity() -> getArity
    163:166:java.lang.String toString() -> toString
kotlin.internal.PlatformImplementations -> kotlin.internal.PlatformImplementations:
    13:13:void <init>() -> <init>
    25:25:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    32:32:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
    29:29:kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String) -> getMatchResultNamedGroup
kotlin.internal.PlatformImplementations$ReflectAddSuppressedMethod -> kotlin.internal.PlatformImplementations$ReflectAddSuppressedMethod:
    15:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
kotlin.internal.PlatformImplementationsKt -> kotlin.internal.PlatformImplementationsKt:
    38:37:void <clinit>() -> <clinit>
    101:101:boolean apiVersionIsAtLeast(int,int,int) -> apiVersionIsAtLeast
    63:67:java.lang.Object castToBaseType(java.lang.Object) -> castToBaseType
    73:81:int getJavaVersion() -> getJavaVersion
kotlin.internal.ProgressionUtilKt -> kotlin.internal.ProgressionUtilKt:
    21:21:int differenceModulo(int,int,int) -> differenceModulo
    25:25:long differenceModulo(long,long,long) -> differenceModulo
    46:48:int getProgressionLastElement(int,int,int) -> getProgressionLastElement
    69:71:long getProgressionLastElement(long,long,long) -> getProgressionLastElement
    10:10:int mod(int,int) -> mod
    15:15:long mod(long,long) -> mod
kotlin.internal.RequireKotlinVersionKind -> kotlin.internal.RequireKotlinVersionKind:
    101:101:void <init>(java.lang.String,int) -> <init>
kotlin.internal.UProgressionUtilKt -> kotlin.internal.UProgressionUtilKt:
    11:13:int differenceModulo-WZ9TVnA(int,int,int) -> differenceModulo-WZ9TVnA
    17:19:long differenceModulo-sambcqE(long,long,long) -> differenceModulo-sambcqE
    65:67:long getProgressionLastElement-7ftBX0g(long,long,long) -> getProgressionLastElement-7ftBX0g
    41:43:int getProgressionLastElement-Nkh28Cs(int,int,int) -> getProgressionLastElement-Nkh28Cs
kotlin.internal.jdk7.JDK7PlatformImplementations -> kotlin.internal.jdk7.JDK7PlatformImplementations:
    22:22:void <init>() -> <init>
    24:24:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
kotlin.internal.jdk8.JDK8PlatformImplementations -> kotlin.internal.jdk8.JDK8PlatformImplementations:
    27:27:void <init>() -> <init>
    39:39:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
    30:30:kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String) -> getMatchResultNamedGroup
kotlin.io.AccessDeniedException -> kotlin.io.AccessDeniedException:
    49:49:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:50:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
kotlin.io.ByteStreamsKt -> kotlin.io.ByteStreamsKt:
    72:72:java.io.BufferedInputStream buffered(java.io.InputStream,int) -> buffered
    88:88:java.io.BufferedOutputStream buffered(java.io.OutputStream,int) -> buffered
    142:142:java.io.BufferedInputStream buffered$default(java.io.InputStream,int,int,java.lang.Object) -> buffered$default
    155:155:java.io.BufferedOutputStream buffered$default(java.io.OutputStream,int,int,java.lang.Object) -> buffered$default
    80:80:java.io.BufferedReader bufferedReader(java.io.InputStream,java.nio.charset.Charset) -> bufferedReader
    80:147:java.io.BufferedReader bufferedReader$default(java.io.InputStream,java.nio.charset.Charset,int,java.lang.Object) -> bufferedReader$default
    96:96:java.io.BufferedWriter bufferedWriter(java.io.OutputStream,java.nio.charset.Charset) -> bufferedWriter
    96:160:java.io.BufferedWriter bufferedWriter$default(java.io.OutputStream,java.nio.charset.Charset,int,java.lang.Object) -> bufferedWriter$default
    50:50:java.io.ByteArrayInputStream byteInputStream(java.lang.String,java.nio.charset.Charset) -> byteInputStream
    50:141:java.io.ByteArrayInputStream byteInputStream$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> byteInputStream$default
    105:110:long copyTo(java.io.InputStream,java.io.OutputStream,int) -> copyTo
    103:103:long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object) -> copyTo$default
    56:56:java.io.ByteArrayInputStream inputStream(byte[]) -> inputStream
    64:64:java.io.ByteArrayInputStream inputStream(byte[],int,int) -> inputStream
    16:16:kotlin.collections.ByteIterator iterator(java.io.BufferedInputStream) -> iterator
    123:125:byte[] readBytes(java.io.InputStream,int) -> readBytes
    135:137:byte[] readBytes(java.io.InputStream) -> readBytes
    122:122:byte[] readBytes$default(java.io.InputStream,int,int,java.lang.Object) -> readBytes$default
    76:76:java.io.InputStreamReader reader(java.io.InputStream,java.nio.charset.Charset) -> reader
    76:146:java.io.InputStreamReader reader$default(java.io.InputStream,java.nio.charset.Charset,int,java.lang.Object) -> reader$default
    92:92:java.io.OutputStreamWriter writer(java.io.OutputStream,java.nio.charset.Charset) -> writer
    92:159:java.io.OutputStreamWriter writer$default(java.io.OutputStream,java.nio.charset.Charset,int,java.lang.Object) -> writer$default
kotlin.io.ByteStreamsKt$iterator$1 -> kotlin.io.ByteStreamsKt$iterator$1:
    16:18:void <init>(java.io.BufferedInputStream) -> <init>
    22:22:boolean getFinished() -> getFinished
    18:18:int getNextByte() -> getNextByte
    20:20:boolean getNextPrepared() -> getNextPrepared
    33:34:boolean hasNext() -> hasNext
    38:40:byte nextByte() -> nextByte
    25:28:void prepareNext() -> prepareNext
    22:22:void setFinished(boolean) -> setFinished
    18:18:void setNextByte(int) -> setNextByte
    20:20:void setNextPrepared(boolean) -> setNextPrepared
kotlin.io.CloseableKt -> kotlin.io.CloseableKt:
    53:58:void closeFinally(java.io.Closeable,java.lang.Throwable) -> closeFinally
    24:39:java.lang.Object use(java.io.Closeable,kotlin.jvm.functions.Function1) -> use
kotlin.io.ConsoleKt -> kotlin.io.ConsoleKt:
    146:146:void <clinit>() -> <clinit>
    211:212:boolean endsWithLineSeparator(java.nio.CharBuffer) -> endsWithLineSeparator
    216:217:void flipBack(java.nio.Buffer) -> flipBack
    222:226:void offloadPrefixTo(java.nio.CharBuffer,java.lang.StringBuilder) -> offloadPrefixTo
    20:20:void print(java.lang.Object) -> print
    26:26:void print(int) -> print
    32:32:void print(long) -> print
    38:38:void print(byte) -> print
    44:44:void print(short) -> print
    50:50:void print(char) -> print
    56:56:void print(boolean) -> print
    62:62:void print(float) -> print
    68:68:void print(double) -> print
    74:74:void print(char[]) -> print
    80:80:void println(java.lang.Object) -> println
    86:86:void println(int) -> println
    92:92:void println(long) -> println
    98:98:void println(byte) -> println
    104:104:void println(short) -> println
    110:110:void println(char) -> println
    116:116:void println(boolean) -> println
    122:122:void println(float) -> println
    128:128:void println(double) -> println
    134:134:void println(char[]) -> println
    140:140:void println() -> println
    153:153:java.lang.String readLine() -> readLine
    156:156:java.lang.String readLine(java.io.InputStream,java.nio.charset.CharsetDecoder) -> readLine
    200:206:boolean tryDecode(java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,java.nio.CharBuffer,boolean) -> tryDecode
kotlin.io.ConsoleKt$decoder$2 -> kotlin.io.ConsoleKt$decoder$2:
    146:146:java.nio.charset.CharsetDecoder invoke() -> invoke
kotlin.io.ExceptionsKt -> kotlin.io.ExceptionsKt:
    1:1:java.lang.String access$constructMessage(java.io.File,java.io.File,java.lang.String) -> access$constructMessage
    12:19:java.lang.String constructMessage(java.io.File,java.io.File,java.lang.String) -> constructMessage
kotlin.io.ExposingBufferByteArrayOutputStream -> kotlin.io.ExposingBufferByteArrayOutputStream:
    98:98:void <init>(int) -> <init>
    99:99:byte[] getBuffer() -> getBuffer
kotlin.io.FileAlreadyExistsException -> kotlin.io.FileAlreadyExistsException:
    40:40:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    41:41:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
kotlin.io.FilePathComponents -> kotlin.io.FilePathComponents:
    95:95:void <init>(java.io.File,java.util.List) -> <init>
    95:95:java.io.File getRoot() -> getRoot
    100:100:java.lang.String getRootName() -> getRootName
    95:95:java.util.List getSegments() -> getSegments
    110:110:int getSize() -> getSize
    105:105:boolean isRooted() -> isRooted
    117:118:java.io.File subPath(int,int) -> subPath
kotlin.io.FileSystemException -> kotlin.io.FileSystemException:
    31:31:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    32:32:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
    29:29:java.io.File getFile() -> getFile
    30:30:java.io.File getOther() -> getOther
    31:31:java.lang.String getReason() -> getReason
kotlin.io.FileTreeWalk -> kotlin.io.FileTreeWalk:
    37:37:void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int) -> <init>
    39:43:void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    46:46:void <init>(java.io.File,kotlin.io.FileWalkDirection) -> <init>
    46:46:void <init>(java.io.File,kotlin.io.FileWalkDirection,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:37:kotlin.io.FileWalkDirection access$getDirection$p(kotlin.io.FileTreeWalk) -> access$getDirection$p
    37:37:int access$getMaxDepth$p(kotlin.io.FileTreeWalk) -> access$getMaxDepth$p
    37:37:kotlin.jvm.functions.Function1 access$getOnEnter$p(kotlin.io.FileTreeWalk) -> access$getOnEnter$p
    37:37:kotlin.jvm.functions.Function2 access$getOnFail$p(kotlin.io.FileTreeWalk) -> access$getOnFail$p
    37:37:kotlin.jvm.functions.Function1 access$getOnLeave$p(kotlin.io.FileTreeWalk) -> access$getOnLeave$p
    37:37:java.io.File access$getStart$p(kotlin.io.FileTreeWalk) -> access$getStart$p
    50:50:java.util.Iterator iterator() -> iterator
    250:249:kotlin.io.FileTreeWalk maxDepth(int) -> maxDepth
    220:220:kotlin.io.FileTreeWalk onEnter(kotlin.jvm.functions.Function1) -> onEnter
    236:236:kotlin.io.FileTreeWalk onFail(kotlin.jvm.functions.Function2) -> onFail
    227:227:kotlin.io.FileTreeWalk onLeave(kotlin.jvm.functions.Function1) -> onLeave
kotlin.io.FileTreeWalk$DirectoryState -> kotlin.io.FileTreeWalk$DirectoryState:
    59:62:void <init>(java.io.File) -> <init>
kotlin.io.FileTreeWalk$FileTreeWalkIterator -> kotlin.io.FileTreeWalk$FileTreeWalkIterator:
    66:75:void <init>(kotlin.io.FileTreeWalk) -> <init>
    80:84:void computeNext() -> computeNext
    89:90:kotlin.io.FileTreeWalk$DirectoryState directoryState(java.io.File) -> directoryState
    97:110:java.io.File gotoNext() -> gotoNext
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState -> kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState:
    117:117:void <init>(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File) -> <init>
    129:149:java.io.File step() -> step
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState -> kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState:
    196:201:void <init>(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File) -> <init>
    205:207:java.io.File step() -> step
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState -> kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState:
    156:156:void <init>(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File) -> <init>
    166:187:java.io.File step() -> step
kotlin.io.FileTreeWalk$WalkState -> kotlin.io.FileTreeWalk$WalkState:
    53:53:void <init>(java.io.File) -> <init>
    53:53:java.io.File getRoot() -> getRoot
kotlin.io.FileWalkDirection -> kotlin.io.FileWalkDirection:
    20:20:void <init>(java.lang.String,int) -> <init>
kotlin.io.FilesKt__FilePathComponentsKt -> kotlin.io.FilesKt__FilePathComponentsKt:
    77:77:java.io.File getRoot(java.io.File) -> getRoot
    28:52:int getRootLength$FilesKt__FilePathComponentsKt(java.lang.String) -> getRootLength$FilesKt__FilePathComponentsKt
    70:70:java.lang.String getRootName(java.io.File) -> getRootName
    85:85:boolean isRooted(java.io.File) -> isRooted
    147:147:java.io.File subPath(java.io.File,int,int) -> subPath
    129:134:kotlin.io.FilePathComponents toComponents(java.io.File) -> toComponents
kotlin.io.FilesKt__FileReadWriteKt -> kotlin.io.FilesKt__FileReadWriteKt:
    115:115:void appendBytes(java.io.File,byte[]) -> appendBytes
    142:142:void appendText(java.io.File,java.lang.String,java.nio.charset.Charset) -> appendText
    142:142:void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> appendText$default
    31:31:java.io.BufferedReader bufferedReader(java.io.File,java.nio.charset.Charset,int) -> bufferedReader
    30:235:java.io.BufferedReader bufferedReader$default(java.io.File,java.nio.charset.Charset,int,int,java.lang.Object) -> bufferedReader$default
    47:47:java.io.BufferedWriter bufferedWriter(java.io.File,java.nio.charset.Charset,int) -> bufferedWriter
    46:237:java.io.BufferedWriter bufferedWriter$default(java.io.File,java.nio.charset.Charset,int,int,java.lang.Object) -> bufferedWriter$default
    153:153:void forEachBlock(java.io.File,kotlin.jvm.functions.Function2) -> forEachBlock
    165:167:void forEachBlock(java.io.File,int,kotlin.jvm.functions.Function2) -> forEachBlock
    190:190:void forEachLine(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1) -> forEachLine
    188:188:void forEachLine$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object) -> forEachLine$default
    198:198:java.io.FileInputStream inputStream(java.io.File) -> inputStream
    206:206:java.io.FileOutputStream outputStream(java.io.File) -> outputStream
    54:54:java.io.PrintWriter printWriter(java.io.File,java.nio.charset.Charset) -> printWriter
    53:238:java.io.PrintWriter printWriter$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> printWriter$default
    63:63:byte[] readBytes(java.io.File) -> readBytes
    218:219:java.util.List readLines(java.io.File,java.nio.charset.Charset) -> readLines
    217:217:java.util.List readLines$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> readLines$default
    125:125:java.lang.String readText(java.io.File,java.nio.charset.Charset) -> readText
    125:125:java.lang.String readText$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> readText$default
    22:22:java.io.InputStreamReader reader(java.io.File,java.nio.charset.Charset) -> reader
    21:234:java.io.InputStreamReader reader$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> reader$default
    232:232:java.lang.Object useLines(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1) -> useLines
    231:239:java.lang.Object useLines$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object) -> useLines$default
    108:108:void writeBytes(java.io.File,byte[]) -> writeBytes
    134:134:void writeText(java.io.File,java.lang.String,java.nio.charset.Charset) -> writeText
    134:134:void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> writeText$default
    38:38:java.io.OutputStreamWriter writer(java.io.File,java.nio.charset.Charset) -> writer
    37:236:java.io.OutputStreamWriter writer$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> writer$default
kotlin.io.FilesKt__FileReadWriteKt$readLines$1 -> kotlin.io.FilesKt__FileReadWriteKt$readLines$1:
    219:219:void invoke(java.lang.String) -> invoke
kotlin.io.FilesKt__FileTreeWalkKt -> kotlin.io.FilesKt__FileTreeWalkKt:
    260:260:kotlin.io.FileTreeWalk walk(java.io.File,kotlin.io.FileWalkDirection) -> walk
    259:259:kotlin.io.FileTreeWalk walk$default(java.io.File,kotlin.io.FileWalkDirection,int,java.lang.Object) -> walk$default
    272:272:kotlin.io.FileTreeWalk walkBottomUp(java.io.File) -> walkBottomUp
    266:266:kotlin.io.FileTreeWalk walkTopDown(java.io.File) -> walkTopDown
kotlin.io.FilesKt__UtilsKt -> kotlin.io.FilesKt__UtilsKt:
    257:293:boolean copyRecursively(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2) -> copyRecursively
    255:255:boolean copyRecursively$default(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2,int,java.lang.Object) -> copyRecursively$default
    182:183:java.io.File copyTo(java.io.File,java.io.File,boolean,int) -> copyTo
    181:181:java.io.File copyTo$default(java.io.File,java.io.File,boolean,int,int,java.lang.Object) -> copyTo$default
    27:32:java.io.File createTempDir(java.lang.String,java.lang.String,java.io.File) -> createTempDir
    26:26:java.io.File createTempDir$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object) -> createTempDir$default
    49:49:java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File) -> createTempFile
    48:48:java.io.File createTempFile$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object) -> createTempFile$default
    311:311:boolean deleteRecursively(java.io.File) -> deleteRecursively
    348:354:boolean endsWith(java.io.File,java.io.File) -> endsWith
    365:365:boolean endsWith(java.io.File,java.lang.String) -> endsWith
    56:56:java.lang.String getExtension(java.io.File) -> getExtension
    63:63:java.lang.String getInvariantSeparatorsPath(java.io.File) -> getInvariantSeparatorsPath
    69:69:java.lang.String getNameWithoutExtension(java.io.File) -> getNameWithoutExtension
    374:374:java.io.File normalize(java.io.File) -> normalize
    377:377:kotlin.io.FilePathComponents normalize$FilesKt__UtilsKt(kotlin.io.FilePathComponents) -> normalize$FilesKt__UtilsKt
    380:385:java.util.List normalize$FilesKt__UtilsKt(java.util.List) -> normalize$FilesKt__UtilsKt
    92:92:java.io.File relativeTo(java.io.File,java.io.File) -> relativeTo
    112:112:java.io.File relativeToOrNull(java.io.File,java.io.File) -> relativeToOrNull
    102:102:java.io.File relativeToOrSelf(java.io.File,java.io.File) -> relativeToOrSelf
    401:404:java.io.File resolve(java.io.File,java.io.File) -> resolve
    414:414:java.io.File resolve(java.io.File,java.lang.String) -> resolve
    424:426:java.io.File resolveSibling(java.io.File,java.io.File) -> resolveSibling
    436:436:java.io.File resolveSibling(java.io.File,java.lang.String) -> resolveSibling
    321:326:boolean startsWith(java.io.File,java.io.File) -> startsWith
    336:336:boolean startsWith(java.io.File,java.lang.String) -> startsWith
    81:81:java.lang.String toRelativeString(java.io.File,java.io.File) -> toRelativeString
    117:157:java.lang.String toRelativeStringOrNull$FilesKt__UtilsKt(java.io.File,java.io.File) -> toRelativeStringOrNull$FilesKt__UtilsKt
kotlin.io.FilesKt__UtilsKt$copyRecursively$1 -> kotlin.io.FilesKt__UtilsKt$copyRecursively$1:
    255:255:java.lang.Void invoke(java.io.File,java.io.IOException) -> invoke
kotlin.io.FilesKt__UtilsKt$copyRecursively$2 -> kotlin.io.FilesKt__UtilsKt$copyRecursively$2:
    263:263:void invoke(java.io.File,java.io.IOException) -> invoke
kotlin.io.LinesSequence -> kotlin.io.LinesSequence:
    72:72:void <init>(java.io.BufferedReader) -> <init>
    72:72:java.io.BufferedReader access$getReader$p(kotlin.io.LinesSequence) -> access$getReader$p
    74:74:java.util.Iterator iterator() -> iterator
kotlin.io.LinesSequence$iterator$1 -> kotlin.io.LinesSequence$iterator$1:
    74:74:void <init>(kotlin.io.LinesSequence) -> <init>
    79:83:boolean hasNext() -> hasNext
    74:74:java.lang.Object next() -> next
    87:88:java.lang.String next() -> next
kotlin.io.NoSuchFileException -> kotlin.io.NoSuchFileException:
    58:58:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    59:59:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
kotlin.io.OnErrorAction -> kotlin.io.OnErrorAction:
    213:213:void <init>(java.lang.String,int) -> <init>
kotlin.io.TerminateException -> kotlin.io.TerminateException:
    222:222:void <init>(java.io.File) -> <init>
kotlin.io.TextStreamsKt -> kotlin.io.TextStreamsKt:
    20:20:java.io.BufferedReader buffered(java.io.Reader,int) -> buffered
    25:25:java.io.BufferedWriter buffered(java.io.Writer,int) -> buffered
    153:153:java.io.BufferedReader buffered$default(java.io.Reader,int,int,java.lang.Object) -> buffered$default
    158:158:java.io.BufferedWriter buffered$default(java.io.Writer,int,int,java.lang.Object) -> buffered$default
    122:127:long copyTo(java.io.Reader,java.io.Writer,int) -> copyTo
    120:120:long copyTo$default(java.io.Reader,java.io.Writer,int,int,java.lang.Object) -> copyTo$default
    159:159:void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1) -> forEachLine
    70:70:kotlin.sequences.Sequence lineSequence(java.io.BufferedReader) -> lineSequence
    150:150:byte[] readBytes(java.net.URL) -> readBytes
    41:42:java.util.List readLines(java.io.Reader) -> readLines
    106:108:java.lang.String readText(java.io.Reader) -> readText
    141:141:java.lang.String readText(java.net.URL,java.nio.charset.Charset) -> readText
    141:162:java.lang.String readText$default(java.net.URL,java.nio.charset.Charset,int,java.lang.Object) -> readText$default
    57:57:java.io.StringReader reader(java.lang.String) -> reader
    53:53:java.lang.Object useLines(java.io.Reader,kotlin.jvm.functions.Function1) -> useLines
kotlin.io.TextStreamsKt$readLines$1 -> kotlin.io.TextStreamsKt$readLines$1:
    42:42:void invoke(java.lang.String) -> invoke
kotlin.jdk7.AutoCloseableKt -> kotlin.jdk7.AutoCloseableKt:
    56:61:void closeFinally(java.lang.AutoCloseable,java.lang.Throwable) -> closeFinally
    37:42:java.lang.Object use(java.lang.AutoCloseable,kotlin.jvm.functions.Function1) -> use
kotlin.jvm.JvmClassMappingKt -> kotlin.jvm.JvmClassMappingKt:
    107:107:kotlin.reflect.KClass getAnnotationClass(java.lang.annotation.Annotation) -> getAnnotationClass
    28:28:java.lang.Class getJavaClass(kotlin.reflect.KClass) -> getJavaClass
    88:88:java.lang.Class getJavaClass(java.lang.Object) -> getJavaClass
    58:61:java.lang.Class getJavaObjectType(kotlin.reflect.KClass) -> getJavaObjectType
    35:43:java.lang.Class getJavaPrimitiveType(kotlin.reflect.KClass) -> getJavaPrimitiveType
    80:80:kotlin.reflect.KClass getKotlinClass(java.lang.Class) -> getKotlinClass
    94:94:java.lang.Class getRuntimeClassOfKClassInstance(kotlin.reflect.KClass) -> getRuntimeClassOfKClassInstance
    101:101:boolean isArrayOf(java.lang.Object[]) -> isArrayOf
kotlin.jvm.KotlinReflectionNotSupportedError -> kotlin.jvm.KotlinReflectionNotSupportedError:
    11:11:void <init>() -> <init>
    13:13:void <init>(java.lang.String) -> <init>
    15:15:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    17:17:void <init>(java.lang.Throwable) -> <init>
kotlin.jvm.internal.ArrayBooleanIterator -> kotlin.jvm.internal.ArrayBooleanIterator:
    52:52:void <init>(boolean[]) -> <init>
    54:54:boolean hasNext() -> hasNext
    55:55:boolean nextBoolean() -> nextBoolean
kotlin.jvm.internal.ArrayByteIterator -> kotlin.jvm.internal.ArrayByteIterator:
    10:10:void <init>(byte[]) -> <init>
    12:12:boolean hasNext() -> hasNext
    13:13:byte nextByte() -> nextByte
kotlin.jvm.internal.ArrayCharIterator -> kotlin.jvm.internal.ArrayCharIterator:
    16:16:void <init>(char[]) -> <init>
    18:18:boolean hasNext() -> hasNext
    19:19:char nextChar() -> nextChar
kotlin.jvm.internal.ArrayDoubleIterator -> kotlin.jvm.internal.ArrayDoubleIterator:
    46:46:void <init>(double[]) -> <init>
    48:48:boolean hasNext() -> hasNext
    49:49:double nextDouble() -> nextDouble
kotlin.jvm.internal.ArrayFloatIterator -> kotlin.jvm.internal.ArrayFloatIterator:
    40:40:void <init>(float[]) -> <init>
    42:42:boolean hasNext() -> hasNext
    43:43:float nextFloat() -> nextFloat
kotlin.jvm.internal.ArrayIntIterator -> kotlin.jvm.internal.ArrayIntIterator:
    28:28:void <init>(int[]) -> <init>
    30:30:boolean hasNext() -> hasNext
    31:31:int nextInt() -> nextInt
kotlin.jvm.internal.ArrayIterator -> kotlin.jvm.internal.ArrayIterator:
    8:8:void <init>(java.lang.Object[]) -> <init>
    8:8:java.lang.Object[] getArray() -> getArray
    10:10:boolean hasNext() -> hasNext
    11:11:java.lang.Object next() -> next
kotlin.jvm.internal.ArrayIteratorKt -> kotlin.jvm.internal.ArrayIteratorKt:
    14:14:java.util.Iterator iterator(java.lang.Object[]) -> iterator
kotlin.jvm.internal.ArrayIteratorsKt -> kotlin.jvm.internal.ArrayIteratorsKt:
    58:58:kotlin.collections.ByteIterator iterator(byte[]) -> iterator
    59:59:kotlin.collections.CharIterator iterator(char[]) -> iterator
    60:60:kotlin.collections.ShortIterator iterator(short[]) -> iterator
    61:61:kotlin.collections.IntIterator iterator(int[]) -> iterator
    62:62:kotlin.collections.LongIterator iterator(long[]) -> iterator
    63:63:kotlin.collections.FloatIterator iterator(float[]) -> iterator
    64:64:kotlin.collections.DoubleIterator iterator(double[]) -> iterator
    65:65:kotlin.collections.BooleanIterator iterator(boolean[]) -> iterator
kotlin.jvm.internal.ArrayLongIterator -> kotlin.jvm.internal.ArrayLongIterator:
    34:34:void <init>(long[]) -> <init>
    36:36:boolean hasNext() -> hasNext
    37:37:long nextLong() -> nextLong
kotlin.jvm.internal.ArrayShortIterator -> kotlin.jvm.internal.ArrayShortIterator:
    22:22:void <init>(short[]) -> <init>
    24:24:boolean hasNext() -> hasNext
    25:25:short nextShort() -> nextShort
kotlin.jvm.internal.BooleanCompanionObject -> kotlin.jvm.internal.BooleanCompanionObject:
    68:68:void <clinit>() -> <clinit>
    68:68:void <init>() -> <init>
kotlin.jvm.internal.BooleanSpreadBuilder -> kotlin.jvm.internal.BooleanSpreadBuilder:
    129:130:void <init>(int) -> <init>
    134:134:void add(boolean) -> add
    129:129:int getSize(java.lang.Object) -> getSize
    131:131:int getSize(boolean[]) -> getSize
    137:137:boolean[] toArray() -> toArray
kotlin.jvm.internal.ByteCompanionObject -> kotlin.jvm.internal.ByteCompanionObject:
    45:45:void <clinit>() -> <clinit>
    45:45:void <init>() -> <init>
kotlin.jvm.internal.ByteSpreadBuilder -> kotlin.jvm.internal.ByteSpreadBuilder:
    52:53:void <init>(int) -> <init>
    57:57:void add(byte) -> add
    52:52:int getSize(java.lang.Object) -> getSize
    54:54:int getSize(byte[]) -> getSize
    60:60:byte[] toArray() -> toArray
kotlin.jvm.internal.CallableReference -> kotlin.jvm.internal.CallableReference:
    36:36:void <clinit>() -> <clinit>
    48:48:void <init>() -> <init>
    52:53:void <init>(java.lang.Object) -> <init>
    138:138:java.lang.Object call(java.lang.Object[]) -> call
    143:143:java.lang.Object callBy(java.util.Map) -> callBy
    65:68:kotlin.reflect.KCallable compute() -> compute
    127:127:java.util.List getAnnotations() -> getAnnotations
    60:60:java.lang.Object getBoundReceiver() -> getBoundReceiver
    97:97:java.lang.String getName() -> getName
    89:89:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    117:117:java.util.List getParameters() -> getParameters
    75:77:kotlin.reflect.KCallable getReflected() -> getReflected
    122:122:kotlin.reflect.KType getReturnType() -> getReturnType
    109:109:java.lang.String getSignature() -> getSignature
    133:133:java.util.List getTypeParameters() -> getTypeParameters
    149:149:kotlin.reflect.KVisibility getVisibility() -> getVisibility
    167:167:boolean isAbstract() -> isAbstract
    155:155:boolean isFinal() -> isFinal
    161:161:boolean isOpen() -> isOpen
    173:173:boolean isSuspend() -> isSuspend
kotlin.jvm.internal.CallableReference$NoReceiver -> kotlin.jvm.internal.CallableReference$NoReceiver:
    40:40:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    39:39:kotlin.jvm.internal.CallableReference$NoReceiver access$000() -> access$000
    43:43:java.lang.Object readResolve() -> readResolve
kotlin.jvm.internal.CharCompanionObject -> kotlin.jvm.internal.CharCompanionObject:
    53:53:void <clinit>() -> <clinit>
    53:53:void <init>() -> <init>
kotlin.jvm.internal.CharSpreadBuilder -> kotlin.jvm.internal.CharSpreadBuilder:
    63:64:void <init>(int) -> <init>
    68:68:void add(char) -> add
    63:63:int getSize(java.lang.Object) -> getSize
    65:65:int getSize(char[]) -> getSize
    71:71:char[] toArray() -> toArray
kotlin.jvm.internal.ClassReference -> kotlin.jvm.internal.ClassReference:
    10:10:void <init>(java.lang.Class) -> <init>
    82:82:boolean equals(java.lang.Object) -> equals
    79:79:java.lang.Void error() -> error
    27:27:java.util.List getAnnotations() -> getAnnotations
    21:21:java.util.Collection getConstructors() -> getConstructors
    10:10:java.lang.Class getJClass() -> getJClass
    18:18:java.util.Collection getMembers() -> getMembers
    24:24:java.util.Collection getNestedClasses() -> getNestedClasses
    30:30:java.lang.Object getObjectInstance() -> getObjectInstance
    15:15:java.lang.String getQualifiedName() -> getQualifiedName
    45:45:java.util.List getSealedSubclasses() -> getSealedSubclasses
    12:12:java.lang.String getSimpleName() -> getSimpleName
    41:41:java.util.List getSupertypes() -> getSupertypes
    37:37:java.util.List getTypeParameters() -> getTypeParameters
    49:49:kotlin.reflect.KVisibility getVisibility() -> getVisibility
    85:85:int hashCode() -> hashCode
    61:61:boolean isAbstract() -> isAbstract
    77:77:boolean isCompanion() -> isCompanion
    69:69:boolean isData() -> isData
    53:53:boolean isFinal() -> isFinal
    73:73:boolean isInner() -> isInner
    33:33:boolean isInstance(java.lang.Object) -> isInstance
    57:57:boolean isOpen() -> isOpen
    65:65:boolean isSealed() -> isSealed
    88:88:java.lang.String toString() -> toString
kotlin.jvm.internal.CollectionToArray -> kotlin.jvm.internal.CollectionToArray:
    14:14:void <clinit>() -> <clinit>
    83:23:java.lang.Object[] toArray(java.util.Collection) -> toArray
    106:30:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArrayImpl
kotlin.jvm.internal.DefaultConstructorMarker -> kotlin.jvm.internal.DefaultConstructorMarker:
    9:9:void <init>() -> <init>
kotlin.jvm.internal.DoubleCompanionObject -> kotlin.jvm.internal.DoubleCompanionObject:
    8:13:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    10:10:double getMAX_VALUE() -> getMAX_VALUE
    9:9:double getMIN_VALUE() -> getMIN_VALUE
    12:12:double getNEGATIVE_INFINITY() -> getNEGATIVE_INFINITY
    13:13:double getNaN() -> getNaN
    11:11:double getPOSITIVE_INFINITY() -> getPOSITIVE_INFINITY
kotlin.jvm.internal.DoubleSpreadBuilder -> kotlin.jvm.internal.DoubleSpreadBuilder:
    74:75:void <init>(int) -> <init>
    79:79:void add(double) -> add
    74:74:int getSize(java.lang.Object) -> getSize
    76:76:int getSize(double[]) -> getSize
    82:82:double[] toArray() -> toArray
kotlin.jvm.internal.EnumCompanionObject -> kotlin.jvm.internal.EnumCompanionObject:
    67:67:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
kotlin.jvm.internal.FloatCompanionObject -> kotlin.jvm.internal.FloatCompanionObject:
    16:21:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    18:18:float getMAX_VALUE() -> getMAX_VALUE
    17:17:float getMIN_VALUE() -> getMIN_VALUE
    20:20:float getNEGATIVE_INFINITY() -> getNEGATIVE_INFINITY
    21:21:float getNaN() -> getNaN
    19:19:float getPOSITIVE_INFINITY() -> getPOSITIVE_INFINITY
kotlin.jvm.internal.FloatSpreadBuilder -> kotlin.jvm.internal.FloatSpreadBuilder:
    85:86:void <init>(int) -> <init>
    90:90:void add(float) -> add
    85:85:int getSize(java.lang.Object) -> getSize
    87:87:int getSize(float[]) -> getSize
    93:93:float[] toArray() -> toArray
kotlin.jvm.internal.FunctionImpl -> kotlin.jvm.internal.FunctionImpl:
    17:17:void <init>() -> <init>
    31:32:void checkArity(int) -> checkArity
    42:43:java.lang.Object invoke() -> invoke
    48:49:java.lang.Object invoke(java.lang.Object) -> invoke
    54:55:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    60:61:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    66:67:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    72:73:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    78:79:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    84:85:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    90:91:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    96:97:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    102:103:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    108:109:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    114:115:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    120:121:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    126:127:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    132:133:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    138:139:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    144:145:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    150:151:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    156:157:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    162:163:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    168:169:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    174:175:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    27:27:java.lang.Object invokeVararg(java.lang.Object[]) -> invokeVararg
    37:37:void throwWrongArity(int) -> throwWrongArity
kotlin.jvm.internal.FunctionReference -> kotlin.jvm.internal.FunctionReference:
    15:16:void <init>(int) -> <init>
    21:22:void <init>(int,java.lang.Object) -> <init>
    39:39:kotlin.reflect.KCallable computeReflected() -> computeReflected
    75:84:boolean equals(java.lang.Object) -> equals
    27:27:int getArity() -> getArity
    12:12:kotlin.reflect.KCallable getReflected() -> getReflected
    33:33:kotlin.reflect.KFunction getReflected() -> getReflected
    91:91:int hashCode() -> hashCode
    51:51:boolean isExternal() -> isExternal
    63:63:boolean isInfix() -> isInfix
    45:45:boolean isInline() -> isInline
    57:57:boolean isOperator() -> isOperator
    69:69:boolean isSuspend() -> isSuspend
    96:102:java.lang.String toString() -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> kotlin.jvm.internal.FunctionReferenceImpl:
    16:19:void <init>(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    29:29:java.lang.String getName() -> getName
    24:24:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    34:34:java.lang.String getSignature() -> getSignature
kotlin.jvm.internal.InlineMarker -> kotlin.jvm.internal.InlineMarker:
    8:8:void <init>() -> <init>
kotlin.jvm.internal.IntCompanionObject -> kotlin.jvm.internal.IntCompanionObject:
    24:24:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
kotlin.jvm.internal.IntSpreadBuilder -> kotlin.jvm.internal.IntSpreadBuilder:
    96:97:void <init>(int) -> <init>
    101:101:void add(int) -> add
    96:96:int getSize(java.lang.Object) -> getSize
    98:98:int getSize(int[]) -> getSize
    104:104:int[] toArray() -> toArray
kotlin.jvm.internal.Intrinsics -> kotlin.jvm.internal.Intrinsics:
    16:16:void <init>() -> <init>
    162:162:boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    167:167:boolean areEqual(java.lang.Double,java.lang.Double) -> areEqual
    172:172:boolean areEqual(java.lang.Double,double) -> areEqual
    177:177:boolean areEqual(double,java.lang.Double) -> areEqual
    182:182:boolean areEqual(java.lang.Float,java.lang.Float) -> areEqual
    187:187:boolean areEqual(java.lang.Float,float) -> areEqual
    192:192:boolean areEqual(float,java.lang.Float) -> areEqual
    87:87:void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String) -> checkExpressionValueIsNotNull
    113:113:void checkFieldIsNotNull(java.lang.Object,java.lang.String,java.lang.String) -> checkFieldIsNotNull
    119:119:void checkFieldIsNotNull(java.lang.Object,java.lang.String) -> checkFieldIsNotNull
    222:227:void checkHasClass(java.lang.String) -> checkHasClass
    234:239:void checkHasClass(java.lang.String,java.lang.String) -> checkHasClass
    25:25:void checkNotNull(java.lang.Object) -> checkNotNull
    31:31:void checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    93:93:void checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> checkNotNullExpressionValue
    131:131:void checkNotNullParameter(java.lang.Object,java.lang.String) -> checkNotNullParameter
    125:125:void checkParameterIsNotNull(java.lang.Object,java.lang.String) -> checkParameterIsNotNull
    99:99:void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String,java.lang.String) -> checkReturnedValueIsNotNull
    107:107:void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String) -> checkReturnedValueIsNotNull
    214:214:void needClassReification() -> needClassReification
    218:218:void needClassReification(java.lang.String) -> needClassReification
    206:206:void reifiedOperationMarker(int,java.lang.String) -> reifiedOperationMarker
    210:210:void reifiedOperationMarker(int,java.lang.String,java.lang.String) -> reifiedOperationMarker
    246:246:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    250:261:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> sanitizeStackTrace
    20:20:java.lang.String stringPlus(java.lang.String,java.lang.Object) -> stringPlus
    62:62:void throwAssert() -> throwAssert
    66:66:void throwAssert(java.lang.String) -> throwAssert
    70:70:void throwIllegalArgument() -> throwIllegalArgument
    74:74:void throwIllegalArgument(java.lang.String) -> throwIllegalArgument
    78:78:void throwIllegalState() -> throwIllegalState
    82:82:void throwIllegalState(java.lang.String) -> throwIllegalState
    45:45:void throwJavaNpe() -> throwJavaNpe
    50:50:void throwJavaNpe(java.lang.String) -> throwJavaNpe
    36:36:void throwNpe() -> throwNpe
    40:40:void throwNpe(java.lang.String) -> throwNpe
    136:150:void throwParameterIsNullException(java.lang.String) -> throwParameterIsNullException
    196:196:void throwUndefinedForReified() -> throwUndefinedForReified
    202:202:void throwUndefinedForReified(java.lang.String) -> throwUndefinedForReified
    54:54:void throwUninitializedProperty(java.lang.String) -> throwUninitializedProperty
    58:58:void throwUninitializedPropertyAccessException(java.lang.String) -> throwUninitializedPropertyAccessException
kotlin.jvm.internal.Lambda -> kotlin.jvm.internal.Lambda:
    10:10:void <init>(int) -> <init>
    10:10:int getArity() -> getArity
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.LocalVariableReference -> kotlin.jvm.internal.LocalVariableReference:
    15:15:void <init>() -> <init>
    18:18:java.lang.Object get() -> get
    16:16:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
kotlin.jvm.internal.LocalVariableReferencesKt -> kotlin.jvm.internal.LocalVariableReferencesKt:
    1:1:java.lang.Void access$notSupportedError() -> access$notSupportedError
    11:11:java.lang.Void notSupportedError() -> notSupportedError
kotlin.jvm.internal.LongCompanionObject -> kotlin.jvm.internal.LongCompanionObject:
    31:31:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
kotlin.jvm.internal.LongSpreadBuilder -> kotlin.jvm.internal.LongSpreadBuilder:
    107:108:void <init>(int) -> <init>
    112:112:void add(long) -> add
    107:107:int getSize(java.lang.Object) -> getSize
    109:109:int getSize(long[]) -> getSize
    115:115:long[] toArray() -> toArray
kotlin.jvm.internal.MagicApiIntrinsics -> kotlin.jvm.internal.MagicApiIntrinsics:
    11:11:void <init>() -> <init>
kotlin.jvm.internal.MutableLocalVariableReference -> kotlin.jvm.internal.MutableLocalVariableReference:
    23:23:void <init>() -> <init>
    26:26:java.lang.Object get() -> get
    24:24:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    28:28:void set(java.lang.Object) -> set
kotlin.jvm.internal.MutablePropertyReference -> kotlin.jvm.internal.MutablePropertyReference:
    12:12:void <init>() -> <init>
    17:17:void <init>(java.lang.Object) -> <init>
kotlin.jvm.internal.MutablePropertyReference0 -> kotlin.jvm.internal.MutablePropertyReference0:
    14:14:void <init>() -> <init>
    19:19:void <init>(java.lang.Object) -> <init>
    24:24:kotlin.reflect.KCallable computeReflected() -> computeReflected
    45:45:java.lang.Object getDelegate() -> getDelegate
    13:13:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    34:34:kotlin.reflect.KProperty0$Getter getGetter() -> getGetter
    13:13:kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
    39:39:kotlin.reflect.KMutableProperty0$Setter getSetter() -> getSetter
    29:29:java.lang.Object invoke() -> invoke
kotlin.jvm.internal.MutablePropertyReference0Impl -> kotlin.jvm.internal.MutablePropertyReference0Impl:
    15:18:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    38:38:java.lang.Object get() -> get
    28:28:java.lang.String getName() -> getName
    23:23:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    33:33:java.lang.String getSignature() -> getSignature
    43:43:void set(java.lang.Object) -> set
kotlin.jvm.internal.MutablePropertyReference1 -> kotlin.jvm.internal.MutablePropertyReference1:
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Object) -> <init>
    25:25:kotlin.reflect.KCallable computeReflected() -> computeReflected
    46:46:java.lang.Object getDelegate(java.lang.Object) -> getDelegate
    13:13:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    35:35:kotlin.reflect.KProperty1$Getter getGetter() -> getGetter
    13:13:kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
    40:40:kotlin.reflect.KMutableProperty1$Setter getSetter() -> getSetter
    30:30:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.jvm.internal.MutablePropertyReference1Impl -> kotlin.jvm.internal.MutablePropertyReference1Impl:
    15:18:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    38:38:java.lang.Object get(java.lang.Object) -> get
    28:28:java.lang.String getName() -> getName
    23:23:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    33:33:java.lang.String getSignature() -> getSignature
    43:43:void set(java.lang.Object,java.lang.Object) -> set
kotlin.jvm.internal.MutablePropertyReference2 -> kotlin.jvm.internal.MutablePropertyReference2:
    14:14:void <init>() -> <init>
    17:17:kotlin.reflect.KCallable computeReflected() -> computeReflected
    38:38:java.lang.Object getDelegate(java.lang.Object,java.lang.Object) -> getDelegate
    13:13:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    27:27:kotlin.reflect.KProperty2$Getter getGetter() -> getGetter
    13:13:kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
    32:32:kotlin.reflect.KMutableProperty2$Setter getSetter() -> getSetter
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlin.jvm.internal.MutablePropertyReference2Impl -> kotlin.jvm.internal.MutablePropertyReference2Impl:
    15:18:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    38:38:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    28:28:java.lang.String getName() -> getName
    23:23:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    33:33:java.lang.String getSignature() -> getSignature
    43:43:void set(java.lang.Object,java.lang.Object,java.lang.Object) -> set
kotlin.jvm.internal.PackageReference -> kotlin.jvm.internal.PackageReference:
    11:11:void <init>(java.lang.Class,java.lang.String) -> <init>
    19:19:boolean equals(java.lang.Object) -> equals
    12:12:java.lang.Class getJClass() -> getJClass
    16:16:java.util.Collection getMembers() -> getMembers
    22:22:int hashCode() -> hashCode
    25:25:java.lang.String toString() -> toString
kotlin.jvm.internal.PrimitiveSpreadBuilder -> kotlin.jvm.internal.PrimitiveSpreadBuilder:
    8:14:void <init>(int) -> <init>
    17:17:void addSpread(java.lang.Object) -> addSpread
    11:11:int getPosition() -> getPosition
    11:11:void setPosition(int) -> setPosition
    22:23:int size() -> size
    31:45:java.lang.Object toArray(java.lang.Object,java.lang.Object) -> toArray
kotlin.jvm.internal.PropertyReference -> kotlin.jvm.internal.PropertyReference:
    14:14:void <init>() -> <init>
    19:19:void <init>(java.lang.Object) -> <init>
    43:51:boolean equals(java.lang.Object) -> equals
    12:12:kotlin.reflect.KCallable getReflected() -> getReflected
    25:25:kotlin.reflect.KProperty getReflected() -> getReflected
    58:58:int hashCode() -> hashCode
    37:37:boolean isConst() -> isConst
    31:31:boolean isLateinit() -> isLateinit
    63:68:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference0 -> kotlin.jvm.internal.PropertyReference0:
    14:14:void <init>() -> <init>
    19:19:void <init>(java.lang.Object) -> <init>
    24:24:kotlin.reflect.KCallable computeReflected() -> computeReflected
    40:40:java.lang.Object getDelegate() -> getDelegate
    12:12:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    34:34:kotlin.reflect.KProperty0$Getter getGetter() -> getGetter
    29:29:java.lang.Object invoke() -> invoke
kotlin.jvm.internal.PropertyReference0Impl -> kotlin.jvm.internal.PropertyReference0Impl:
    15:18:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    38:38:java.lang.Object get() -> get
    28:28:java.lang.String getName() -> getName
    23:23:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    33:33:java.lang.String getSignature() -> getSignature
kotlin.jvm.internal.PropertyReference1 -> kotlin.jvm.internal.PropertyReference1:
    14:14:void <init>() -> <init>
    19:19:void <init>(java.lang.Object) -> <init>
    24:24:kotlin.reflect.KCallable computeReflected() -> computeReflected
    40:40:java.lang.Object getDelegate(java.lang.Object) -> getDelegate
    12:12:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    34:34:kotlin.reflect.KProperty1$Getter getGetter() -> getGetter
    29:29:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.jvm.internal.PropertyReference1Impl -> kotlin.jvm.internal.PropertyReference1Impl:
    15:18:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    38:38:java.lang.Object get(java.lang.Object) -> get
    28:28:java.lang.String getName() -> getName
    23:23:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    33:33:java.lang.String getSignature() -> getSignature
kotlin.jvm.internal.PropertyReference2 -> kotlin.jvm.internal.PropertyReference2:
    13:13:void <init>() -> <init>
    16:16:kotlin.reflect.KCallable computeReflected() -> computeReflected
    32:32:java.lang.Object getDelegate(java.lang.Object,java.lang.Object) -> getDelegate
    12:12:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    26:26:kotlin.reflect.KProperty2$Getter getGetter() -> getGetter
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlin.jvm.internal.PropertyReference2Impl -> kotlin.jvm.internal.PropertyReference2Impl:
    15:18:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    38:38:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    28:28:java.lang.String getName() -> getName
    23:23:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    33:33:java.lang.String getSignature() -> getSignature
kotlin.jvm.internal.Ref -> kotlin.jvm.internal.Ref:
    11:11:void <init>() -> <init>
kotlin.jvm.internal.Ref$BooleanRef -> kotlin.jvm.internal.Ref$BooleanRef:
    85:85:void <init>() -> <init>
    90:90:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ByteRef -> kotlin.jvm.internal.Ref$ByteRef:
    22:22:void <init>() -> <init>
    27:27:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$CharRef -> kotlin.jvm.internal.Ref$CharRef:
    76:76:void <init>() -> <init>
    81:81:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$DoubleRef -> kotlin.jvm.internal.Ref$DoubleRef:
    67:67:void <init>() -> <init>
    72:72:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$FloatRef -> kotlin.jvm.internal.Ref$FloatRef:
    58:58:void <init>() -> <init>
    63:63:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$IntRef -> kotlin.jvm.internal.Ref$IntRef:
    40:40:void <init>() -> <init>
    45:45:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$LongRef -> kotlin.jvm.internal.Ref$LongRef:
    49:49:void <init>() -> <init>
    54:54:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ObjectRef -> kotlin.jvm.internal.Ref$ObjectRef:
    13:13:void <init>() -> <init>
    18:18:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ShortRef -> kotlin.jvm.internal.Ref$ShortRef:
    31:31:void <init>() -> <init>
    36:36:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> kotlin.jvm.internal.Reflection:
    26:39:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    42:42:kotlin.reflect.KClass createKotlinClass(java.lang.Class) -> createKotlinClass
    46:46:kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String) -> createKotlinClass
    84:84:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    54:54:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    58:58:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String) -> getOrCreateKotlinClass
    62:66:kotlin.reflect.KClass[] getOrCreateKotlinClasses(java.lang.Class[]) -> getOrCreateKotlinClasses
    50:50:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String) -> getOrCreateKotlinPackage
    94:94:kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0) -> mutableProperty0
    102:102:kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1) -> mutableProperty1
    110:110:kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2) -> mutableProperty2
    137:137:kotlin.reflect.KType nullableTypeOf(java.lang.Class) -> nullableTypeOf
    142:142:kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection) -> nullableTypeOf
    147:147:kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection) -> nullableTypeOf
    152:152:kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection[]) -> nullableTypeOf
    90:90:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0) -> property0
    98:98:kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1) -> property1
    106:106:kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2) -> property2
    73:73:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    78:78:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
    117:117:kotlin.reflect.KType typeOf(java.lang.Class) -> typeOf
    122:122:kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection) -> typeOf
    127:127:kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection) -> typeOf
    132:132:kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection[]) -> typeOf
kotlin.jvm.internal.ReflectionFactory -> kotlin.jvm.internal.ReflectionFactory:
    13:13:void <init>() -> <init>
    17:17:kotlin.reflect.KClass createKotlinClass(java.lang.Class) -> createKotlinClass
    21:21:kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String) -> createKotlinClass
    29:29:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    33:33:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String) -> getOrCreateKotlinClass
    25:25:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String) -> getOrCreateKotlinPackage
    38:38:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    43:44:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
    83:83:kotlin.reflect.KType typeOf(kotlin.reflect.KClassifier,java.util.List,boolean) -> typeOf
kotlin.jvm.internal.ShortCompanionObject -> kotlin.jvm.internal.ShortCompanionObject:
    38:38:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
kotlin.jvm.internal.ShortSpreadBuilder -> kotlin.jvm.internal.ShortSpreadBuilder:
    118:119:void <init>(int) -> <init>
    123:123:void add(short) -> add
    118:118:int getSize(java.lang.Object) -> getSize
    120:120:int getSize(short[]) -> getSize
    126:126:short[] toArray() -> toArray
kotlin.jvm.internal.SpreadBuilder -> kotlin.jvm.internal.SpreadBuilder:
    17:18:void <init>(int) -> <init>
    55:55:void add(java.lang.Object) -> add
    25:46:void addSpread(java.lang.Object) -> addSpread
    51:51:int size() -> size
    59:59:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
kotlin.jvm.internal.StringCompanionObject -> kotlin.jvm.internal.StringCompanionObject:
    66:66:void <clinit>() -> <clinit>
    66:66:void <init>() -> <init>
kotlin.jvm.internal.TypeIntrinsics -> kotlin.jvm.internal.TypeIntrinsics:
    15:15:void <init>() -> <init>
    123:126:java.util.Collection asMutableCollection(java.lang.Object) -> asMutableCollection
    130:133:java.util.Collection asMutableCollection(java.lang.Object,java.lang.String) -> asMutableCollection
    95:98:java.lang.Iterable asMutableIterable(java.lang.Object) -> asMutableIterable
    102:105:java.lang.Iterable asMutableIterable(java.lang.Object,java.lang.String) -> asMutableIterable
    39:42:java.util.Iterator asMutableIterator(java.lang.Object) -> asMutableIterator
    46:49:java.util.Iterator asMutableIterator(java.lang.Object,java.lang.String) -> asMutableIterator
    151:154:java.util.List asMutableList(java.lang.Object) -> asMutableList
    158:161:java.util.List asMutableList(java.lang.Object,java.lang.String) -> asMutableList
    67:70:java.util.ListIterator asMutableListIterator(java.lang.Object) -> asMutableListIterator
    74:77:java.util.ListIterator asMutableListIterator(java.lang.Object,java.lang.String) -> asMutableListIterator
    207:210:java.util.Map asMutableMap(java.lang.Object) -> asMutableMap
    214:217:java.util.Map asMutableMap(java.lang.Object,java.lang.String) -> asMutableMap
    235:238:java.util.Map$Entry asMutableMapEntry(java.lang.Object) -> asMutableMapEntry
    242:245:java.util.Map$Entry asMutableMapEntry(java.lang.Object,java.lang.String) -> asMutableMapEntry
    179:182:java.util.Set asMutableSet(java.lang.Object) -> asMutableSet
    186:189:java.util.Set asMutableSet(java.lang.Object,java.lang.String) -> asMutableSet
    341:342:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int) -> beforeCheckcastToFunctionOfArity
    348:349:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int,java.lang.String) -> beforeCheckcastToFunctionOfArity
    138:141:java.util.Collection castToCollection(java.lang.Object) -> castToCollection
    110:113:java.lang.Iterable castToIterable(java.lang.Object) -> castToIterable
    54:57:java.util.Iterator castToIterator(java.lang.Object) -> castToIterator
    166:169:java.util.List castToList(java.lang.Object) -> castToList
    82:85:java.util.ListIterator castToListIterator(java.lang.Object) -> castToListIterator
    222:225:java.util.Map castToMap(java.lang.Object) -> castToMap
    250:253:java.util.Map$Entry castToMapEntry(java.lang.Object) -> castToMapEntry
    194:197:java.util.Set castToSet(java.lang.Object) -> castToSet
    258:327:int getFunctionArity(java.lang.Object) -> getFunctionArity
    336:336:boolean isFunctionOfArity(java.lang.Object,int) -> isFunctionOfArity
    118:118:boolean isMutableCollection(java.lang.Object) -> isMutableCollection
    90:90:boolean isMutableIterable(java.lang.Object) -> isMutableIterable
    34:34:boolean isMutableIterator(java.lang.Object) -> isMutableIterator
    146:146:boolean isMutableList(java.lang.Object) -> isMutableList
    62:62:boolean isMutableListIterator(java.lang.Object) -> isMutableListIterator
    202:202:boolean isMutableMap(java.lang.Object) -> isMutableMap
    230:230:boolean isMutableMapEntry(java.lang.Object) -> isMutableMapEntry
    174:174:boolean isMutableSet(java.lang.Object) -> isMutableSet
    17:17:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    21:22:void throwCce(java.lang.Object,java.lang.String) -> throwCce
    26:26:void throwCce(java.lang.String) -> throwCce
    30:30:java.lang.ClassCastException throwCce(java.lang.ClassCastException) -> throwCce
kotlin.jvm.internal.TypeReference -> kotlin.jvm.internal.TypeReference:
    12:12:void <init>(kotlin.reflect.KClassifier,java.util.List,boolean) -> <init>
    12:12:java.lang.String access$asString(kotlin.jvm.internal.TypeReference,kotlin.reflect.KTypeProjection) -> access$asString
    31:42:java.lang.String asString() -> asString
    61:67:java.lang.String asString(kotlin.reflect.KTypeProjection) -> asString
    21:21:boolean equals(java.lang.Object) -> equals
    18:18:java.util.List getAnnotations() -> getAnnotations
    14:14:java.util.List getArguments() -> getArguments
    47:54:java.lang.String getArrayClassName(java.lang.Class) -> getArrayClassName
    13:13:kotlin.reflect.KClassifier getClassifier() -> getClassifier
    25:25:int hashCode() -> hashCode
    15:15:boolean isMarkedNullable() -> isMarkedNullable
    28:28:java.lang.String toString() -> toString
kotlin.jvm.internal.TypeReference$asString$args$1 -> kotlin.jvm.internal.TypeReference$asString$args$1:
    12:12:java.lang.Object invoke(java.lang.Object) -> invoke
    39:39:java.lang.String invoke(kotlin.reflect.KTypeProjection) -> invoke
kotlin.jvm.internal.unsafe.MonitorKt -> kotlin.jvm.internal.unsafe.MonitorKt:
    9:9:void monitorEnter(java.lang.Object) -> monitorEnter
    12:12:void monitorExit(java.lang.Object) -> monitorExit
kotlin.math.Constants -> kotlin.math.Constants:
    20:35:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
kotlin.math.MathKt__MathJVMKt -> kotlin.math.MathKt__MathJVMKt:
    507:507:double IEEErem(double,double) -> IEEErem
    1037:1037:float IEEErem(float,float) -> IEEErem
    431:431:double abs(double) -> abs
    961:961:float abs(float) -> abs
    1163:1163:int abs(int) -> abs
    1216:1216:long abs(long) -> abs
    88:88:double acos(double) -> acos
    675:675:float acos(float) -> acos
    211:229:double acosh(double) -> acosh
    769:769:float acosh(float) -> acosh
    77:77:double asin(double) -> asin
    664:664:float asin(float) -> asin
    173:189:double asinh(double) -> asinh
    755:755:float asinh(float) -> asinh
    99:99:double atan(double) -> atan
    686:686:float atan(float) -> atan
    119:119:double atan2(double,double) -> atan2
    706:706:float atan2(float,float) -> atan2
    246:253:double atanh(double) -> atanh
    784:784:float atanh(float) -> atanh
    381:381:double ceil(double) -> ceil
    911:911:float ceil(float) -> ceil
    57:57:double cos(double) -> cos
    644:644:float cos(float) -> cos
    142:142:double cosh(double) -> cosh
    729:729:float cosh(float) -> cosh
    287:287:double exp(double) -> exp
    817:817:float exp(float) -> exp
    303:303:double expm1(double) -> expm1
    833:833:float expm1(float) -> expm1
    393:393:double floor(double) -> floor
    923:923:float floor(float) -> floor
    519:519:double getAbsoluteValue(double) -> getAbsoluteValue
    1049:1049:float getAbsoluteValue(float) -> getAbsoluteValue
    1189:1189:int getAbsoluteValue(int) -> getAbsoluteValue
    1242:1242:long getAbsoluteValue(long) -> getAbsoluteValue
    532:532:double getSign(double) -> getSign
    1062:1062:float getSign(float) -> getSign
    562:562:double getUlp(double) -> getUlp
    1092:1092:float getUlp(float) -> getUlp
    265:265:double hypot(double,double) -> hypot
    795:795:float hypot(float,float) -> hypot
    334:334:double ln(double) -> ln
    864:864:float ln(float) -> ln
    369:369:double ln1p(double) -> ln1p
    899:899:float ln1p(float) -> ln1p
    320:319:double log(double,double) -> log
    850:849:float log(float,float) -> log
    343:343:double log10(double) -> log10
    873:873:float log10(float) -> log10
    351:351:double log2(double) -> log2
    881:881:float log2(float) -> log2
    464:464:double max(double,double) -> max
    994:994:float max(float,float) -> max
    1177:1177:int max(int,int) -> max
    1230:1230:long max(long,long) -> max
    455:455:double min(double,double) -> min
    985:985:float min(float,float) -> min
    1170:1170:int min(int,int) -> min
    1223:1223:long min(long,long) -> min
    576:576:double nextDown(double) -> nextDown
    1106:1106:float nextDown(float) -> nextDown
    588:588:double nextTowards(double,double) -> nextTowards
    1118:1118:float nextTowards(float,float) -> nextTowards
    569:569:double nextUp(double) -> nextUp
    1099:1099:float nextUp(float) -> nextUp
    482:482:double pow(double,double) -> pow
    491:491:double pow(double,int) -> pow
    1012:1012:float pow(float,float) -> pow
    1021:1021:float pow(float,int) -> pow
    418:418:double round(double) -> round
    948:948:float round(float) -> round
    602:602:int roundToInt(double) -> roundToInt
    1132:1132:int roundToInt(float) -> roundToInt
    620:620:long roundToLong(double) -> roundToLong
    1145:1145:long roundToLong(float) -> roundToLong
    444:444:double sign(double) -> sign
    974:974:float sign(float) -> sign
    48:48:double sin(double) -> sin
    635:635:float sin(float) -> sin
    131:131:double sinh(double) -> sinh
    718:718:float sinh(float) -> sinh
    275:275:double sqrt(double) -> sqrt
    805:805:float sqrt(float) -> sqrt
    66:66:double tan(double) -> tan
    653:653:float tan(float) -> tan
    154:154:double tanh(double) -> tanh
    741:741:float tanh(float) -> tanh
    405:407:double truncate(double) -> truncate
    935:937:float truncate(float) -> truncate
    541:541:double withSign(double,double) -> withSign
    548:548:double withSign(double,int) -> withSign
    1071:1071:float withSign(float,float) -> withSign
    1078:1078:float withSign(float,int) -> withSign
kotlin.math.UMathKt -> kotlin.math.UMathKt:
    35:35:int max-J1ME1BU(int,int) -> max-J1ME1BU
    45:45:long max-eb3DHEI(long,long) -> max-eb3DHEI
    15:15:int min-J1ME1BU(int,int) -> min-J1ME1BU
    25:25:long min-eb3DHEI(long,long) -> min-eb3DHEI
kotlin.properties.Delegates -> kotlin.properties.Delegates:
    13:13:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    21:21:kotlin.properties.ReadWriteProperty notNull() -> notNull
    33:33:kotlin.properties.ReadWriteProperty observable(java.lang.Object,kotlin.jvm.functions.Function3) -> observable
    51:51:kotlin.properties.ReadWriteProperty vetoable(java.lang.Object,kotlin.jvm.functions.Function3) -> vetoable
kotlin.properties.Delegates$observable$1 -> kotlin.properties.Delegates$observable$1:
    33:33:void <init>(kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object) -> <init>
    34:34:void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object) -> afterChange
kotlin.properties.Delegates$vetoable$1 -> kotlin.properties.Delegates$vetoable$1:
    51:51:void <init>(kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object) -> <init>
    52:52:boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object) -> beforeChange
kotlin.properties.NotNullVar -> kotlin.properties.NotNullVar:
    58:58:void <init>() -> <init>
    62:62:java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    66:66:void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
kotlin.properties.ObservableProperty -> kotlin.properties.ObservableProperty:
    14:15:void <init>(java.lang.Object) -> <init>
    32:32:java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    36:41:void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
kotlin.random.AbstractPlatformRandom -> kotlin.random.AbstractPlatformRandom:
    35:35:void <init>() -> <init>
    39:39:int nextBits(int) -> nextBits
    44:44:boolean nextBoolean() -> nextBoolean
    47:47:byte[] nextBytes(byte[]) -> nextBytes
    45:45:double nextDouble() -> nextDouble
    46:46:float nextFloat() -> nextFloat
    41:41:int nextInt() -> nextInt
    42:42:int nextInt(int) -> nextInt
    43:43:long nextLong() -> nextLong
kotlin.random.FallbackThreadLocalRandom -> kotlin.random.FallbackThreadLocalRandom:
    50:51:void <init>() -> <init>
    57:57:java.util.Random getImpl() -> getImpl
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> kotlin.random.FallbackThreadLocalRandom$implStorage$1:
    51:51:void <init>() -> <init>
    51:51:java.lang.Object initialValue() -> initialValue
    53:53:java.util.Random initialValue() -> initialValue
kotlin.random.KotlinRandom -> kotlin.random.KotlinRandom:
    62:62:void <init>(kotlin.random.Random) -> <init>
    62:62:kotlin.random.Random getImpl() -> getImpl
    63:63:int next(int) -> next
    66:66:boolean nextBoolean() -> nextBoolean
    72:72:void nextBytes(byte[]) -> nextBytes
    69:69:double nextDouble() -> nextDouble
    68:68:float nextFloat() -> nextFloat
    64:64:int nextInt() -> nextInt
    65:65:int nextInt(int) -> nextInt
    67:67:long nextLong() -> nextLong
    77:81:void setSeed(long) -> setSeed
kotlin.random.PlatformRandom -> kotlin.random.PlatformRandom:
    60:60:void <init>(java.util.Random) -> <init>
    60:60:java.util.Random getImpl() -> getImpl
kotlin.random.PlatformRandomKt -> kotlin.random.PlatformRandomKt:
    16:16:java.util.Random asJavaRandom(kotlin.random.Random) -> asJavaRandom
    23:23:kotlin.random.Random asKotlinRandom(java.util.Random) -> asKotlinRandom
    29:29:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
kotlin.random.Random -> kotlin.random.Random:
    242:268:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    20:20:kotlin.random.Random access$getDefaultRandom$cp() -> access$getDefaultRandom$cp
    147:147:boolean nextBoolean() -> nextBoolean
    196:196:byte[] nextBytes(byte[],int,int) -> nextBytes
    225:225:byte[] nextBytes(byte[]) -> nextBytes
    230:230:byte[] nextBytes(int) -> nextBytes
    195:0:byte[] nextBytes$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object) -> nextBytes$default
    152:152:double nextDouble() -> nextDouble
    161:161:double nextDouble(double) -> nextDouble
    173:181:double nextDouble(double,double) -> nextDouble
    187:187:float nextFloat() -> nextFloat
    36:36:int nextInt() -> nextInt
    47:47:int nextInt(int) -> nextInt
    57:67:int nextInt(int,int) -> nextInt
    85:85:long nextLong() -> nextLong
    96:96:long nextLong(long) -> nextLong
    106:138:long nextLong(long,long) -> nextLong
kotlin.random.Random$Companion -> kotlin.random.Random$Companion:
    272:272:void <clinit>() -> <clinit>
    272:272:void <init>() -> <init>
    273:273:int nextBits(int) -> nextBits
kotlin.random.Random$Default -> kotlin.random.Random$Default:
    240:240:void <init>() -> <init>
    240:240:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    244:244:int nextBits(int) -> nextBits
    253:253:boolean nextBoolean() -> nextBoolean
    261:261:byte[] nextBytes(byte[]) -> nextBytes
    262:262:byte[] nextBytes(int) -> nextBytes
    263:263:byte[] nextBytes(byte[],int,int) -> nextBytes
    255:255:double nextDouble() -> nextDouble
    256:256:double nextDouble(double) -> nextDouble
    257:257:double nextDouble(double,double) -> nextDouble
    259:259:float nextFloat() -> nextFloat
    245:245:int nextInt() -> nextInt
    246:246:int nextInt(int) -> nextInt
    247:247:int nextInt(int,int) -> nextInt
    249:249:long nextLong() -> nextLong
    250:250:long nextLong(long) -> nextLong
    251:251:long nextLong(long,long) -> nextLong
kotlin.random.RandomKt -> kotlin.random.RandomKt:
    288:288:kotlin.random.Random Random(int) -> Random
    301:301:kotlin.random.Random Random(long) -> Random
    352:352:java.lang.String boundsErrorMessage(java.lang.Object,java.lang.Object) -> boundsErrorMessage
    348:348:void checkRangeBounds(int,int) -> checkRangeBounds
    349:349:void checkRangeBounds(long,long) -> checkRangeBounds
    350:350:void checkRangeBounds(double,double) -> checkRangeBounds
    342:342:int fastLog2(int) -> fastLog2
    315:315:int nextInt(kotlin.random.Random,kotlin.ranges.IntRange) -> nextInt
    331:331:long nextLong(kotlin.random.Random,kotlin.ranges.LongRange) -> nextLong
kotlin.random.URandomKt -> kotlin.random.URandomKt:
    154:154:void checkUIntRangeBounds-J1ME1BU(int,int) -> checkUIntRangeBounds-J1ME1BU
    156:156:void checkULongRangeBounds-eb3DHEI(long,long) -> checkULongRangeBounds-eb3DHEI
    138:138:byte[] nextUBytes(kotlin.random.Random,int) -> nextUBytes
    129:129:byte[] nextUBytes-EVgfTAA(kotlin.random.Random,byte[]) -> nextUBytes-EVgfTAA
    148:148:byte[] nextUBytes-Wvrt4B4(kotlin.random.Random,byte[],int,int) -> nextUBytes-Wvrt4B4
    147:147:byte[] nextUBytes-Wvrt4B4$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object) -> nextUBytes-Wvrt4B4$default
    16:16:int nextUInt(kotlin.random.Random) -> nextUInt
    59:59:int nextUInt(kotlin.random.Random,kotlin.ranges.UIntRange) -> nextUInt
    39:45:int nextUInt-a8DCA5k(kotlin.random.Random,int,int) -> nextUInt-a8DCA5k
    27:27:int nextUInt-qCasIEU(kotlin.random.Random,int) -> nextUInt-qCasIEU
    72:72:long nextULong(kotlin.random.Random) -> nextULong
    115:115:long nextULong(kotlin.random.Random,kotlin.ranges.ULongRange) -> nextULong
    83:83:long nextULong-V1Xi4fY(kotlin.random.Random,long) -> nextULong-V1Xi4fY
    95:101:long nextULong-jmpaW-c(kotlin.random.Random,long,long) -> nextULong-jmpaW-c
kotlin.random.XorWowRandom -> kotlin.random.XorWowRandom:
    23:29:void <init>(int,int,int,int,int,int) -> <init>
    26:26:void <init>(int,int) -> <init>
    50:50:int nextBits(int) -> nextBits
    36:46:int nextInt() -> nextInt
kotlin.random.jdk8.PlatformThreadLocalRandom -> kotlin.random.jdk8.PlatformThreadLocalRandom:
    11:11:void <init>() -> <init>
    13:13:java.util.Random getImpl() -> getImpl
    18:18:double nextDouble(double) -> nextDouble
    15:15:int nextInt(int,int) -> nextInt
    16:16:long nextLong(long) -> nextLong
    17:17:long nextLong(long,long) -> nextLong
kotlin.ranges.CharProgression -> kotlin.ranges.CharProgression:
    16:23:void <init>(char,char,int) -> <init>
    48:48:boolean equals(java.lang.Object) -> equals
    30:30:char getFirst() -> getFirst
    35:35:char getLast() -> getLast
    40:40:int getStep() -> getStep
    52:52:int hashCode() -> hashCode
    45:45:boolean isEmpty() -> isEmpty
    15:15:java.util.Iterator iterator() -> iterator
    42:42:kotlin.collections.CharIterator iterator() -> iterator
    54:54:java.lang.String toString() -> toString
kotlin.ranges.CharProgression$Companion -> kotlin.ranges.CharProgression$Companion:
    56:56:void <init>() -> <init>
    56:56:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    65:65:kotlin.ranges.CharProgression fromClosedRange(char,char,int) -> fromClosedRange
kotlin.ranges.CharProgressionIterator -> kotlin.ranges.CharProgressionIterator:
    14:17:void <init>(char,char,int) -> <init>
    14:14:int getStep() -> getStep
    19:19:boolean hasNext() -> hasNext
    22:28:char nextChar() -> nextChar
kotlin.ranges.CharRange -> kotlin.ranges.CharRange:
    32:32:void <clinit>() -> <clinit>
    13:13:void <init>(char,char) -> <init>
    13:13:kotlin.ranges.CharRange access$getEMPTY$cp() -> access$getEMPTY$cp
    13:13:boolean contains(java.lang.Comparable) -> contains
    17:17:boolean contains(char) -> contains
    22:22:boolean equals(java.lang.Object) -> equals
    13:13:java.lang.Comparable getEndInclusive() -> getEndInclusive
    15:15:java.lang.Character getEndInclusive() -> getEndInclusive
    13:13:java.lang.Comparable getStart() -> getStart
    14:14:java.lang.Character getStart() -> getStart
    26:26:int hashCode() -> hashCode
    19:19:boolean isEmpty() -> isEmpty
    28:28:java.lang.String toString() -> toString
kotlin.ranges.CharRange$Companion -> kotlin.ranges.CharRange$Companion:
    30:30:void <init>() -> <init>
    30:30:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    32:32:kotlin.ranges.CharRange getEMPTY() -> getEMPTY
kotlin.ranges.ClosedDoubleRange -> kotlin.ranges.ClosedDoubleRange:
    54:59:void <init>(double,double) -> <init>
    54:54:boolean contains(java.lang.Comparable) -> contains
    65:65:boolean contains(double) -> contains
    69:69:boolean equals(java.lang.Object) -> equals
    54:54:java.lang.Comparable getEndInclusive() -> getEndInclusive
    61:61:java.lang.Double getEndInclusive() -> getEndInclusive
    54:54:java.lang.Comparable getStart() -> getStart
    60:60:java.lang.Double getStart() -> getStart
    74:74:int hashCode() -> hashCode
    66:66:boolean isEmpty() -> isEmpty
    54:54:boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable) -> lessThanOrEquals
    77:77:java.lang.String toString() -> toString
kotlin.ranges.ClosedFloatRange -> kotlin.ranges.ClosedFloatRange:
    16:21:void <init>(float,float) -> <init>
    16:16:boolean contains(java.lang.Comparable) -> contains
    27:27:boolean contains(float) -> contains
    31:31:boolean equals(java.lang.Object) -> equals
    16:16:java.lang.Comparable getEndInclusive() -> getEndInclusive
    23:23:java.lang.Float getEndInclusive() -> getEndInclusive
    16:16:java.lang.Comparable getStart() -> getStart
    22:22:java.lang.Float getStart() -> getStart
    36:36:int hashCode() -> hashCode
    28:28:boolean isEmpty() -> isEmpty
    16:16:boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable) -> lessThanOrEquals
    39:39:java.lang.String toString() -> toString
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls -> kotlin.ranges.ClosedFloatingPointRange$DefaultImpls:
    20:20:boolean contains(kotlin.ranges.ClosedFloatingPointRange,java.lang.Comparable) -> contains
    21:21:boolean isEmpty(kotlin.ranges.ClosedFloatingPointRange) -> isEmpty
kotlin.ranges.ClosedRange$DefaultImpls -> kotlin.ranges.ClosedRange$DefaultImpls:
    26:26:boolean contains(kotlin.ranges.ClosedRange,java.lang.Comparable) -> contains
    31:31:boolean isEmpty(kotlin.ranges.ClosedRange) -> isEmpty
kotlin.ranges.ComparableRange -> kotlin.ranges.ComparableRange:
    32:32:void <init>(java.lang.Comparable,java.lang.Comparable) -> <init>
    32:32:boolean contains(java.lang.Comparable) -> contains
    38:38:boolean equals(java.lang.Object) -> equals
    34:34:java.lang.Comparable getEndInclusive() -> getEndInclusive
    33:33:java.lang.Comparable getStart() -> getStart
    43:43:int hashCode() -> hashCode
    32:32:boolean isEmpty() -> isEmpty
    46:46:java.lang.String toString() -> toString
kotlin.ranges.IntProgression -> kotlin.ranges.IntProgression:
    73:80:void <init>(int,int,int) -> <init>
    105:105:boolean equals(java.lang.Object) -> equals
    87:87:int getFirst() -> getFirst
    92:92:int getLast() -> getLast
    97:97:int getStep() -> getStep
    109:109:int hashCode() -> hashCode
    102:102:boolean isEmpty() -> isEmpty
    72:72:java.util.Iterator iterator() -> iterator
    99:99:kotlin.collections.IntIterator iterator() -> iterator
    111:111:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> kotlin.ranges.IntProgression$Companion:
    113:113:void <init>() -> <init>
    113:113:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    122:122:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> fromClosedRange
kotlin.ranges.IntProgressionIterator -> kotlin.ranges.IntProgressionIterator:
    38:41:void <init>(int,int,int) -> <init>
    38:38:int getStep() -> getStep
    43:43:boolean hasNext() -> hasNext
    46:52:int nextInt() -> nextInt
kotlin.ranges.IntRange -> kotlin.ranges.IntRange:
    58:58:void <clinit>() -> <clinit>
    39:39:void <init>(int,int) -> <init>
    39:39:kotlin.ranges.IntRange access$getEMPTY$cp() -> access$getEMPTY$cp
    39:39:boolean contains(java.lang.Comparable) -> contains
    43:43:boolean contains(int) -> contains
    48:48:boolean equals(java.lang.Object) -> equals
    39:39:java.lang.Comparable getEndInclusive() -> getEndInclusive
    41:41:java.lang.Integer getEndInclusive() -> getEndInclusive
    39:39:java.lang.Comparable getStart() -> getStart
    40:40:java.lang.Integer getStart() -> getStart
    52:52:int hashCode() -> hashCode
    45:45:boolean isEmpty() -> isEmpty
    54:54:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> kotlin.ranges.IntRange$Companion:
    56:56:void <init>() -> <init>
    56:56:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    58:58:kotlin.ranges.IntRange getEMPTY() -> getEMPTY
kotlin.ranges.LongProgression -> kotlin.ranges.LongProgression:
    130:137:void <init>(long,long,long) -> <init>
    162:162:boolean equals(java.lang.Object) -> equals
    144:144:long getFirst() -> getFirst
    149:149:long getLast() -> getLast
    154:154:long getStep() -> getStep
    166:166:int hashCode() -> hashCode
    159:159:boolean isEmpty() -> isEmpty
    129:129:java.util.Iterator iterator() -> iterator
    156:156:kotlin.collections.LongIterator iterator() -> iterator
    168:168:java.lang.String toString() -> toString
kotlin.ranges.LongProgression$Companion -> kotlin.ranges.LongProgression$Companion:
    170:170:void <init>() -> <init>
    170:170:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    179:179:kotlin.ranges.LongProgression fromClosedRange(long,long,long) -> fromClosedRange
kotlin.ranges.LongProgressionIterator -> kotlin.ranges.LongProgressionIterator:
    62:65:void <init>(long,long,long) -> <init>
    62:62:long getStep() -> getStep
    67:67:boolean hasNext() -> hasNext
    70:76:long nextLong() -> nextLong
kotlin.ranges.LongRange -> kotlin.ranges.LongRange:
    84:84:void <clinit>() -> <clinit>
    65:65:void <init>(long,long) -> <init>
    65:65:kotlin.ranges.LongRange access$getEMPTY$cp() -> access$getEMPTY$cp
    65:65:boolean contains(java.lang.Comparable) -> contains
    69:69:boolean contains(long) -> contains
    74:74:boolean equals(java.lang.Object) -> equals
    65:65:java.lang.Comparable getEndInclusive() -> getEndInclusive
    67:67:java.lang.Long getEndInclusive() -> getEndInclusive
    65:65:java.lang.Comparable getStart() -> getStart
    66:66:java.lang.Long getStart() -> getStart
    78:78:int hashCode() -> hashCode
    71:71:boolean isEmpty() -> isEmpty
    80:80:java.lang.String toString() -> toString
kotlin.ranges.LongRange$Companion -> kotlin.ranges.LongRange$Companion:
    82:82:void <init>() -> <init>
    82:82:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    84:84:kotlin.ranges.LongRange getEMPTY() -> getEMPTY
kotlin.ranges.RangesKt__RangesJVMKt -> kotlin.ranges.RangesKt__RangesJVMKt:
    49:49:kotlin.ranges.ClosedFloatingPointRange rangeTo(float,float) -> rangeTo
kotlin.ranges.RangesKt__RangesKt -> kotlin.ranges.RangesKt__RangesKt:
    111:111:void checkStepIsPositive(boolean,java.lang.Number) -> checkStepIsPositive
    107:107:boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    87:87:kotlin.ranges.ClosedRange rangeTo(java.lang.Comparable,java.lang.Comparable) -> rangeTo
    96:96:kotlin.ranges.ClosedFloatingPointRange rangeTo(double,double) -> rangeTo
kotlin.ranges.RangesKt___RangesKt -> kotlin.ranges.RangesKt___RangesKt:
    192:192:boolean byteRangeContains(kotlin.ranges.ClosedRange,double) -> byteRangeContains
    236:236:boolean byteRangeContains(kotlin.ranges.ClosedRange,float) -> byteRangeContains
    269:269:boolean byteRangeContains(kotlin.ranges.ClosedRange,int) -> byteRangeContains
    311:311:boolean byteRangeContains(kotlin.ranges.ClosedRange,long) -> byteRangeContains
    361:361:boolean byteRangeContains(kotlin.ranges.ClosedRange,short) -> byteRangeContains
    822:822:java.lang.Comparable coerceAtLeast(java.lang.Comparable,java.lang.Comparable) -> coerceAtLeast
    899:899:java.lang.Comparable coerceAtMost(java.lang.Comparable,java.lang.Comparable) -> coerceAtMost
    977:983:java.lang.Comparable coerceIn(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> coerceIn
    996:996:byte coerceIn(byte,byte,byte) -> coerceIn
    1010:1010:short coerceIn(short,short,short) -> coerceIn
    1024:1024:int coerceIn(int,int,int) -> coerceIn
    1038:1038:long coerceIn(long,long,long) -> coerceIn
    1052:1052:float coerceIn(float,float,float) -> coerceIn
    1066:1066:double coerceIn(double,double,double) -> coerceIn
    1081:1081:java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedFloatingPointRange) -> coerceIn
    1099:1102:java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedRange) -> coerceIn
    1118:1121:int coerceIn(int,kotlin.ranges.ClosedRange) -> coerceIn
    1137:1140:long coerceIn(long,kotlin.ranges.ClosedRange) -> coerceIn
    101:101:boolean contains(kotlin.ranges.IntRange,java.lang.Integer) -> contains
    112:112:boolean contains(kotlin.ranges.LongRange,java.lang.Long) -> contains
    123:123:boolean contains(kotlin.ranges.CharRange,java.lang.Character) -> contains
    156:156:boolean doubleRangeContains(kotlin.ranges.ClosedRange,byte) -> doubleRangeContains
    253:253:boolean doubleRangeContains(kotlin.ranges.ClosedRange,float) -> doubleRangeContains
    286:286:boolean doubleRangeContains(kotlin.ranges.ClosedRange,int) -> doubleRangeContains
    328:328:boolean doubleRangeContains(kotlin.ranges.ClosedRange,long) -> doubleRangeContains
    370:370:boolean doubleRangeContains(kotlin.ranges.ClosedRange,short) -> doubleRangeContains
    389:389:kotlin.ranges.IntProgression downTo(int,byte) -> downTo
    399:399:kotlin.ranges.LongProgression downTo(long,byte) -> downTo
    409:409:kotlin.ranges.IntProgression downTo(byte,byte) -> downTo
    419:419:kotlin.ranges.IntProgression downTo(short,byte) -> downTo
    429:429:kotlin.ranges.CharProgression downTo(char,char) -> downTo
    439:439:kotlin.ranges.IntProgression downTo(int,int) -> downTo
    449:449:kotlin.ranges.LongProgression downTo(long,int) -> downTo
    459:459:kotlin.ranges.IntProgression downTo(byte,int) -> downTo
    469:469:kotlin.ranges.IntProgression downTo(short,int) -> downTo
    479:479:kotlin.ranges.LongProgression downTo(int,long) -> downTo
    489:489:kotlin.ranges.LongProgression downTo(long,long) -> downTo
    499:499:kotlin.ranges.LongProgression downTo(byte,long) -> downTo
    509:509:kotlin.ranges.LongProgression downTo(short,long) -> downTo
    519:519:kotlin.ranges.IntProgression downTo(int,short) -> downTo
    529:529:kotlin.ranges.LongProgression downTo(long,short) -> downTo
    539:539:kotlin.ranges.IntProgression downTo(byte,short) -> downTo
    549:549:kotlin.ranges.IntProgression downTo(short,short) -> downTo
    165:165:boolean floatRangeContains(kotlin.ranges.ClosedRange,byte) -> floatRangeContains
    209:209:boolean floatRangeContains(kotlin.ranges.ClosedRange,double) -> floatRangeContains
    295:295:boolean floatRangeContains(kotlin.ranges.ClosedRange,int) -> floatRangeContains
    337:337:boolean floatRangeContains(kotlin.ranges.ClosedRange,long) -> floatRangeContains
    379:379:boolean floatRangeContains(kotlin.ranges.ClosedRange,short) -> floatRangeContains
    131:131:boolean intRangeContains(kotlin.ranges.ClosedRange,byte) -> intRangeContains
    174:174:boolean intRangeContains(kotlin.ranges.ClosedRange,double) -> intRangeContains
    218:218:boolean intRangeContains(kotlin.ranges.ClosedRange,float) -> intRangeContains
    303:303:boolean intRangeContains(kotlin.ranges.ClosedRange,long) -> intRangeContains
    345:345:boolean intRangeContains(kotlin.ranges.ClosedRange,short) -> intRangeContains
    139:139:boolean longRangeContains(kotlin.ranges.ClosedRange,byte) -> longRangeContains
    183:183:boolean longRangeContains(kotlin.ranges.ClosedRange,double) -> longRangeContains
    227:227:boolean longRangeContains(kotlin.ranges.ClosedRange,float) -> longRangeContains
    261:261:boolean longRangeContains(kotlin.ranges.ClosedRange,int) -> longRangeContains
    353:353:boolean longRangeContains(kotlin.ranges.ClosedRange,short) -> longRangeContains
    26:26:int random(kotlin.ranges.IntRange) -> random
    37:37:long random(kotlin.ranges.LongRange) -> random
    48:48:char random(kotlin.ranges.CharRange) -> random
    59:61:int random(kotlin.ranges.IntRange,kotlin.random.Random) -> random
    73:75:long random(kotlin.ranges.LongRange,kotlin.random.Random) -> random
    87:89:char random(kotlin.ranges.CharRange,kotlin.random.Random) -> random
    556:556:kotlin.ranges.IntProgression reversed(kotlin.ranges.IntProgression) -> reversed
    563:563:kotlin.ranges.LongProgression reversed(kotlin.ranges.LongProgression) -> reversed
    570:570:kotlin.ranges.CharProgression reversed(kotlin.ranges.CharProgression) -> reversed
    147:147:boolean shortRangeContains(kotlin.ranges.ClosedRange,byte) -> shortRangeContains
    201:201:boolean shortRangeContains(kotlin.ranges.ClosedRange,double) -> shortRangeContains
    245:245:boolean shortRangeContains(kotlin.ranges.ClosedRange,float) -> shortRangeContains
    277:277:boolean shortRangeContains(kotlin.ranges.ClosedRange,int) -> shortRangeContains
    319:319:boolean shortRangeContains(kotlin.ranges.ClosedRange,long) -> shortRangeContains
    577:578:kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int) -> step
    585:586:kotlin.ranges.LongProgression step(kotlin.ranges.LongProgression,long) -> step
    593:594:kotlin.ranges.CharProgression step(kotlin.ranges.CharProgression,int) -> step
    598:598:java.lang.Byte toByteExactOrNull(int) -> toByteExactOrNull
    602:602:java.lang.Byte toByteExactOrNull(long) -> toByteExactOrNull
    606:606:java.lang.Byte toByteExactOrNull(short) -> toByteExactOrNull
    610:610:java.lang.Byte toByteExactOrNull(double) -> toByteExactOrNull
    614:614:java.lang.Byte toByteExactOrNull(float) -> toByteExactOrNull
    618:618:java.lang.Integer toIntExactOrNull(long) -> toIntExactOrNull
    622:622:java.lang.Integer toIntExactOrNull(double) -> toIntExactOrNull
    626:626:java.lang.Integer toIntExactOrNull(float) -> toIntExactOrNull
    630:630:java.lang.Long toLongExactOrNull(double) -> toLongExactOrNull
    634:634:java.lang.Long toLongExactOrNull(float) -> toLongExactOrNull
    638:638:java.lang.Short toShortExactOrNull(int) -> toShortExactOrNull
    642:642:java.lang.Short toShortExactOrNull(long) -> toShortExactOrNull
    646:646:java.lang.Short toShortExactOrNull(double) -> toShortExactOrNull
    650:650:java.lang.Short toShortExactOrNull(float) -> toShortExactOrNull
    659:659:kotlin.ranges.IntRange until(int,byte) -> until
    668:668:kotlin.ranges.LongRange until(long,byte) -> until
    677:677:kotlin.ranges.IntRange until(byte,byte) -> until
    686:686:kotlin.ranges.IntRange until(short,byte) -> until
    695:696:kotlin.ranges.CharRange until(char,char) -> until
    705:706:kotlin.ranges.IntRange until(int,int) -> until
    715:715:kotlin.ranges.LongRange until(long,int) -> until
    724:725:kotlin.ranges.IntRange until(byte,int) -> until
    734:735:kotlin.ranges.IntRange until(short,int) -> until
    744:745:kotlin.ranges.LongRange until(int,long) -> until
    754:755:kotlin.ranges.LongRange until(long,long) -> until
    764:765:kotlin.ranges.LongRange until(byte,long) -> until
    774:775:kotlin.ranges.LongRange until(short,long) -> until
    784:784:kotlin.ranges.IntRange until(int,short) -> until
    793:793:kotlin.ranges.LongRange until(long,short) -> until
    802:802:kotlin.ranges.IntRange until(byte,short) -> until
    811:811:kotlin.ranges.IntRange until(short,short) -> until
kotlin.ranges.UIntProgression -> kotlin.ranges.UIntProgression:
    47:47:void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    48:54:void <init>(int,int,int) -> <init>
    79:79:boolean equals(java.lang.Object) -> equals
    61:61:int getFirst() -> getFirst
    66:66:int getLast() -> getLast
    71:71:int getStep() -> getStep
    83:83:int hashCode() -> hashCode
    76:76:boolean isEmpty() -> isEmpty
    47:47:java.util.Iterator iterator() -> iterator
    73:73:kotlin.collections.UIntIterator iterator() -> iterator
    85:85:java.lang.String toString() -> toString
kotlin.ranges.UIntProgression$Companion -> kotlin.ranges.UIntProgression$Companion:
    87:87:void <init>() -> <init>
    87:87:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:kotlin.ranges.UIntProgression fromClosedRange-Nkh28Cs(int,int,int) -> fromClosedRange-Nkh28Cs
kotlin.ranges.UIntProgressionIterator -> kotlin.ranges.UIntProgressionIterator:
    107:111:void <init>(int,int,int) -> <init>
    107:107:void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    113:113:boolean hasNext() -> hasNext
    116:121:int nextUInt() -> nextUInt
kotlin.ranges.UIntRange -> kotlin.ranges.UIntRange:
    38:38:void <clinit>() -> <clinit>
    19:19:void <init>(int,int) -> <init>
    19:19:void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    19:19:kotlin.ranges.UIntRange access$getEMPTY$cp() -> access$getEMPTY$cp
    19:19:boolean contains(java.lang.Comparable) -> contains
    23:23:boolean contains-WZ4Q5Ns(int) -> contains-WZ4Q5Ns
    28:28:boolean equals(java.lang.Object) -> equals
    19:19:java.lang.Comparable getEndInclusive() -> getEndInclusive
    21:21:kotlin.UInt getEndInclusive() -> getEndInclusive
    19:19:java.lang.Comparable getStart() -> getStart
    20:20:kotlin.UInt getStart() -> getStart
    32:32:int hashCode() -> hashCode
    25:25:boolean isEmpty() -> isEmpty
    34:34:java.lang.String toString() -> toString
kotlin.ranges.UIntRange$Companion -> kotlin.ranges.UIntRange$Companion:
    36:36:void <init>() -> <init>
    36:36:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    38:38:kotlin.ranges.UIntRange getEMPTY() -> getEMPTY
kotlin.ranges.ULongProgression -> kotlin.ranges.ULongProgression:
    47:47:void <init>(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    48:54:void <init>(long,long,long) -> <init>
    79:79:boolean equals(java.lang.Object) -> equals
    61:61:long getFirst() -> getFirst
    66:66:long getLast() -> getLast
    71:71:long getStep() -> getStep
    83:83:int hashCode() -> hashCode
    76:76:boolean isEmpty() -> isEmpty
    47:47:java.util.Iterator iterator() -> iterator
    73:73:kotlin.collections.ULongIterator iterator() -> iterator
    85:85:java.lang.String toString() -> toString
kotlin.ranges.ULongProgression$Companion -> kotlin.ranges.ULongProgression$Companion:
    87:87:void <init>() -> <init>
    87:87:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:kotlin.ranges.ULongProgression fromClosedRange-7ftBX0g(long,long,long) -> fromClosedRange-7ftBX0g
kotlin.ranges.ULongProgressionIterator -> kotlin.ranges.ULongProgressionIterator:
    107:111:void <init>(long,long,long) -> <init>
    107:107:void <init>(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    113:113:boolean hasNext() -> hasNext
    116:121:long nextULong() -> nextULong
kotlin.ranges.ULongRange -> kotlin.ranges.ULongRange:
    38:38:void <clinit>() -> <clinit>
    19:19:void <init>(long,long) -> <init>
    19:19:void <init>(long,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    19:19:kotlin.ranges.ULongRange access$getEMPTY$cp() -> access$getEMPTY$cp
    19:19:boolean contains(java.lang.Comparable) -> contains
    23:23:boolean contains-VKZWuLQ(long) -> contains-VKZWuLQ
    28:28:boolean equals(java.lang.Object) -> equals
    19:19:java.lang.Comparable getEndInclusive() -> getEndInclusive
    21:21:kotlin.ULong getEndInclusive() -> getEndInclusive
    19:19:java.lang.Comparable getStart() -> getStart
    20:20:kotlin.ULong getStart() -> getStart
    32:32:int hashCode() -> hashCode
    25:25:boolean isEmpty() -> isEmpty
    34:34:java.lang.String toString() -> toString
kotlin.ranges.ULongRange$Companion -> kotlin.ranges.ULongRange$Companion:
    36:36:void <init>() -> <init>
    36:36:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    38:38:kotlin.ranges.ULongRange getEMPTY() -> getEMPTY
kotlin.ranges.URangesKt___URangesKt -> kotlin.ranges.URangesKt___URangesKt:
    333:333:short coerceAtLeast-5PvTz6A(short,short) -> coerceAtLeast-5PvTz6A
    294:294:int coerceAtLeast-J1ME1BU(int,int) -> coerceAtLeast-J1ME1BU
    320:320:byte coerceAtLeast-Kr8caGY(byte,byte) -> coerceAtLeast-Kr8caGY
    307:307:long coerceAtLeast-eb3DHEI(long,long) -> coerceAtLeast-eb3DHEI
    385:385:short coerceAtMost-5PvTz6A(short,short) -> coerceAtMost-5PvTz6A
    346:346:int coerceAtMost-J1ME1BU(int,int) -> coerceAtMost-J1ME1BU
    372:372:byte coerceAtMost-Kr8caGY(byte,byte) -> coerceAtMost-Kr8caGY
    359:359:long coerceAtMost-eb3DHEI(long,long) -> coerceAtMost-eb3DHEI
    483:486:long coerceIn-JPwROB0(long,kotlin.ranges.ClosedRange) -> coerceIn-JPwROB0
    446:446:short coerceIn-VKSA0NQ(short,short,short) -> coerceIn-VKSA0NQ
    398:398:int coerceIn-WZ9TVnA(int,int,int) -> coerceIn-WZ9TVnA
    430:430:byte coerceIn-b33U2AM(byte,byte,byte) -> coerceIn-b33U2AM
    414:414:long coerceIn-sambcqE(long,long,long) -> coerceIn-sambcqE
    462:465:int coerceIn-wuiCnnA(int,kotlin.ranges.ClosedRange) -> coerceIn-wuiCnnA
    102:102:boolean contains-68kG9v0(kotlin.ranges.UIntRange,byte) -> contains-68kG9v0
    93:93:boolean contains-GYNo2lE(kotlin.ranges.ULongRange,kotlin.ULong) -> contains-GYNo2lE
    120:120:boolean contains-Gab390E(kotlin.ranges.ULongRange,int) -> contains-Gab390E
    111:111:boolean contains-ULb-yJY(kotlin.ranges.ULongRange,byte) -> contains-ULb-yJY
    138:138:boolean contains-ZsK3CEQ(kotlin.ranges.UIntRange,short) -> contains-ZsK3CEQ
    81:81:boolean contains-biwQdVI(kotlin.ranges.UIntRange,kotlin.UInt) -> contains-biwQdVI
    129:129:boolean contains-fz5IDCE(kotlin.ranges.UIntRange,long) -> contains-fz5IDCE
    147:147:boolean contains-uhHAxoY(kotlin.ranges.ULongRange,short) -> contains-uhHAxoY
    195:195:kotlin.ranges.UIntProgression downTo-5PvTz6A(short,short) -> downTo-5PvTz6A
    171:171:kotlin.ranges.UIntProgression downTo-J1ME1BU(int,int) -> downTo-J1ME1BU
    159:159:kotlin.ranges.UIntProgression downTo-Kr8caGY(byte,byte) -> downTo-Kr8caGY
    183:183:kotlin.ranges.ULongProgression downTo-eb3DHEI(long,long) -> downTo-eb3DHEI
    27:27:int random(kotlin.ranges.UIntRange) -> random
    39:39:long random(kotlin.ranges.ULongRange) -> random
    51:53:int random(kotlin.ranges.UIntRange,kotlin.random.Random) -> random
    66:68:long random(kotlin.ranges.ULongRange,kotlin.random.Random) -> random
    204:204:kotlin.ranges.UIntProgression reversed(kotlin.ranges.UIntProgression) -> reversed
    213:213:kotlin.ranges.ULongProgression reversed(kotlin.ranges.ULongProgression) -> reversed
    222:223:kotlin.ranges.UIntProgression step(kotlin.ranges.UIntProgression,int) -> step
    232:233:kotlin.ranges.ULongProgression step(kotlin.ranges.ULongProgression,long) -> step
    280:281:kotlin.ranges.UIntRange until-5PvTz6A(short,short) -> until-5PvTz6A
    256:257:kotlin.ranges.UIntRange until-J1ME1BU(int,int) -> until-J1ME1BU
    244:245:kotlin.ranges.UIntRange until-Kr8caGY(byte,byte) -> until-Kr8caGY
    268:269:kotlin.ranges.ULongRange until-eb3DHEI(long,long) -> until-eb3DHEI
kotlin.reflect.KParameter$Kind -> kotlin.reflect.KParameter$Kind:
    53:53:void <init>(java.lang.String,int) -> <init>
kotlin.reflect.KTypeProjection -> kotlin.reflect.KTypeProjection:
    80:80:void <clinit>() -> <clinit>
    63:63:void <init>(kotlin.reflect.KVariance,kotlin.reflect.KType) -> <init>
    63:63:kotlin.reflect.KTypeProjection access$getSTAR$cp() -> access$getSTAR$cp
    71:71:kotlin.reflect.KType getType() -> getType
    67:67:kotlin.reflect.KVariance getVariance() -> getVariance
kotlin.reflect.KTypeProjection$Companion -> kotlin.reflect.KTypeProjection$Companion:
    73:73:void <init>() -> <init>
    73:73:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    95:95:kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType) -> contravariant
    102:102:kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType) -> covariant
    80:80:kotlin.reflect.KTypeProjection getSTAR() -> getSTAR
    88:88:kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType) -> invariant
kotlin.reflect.KVariance -> kotlin.reflect.KVariance:
    30:30:void <init>(java.lang.String,int) -> <init>
kotlin.reflect.KVisibility -> kotlin.reflect.KVisibility:
    30:30:void <init>(java.lang.String,int) -> <init>
kotlin.reflect.TypeOfKt -> kotlin.reflect.TypeOfKt:
    15:15:kotlin.reflect.KType typeOf() -> typeOf
kotlin.sequences.ConstrainedOnceSequence -> kotlin.sequences.ConstrainedOnceSequence:
    19:20:void <init>(kotlin.sequences.Sequence) -> <init>
    23:23:java.util.Iterator iterator() -> iterator
kotlin.sequences.DistinctIterator -> kotlin.sequences.DistinctIterator:
    519:520:void <init>(java.util.Iterator,kotlin.jvm.functions.Function1) -> <init>
    523:533:void computeNext() -> computeNext
kotlin.sequences.DistinctSequence -> kotlin.sequences.DistinctSequence:
    515:515:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    516:516:java.util.Iterator iterator() -> iterator
kotlin.sequences.DropSequence -> kotlin.sequences.DropSequence:
    431:436:void <init>(kotlin.sequences.Sequence,int) -> <init>
    431:431:int access$getCount$p(kotlin.sequences.DropSequence) -> access$getCount$p
    431:431:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropSequence) -> access$getSequence$p
    439:439:kotlin.sequences.Sequence drop(int) -> drop
    442:442:java.util.Iterator iterator() -> iterator
    440:440:kotlin.sequences.Sequence take(int) -> take
kotlin.sequences.DropSequence$iterator$1 -> kotlin.sequences.DropSequence$iterator$1:
    442:444:void <init>(kotlin.sequences.DropSequence) -> <init>
    448:450:void drop() -> drop
    443:443:java.util.Iterator getIterator() -> getIterator
    444:444:int getLeft() -> getLeft
    460:461:boolean hasNext() -> hasNext
    455:456:java.lang.Object next() -> next
    444:444:void setLeft(int) -> setLeft
kotlin.sequences.DropWhileSequence -> kotlin.sequences.DropWhileSequence:
    471:471:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    470:470:kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.DropWhileSequence) -> access$getPredicate$p
    470:470:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropWhileSequence) -> access$getSequence$p
    476:476:java.util.Iterator iterator() -> iterator
kotlin.sequences.DropWhileSequence$iterator$1 -> kotlin.sequences.DropWhileSequence$iterator$1:
    476:478:void <init>(kotlin.sequences.DropWhileSequence) -> <init>
    482:490:void drop() -> drop
    478:478:int getDropState() -> getDropState
    477:477:java.util.Iterator getIterator() -> getIterator
    479:479:java.lang.Object getNextItem() -> getNextItem
    508:510:boolean hasNext() -> hasNext
    494:504:java.lang.Object next() -> next
    478:478:void setDropState(int) -> setDropState
    479:479:void setNextItem(java.lang.Object) -> setNextItem
kotlin.sequences.EmptySequence -> kotlin.sequences.EmptySequence:
    42:42:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    42:42:kotlin.sequences.Sequence drop(int) -> drop
    44:44:kotlin.sequences.EmptySequence drop(int) -> drop
    43:43:java.util.Iterator iterator() -> iterator
    42:42:kotlin.sequences.Sequence take(int) -> take
    45:45:kotlin.sequences.EmptySequence take(int) -> take
kotlin.sequences.FilteringSequence -> kotlin.sequences.FilteringSequence:
    119:119:void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1) -> <init>
    121:121:void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    119:119:kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.FilteringSequence) -> access$getPredicate$p
    119:119:boolean access$getSendWhen$p(kotlin.sequences.FilteringSequence) -> access$getSendWhen$p
    119:119:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FilteringSequence) -> access$getSequence$p
    125:125:java.util.Iterator iterator() -> iterator
kotlin.sequences.FilteringSequence$iterator$1 -> kotlin.sequences.FilteringSequence$iterator$1:
    125:127:void <init>(kotlin.sequences.FilteringSequence) -> <init>
    131:139:void calcNext() -> calcNext
    126:126:java.util.Iterator getIterator() -> getIterator
    128:128:java.lang.Object getNextItem() -> getNextItem
    127:127:int getNextState() -> getNextState
    155:157:boolean hasNext() -> hasNext
    143:146:java.lang.Object next() -> next
    128:128:void setNextItem(java.lang.Object) -> setNextItem
    127:127:void setNextState(int) -> setNextState
kotlin.sequences.FlatteningSequence -> kotlin.sequences.FlatteningSequence:
    249:249:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    248:248:kotlin.jvm.functions.Function1 access$getIterator$p(kotlin.sequences.FlatteningSequence) -> access$getIterator$p
    248:248:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FlatteningSequence) -> access$getSequence$p
    248:248:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.FlatteningSequence) -> access$getTransformer$p
    254:254:java.util.Iterator iterator() -> iterator
kotlin.sequences.FlatteningSequence$iterator$1 -> kotlin.sequences.FlatteningSequence$iterator$1:
    254:255:void <init>(kotlin.sequences.FlatteningSequence) -> <init>
    269:279:boolean ensureItemIterator() -> ensureItemIterator
    256:256:java.util.Iterator getItemIterator() -> getItemIterator
    255:255:java.util.Iterator getIterator() -> getIterator
    265:265:boolean hasNext() -> hasNext
    259:260:java.lang.Object next() -> next
    256:256:void setItemIterator(java.util.Iterator) -> setItemIterator
kotlin.sequences.GeneratorSequence -> kotlin.sequences.GeneratorSequence:
    538:538:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
    538:538:kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence) -> access$getGetInitialValue$p
    538:538:kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence) -> access$getGetNextValue$p
    539:539:java.util.Iterator iterator() -> iterator
kotlin.sequences.GeneratorSequence$iterator$1 -> kotlin.sequences.GeneratorSequence$iterator$1:
    539:541:void <init>(kotlin.sequences.GeneratorSequence) -> <init>
    544:545:void calcNext() -> calcNext
    540:540:java.lang.Object getNextItem() -> getNextItem
    541:541:int getNextState() -> getNextState
    561:563:boolean hasNext() -> hasNext
    549:553:java.lang.Object next() -> next
    540:540:void setNextItem(java.lang.Object) -> setNextItem
    541:541:void setNextState(int) -> setNextState
kotlin.sequences.IndexingSequence -> kotlin.sequences.IndexingSequence:
    210:210:void <init>(kotlin.sequences.Sequence) -> <init>
    209:209:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.IndexingSequence) -> access$getSequence$p
    211:211:java.util.Iterator iterator() -> iterator
kotlin.sequences.IndexingSequence$iterator$1 -> kotlin.sequences.IndexingSequence$iterator$1:
    211:212:void <init>(kotlin.sequences.IndexingSequence) -> <init>
    213:213:int getIndex() -> getIndex
    212:212:java.util.Iterator getIterator() -> getIterator
    219:219:boolean hasNext() -> hasNext
    211:211:java.lang.Object next() -> next
    215:215:kotlin.collections.IndexedValue next() -> next
    213:213:void setIndex(int) -> setIndex
kotlin.sequences.MergingSequence -> kotlin.sequences.MergingSequence:
    230:230:void <init>(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> <init>
    229:229:kotlin.sequences.Sequence access$getSequence1$p(kotlin.sequences.MergingSequence) -> access$getSequence1$p
    229:229:kotlin.sequences.Sequence access$getSequence2$p(kotlin.sequences.MergingSequence) -> access$getSequence2$p
    229:229:kotlin.jvm.functions.Function2 access$getTransform$p(kotlin.sequences.MergingSequence) -> access$getTransform$p
    235:235:java.util.Iterator iterator() -> iterator
kotlin.sequences.MergingSequence$iterator$1 -> kotlin.sequences.MergingSequence$iterator$1:
    235:237:void <init>(kotlin.sequences.MergingSequence) -> <init>
    236:236:java.util.Iterator getIterator1() -> getIterator1
    237:237:java.util.Iterator getIterator2() -> getIterator2
    243:243:boolean hasNext() -> hasNext
    239:239:java.lang.Object next() -> next
kotlin.sequences.SequenceBuilderIterator -> kotlin.sequences.SequenceBuilderIterator:
    115:115:void <init>() -> <init>
    166:167:java.lang.Throwable exceptionalState() -> exceptionalState
    199:199:kotlin.coroutines.CoroutineContext getContext() -> getContext
    119:119:kotlin.coroutines.Continuation getNextStep() -> getNextStep
    123:140:boolean hasNext() -> hasNext
    145:146:java.lang.Object next() -> next
    163:163:java.lang.Object nextNotReady() -> nextNotReady
    194:195:void resumeWith(java.lang.Object) -> resumeWith
    119:119:void setNextStep(kotlin.coroutines.Continuation) -> setNextStep
    174:176:java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation) -> yield
    183:186:java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation) -> yieldAll
kotlin.sequences.SequenceScope -> kotlin.sequences.SequenceScope:
    61:61:void <init>() -> <init>
    88:89:java.lang.Object yieldAll(java.lang.Iterable,kotlin.coroutines.Continuation) -> yieldAll
    100:100:java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.Continuation) -> yieldAll
kotlin.sequences.SequencesKt__SequenceBuilderKt -> kotlin.sequences.SequencesKt__SequenceBuilderKt:
    48:48:java.util.Iterator buildIterator(kotlin.jvm.functions.Function2) -> buildIterator
    30:30:kotlin.sequences.Sequence buildSequence(kotlin.jvm.functions.Function2) -> buildSequence
    40:41:java.util.Iterator iterator(kotlin.jvm.functions.Function2) -> iterator
    25:25:kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2) -> sequence
kotlin.sequences.SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1:
    19:19:void <init>(kotlin.jvm.functions.Function2) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1:
    19:19:void <init>(kotlin.jvm.functions.Function2) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt__SequencesJVMKt -> kotlin.sequences.SequencesKt__SequencesJVMKt:
    16:16:kotlin.sequences.Sequence asSequence(java.util.Enumeration) -> asSequence
kotlin.sequences.SequencesKt__SequencesKt -> kotlin.sequences.SequencesKt__SequencesKt:
    19:19:kotlin.sequences.Sequence Sequence(kotlin.jvm.functions.Function0) -> Sequence
    28:28:kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
    579:579:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> constrainOnce
    40:40:kotlin.sequences.Sequence emptySequence() -> emptySequence
    78:78:kotlin.sequences.Sequence flatten(kotlin.sequences.Sequence) -> flatten
    89:92:kotlin.sequences.Sequence flatten$SequencesKt__SequencesKt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> flatten$SequencesKt__SequencesKt
    86:86:kotlin.sequences.Sequence flattenSequenceOfIterable(kotlin.sequences.Sequence) -> flattenSequenceOfIterable
    594:594:kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0) -> generateSequence
    613:615:kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1) -> generateSequence
    631:631:kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> generateSequence
    64:64:kotlin.sequences.Sequence ifEmpty(kotlin.sequences.Sequence,kotlin.jvm.functions.Function0) -> ifEmpty
    54:54:kotlin.sequences.Sequence orEmpty(kotlin.sequences.Sequence) -> orEmpty
    35:35:kotlin.sequences.Sequence sequenceOf(java.lang.Object[]) -> sequenceOf
    103:109:kotlin.Pair unzip(kotlin.sequences.Sequence) -> unzip
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$Sequence$1:
    19:19:void <init>(kotlin.jvm.functions.Function0) -> <init>
    20:20:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1:
    19:19:void <init>(java.util.Iterator) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt__SequencesKt$flatten$1 -> kotlin.sequences.SequencesKt__SequencesKt$flatten$1:
    78:78:java.util.Iterator invoke(kotlin.sequences.Sequence) -> invoke
kotlin.sequences.SequencesKt__SequencesKt$flatten$2 -> kotlin.sequences.SequencesKt__SequencesKt$flatten$2:
    86:86:java.util.Iterator invoke(java.lang.Iterable) -> invoke
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1:
    594:594:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2 -> kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2:
    615:615:java.lang.Object invoke() -> invoke
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1 -> kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1:
    64:71:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SequencesKt___SequencesJvmKt -> kotlin.sequences.SequencesKt___SequencesJvmKt:
    24:24:kotlin.sequences.Sequence filterIsInstance(kotlin.sequences.Sequence,java.lang.Class) -> filterIsInstance
    34:34:java.util.Collection filterIsInstanceTo(kotlin.sequences.Sequence,java.util.Collection,java.lang.Class) -> filterIsInstanceTo
    44:44:java.util.SortedSet toSortedSet(kotlin.sequences.Sequence) -> toSortedSet
    55:55:java.util.SortedSet toSortedSet(kotlin.sequences.Sequence,java.util.Comparator) -> toSortedSet
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1 -> kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1:
    24:24:boolean invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt -> kotlin.sequences.SequencesKt___SequencesKt:
    1003:1003:boolean all(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> all
    1015:1015:boolean any(kotlin.sequences.Sequence) -> any
    1026:1026:boolean any(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> any
    1750:1750:java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> asIterable
    585:1955:java.util.Map associate(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> associate
    599:1959:java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> associateBy
    612:1963:java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    625:626:java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    641:642:java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    656:657:java.util.Map associateTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    676:1967:java.util.Map associateWith(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> associateWith
    690:691:java.util.Map associateWithTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    1770:1774:double averageOfByte(kotlin.sequences.Sequence) -> averageOfByte
    1850:1854:double averageOfDouble(kotlin.sequences.Sequence) -> averageOfDouble
    1834:1838:double averageOfFloat(kotlin.sequences.Sequence) -> averageOfFloat
    1802:1806:double averageOfInt(kotlin.sequences.Sequence) -> averageOfInt
    1818:1822:double averageOfLong(kotlin.sequences.Sequence) -> averageOfLong
    1786:1790:double averageOfShort(kotlin.sequences.Sequence) -> averageOfShort
    1413:1413:kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int) -> chunked
    1434:1434:kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1) -> chunked
    24:24:boolean contains(kotlin.sequences.Sequence,java.lang.Object) -> contains
    1037:1037:int count(kotlin.sequences.Sequence) -> count
    1048:1048:int count(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> count
    967:967:kotlin.sequences.Sequence distinct(kotlin.sequences.Sequence) -> distinct
    979:979:kotlin.sequences.Sequence distinctBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> distinctBy
    358:355:kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int) -> drop
    371:371:kotlin.sequences.Sequence dropWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> dropWhile
    35:35:java.lang.Object elementAt(kotlin.sequences.Sequence,int) -> elementAt
    47:55:java.lang.Object elementAtOrElse(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    68:71:java.lang.Object elementAtOrNull(kotlin.sequences.Sequence,int) -> elementAtOrNull
    380:380:kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> filter
    392:392:kotlin.sequences.Sequence filterIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> filterIndexed
    1952:404:java.util.Collection filterIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    416:416:kotlin.sequences.Sequence filterIsInstance(kotlin.sequences.Sequence) -> filterIsInstance
    425:425:java.util.Collection filterIsInstanceTo(kotlin.sequences.Sequence,java.util.Collection) -> filterIsInstanceTo
    435:435:kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> filterNot
    445:445:kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence) -> filterNotNull
    454:454:java.util.Collection filterNotNullTo(kotlin.sequences.Sequence,java.util.Collection) -> filterNotNullTo
    464:464:java.util.Collection filterNotTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    474:474:java.util.Collection filterTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    1942:1942:java.lang.Object find(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> find
    1945:1946:java.lang.Object findLast(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> findLast
    105:107:java.lang.Object first(kotlin.sequences.Sequence) -> first
    118:119:java.lang.Object first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> first
    128:131:java.lang.Object firstOrNull(kotlin.sequences.Sequence) -> firstOrNull
    140:140:java.lang.Object firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> firstOrNull
    752:752:kotlin.sequences.Sequence flatMap(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> flatMap
    761:763:java.util.Collection flatMapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    1059:1059:java.lang.Object fold(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    1074:1074:java.lang.Object foldIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    1084:1084:void forEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> forEach
    1096:1096:void forEachIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> forEachIndexed
    779:1980:java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> groupBy
    794:1993:java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    808:811:java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    828:831:java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    846:846:kotlin.collections.Grouping groupingBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> groupingBy
    151:153:int indexOf(kotlin.sequences.Sequence,java.lang.Object) -> indexOf
    167:169:int indexOfFirst(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> indexOfFirst
    184:186:int indexOfLast(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> indexOfLast
    1719:1728:java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    1718:1718:java.lang.Appendable joinTo$default(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    1743:1743:java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    1742:1742:java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    200:202:java.lang.Object last(kotlin.sequences.Sequence) -> last
    218:224:java.lang.Object last(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> last
    237:239:int lastIndexOf(kotlin.sequences.Sequence,java.lang.Object) -> lastIndexOf
    252:257:java.lang.Object lastOrNull(kotlin.sequences.Sequence) -> lastOrNull
    268:269:java.lang.Object lastOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> lastOrNull
    861:861:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> map
    873:873:kotlin.sequences.Sequence mapIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> mapIndexed
    885:885:kotlin.sequences.Sequence mapIndexedNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> mapIndexedNotNull
    2011:897:java.util.Collection mapIndexedNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedNotNullTo
    911:912:java.util.Collection mapIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    923:923:kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> mapNotNull
    2013:933:java.util.Collection mapNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    944:945:java.util.Collection mapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    1108:1117:java.lang.Double max(kotlin.sequences.Sequence) -> max
    1129:1138:java.lang.Float max(kotlin.sequences.Sequence) -> max
    1147:1152:java.lang.Comparable max(kotlin.sequences.Sequence) -> max
    1165:1177:java.lang.Object maxBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxBy
    1187:1192:java.lang.Object maxWith(kotlin.sequences.Sequence,java.util.Comparator) -> maxWith
    1206:1215:java.lang.Double min(kotlin.sequences.Sequence) -> min
    1227:1236:java.lang.Float min(kotlin.sequences.Sequence) -> min
    1245:1250:java.lang.Comparable min(kotlin.sequences.Sequence) -> min
    1263:1275:java.lang.Object minBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minBy
    1285:1290:java.lang.Object minWith(kotlin.sequences.Sequence,java.util.Comparator) -> minWith
    1443:1443:kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object) -> minus
    1463:1464:kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object[]) -> minus
    1484:1484:kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Iterable) -> minus
    1507:1507:kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,kotlin.sequences.Sequence) -> minus
    1525:1525:kotlin.sequences.Sequence minusElement(kotlin.sequences.Sequence,java.lang.Object) -> minusElement
    1303:1303:boolean none(kotlin.sequences.Sequence) -> none
    1314:1314:boolean none(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> none
    1325:1325:kotlin.sequences.Sequence onEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> onEach
    1536:1545:kotlin.Pair partition(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> partition
    1554:1554:kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object) -> plus
    1566:1566:kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object[]) -> plus
    1578:1578:kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Iterable) -> plus
    1590:1590:kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,kotlin.sequences.Sequence) -> plus
    1600:1600:kotlin.sequences.Sequence plusElement(kotlin.sequences.Sequence,java.lang.Object) -> plusElement
    1337:1338:java.lang.Object reduce(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> reduce
    1355:1356:java.lang.Object reduceIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3) -> reduceIndexed
    1397:1397:kotlin.sequences.Sequence requireNoNulls(kotlin.sequences.Sequence) -> requireNoNulls
    282:284:java.lang.Object single(kotlin.sequences.Sequence) -> single
    299:306:java.lang.Object single(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> single
    317:321:java.lang.Object singleOrNull(kotlin.sequences.Sequence) -> singleOrNull
    334:335:java.lang.Object singleOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> singleOrNull
    515:515:kotlin.sequences.Sequence sorted(kotlin.sequences.Sequence) -> sorted
    532:532:kotlin.sequences.Sequence sortedBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sortedBy
    543:543:kotlin.sequences.Sequence sortedByDescending(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sortedByDescending
    554:554:kotlin.sequences.Sequence sortedDescending(kotlin.sequences.Sequence) -> sortedDescending
    565:565:kotlin.sequences.Sequence sortedWith(kotlin.sequences.Sequence,java.util.Comparator) -> sortedWith
    1372:1373:int sumBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumBy
    1385:1386:double sumByDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumByDouble
    1865:1865:int sumOfByte(kotlin.sequences.Sequence) -> sumOfByte
    1935:1935:double sumOfDouble(kotlin.sequences.Sequence) -> sumOfDouble
    1921:1921:float sumOfFloat(kotlin.sequences.Sequence) -> sumOfFloat
    1893:1893:int sumOfInt(kotlin.sequences.Sequence) -> sumOfInt
    1907:1907:long sumOfLong(kotlin.sequences.Sequence) -> sumOfLong
    1879:1879:int sumOfShort(kotlin.sequences.Sequence) -> sumOfShort
    490:488:kotlin.sequences.Sequence take(kotlin.sequences.Sequence,int) -> take
    504:504:kotlin.sequences.Sequence takeWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> takeWhile
    702:703:java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection) -> toCollection
    714:714:java.util.HashSet toHashSet(kotlin.sequences.Sequence) -> toHashSet
    723:723:java.util.List toList(kotlin.sequences.Sequence) -> toList
    732:732:java.util.List toMutableList(kotlin.sequences.Sequence) -> toMutableList
    990:991:java.util.Set toMutableSet(kotlin.sequences.Sequence) -> toMutableSet
    743:743:java.util.Set toSet(kotlin.sequences.Sequence) -> toSet
    1620:1620:kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean) -> windowed
    1642:1642:kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1) -> windowed
    1619:1619:kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,int,java.lang.Object) -> windowed$default
    1641:1641:kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> windowed$default
    956:956:kotlin.sequences.Sequence withIndex(kotlin.sequences.Sequence) -> withIndex
    1654:1654:kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence) -> zip
    1667:1667:kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> zip
    1681:1681:kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence) -> zipWithNext
    1696:1696:kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> zipWithNext
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1 -> kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1:
    16:16:void <init>(kotlin.sequences.Sequence) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1 -> kotlin.sequences.SequencesKt___SequencesKt$elementAt$1:
    35:35:java.lang.Void invoke(int) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1 -> kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1:
    392:392:boolean invoke(kotlin.collections.IndexedValue) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2 -> kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2:
    392:392:java.lang.Object invoke(kotlin.collections.IndexedValue) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1 -> kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1:
    416:416:boolean invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1 -> kotlin.sequences.SequencesKt___SequencesKt$flatMap$1:
    752:752:java.util.Iterator invoke(kotlin.sequences.Sequence) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1 -> kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1:
    846:846:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    848:848:java.lang.Object keyOf(java.lang.Object) -> keyOf
    847:847:java.util.Iterator sourceIterator() -> sourceIterator
kotlin.sequences.SequencesKt___SequencesKt$minus$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$1:
    1443:1443:void <init>(kotlin.sequences.Sequence,java.lang.Object) -> <init>
    1445:1446:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1:
    1443:1443:java.lang.Object invoke(java.lang.Object) -> invoke
    1446:1446:boolean invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$minus$2 -> kotlin.sequences.SequencesKt___SequencesKt$minus$2:
    1464:1464:void <init>(kotlin.sequences.Sequence,java.lang.Object[]) -> <init>
    1466:1467:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1:
    1464:1464:java.lang.Object invoke(java.lang.Object) -> invoke
    1467:1467:boolean invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$minus$3 -> kotlin.sequences.SequencesKt___SequencesKt$minus$3:
    1484:1484:void <init>(kotlin.sequences.Sequence,java.lang.Iterable) -> <init>
    1486:1490:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1:
    1484:1484:java.lang.Object invoke(java.lang.Object) -> invoke
    1490:1490:boolean invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$minus$4 -> kotlin.sequences.SequencesKt___SequencesKt$minus$4:
    1507:1507:void <init>(kotlin.sequences.Sequence,kotlin.sequences.Sequence) -> <init>
    1509:1513:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1:
    1507:1507:java.lang.Object invoke(java.lang.Object) -> invoke
    1513:1513:boolean invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$onEach$1 -> kotlin.sequences.SequencesKt___SequencesKt$onEach$1:
    1326:1326:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1 -> kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1:
    1397:1397:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$sorted$1 -> kotlin.sequences.SequencesKt___SequencesKt$sorted$1:
    515:515:void <init>(kotlin.sequences.Sequence) -> <init>
    517:519:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1 -> kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1:
    565:565:void <init>(kotlin.sequences.Sequence,java.util.Comparator) -> <init>
    567:569:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$zip$1 -> kotlin.sequences.SequencesKt___SequencesKt$zip$1:
    1654:1654:kotlin.Pair invoke(java.lang.Object,java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1 -> kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1:
    1681:1681:kotlin.Pair invoke(java.lang.Object,java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2 -> kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2:
    1696:1705:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SubSequence -> kotlin.sequences.SubSequence:
    301:308:void <init>(kotlin.sequences.Sequence,int,int) -> <init>
    301:301:int access$getEndIndex$p(kotlin.sequences.SubSequence) -> access$getEndIndex$p
    301:301:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.SubSequence) -> access$getSequence$p
    301:301:int access$getStartIndex$p(kotlin.sequences.SubSequence) -> access$getStartIndex$p
    315:315:kotlin.sequences.Sequence drop(int) -> drop
    313:313:int getCount() -> getCount
    318:318:java.util.Iterator iterator() -> iterator
    316:316:kotlin.sequences.Sequence take(int) -> take
kotlin.sequences.SubSequence$iterator$1 -> kotlin.sequences.SubSequence$iterator$1:
    318:320:void <init>(kotlin.sequences.SubSequence) -> <init>
    325:327:void drop() -> drop
    320:320:java.util.Iterator getIterator() -> getIterator
    321:321:int getPosition() -> getPosition
    332:333:boolean hasNext() -> hasNext
    337:339:java.lang.Object next() -> next
    321:321:void setPosition(int) -> setPosition
kotlin.sequences.TakeSequence -> kotlin.sequences.TakeSequence:
    350:356:void <init>(kotlin.sequences.Sequence,int) -> <init>
    350:350:int access$getCount$p(kotlin.sequences.TakeSequence) -> access$getCount$p
    350:350:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeSequence) -> access$getSequence$p
    359:359:kotlin.sequences.Sequence drop(int) -> drop
    362:362:java.util.Iterator iterator() -> iterator
    360:360:kotlin.sequences.Sequence take(int) -> take
kotlin.sequences.TakeSequence$iterator$1 -> kotlin.sequences.TakeSequence$iterator$1:
    362:364:void <init>(kotlin.sequences.TakeSequence) -> <init>
    364:364:java.util.Iterator getIterator() -> getIterator
    363:363:int getLeft() -> getLeft
    374:374:boolean hasNext() -> hasNext
    367:368:java.lang.Object next() -> next
    363:363:void setLeft(int) -> setLeft
kotlin.sequences.TakeWhileSequence -> kotlin.sequences.TakeWhileSequence:
    384:384:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    383:383:kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.TakeWhileSequence) -> access$getPredicate$p
    383:383:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeWhileSequence) -> access$getSequence$p
    388:388:java.util.Iterator iterator() -> iterator
kotlin.sequences.TakeWhileSequence$iterator$1 -> kotlin.sequences.TakeWhileSequence$iterator$1:
    388:390:void <init>(kotlin.sequences.TakeWhileSequence) -> <init>
    394:402:void calcNext() -> calcNext
    389:389:java.util.Iterator getIterator() -> getIterator
    391:391:java.lang.Object getNextItem() -> getNextItem
    390:390:int getNextState() -> getNextState
    420:422:boolean hasNext() -> hasNext
    406:409:java.lang.Object next() -> next
    391:391:void setNextItem(java.lang.Object) -> setNextItem
    390:390:void setNextState(int) -> setNextState
kotlin.sequences.TransformingIndexedSequence -> kotlin.sequences.TransformingIndexedSequence:
    191:191:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> <init>
    190:190:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingIndexedSequence) -> access$getSequence$p
    190:190:kotlin.jvm.functions.Function2 access$getTransformer$p(kotlin.sequences.TransformingIndexedSequence) -> access$getTransformer$p
    192:192:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingIndexedSequence$iterator$1 -> kotlin.sequences.TransformingIndexedSequence$iterator$1:
    192:193:void <init>(kotlin.sequences.TransformingIndexedSequence) -> <init>
    194:194:int getIndex() -> getIndex
    193:193:java.util.Iterator getIterator() -> getIterator
    200:200:boolean hasNext() -> hasNext
    196:196:java.lang.Object next() -> next
    194:194:void setIndex(int) -> setIndex
kotlin.sequences.TransformingSequence -> kotlin.sequences.TransformingSequence:
    168:168:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    167:167:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence) -> access$getSequence$p
    167:167:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence) -> access$getTransformer$p
    181:181:kotlin.sequences.Sequence flatten$kotlin_stdlib(kotlin.jvm.functions.Function1) -> flatten$kotlin_stdlib
    169:169:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingSequence$iterator$1 -> kotlin.sequences.TransformingSequence$iterator$1:
    169:170:void <init>(kotlin.sequences.TransformingSequence) -> <init>
    170:170:java.util.Iterator getIterator() -> getIterator
    176:176:boolean hasNext() -> hasNext
    172:172:java.lang.Object next() -> next
kotlin.sequences.USequencesKt___USequencesKt -> kotlin.sequences.USequencesKt___USequencesKt:
    60:61:int sumOfUByte(kotlin.sequences.Sequence) -> sumOfUByte
    28:29:int sumOfUInt(kotlin.sequences.Sequence) -> sumOfUInt
    44:45:long sumOfULong(kotlin.sequences.Sequence) -> sumOfULong
    76:77:int sumOfUShort(kotlin.sequences.Sequence) -> sumOfUShort
kotlin.streams.jdk8.StreamsKt -> kotlin.streams.jdk8.StreamsKt:
    29:29:kotlin.sequences.Sequence asSequence(java.util.stream.Stream) -> asSequence
    35:35:kotlin.sequences.Sequence asSequence(java.util.stream.IntStream) -> asSequence
    41:41:kotlin.sequences.Sequence asSequence(java.util.stream.LongStream) -> asSequence
    47:47:kotlin.sequences.Sequence asSequence(java.util.stream.DoubleStream) -> asSequence
    54:54:java.util.stream.Stream asStream(kotlin.sequences.Sequence) -> asStream
    60:60:java.util.List toList(java.util.stream.Stream) -> toList
    66:66:java.util.List toList(java.util.stream.IntStream) -> toList
    72:72:java.util.List toList(java.util.stream.LongStream) -> toList
    78:78:java.util.List toList(java.util.stream.DoubleStream) -> toList
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1:
    19:19:void <init>(java.util.stream.Stream) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2:
    19:19:void <init>(java.util.stream.IntStream) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3:
    19:19:void <init>(java.util.stream.LongStream) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4:
    19:19:void <init>(java.util.stream.DoubleStream) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.streams.jdk8.StreamsKt$asStream$1 -> kotlin.streams.jdk8.StreamsKt$asStream$1:
    54:54:java.util.Spliterator get() -> get
kotlin.system.ProcessKt -> kotlin.system.ProcessKt:
    19:20:java.lang.Void exitProcess(int) -> exitProcess
kotlin.system.TimingKt -> kotlin.system.TimingKt:
    22:24:long measureNanoTime(kotlin.jvm.functions.Function0) -> measureNanoTime
    13:15:long measureTimeMillis(kotlin.jvm.functions.Function0) -> measureTimeMillis
kotlin.text.CharCategory -> kotlin.text.CharCategory:
    15:169:void <clinit>() -> <clinit>
    11:11:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    11:11:kotlin.Lazy access$getCategoryMap$cp() -> access$getCategoryMap$cp
    165:165:boolean contains(char) -> contains
    11:11:java.lang.String getCode() -> getCode
    11:11:int getValue() -> getValue
kotlin.text.CharCategory$Companion -> kotlin.text.CharCategory$Companion:
    168:168:void <init>() -> <init>
    168:168:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    171:171:kotlin.text.CharCategory valueOf(int) -> valueOf
kotlin.text.CharCategory$Companion$categoryMap$2 -> kotlin.text.CharCategory$Companion$categoryMap$2:
    168:168:java.lang.Object invoke() -> invoke
    169:169:java.util.Map invoke() -> invoke
kotlin.text.CharDirectionality -> kotlin.text.CharDirectionality:
    19:118:void <clinit>() -> <clinit>
    13:13:void <init>(java.lang.String,int,int) -> <init>
    13:13:kotlin.Lazy access$getDirectionalityMap$cp() -> access$getDirectionalityMap$cp
    13:13:int getValue() -> getValue
kotlin.text.CharDirectionality$Companion -> kotlin.text.CharDirectionality$Companion:
    117:117:void <init>() -> <init>
    117:117:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    120:120:kotlin.text.CharDirectionality valueOf(int) -> valueOf
kotlin.text.CharDirectionality$Companion$directionalityMap$2 -> kotlin.text.CharDirectionality$Companion$directionalityMap$2:
    117:117:java.lang.Object invoke() -> invoke
    118:118:java.util.Map invoke() -> invoke
kotlin.text.CharsKt__CharJVMKt -> kotlin.text.CharsKt__CharJVMKt:
    156:156:int checkRadix(int) -> checkRadix
    148:148:int digitOf(char,int) -> digitOf
    121:121:kotlin.text.CharCategory getCategory(char) -> getCategory
    126:126:kotlin.text.CharDirectionality getDirectionality(char) -> getDirectionality
    15:15:boolean isDefined(char) -> isDefined
    36:36:boolean isDigit(char) -> isDigit
    132:132:boolean isHighSurrogate(char) -> isHighSurrogate
    51:51:boolean isISOControl(char) -> isISOControl
    44:44:boolean isIdentifierIgnorable(char) -> isIdentifierIgnorable
    58:58:boolean isJavaIdentifierPart(char) -> isJavaIdentifierPart
    65:65:boolean isJavaIdentifierStart(char) -> isJavaIdentifierStart
    22:22:boolean isLetter(char) -> isLetter
    29:29:boolean isLetterOrDigit(char) -> isLetterOrDigit
    138:138:boolean isLowSurrogate(char) -> isLowSurrogate
    86:86:boolean isLowerCase(char) -> isLowerCase
    107:107:boolean isTitleCase(char) -> isTitleCase
    79:79:boolean isUpperCase(char) -> isUpperCase
    72:72:boolean isWhitespace(char) -> isWhitespace
    100:100:char toLowerCase(char) -> toLowerCase
    116:116:char toTitleCase(char) -> toTitleCase
    93:93:char toUpperCase(char) -> toUpperCase
kotlin.text.CharsKt__CharKt -> kotlin.text.CharsKt__CharKt:
    35:36:boolean equals(char,char,boolean) -> equals
    31:31:boolean equals$default(char,char,boolean,int,java.lang.Object) -> equals$default
    17:17:java.lang.String plus(char,java.lang.String) -> plus
kotlin.text.Charsets -> kotlin.text.Charsets:
    24:61:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    68:70:java.nio.charset.Charset UTF32() -> UTF32
    92:94:java.nio.charset.Charset UTF32_BE() -> UTF32_BE
    80:82:java.nio.charset.Charset UTF32_LE() -> UTF32_LE
kotlin.text.CharsetsKt -> kotlin.text.CharsetsKt:
    17:17:java.nio.charset.Charset charset(java.lang.String) -> charset
kotlin.text.DelimitedRangesSequence -> kotlin.text.DelimitedRangesSequence:
    1072:1072:void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2) -> <init>
    1072:1072:kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence) -> access$getGetNextMatch$p
    1072:1072:java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence) -> access$getInput$p
    1072:1072:int access$getLimit$p(kotlin.text.DelimitedRangesSequence) -> access$getLimit$p
    1072:1072:int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence) -> access$getStartIndex$p
    1079:1079:java.util.Iterator iterator() -> iterator
kotlin.text.DelimitedRangesSequence$iterator$1 -> kotlin.text.DelimitedRangesSequence$iterator$1:
    1079:1082:void <init>(kotlin.text.DelimitedRangesSequence) -> <init>
    1087:1106:void calcNext() -> calcNext
    1084:1084:int getCounter() -> getCounter
    1081:1081:int getCurrentStartIndex() -> getCurrentStartIndex
    1083:1083:kotlin.ranges.IntRange getNextItem() -> getNextItem
    1082:1082:int getNextSearchIndex() -> getNextSearchIndex
    1080:1080:int getNextState() -> getNextState
    1123:1125:boolean hasNext() -> hasNext
    1079:1079:java.lang.Object next() -> next
    1111:1114:kotlin.ranges.IntRange next() -> next
    1084:1084:void setCounter(int) -> setCounter
    1081:1081:void setCurrentStartIndex(int) -> setCurrentStartIndex
    1083:1083:void setNextItem(kotlin.ranges.IntRange) -> setNextItem
    1082:1082:void setNextSearchIndex(int) -> setNextSearchIndex
    1080:1080:void setNextState(int) -> setNextState
kotlin.text.MatchGroup -> kotlin.text.MatchGroup:
    75:75:void <init>(java.lang.String,kotlin.ranges.IntRange) -> <init>
    75:75:kotlin.ranges.IntRange getRange() -> getRange
    75:75:java.lang.String getValue() -> getValue
kotlin.text.MatchResult$DefaultImpls -> kotlin.text.MatchResult$DefaultImpls:
    79:79:kotlin.text.MatchResult$Destructured getDestructured(kotlin.text.MatchResult) -> getDestructured
kotlin.text.MatchResult$Destructured -> kotlin.text.MatchResult$Destructured:
    96:96:void <init>(kotlin.text.MatchResult) -> <init>
    98:98:java.lang.String component1() -> component1
    116:116:java.lang.String component10() -> component10
    100:100:java.lang.String component2() -> component2
    102:102:java.lang.String component3() -> component3
    104:104:java.lang.String component4() -> component4
    106:106:java.lang.String component5() -> component5
    108:108:java.lang.String component6() -> component6
    110:110:java.lang.String component7() -> component7
    112:112:java.lang.String component8() -> component8
    114:114:java.lang.String component9() -> component9
    96:96:kotlin.text.MatchResult getMatch() -> getMatch
    124:124:java.util.List toList() -> toList
kotlin.text.MatcherMatchResult -> kotlin.text.MatcherMatchResult:
    267:274:void <init>(java.util.regex.Matcher,java.lang.CharSequence) -> <init>
    267:267:java.util.regex.MatchResult access$getMatchResult$p(kotlin.text.MatcherMatchResult) -> access$getMatchResult$p
    267:267:kotlin.text.MatchResult$Destructured getDestructured() -> getDestructured
    296:302:java.util.List getGroupValues() -> getGroupValues
    274:274:kotlin.text.MatchGroupCollection getGroups() -> getGroups
    268:268:java.util.regex.MatchResult getMatchResult() -> getMatchResult
    270:270:kotlin.ranges.IntRange getRange() -> getRange
    272:272:java.lang.String getValue() -> getValue
    306:307:kotlin.text.MatchResult next() -> next
kotlin.text.MatcherMatchResult$groupValues$1 -> kotlin.text.MatcherMatchResult$groupValues$1:
    297:297:void <init>(kotlin.text.MatcherMatchResult) -> <init>
    297:297:boolean contains(java.lang.Object) -> contains
    297:297:boolean contains(java.lang.String) -> contains
    297:297:java.lang.Object get(int) -> get
    299:299:java.lang.String get(int) -> get
    298:298:int getSize() -> getSize
    297:297:int indexOf(java.lang.Object) -> indexOf
    297:297:int indexOf(java.lang.String) -> indexOf
    297:297:int lastIndexOf(java.lang.Object) -> lastIndexOf
    297:297:int lastIndexOf(java.lang.String) -> lastIndexOf
kotlin.text.MatcherMatchResult$groups$1 -> kotlin.text.MatcherMatchResult$groups$1:
    274:274:void <init>(kotlin.text.MatcherMatchResult) -> <init>
    274:274:boolean contains(java.lang.Object) -> contains
    274:274:boolean contains(kotlin.text.MatchGroup) -> contains
    280:282:kotlin.text.MatchGroup get(int) -> get
    288:288:kotlin.text.MatchGroup get(java.lang.String) -> get
    275:275:int getSize() -> getSize
    278:278:java.util.Iterator iterator() -> iterator
kotlin.text.MatcherMatchResult$groups$1$iterator$1 -> kotlin.text.MatcherMatchResult$groups$1$iterator$1:
    274:274:java.lang.Object invoke(java.lang.Object) -> invoke
    278:278:kotlin.text.MatchGroup invoke(int) -> invoke
kotlin.text.Regex -> kotlin.text.Regex:
    85:85:void <init>(java.util.regex.Pattern) -> <init>
    89:89:void <init>(java.lang.String) -> <init>
    92:92:void <init>(java.lang.String,kotlin.text.RegexOption) -> <init>
    95:95:void <init>(java.lang.String,java.util.Set) -> <init>
    110:110:boolean containsMatchIn(java.lang.CharSequence) -> containsMatchIn
    120:120:kotlin.text.MatchResult find(java.lang.CharSequence,int) -> find
    119:119:kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> find$default
    129:129:kotlin.sequences.Sequence findAll(java.lang.CharSequence,int) -> findAll
    128:128:kotlin.sequences.Sequence findAll$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> findAll$default
    104:104:java.util.Set getOptions() -> getOptions
    100:100:java.lang.String getPattern() -> getPattern
    136:136:kotlin.text.MatchResult matchEntire(java.lang.CharSequence) -> matchEntire
    107:107:boolean matches(java.lang.CharSequence) -> matches
    143:143:java.lang.String replace(java.lang.CharSequence,java.lang.String) -> replace
    151:151:java.lang.String replace(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> replace
    177:177:java.lang.String replaceFirst(java.lang.CharSequence,java.lang.String) -> replaceFirst
    190:188:java.util.List split(java.lang.CharSequence,int) -> split
    187:187:java.util.List split$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> split$default
    221:221:java.util.regex.Pattern toPattern() -> toPattern
    214:214:java.lang.String toString() -> toString
    223:223:java.lang.Object writeReplace() -> writeReplace
kotlin.text.Regex$Companion -> kotlin.text.Regex$Companion:
    233:233:void <init>() -> <init>
    233:233:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    233:233:int access$ensureUnicodeCase(kotlin.text.Regex$Companion,int) -> access$ensureUnicodeCase
    244:244:java.lang.String escape(java.lang.String) -> escape
    250:250:java.lang.String escapeReplacement(java.lang.String) -> escapeReplacement
    238:238:kotlin.text.Regex fromLiteral(java.lang.String) -> fromLiteral
kotlin.text.Regex$Serialized -> kotlin.text.Regex$Serialized:
    225:225:void <init>(java.lang.String,int) -> <init>
    225:225:int getFlags() -> getFlags
    225:225:java.lang.String getPattern() -> getPattern
    230:230:java.lang.Object readResolve() -> readResolve
kotlin.text.Regex$Serialized$Companion -> kotlin.text.Regex$Serialized$Companion:
    226:226:void <init>() -> <init>
    226:226:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.text.Regex$findAll$1 -> kotlin.text.Regex$findAll$1:
    83:83:java.lang.Object invoke() -> invoke
    129:129:kotlin.text.MatchResult invoke() -> invoke
kotlin.text.Regex$findAll$2 -> kotlin.text.Regex$findAll$2:
    83:83:java.lang.Object invoke(java.lang.Object) -> invoke
    129:129:kotlin.text.MatchResult invoke(kotlin.text.MatchResult) -> invoke
kotlin.text.Regex$fromInt$$inlined$apply$lambda$1 -> kotlin.text.Regex$fromInt$$inlined$apply$lambda$1:
    23:23:boolean invoke(java.lang.Enum) -> invoke
kotlin.text.RegexKt -> kotlin.text.RegexKt:
    1:1:kotlin.text.MatchResult access$findNext(java.util.regex.Matcher,int,java.lang.CharSequence) -> access$findNext
    1:1:java.util.Set access$fromInt(int) -> access$fromInt
    1:1:kotlin.text.MatchResult access$matchEntire(java.util.regex.Matcher,java.lang.CharSequence) -> access$matchEntire
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult) -> access$range
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int) -> access$range
    1:1:int access$toInt(java.lang.Iterable) -> access$toInt
    260:260:kotlin.text.MatchResult findNext(java.util.regex.Matcher,int,java.lang.CharSequence) -> findNext
    22:22:java.util.Set fromInt(int) -> fromInt
    264:264:kotlin.text.MatchResult matchEntire(java.util.regex.Matcher,java.lang.CharSequence) -> matchEntire
    312:312:kotlin.ranges.IntRange range(java.util.regex.MatchResult) -> range
    313:313:kotlin.ranges.IntRange range(java.util.regex.MatchResult,int) -> range
    316:19:int toInt(java.lang.Iterable) -> toInt
kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1 -> kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1:
    23:23:boolean invoke(java.lang.Enum) -> invoke
kotlin.text.RegexOption -> kotlin.text.RegexOption:
    33:63:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int,int,int) -> <init>
    29:29:void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    29:29:int getMask() -> getMask
    29:29:int getValue() -> getValue
kotlin.text.ScreenFloatValueRegEx -> kotlin.text.ScreenFloatValueRegEx:
    242:243:void <clinit>() -> <clinit>
    242:242:void <init>() -> <init>
kotlin.text.StringsKt__IndentKt -> kotlin.text.StringsKt__IndentKt:
    102:103:kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String) -> getIndentFunction$StringsKt__IndentKt
    193:99:int indentWidth$StringsKt__IndentKt(java.lang.String) -> indentWidth$StringsKt__IndentKt
    85:97:java.lang.String prependIndent(java.lang.String,java.lang.String) -> prependIndent
    84:84:java.lang.String prependIndent$default(java.lang.String,java.lang.String,int,java.lang.Object) -> prependIndent$default
    111:119:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> reindent$StringsKt__IndentKt
    69:172:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    68:68:java.lang.String replaceIndent$default(java.lang.String,java.lang.String,int,java.lang.Object) -> replaceIndent$default
    34:34:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> replaceIndentByMargin
    33:33:java.lang.String replaceIndentByMargin$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceIndentByMargin$default
    63:63:java.lang.String trimIndent(java.lang.String) -> trimIndent
    26:26:java.lang.String trimMargin(java.lang.String,java.lang.String) -> trimMargin
    25:25:java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object) -> trimMargin$default
kotlin.text.StringsKt__IndentKt$getIndentFunction$2 -> kotlin.text.StringsKt__IndentKt$getIndentFunction$2:
    103:103:java.lang.String invoke(java.lang.String) -> invoke
kotlin.text.StringsKt__IndentKt$prependIndent$1 -> kotlin.text.StringsKt__IndentKt$prependIndent$1:
    88:94:java.lang.String invoke(java.lang.String) -> invoke
kotlin.text.StringsKt__RegexExtensionsJVMKt -> kotlin.text.StringsKt__RegexExtensionsJVMKt:
    18:18:kotlin.text.Regex toRegex(java.util.regex.Pattern) -> toRegex
kotlin.text.StringsKt__RegexExtensionsKt -> kotlin.text.StringsKt__RegexExtensionsKt:
    15:15:kotlin.text.Regex toRegex(java.lang.String) -> toRegex
    21:21:kotlin.text.Regex toRegex(java.lang.String,kotlin.text.RegexOption) -> toRegex
    27:27:kotlin.text.Regex toRegex(java.lang.String,java.util.Set) -> toRegex
kotlin.text.StringsKt__StringBuilderJVMKt -> kotlin.text.StringsKt__StringBuilderJVMKt:
    32:32:java.lang.Appendable appendln(java.lang.Appendable) -> appendln
    36:36:java.lang.Appendable appendln(java.lang.Appendable,java.lang.CharSequence) -> appendln
    40:40:java.lang.Appendable appendln(java.lang.Appendable,char) -> appendln
    43:43:java.lang.StringBuilder appendln(java.lang.StringBuilder) -> appendln
    47:47:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuffer) -> appendln
    51:51:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.CharSequence) -> appendln
    55:55:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.String) -> appendln
    59:59:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.Object) -> appendln
    63:63:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuilder) -> appendln
    67:67:java.lang.StringBuilder appendln(java.lang.StringBuilder,char[]) -> appendln
    71:71:java.lang.StringBuilder appendln(java.lang.StringBuilder,char) -> appendln
    75:75:java.lang.StringBuilder appendln(java.lang.StringBuilder,boolean) -> appendln
    79:79:java.lang.StringBuilder appendln(java.lang.StringBuilder,int) -> appendln
    83:83:java.lang.StringBuilder appendln(java.lang.StringBuilder,short) -> appendln
    87:87:java.lang.StringBuilder appendln(java.lang.StringBuilder,byte) -> appendln
    91:91:java.lang.StringBuilder appendln(java.lang.StringBuilder,long) -> appendln
    95:95:java.lang.StringBuilder appendln(java.lang.StringBuilder,float) -> appendln
    99:99:java.lang.StringBuilder appendln(java.lang.StringBuilder,double) -> appendln
    23:23:java.lang.StringBuilder clear(java.lang.StringBuilder) -> clear
    15:15:void set(java.lang.StringBuilder,int,char) -> set
kotlin.text.StringsKt__StringBuilderKt -> kotlin.text.StringsKt__StringBuilderKt:
    32:33:java.lang.Appendable append(java.lang.Appendable,java.lang.CharSequence[]) -> append
    41:42:java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.String[]) -> append
    50:51:java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object[]) -> append
    58:61:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> appendElement
    17:17:java.lang.String buildString(kotlin.jvm.functions.Function1) -> buildString
    26:26:java.lang.String buildString(int,kotlin.jvm.functions.Function1) -> buildString
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> kotlin.text.StringsKt__StringNumberConversionsJVMKt:
    263:264:java.lang.Object screenFloatValue$StringsKt__StringNumberConversionsJVMKt(java.lang.String,kotlin.jvm.functions.Function1) -> screenFloatValue$StringsKt__StringNumberConversionsJVMKt
    206:206:java.math.BigDecimal toBigDecimal(java.lang.String) -> toBigDecimal
    218:218:java.math.BigDecimal toBigDecimal(java.lang.String,java.math.MathContext) -> toBigDecimal
    287:226:java.math.BigDecimal toBigDecimalOrNull(java.lang.String) -> toBigDecimalOrNull
    294:237:java.math.BigDecimal toBigDecimalOrNull(java.lang.String,java.math.MathContext) -> toBigDecimalOrNull
    155:155:java.math.BigInteger toBigInteger(java.lang.String) -> toBigInteger
    165:165:java.math.BigInteger toBigInteger(java.lang.String,int) -> toBigInteger
    172:172:java.math.BigInteger toBigIntegerOrNull(java.lang.String) -> toBigIntegerOrNull
    182:195:java.math.BigInteger toBigIntegerOrNull(java.lang.String,int) -> toBigIntegerOrNull
    52:52:boolean toBoolean(java.lang.String) -> toBoolean
    59:59:byte toByte(java.lang.String) -> toByte
    68:68:byte toByte(java.lang.String,int) -> toByte
    131:131:double toDouble(java.lang.String) -> toDouble
    280:146:java.lang.Double toDoubleOrNull(java.lang.String) -> toDoubleOrNull
    124:124:float toFloat(java.lang.String) -> toFloat
    273:139:java.lang.Float toFloatOrNull(java.lang.String) -> toFloatOrNull
    92:92:int toInt(java.lang.String) -> toInt
    101:101:int toInt(java.lang.String,int) -> toInt
    108:108:long toLong(java.lang.String) -> toLong
    117:117:long toLong(java.lang.String,int) -> toLong
    76:76:short toShort(java.lang.String) -> toShort
    85:85:short toShort(java.lang.String,int) -> toShort
    19:19:java.lang.String toString(byte,int) -> toString
    28:28:java.lang.String toString(short,int) -> toString
    37:37:java.lang.String toString(int,int) -> toString
    46:46:java.lang.String toString(long,int) -> toString
kotlin.text.StringsKt__StringNumberConversionsKt -> kotlin.text.StringsKt__StringNumberConversionsKt:
    203:203:java.lang.Void numberFormatError(java.lang.String) -> numberFormatError
    17:17:java.lang.Byte toByteOrNull(java.lang.String) -> toByteOrNull
    27:29:java.lang.Byte toByteOrNull(java.lang.String,int) -> toByteOrNull
    57:57:java.lang.Integer toIntOrNull(java.lang.String) -> toIntOrNull
    67:124:java.lang.Integer toIntOrNull(java.lang.String,int) -> toIntOrNull
    132:132:java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
    142:199:java.lang.Long toLongOrNull(java.lang.String,int) -> toLongOrNull
    37:37:java.lang.Short toShortOrNull(java.lang.String) -> toShortOrNull
    47:49:java.lang.Short toShortOrNull(java.lang.String,int) -> toShortOrNull
kotlin.text.StringsKt__StringsJVMKt -> kotlin.text.StringsKt__StringsJVMKt:
    374:374:java.lang.String String(byte[],int,int,java.nio.charset.Charset) -> String
    381:381:java.lang.String String(byte[],java.nio.charset.Charset) -> String
    393:393:java.lang.String String(byte[],int,int) -> String
    401:401:java.lang.String String(byte[]) -> String
    408:408:java.lang.String String(char[]) -> String
    418:418:java.lang.String String(char[],int,int) -> String
    425:425:java.lang.String String(int[],int,int) -> String
    432:432:java.lang.String String(java.lang.StringBuffer) -> String
    439:439:java.lang.String String(java.lang.StringBuilder) -> String
    573:573:java.lang.String capitalize(java.lang.String) -> capitalize
    585:593:java.lang.String capitalize(java.lang.String,java.util.Locale) -> capitalize
    445:445:int codePointAt(java.lang.String,int) -> codePointAt
    451:451:int codePointBefore(java.lang.String,int) -> codePointBefore
    458:458:int codePointCount(java.lang.String,int,int) -> codePointCount
    466:468:int compareTo(java.lang.String,java.lang.String,boolean) -> compareTo
    464:464:int compareTo$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> compareTo$default
    120:120:java.lang.String concatToString(char[]) -> concatToString
    136:137:java.lang.String concatToString(char[],int,int) -> concatToString
    135:135:java.lang.String concatToString$default(char[],int,int,int,java.lang.Object) -> concatToString$default
    478:478:boolean contentEquals(java.lang.String,java.lang.CharSequence) -> contentEquals
    487:487:boolean contentEquals(java.lang.String,java.lang.StringBuffer) -> contentEquals
    609:609:java.lang.String decapitalize(java.lang.String) -> decapitalize
    620:620:java.lang.String decapitalize(java.lang.String,java.util.Locale) -> decapitalize
    165:165:java.lang.String decodeToString(byte[]) -> decodeToString
    187:197:java.lang.String decodeToString(byte[],int,int,boolean) -> decodeToString
    184:185:java.lang.String decodeToString$default(byte[],int,int,boolean,int,java.lang.Object) -> decodeToString$default
    208:208:byte[] encodeToByteArray(java.lang.String) -> encodeToByteArray
    230:244:byte[] encodeToByteArray(java.lang.String,int,int,boolean) -> encodeToByteArray
    227:228:byte[] encodeToByteArray$default(java.lang.String,int,int,boolean,int,java.lang.Object) -> encodeToByteArray$default
    356:358:boolean endsWith(java.lang.String,java.lang.String,boolean) -> endsWith
    354:354:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
    54:56:boolean equals(java.lang.String,java.lang.String,boolean) -> equals
    50:50:boolean equals$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> equals$default
    278:278:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    285:285:java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.lang.String,java.lang.Object[]) -> format
    292:292:java.lang.String format(java.lang.String,java.util.Locale,java.lang.Object[]) -> format
    300:300:java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.util.Locale,java.lang.String,java.lang.Object[]) -> format
    658:658:java.util.Comparator getCASE_INSENSITIVE_ORDER(kotlin.jvm.internal.StringCompanionObject) -> getCASE_INSENSITIVE_ORDER
    493:493:java.lang.String intern(java.lang.String) -> intern
    500:500:boolean isBlank(java.lang.CharSequence) -> isBlank
    24:24:int nativeIndexOf(java.lang.String,char,int) -> nativeIndexOf
    30:30:int nativeIndexOf(java.lang.String,java.lang.String,int) -> nativeIndexOf
    36:36:int nativeLastIndexOf(java.lang.String,char,int) -> nativeLastIndexOf
    42:42:int nativeLastIndexOf(java.lang.String,java.lang.String,int) -> nativeLastIndexOf
    507:507:int offsetByCodePoints(java.lang.String,int,int) -> offsetByCodePoints
    518:521:boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatches
    533:535:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> regionMatches
    517:517:boolean regionMatches$default(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean,int,java.lang.Object) -> regionMatches$default
    531:531:boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object) -> regionMatches$default
    635:629:java.lang.String repeat(java.lang.CharSequence,int) -> repeat
    65:67:java.lang.String replace(java.lang.String,char,char,boolean) -> replace
    76:76:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> replace
    63:63:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replace$default
    75:75:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
    84:85:java.lang.String replaceFirst(java.lang.String,char,char,boolean) -> replaceFirst
    94:95:java.lang.String replaceFirst(java.lang.String,java.lang.String,java.lang.String,boolean) -> replaceFirst
    83:83:java.lang.String replaceFirst$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replaceFirst$default
    93:93:java.lang.String replaceFirst$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replaceFirst$default
    310:309:java.util.List split(java.lang.CharSequence,java.util.regex.Pattern,int) -> split
    308:308:java.util.List split$default(java.lang.CharSequence,java.util.regex.Pattern,int,int,java.lang.Object) -> split$default
    334:336:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    345:347:boolean startsWith(java.lang.String,java.lang.String,int,boolean) -> startsWith
    332:332:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
    343:343:boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object) -> startsWith$default
    317:317:java.lang.String substring(java.lang.String,int) -> substring
    326:326:java.lang.String substring(java.lang.String,int,int) -> substring
    554:554:byte[] toByteArray(java.lang.String,java.nio.charset.Charset) -> toByteArray
    554:665:byte[] toByteArray$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> toByteArray$default
    153:154:char[] toCharArray(java.lang.String,int,int) -> toCharArray
    252:252:char[] toCharArray(java.lang.String) -> toCharArray
    269:269:char[] toCharArray(java.lang.String,char[],int,int,int) -> toCharArray
    152:152:char[] toCharArray$default(java.lang.String,int,int,int,java.lang.Object) -> toCharArray$default
    267:660:char[] toCharArray$default(java.lang.String,char[],int,int,int,int,java.lang.Object) -> toCharArray$default
    112:112:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    541:541:java.lang.String toLowerCase(java.lang.String,java.util.Locale) -> toLowerCase
    563:563:java.util.regex.Pattern toPattern(java.lang.String,int) -> toPattern
    674:674:java.util.regex.Pattern toPattern$default(java.lang.String,int,int,java.lang.Object) -> toPattern$default
    104:104:java.lang.String toUpperCase(java.lang.String) -> toUpperCase
    547:547:java.lang.String toUpperCase(java.lang.String,java.util.Locale) -> toUpperCase
kotlin.text.StringsKt__StringsKt -> kotlin.text.StringsKt__StringsKt:
    1:1:kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> access$findAnyOf
    788:797:java.lang.String commonPrefixWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> commonPrefixWith
    787:787:java.lang.String commonPrefixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> commonPrefixWith$default
    809:820:java.lang.String commonSuffixWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> commonSuffixWith
    808:808:java.lang.String commonSuffixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> commonSuffixWith$default
    1046:1049:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    1060:1060:boolean contains(java.lang.CharSequence,char,boolean) -> contains
    1066:1066:boolean contains(java.lang.CharSequence,kotlin.text.Regex) -> contains
    1045:1045:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
    1059:1059:boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> contains$default
    744:744:boolean endsWith(java.lang.CharSequence,char,boolean) -> endsWith
    770:773:boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> endsWith
    743:743:boolean endsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> endsWith$default
    769:769:boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> endsWith$default
    933:933:kotlin.Pair findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean) -> findAnyOf
    895:913:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    932:932:kotlin.Pair findAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object) -> findAnyOf$default
    948:948:kotlin.Pair findLastAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean) -> findLastAnyOf
    947:947:kotlin.Pair findLastAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object) -> findLastAnyOf$default
    311:311:kotlin.ranges.IntRange getIndices(java.lang.CharSequence) -> getIndices
    317:317:int getLastIndex(java.lang.CharSequence) -> getLastIndex
    323:325:boolean hasSurrogatePairAt(java.lang.CharSequence,int) -> hasSurrogatePairAt
    305:305:java.lang.Object ifBlank(java.lang.CharSequence,kotlin.jvm.functions.Function0) -> ifBlank
    294:294:java.lang.Object ifEmpty(java.lang.CharSequence,kotlin.jvm.functions.Function0) -> ifEmpty
    989:990:int indexOf(java.lang.CharSequence,char,int,boolean) -> indexOf
    1003:1004:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> indexOf
    876:887:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> indexOf$StringsKt__StringsKt
    874:874:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> indexOf$StringsKt__StringsKt$default
    988:988:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
    1002:1002:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
    835:842:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    962:962:int indexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean) -> indexOfAny
    834:834:int indexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object) -> indexOfAny$default
    961:961:int indexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object) -> indexOfAny$default
    234:234:boolean isEmpty(java.lang.CharSequence) -> isEmpty
    254:254:boolean isNotBlank(java.lang.CharSequence) -> isNotBlank
    242:242:boolean isNotEmpty(java.lang.CharSequence) -> isNotEmpty
    267:267:boolean isNullOrBlank(java.lang.CharSequence) -> isNullOrBlank
    225:225:boolean isNullOrEmpty(java.lang.CharSequence) -> isNullOrEmpty
    273:273:kotlin.collections.CharIterator iterator(java.lang.CharSequence) -> iterator
    1018:1019:int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> lastIndexOf
    1033:1034:int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> lastIndexOf
    1017:1017:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    1032:1032:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    858:866:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    977:977:int lastIndexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean) -> lastIndexOfAny
    857:857:int lastIndexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object) -> lastIndexOfAny$default
    976:976:int lastIndexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object) -> lastIndexOfAny$default
    1280:1280:kotlin.sequences.Sequence lineSequence(java.lang.CharSequence) -> lineSequence
    1287:1287:java.util.List lines(java.lang.CharSequence) -> lines
    716:716:boolean matches(java.lang.CharSequence,kotlin.text.Regex) -> matches
    192:191:java.lang.CharSequence padEnd(java.lang.CharSequence,int,char) -> padEnd
    212:212:java.lang.String padEnd(java.lang.String,int,char) -> padEnd
    189:189:java.lang.CharSequence padEnd$default(java.lang.CharSequence,int,char,int,java.lang.Object) -> padEnd$default
    211:211:java.lang.String padEnd$default(java.lang.String,int,char,int,java.lang.Object) -> padEnd$default
    157:156:java.lang.CharSequence padStart(java.lang.CharSequence,int,char) -> padStart
    177:177:java.lang.String padStart(java.lang.String,int,char) -> padStart
    154:154:java.lang.CharSequence padStart$default(java.lang.CharSequence,int,char,int,java.lang.Object) -> padStart$default
    176:176:java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object) -> padStart$default
    1143:1141:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1165:1164:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1140:1140:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,char[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    1163:1163:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    723:728:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatchesImpl
    531:534:java.lang.CharSequence removePrefix(java.lang.CharSequence,java.lang.CharSequence) -> removePrefix
    542:543:java.lang.String removePrefix(java.lang.String,java.lang.CharSequence) -> removePrefix
    491:488:java.lang.CharSequence removeRange(java.lang.CharSequence,int,int) -> removeRange
    508:508:java.lang.String removeRange(java.lang.String,int,int) -> removeRange
    515:515:java.lang.CharSequence removeRange(java.lang.CharSequence,kotlin.ranges.IntRange) -> removeRange
    524:524:java.lang.String removeRange(java.lang.String,kotlin.ranges.IntRange) -> removeRange
    553:556:java.lang.CharSequence removeSuffix(java.lang.CharSequence,java.lang.CharSequence) -> removeSuffix
    564:565:java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence) -> removeSuffix
    576:579:java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence) -> removeSurrounding
    588:589:java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence,java.lang.CharSequence) -> removeSurrounding
    599:599:java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence) -> removeSurrounding
    606:606:java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence) -> removeSurrounding
    692:692:java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,java.lang.String) -> replace
    701:701:java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,kotlin.jvm.functions.Function1) -> replace
    631:632:java.lang.String replaceAfter(java.lang.String,char,java.lang.String,java.lang.String) -> replaceAfter
    640:641:java.lang.String replaceAfter(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> replaceAfter
    630:630:java.lang.String replaceAfter$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceAfter$default
    639:639:java.lang.String replaceAfter$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceAfter$default
    649:650:java.lang.String replaceAfterLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> replaceAfterLast
    658:659:java.lang.String replaceAfterLast(java.lang.String,char,java.lang.String,java.lang.String) -> replaceAfterLast
    648:648:java.lang.String replaceAfterLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceAfterLast$default
    657:657:java.lang.String replaceAfterLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceAfterLast$default
    613:614:java.lang.String replaceBefore(java.lang.String,char,java.lang.String,java.lang.String) -> replaceBefore
    622:623:java.lang.String replaceBefore(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> replaceBefore
    612:612:java.lang.String replaceBefore$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceBefore$default
    621:621:java.lang.String replaceBefore$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceBefore$default
    667:668:java.lang.String replaceBeforeLast(java.lang.String,char,java.lang.String,java.lang.String) -> replaceBeforeLast
    676:677:java.lang.String replaceBeforeLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> replaceBeforeLast
    666:666:java.lang.String replaceBeforeLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceBeforeLast$default
    675:675:java.lang.String replaceBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceBeforeLast$default
    709:709:java.lang.String replaceFirst(java.lang.CharSequence,kotlin.text.Regex,java.lang.String) -> replaceFirst
    444:443:java.lang.CharSequence replaceRange(java.lang.CharSequence,int,int,java.lang.CharSequence) -> replaceRange
    458:458:java.lang.String replaceRange(java.lang.String,int,int,java.lang.CharSequence) -> replaceRange
    467:467:java.lang.CharSequence replaceRange(java.lang.CharSequence,kotlin.ranges.IntRange,java.lang.CharSequence) -> replaceRange
    476:476:java.lang.String replaceRange(java.lang.String,kotlin.ranges.IntRange,java.lang.CharSequence) -> replaceRange
    1200:1207:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> split
    1228:1232:java.util.List split(java.lang.CharSequence,char[],boolean,int) -> split
    1273:1273:java.util.List split(java.lang.CharSequence,kotlin.text.Regex,int) -> split
    1247:1244:java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int) -> split$StringsKt__StringsKt
    1199:1199:java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> split$default
    1227:1227:java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> split$default
    1437:1437:java.util.List split$default(java.lang.CharSequence,kotlin.text.Regex,int,int,java.lang.Object) -> split$default
    1186:1186:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int) -> splitToSequence
    1218:1218:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,char[],boolean,int) -> splitToSequence
    1185:1185:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> splitToSequence$default
    1217:1217:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> splitToSequence$default
    738:738:boolean startsWith(java.lang.CharSequence,char,boolean) -> startsWith
    750:753:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> startsWith
    760:763:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,int,boolean) -> startsWith
    737:737:boolean startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> startsWith$default
    749:749:boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> startsWith$default
    759:759:boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,int,boolean,int,java.lang.Object) -> startsWith$default
    336:336:java.lang.CharSequence subSequence(java.lang.CharSequence,kotlin.ranges.IntRange) -> subSequence
    347:347:java.lang.CharSequence subSequence(java.lang.String,int,int) -> subSequence
    331:331:java.lang.String substring(java.lang.String,kotlin.ranges.IntRange) -> substring
    356:356:java.lang.String substring(java.lang.CharSequence,int,int) -> substring
    361:361:java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange) -> substring
    356:1420:java.lang.String substring$default(java.lang.CharSequence,int,int,int,java.lang.Object) -> substring$default
    386:387:java.lang.String substringAfter(java.lang.String,char,java.lang.String) -> substringAfter
    395:396:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String) -> substringAfter
    385:385:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfter$default
    394:394:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
    422:423:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> substringAfterLast
    431:432:java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String) -> substringAfterLast
    421:421:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
    430:430:java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
    368:369:java.lang.String substringBefore(java.lang.String,char,java.lang.String) -> substringBefore
    377:378:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String) -> substringBefore
    367:367:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
    376:376:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
    404:405:java.lang.String substringBeforeLast(java.lang.String,char,java.lang.String) -> substringBeforeLast
    413:414:java.lang.String substringBeforeLast(java.lang.String,java.lang.String,java.lang.String) -> substringBeforeLast
    403:403:java.lang.String substringBeforeLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBeforeLast$default
    412:412:java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBeforeLast$default
    18:38:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    120:120:java.lang.String trim(java.lang.String) -> trim
    1290:45:java.lang.String trim(java.lang.String,kotlin.jvm.functions.Function1) -> trim
    1322:1342:java.lang.CharSequence trim(java.lang.CharSequence,char[]) -> trim
    1345:1343:java.lang.String trim(java.lang.String,char[]) -> trim
    1389:1409:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    68:70:java.lang.CharSequence trimEnd(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trimEnd
    142:142:java.lang.String trimEnd(java.lang.String) -> trimEnd
    1316:79:java.lang.String trimEnd(java.lang.String,kotlin.jvm.functions.Function1) -> trimEnd
    1377:1379:java.lang.CharSequence trimEnd(java.lang.CharSequence,char[]) -> trimEnd
    1383:1382:java.lang.String trimEnd(java.lang.String,char[]) -> trimEnd
    1415:1417:java.lang.CharSequence trimEnd(java.lang.CharSequence) -> trimEnd
    51:53:java.lang.CharSequence trimStart(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trimStart
    131:131:java.lang.String trimStart(java.lang.String) -> trimStart
    1311:62:java.lang.String trimStart(java.lang.String,kotlin.jvm.functions.Function1) -> trimStart
    1366:1368:java.lang.CharSequence trimStart(java.lang.CharSequence,char[]) -> trimStart
    1372:1371:java.lang.String trimStart(java.lang.String,char[]) -> trimStart
    1410:1412:java.lang.CharSequence trimStart(java.lang.CharSequence) -> trimStart
kotlin.text.StringsKt__StringsKt$iterator$1 -> kotlin.text.StringsKt__StringsKt$iterator$1:
    273:273:void <init>(java.lang.CharSequence) -> <init>
    278:278:boolean hasNext() -> hasNext
    276:276:char nextChar() -> nextChar
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2:
    1144:1144:kotlin.Pair invoke(java.lang.CharSequence,int) -> invoke
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4:
    1167:1167:kotlin.Pair invoke(java.lang.CharSequence,int) -> invoke
kotlin.text.StringsKt__StringsKt$splitToSequence$1 -> kotlin.text.StringsKt__StringsKt$splitToSequence$1:
    1186:1186:java.lang.String invoke(kotlin.ranges.IntRange) -> invoke
kotlin.text.StringsKt__StringsKt$splitToSequence$2 -> kotlin.text.StringsKt__StringsKt$splitToSequence$2:
    1218:1218:java.lang.String invoke(kotlin.ranges.IntRange) -> invoke
kotlin.text.StringsKt___StringsJvmKt -> kotlin.text.StringsKt___StringsJvmKt:
    24:24:char elementAt(java.lang.CharSequence,int) -> elementAt
    31:31:java.util.SortedSet toSortedSet(java.lang.CharSequence) -> toSortedSet
kotlin.text.StringsKt___StringsKt -> kotlin.text.StringsKt___StringsKt:
    923:923:boolean all(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> all
    933:933:boolean any(java.lang.CharSequence) -> any
    942:942:boolean any(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> any
    1498:1499:java.lang.Iterable asIterable(java.lang.CharSequence) -> asIterable
    1506:1507:kotlin.sequences.Sequence asSequence(java.lang.CharSequence) -> asSequence
    588:1550:java.util.Map associate(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> associate
    601:1554:java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> associateBy
    613:1558:java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    625:626:java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    639:640:java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    652:653:java.util.Map associateTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    670:1562:java.util.Map associateWith(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> associateWith
    682:683:java.util.Map associateWithTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    1245:1245:java.util.List chunked(java.lang.CharSequence,int) -> chunked
    1264:1264:java.util.List chunked(java.lang.CharSequence,int,kotlin.jvm.functions.Function1) -> chunked
    1278:1278:kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int) -> chunkedSequence
    1297:1297:kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int,kotlin.jvm.functions.Function1) -> chunkedSequence
    951:951:int count(java.lang.CharSequence) -> count
    959:959:int count(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> count
    259:258:java.lang.CharSequence drop(java.lang.CharSequence,int) -> drop
    271:270:java.lang.String drop(java.lang.String,int) -> drop
    283:282:java.lang.CharSequence dropLast(java.lang.CharSequence,int) -> dropLast
    295:294:java.lang.String dropLast(java.lang.String,int) -> dropLast
    304:306:java.lang.CharSequence dropLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> dropLastWhile
    316:318:java.lang.String dropLastWhile(java.lang.String,kotlin.jvm.functions.Function1) -> dropLastWhile
    328:330:java.lang.CharSequence dropWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> dropWhile
    340:342:java.lang.String dropWhile(java.lang.String,kotlin.jvm.functions.Function1) -> dropWhile
    32:32:char elementAtOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    42:42:java.lang.Character elementAtOrNull(java.lang.CharSequence,int) -> elementAtOrNull
    350:1520:java.lang.CharSequence filter(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> filter
    357:357:java.lang.String filter(java.lang.String,kotlin.jvm.functions.Function1) -> filter
    366:1531:java.lang.CharSequence filterIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> filterIndexed
    375:375:java.lang.String filterIndexed(java.lang.String,kotlin.jvm.functions.Function2) -> filterIndexed
    1543:385:java.lang.Appendable filterIndexedTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function2) -> filterIndexedTo
    394:1545:java.lang.CharSequence filterNot(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> filterNot
    401:401:java.lang.String filterNot(java.lang.String,kotlin.jvm.functions.Function1) -> filterNot
    408:408:java.lang.Appendable filterNotTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1) -> filterNotTo
    416:418:java.lang.Appendable filterTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1) -> filterTo
    1511:1511:java.lang.Character find(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> find
    1513:1515:java.lang.Character findLast(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> findLast
    66:67:char first(java.lang.CharSequence) -> first
    76:77:char first(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> first
    84:84:java.lang.Character firstOrNull(java.lang.CharSequence) -> firstOrNull
    91:91:java.lang.Character firstOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> firstOrNull
    740:1567:java.util.List flatMap(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> flatMap
    747:749:java.util.Collection flatMapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    968:968:java.lang.Object fold(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    981:981:java.lang.Object foldIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    989:992:java.lang.Object foldRight(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    1004:1007:java.lang.Object foldRightIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    1017:1017:void forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> forEach
    1027:1027:void forEachIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> forEachIndexed
    100:100:char getOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1) -> getOrElse
    107:107:java.lang.Character getOrNull(java.lang.CharSequence,int) -> getOrNull
    763:1580:java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> groupBy
    776:1593:java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    788:791:java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    806:809:java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    822:822:kotlin.collections.Grouping groupingBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> groupingBy
    114:115:int indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> indexOfFirst
    126:127:int indexOfLast(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> indexOfLast
    139:140:char last(java.lang.CharSequence) -> last
    149:153:char last(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> last
    160:160:java.lang.Character lastOrNull(java.lang.CharSequence) -> lastOrNull
    167:169:java.lang.Character lastOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> lastOrNull
    835:1611:java.util.List map(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> map
    845:1615:java.util.List mapIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> mapIndexed
    855:1617:java.util.List mapIndexedNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> mapIndexedNotNull
    1623:865:java.util.Collection mapIndexedNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedNotNullTo
    877:878:java.util.Collection mapIndexedTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    887:1625:java.util.List mapNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> mapNotNull
    1629:895:java.util.Collection mapNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    904:905:java.util.Collection mapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    1034:1040:java.lang.Character max(java.lang.CharSequence) -> max
    1049:1062:java.lang.Character maxBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxBy
    1069:1075:java.lang.Character maxWith(java.lang.CharSequence,java.util.Comparator) -> maxWith
    1082:1088:java.lang.Character min(java.lang.CharSequence) -> min
    1097:1110:java.lang.Character minBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minBy
    1117:1123:java.lang.Character minWith(java.lang.CharSequence,java.util.Comparator) -> minWith
    1132:1132:boolean none(java.lang.CharSequence) -> none
    1141:1141:boolean none(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> none
    1150:1150:java.lang.CharSequence onEach(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> onEach
    1306:1315:kotlin.Pair partition(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> partition
    1324:1333:kotlin.Pair partition(java.lang.String,kotlin.jvm.functions.Function1) -> partition
    182:182:char random(java.lang.CharSequence) -> random
    192:193:char random(java.lang.CharSequence,kotlin.random.Random) -> random
    1157:1158:char reduce(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> reduce
    1173:1174:char reduceIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3) -> reduceIndexed
    1186:1187:char reduceRight(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> reduceRight
    1202:1203:char reduceRightIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3) -> reduceRightIndexed
    568:568:java.lang.CharSequence reversed(java.lang.CharSequence) -> reversed
    576:576:java.lang.String reversed(java.lang.String) -> reversed
    201:202:char single(java.lang.CharSequence) -> single
    214:221:char single(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> single
    230:230:java.lang.Character singleOrNull(java.lang.CharSequence) -> singleOrNull
    239:242:java.lang.Character singleOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> singleOrNull
    427:428:java.lang.CharSequence slice(java.lang.CharSequence,kotlin.ranges.IntRange) -> slice
    435:436:java.lang.String slice(java.lang.String,kotlin.ranges.IntRange) -> slice
    443:447:java.lang.CharSequence slice(java.lang.CharSequence,java.lang.Iterable) -> slice
    457:457:java.lang.String slice(java.lang.String,java.lang.Iterable) -> slice
    1217:1218:int sumBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumBy
    1228:1229:double sumByDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumByDouble
    469:468:java.lang.CharSequence take(java.lang.CharSequence,int) -> take
    481:480:java.lang.String take(java.lang.String,int) -> take
    493:492:java.lang.CharSequence takeLast(java.lang.CharSequence,int) -> takeLast
    506:505:java.lang.String takeLast(java.lang.String,int) -> takeLast
    516:521:java.lang.CharSequence takeLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> takeLastWhile
    530:532:java.lang.String takeLastWhile(java.lang.String,kotlin.jvm.functions.Function1) -> takeLastWhile
    544:548:java.lang.CharSequence takeWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> takeWhile
    557:559:java.lang.String takeWhile(java.lang.String,kotlin.jvm.functions.Function1) -> takeWhile
    692:693:java.util.Collection toCollection(java.lang.CharSequence,java.util.Collection) -> toCollection
    702:702:java.util.HashSet toHashSet(java.lang.CharSequence) -> toHashSet
    709:710:java.util.List toList(java.lang.CharSequence) -> toList
    720:720:java.util.List toMutableList(java.lang.CharSequence) -> toMutableList
    729:730:java.util.Set toSet(java.lang.CharSequence) -> toSet
    1353:1353:java.util.List windowed(java.lang.CharSequence,int,int,boolean) -> windowed
    1375:1383:java.util.List windowed(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1) -> windowed
    1352:1352:java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object) -> windowed$default
    1374:1374:java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> windowed$default
    1406:1406:kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean) -> windowedSequence
    1428:1430:kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1) -> windowedSequence
    1405:1405:kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object) -> windowedSequence$default
    1427:1427:kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> windowedSequence$default
    914:914:java.lang.Iterable withIndex(java.lang.CharSequence) -> withIndex
    1455:1458:java.util.List zip(java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function2) -> zip
    1631:1444:java.util.List zip(java.lang.CharSequence,java.lang.CharSequence) -> zip
    1485:1489:java.util.List zipWithNext(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> zipWithNext
    1637:1472:java.util.List zipWithNext(java.lang.CharSequence) -> zipWithNext
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1 -> kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1:
    16:16:void <init>(java.lang.CharSequence) -> <init>
    94:94:java.util.Iterator iterator() -> iterator
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1 -> kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1:
    19:19:void <init>(java.lang.CharSequence) -> <init>
    634:634:java.util.Iterator iterator() -> iterator
kotlin.text.StringsKt___StringsKt$chunkedSequence$1 -> kotlin.text.StringsKt___StringsKt$chunkedSequence$1:
    1278:1278:java.lang.String invoke(java.lang.CharSequence) -> invoke
kotlin.text.StringsKt___StringsKt$groupingBy$1 -> kotlin.text.StringsKt___StringsKt$groupingBy$1:
    822:822:void <init>(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> <init>
    822:822:java.lang.Object keyOf(java.lang.Object) -> keyOf
    824:824:java.lang.Object keyOf(char) -> keyOf
    823:823:java.util.Iterator sourceIterator() -> sourceIterator
kotlin.text.StringsKt___StringsKt$windowed$1 -> kotlin.text.StringsKt___StringsKt$windowed$1:
    1353:1353:java.lang.String invoke(java.lang.CharSequence) -> invoke
kotlin.text.StringsKt___StringsKt$windowedSequence$1 -> kotlin.text.StringsKt___StringsKt$windowedSequence$1:
    1406:1406:java.lang.String invoke(java.lang.CharSequence) -> invoke
kotlin.text.StringsKt___StringsKt$windowedSequence$2 -> kotlin.text.StringsKt___StringsKt$windowedSequence$2:
    1431:1433:java.lang.Object invoke(int) -> invoke
kotlin.text.StringsKt___StringsKt$withIndex$1 -> kotlin.text.StringsKt___StringsKt$withIndex$1:
    914:914:kotlin.collections.CharIterator invoke() -> invoke
kotlin.text.SystemProperties -> kotlin.text.SystemProperties:
    25:28:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
kotlin.text.Typography -> kotlin.text.Typography:
    11:11:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
kotlin.text.UStringsKt -> kotlin.text.UStringsKt:
    48:48:java.lang.String toString-JSWoG40(long,int) -> toString-JSWoG40
    18:18:java.lang.String toString-LxnNnR4(byte,int) -> toString-LxnNnR4
    39:39:java.lang.String toString-V7xB4Y4(int,int) -> toString-V7xB4Y4
    28:28:java.lang.String toString-olVBNx4(short,int) -> toString-olVBNx4
    57:57:byte toUByte(java.lang.String) -> toUByte
    66:66:byte toUByte(java.lang.String,int) -> toUByte
    130:130:kotlin.UByte toUByteOrNull(java.lang.String) -> toUByteOrNull
    141:143:kotlin.UByte toUByteOrNull(java.lang.String,int) -> toUByteOrNull
    92:92:int toUInt(java.lang.String) -> toUInt
    101:101:int toUInt(java.lang.String,int) -> toUInt
    174:174:kotlin.UInt toUIntOrNull(java.lang.String) -> toUIntOrNull
    185:229:kotlin.UInt toUIntOrNull(java.lang.String,int) -> toUIntOrNull
    109:109:long toULong(java.lang.String) -> toULong
    118:118:long toULong(java.lang.String,int) -> toULong
    238:238:kotlin.ULong toULongOrNull(java.lang.String) -> toULongOrNull
    249:294:kotlin.ULong toULongOrNull(java.lang.String,int) -> toULongOrNull
    75:75:short toUShort(java.lang.String) -> toUShort
    84:84:short toUShort(java.lang.String,int) -> toUShort
    152:152:kotlin.UShort toUShortOrNull(java.lang.String) -> toUShortOrNull
    163:165:kotlin.UShort toUShortOrNull(java.lang.String,int) -> toUShortOrNull
kotlin.text.jdk8.RegexExtensionsJDK8Kt -> kotlin.text.jdk8.RegexExtensionsJDK8Kt:
    31:32:kotlin.text.MatchGroup get(kotlin.text.MatchGroupCollection,java.lang.String) -> get
kotlin.time.AbstractDoubleClock -> kotlin.time.AbstractDoubleClock:
    47:47:void <init>(java.util.concurrent.TimeUnit) -> <init>
    47:47:java.util.concurrent.TimeUnit getUnit() -> getUnit
    59:59:kotlin.time.ClockMark markNow() -> markNow
kotlin.time.AbstractDoubleClock$DoubleClockMark -> kotlin.time.AbstractDoubleClock$DoubleClockMark:
    54:54:void <init>(double,kotlin.time.AbstractDoubleClock,double) -> <init>
    54:54:void <init>(double,kotlin.time.AbstractDoubleClock,double,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    55:55:double elapsedNow() -> elapsedNow
    56:56:kotlin.time.ClockMark plus-LRDsOJo(double) -> plus-LRDsOJo
kotlin.time.AbstractLongClock -> kotlin.time.AbstractLongClock:
    25:25:void <init>(java.util.concurrent.TimeUnit) -> <init>
    25:25:java.util.concurrent.TimeUnit getUnit() -> getUnit
    37:37:kotlin.time.ClockMark markNow() -> markNow
kotlin.time.AbstractLongClock$LongClockMark -> kotlin.time.AbstractLongClock$LongClockMark:
    32:32:void <init>(long,kotlin.time.AbstractLongClock,double) -> <init>
    32:32:void <init>(long,kotlin.time.AbstractLongClock,double,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    33:33:double elapsedNow() -> elapsedNow
    34:34:kotlin.time.ClockMark plus-LRDsOJo(double) -> plus-LRDsOJo
kotlin.time.AdjustedClockMark -> kotlin.time.AdjustedClockMark:
    89:89:void <init>(kotlin.time.ClockMark,double) -> <init>
    89:89:void <init>(kotlin.time.ClockMark,double,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    90:90:double elapsedNow() -> elapsedNow
    89:89:double getAdjustment() -> getAdjustment
    89:89:kotlin.time.ClockMark getMark() -> getMark
    92:92:kotlin.time.ClockMark plus-LRDsOJo(double) -> plus-LRDsOJo
kotlin.time.ClockKt -> kotlin.time.ClockKt:
    85:85:int compareTo(kotlin.time.ClockMark,kotlin.time.ClockMark) -> compareTo
    79:79:double minus(kotlin.time.ClockMark,kotlin.time.ClockMark) -> minus
kotlin.time.ClockMark -> kotlin.time.ClockMark:
    34:34:void <init>() -> <init>
    71:71:boolean hasNotPassedNow() -> hasNotPassedNow
    63:63:boolean hasPassedNow() -> hasPassedNow
    54:54:kotlin.time.ClockMark minus-LRDsOJo(double) -> minus-LRDsOJo
    47:47:kotlin.time.ClockMark plus-LRDsOJo(double) -> plus-LRDsOJo
kotlin.time.Duration -> kotlin.time.Duration:
    39:42:void <clinit>() -> <clinit>
    30:30:void <init>(double) -> <init>
    30:30:double access$getINFINITE$cp() -> access$getINFINITE$cp
    30:30:double access$getZERO$cp() -> access$getZERO$cp
    30:30:int compareTo(java.lang.Object) -> compareTo
    1:1:int compareTo-LRDsOJo(double) -> compareTo-LRDsOJo
    90:90:int compareTo-LRDsOJo(double,double) -> compareTo-LRDsOJo
    67:67:double div-impl(double,int) -> div-impl
    70:70:double div-impl(double,double) -> div-impl
    1:1:boolean equals(java.lang.Object) -> equals
    88:88:double getAbsoluteValue-impl(double) -> getAbsoluteValue-impl
    150:150:int getHoursComponent-impl(double) -> getHoursComponent-impl
    179:179:double getInDays-impl(double) -> getInDays-impl
    182:182:double getInHours-impl(double) -> getInHours-impl
    194:194:double getInMicroseconds-impl(double) -> getInMicroseconds-impl
    191:191:double getInMilliseconds-impl(double) -> getInMilliseconds-impl
    185:185:double getInMinutes-impl(double) -> getInMinutes-impl
    197:197:double getInNanoseconds-impl(double) -> getInNanoseconds-impl
    188:188:double getInSeconds-impl(double) -> getInSeconds-impl
    152:152:int getMinutesComponent-impl(double) -> getMinutesComponent-impl
    156:156:int getNanosecondsComponent-impl(double) -> getNanosecondsComponent-impl
    154:154:int getSecondsComponent-impl(double) -> getSecondsComponent-impl
    1:1:int hashCode() -> hashCode
    85:85:boolean isFinite-impl(double) -> isFinite-impl
    82:82:boolean isInfinite-impl(double) -> isInfinite-impl
    58:58:double minus-LRDsOJo(double,double) -> minus-LRDsOJo
    55:55:double plus-LRDsOJo(double,double) -> plus-LRDsOJo
    61:61:double times-impl(double,int) -> times-impl
    64:64:double times-impl(double,double) -> times-impl
    108:108:java.lang.Object toComponents-impl(double,kotlin.jvm.functions.Function5) -> toComponents-impl
    122:122:java.lang.Object toComponents-impl(double,kotlin.jvm.functions.Function4) -> toComponents-impl
    135:135:java.lang.Object toComponents-impl(double,kotlin.jvm.functions.Function3) -> toComponents-impl
    147:147:java.lang.Object toComponents-impl(double,kotlin.jvm.functions.Function2) -> toComponents-impl
    162:162:double toDouble-impl(double,java.util.concurrent.TimeUnit) -> toDouble-impl
    176:176:int toInt-impl(double,java.util.concurrent.TimeUnit) -> toInt-impl
    305:305:java.lang.String toIsoString-impl(double) -> toIsoString-impl
    169:169:long toLong-impl(double,java.util.concurrent.TimeUnit) -> toLong-impl
    217:217:long toLongMilliseconds-impl(double) -> toLongMilliseconds-impl
    208:208:long toLongNanoseconds-impl(double) -> toLongNanoseconds-impl
    1:1:java.lang.String toString() -> toString
    233:256:java.lang.String toString-impl(double) -> toString-impl
    282:281:java.lang.String toString-impl(double,java.util.concurrent.TimeUnit,int) -> toString-impl
    280:280:java.lang.String toString-impl$default(double,java.util.concurrent.TimeUnit,int,int,java.lang.Object) -> toString-impl$default
    52:52:double unaryMinus-impl(double) -> unaryMinus-impl
kotlin.time.Duration$Companion -> kotlin.time.Duration$Companion:
    37:37:void <init>() -> <init>
    37:37:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    46:46:double convert(double,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit) -> convert
    42:42:double getINFINITE() -> getINFINITE
    39:39:double getZERO() -> getZERO
kotlin.time.DurationKt -> kotlin.time.DurationKt:
    1:1:java.util.concurrent.TimeUnit access$getStorageUnit$p() -> access$getStorageUnit$p
    450:450:double getDays(int) -> getDays
    455:455:double getDays(long) -> getDays
    460:460:double getDays(double) -> getDays
    435:435:double getHours(int) -> getHours
    440:440:double getHours(long) -> getHours
    445:445:double getHours(double) -> getHours
    375:375:double getMicroseconds(int) -> getMicroseconds
    380:380:double getMicroseconds(long) -> getMicroseconds
    385:385:double getMicroseconds(double) -> getMicroseconds
    390:390:double getMilliseconds(int) -> getMilliseconds
    395:395:double getMilliseconds(long) -> getMilliseconds
    400:400:double getMilliseconds(double) -> getMilliseconds
    420:420:double getMinutes(int) -> getMinutes
    425:425:double getMinutes(long) -> getMinutes
    430:430:double getMinutes(double) -> getMinutes
    360:360:double getNanoseconds(int) -> getNanoseconds
    365:365:double getNanoseconds(long) -> getNanoseconds
    370:370:double getNanoseconds(double) -> getNanoseconds
    405:405:double getSeconds(int) -> getSeconds
    410:410:double getSeconds(long) -> getSeconds
    415:415:double getSeconds(double) -> getSeconds
    11:11:java.util.concurrent.TimeUnit getStorageUnit() -> getStorageUnit
    473:473:double times-kIfJnKk(double,double) -> times-kIfJnKk
    467:467:double times-mvk6XK0(int,double) -> times-mvk6XK0
    342:342:double toDuration(int,java.util.concurrent.TimeUnit) -> toDuration
    347:347:double toDuration(long,java.util.concurrent.TimeUnit) -> toDuration
    479:352:double toDuration(double,java.util.concurrent.TimeUnit) -> toDuration
kotlin.time.DurationUnitKt__DurationUnitJvmKt -> kotlin.time.DurationUnitKt__DurationUnitJvmKt:
    18:22:double convertDurationUnit(double,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit) -> convertDurationUnit
kotlin.time.DurationUnitKt__DurationUnitKt -> kotlin.time.DurationUnitKt__DurationUnitKt:
    58:65:java.lang.String shortName(java.util.concurrent.TimeUnit) -> shortName
kotlin.time.FormatToDecimalsKt -> kotlin.time.FormatToDecimalsKt:
    14:36:void <clinit>() -> <clinit>
    18:20:java.text.DecimalFormat createFormatForDecimals(int) -> createFormatForDecimals
    38:42:java.lang.String formatScientific(double) -> formatScientific
    24:28:java.lang.String formatToExactDecimals(double,int) -> formatToExactDecimals
    32:34:java.lang.String formatUpToDecimals(double,int) -> formatUpToDecimals
kotlin.time.MeasureTimeKt -> kotlin.time.MeasureTimeKt:
    21:93:double measureTime(kotlin.jvm.functions.Function0) -> measureTime
    37:39:double measureTime(kotlin.time.Clock,kotlin.jvm.functions.Function0) -> measureTime
    66:100:kotlin.time.TimedValue measureTimedValue(kotlin.jvm.functions.Function0) -> measureTimedValue
    82:84:kotlin.time.TimedValue measureTimedValue(kotlin.time.Clock,kotlin.jvm.functions.Function0) -> measureTimedValue
kotlin.time.MonoClock -> kotlin.time.MonoClock:
    10:10:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    11:11:long read() -> read
kotlin.time.TestClock -> kotlin.time.TestClock:
    78:78:void <init>() -> <init>
    109:109:void overflow-LRDsOJo(double) -> overflow-LRDsOJo
    93:95:void plusAssign-LRDsOJo(double) -> plusAssign-LRDsOJo
    81:81:long read() -> read
kotlin.time.TimedValue -> kotlin.time.TimedValue:
    51:51:void <init>(java.lang.Object,double) -> <init>
    51:51:void <init>(java.lang.Object,double,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    51:51:double getDuration() -> getDuration
    51:51:java.lang.Object getValue() -> getValue
kotlin.time.jdk8.DurationConversionsJDK8Kt -> kotlin.time.jdk8.DurationConversionsJDK8Kt:
    36:35:java.time.Duration toJavaDuration-LRDsOJo(double) -> toJavaDuration-LRDsOJo
    23:23:double toKotlinDuration(java.time.Duration) -> toKotlinDuration
okhttp3.Address -> okhttp3.Address:
    53:60:void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector) -> <init>
    149:149:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    118:118:java.util.List connectionSpecs() -> connectionSpecs
    96:96:okhttp3.Dns dns() -> dns
    153:164:boolean equals(java.lang.Object) -> equals
    171:180:int hashCode() -> hashCode
    144:144:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    114:114:java.util.List protocols() -> protocols
    134:134:java.net.Proxy proxy() -> proxy
    106:106:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    126:126:java.net.ProxySelector proxySelector() -> proxySelector
    101:101:javax.net.SocketFactory socketFactory() -> socketFactory
    139:139:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    91:91:okhttp3.HttpUrl url() -> url
okhttp3.Authenticator -> okhttp3.Authenticator:
    51:51:void <clinit>() -> <clinit>
okhttp3.Authenticator$1 -> okhttp3.Authenticator$1:
    51:51:void <init>() -> <init>
okhttp3.Cache -> okhttp3.Cache:
    178:178:void <init>(java.io.File,long) -> <init>
    181:182:void <init>(java.io.File,long,okhttp3.internal.io.FileSystem) -> <init>
    280:280:void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor) -> abortQuietly
    390:390:void close() -> close
    306:306:void delete() -> delete
    394:394:java.io.File directory() -> directory
    314:314:void evictAll() -> evictAll
    386:386:void flush() -> flush
    190:206:okhttp3.Response get(okhttp3.Request) -> get
    422:422:int hitCount() -> hitCount
    298:298:void initialize() -> initialize
    398:398:boolean isClosed() -> isClosed
    186:186:java.lang.String key(okhttp3.HttpUrl) -> key
    382:382:long maxSize() -> maxSize
    418:418:int networkCount() -> networkCount
    221:252:okhttp3.internal.cache.CacheRequest put(okhttp3.Response) -> put
    725:732:int readInt(okio.BufferedSource) -> readInt
    258:258:void remove(okhttp3.Request) -> remove
    426:426:int requestCount() -> requestCount
    378:378:long size() -> size
    414:415:void trackConditionalCacheHit() -> trackConditionalCacheHit
    402:411:void trackResponse(okhttp3.internal.cache.CacheStrategy) -> trackResponse
    262:272:void update(okhttp3.Response,okhttp3.Response) -> update
    327:327:java.util.Iterator urls() -> urls
    370:370:int writeAbortCount() -> writeAbortCount
    374:374:int writeSuccessCount() -> writeSuccessCount
okhttp3.Cache$1 -> okhttp3.Cache$1:
    142:142:void <init>(okhttp3.Cache) -> <init>
    144:144:okhttp3.Response get(okhttp3.Request) -> get
    148:148:okhttp3.internal.cache.CacheRequest put(okhttp3.Response) -> put
    152:152:void remove(okhttp3.Request) -> remove
    160:160:void trackConditionalCacheHit() -> trackConditionalCacheHit
    164:164:void trackResponse(okhttp3.internal.cache.CacheStrategy) -> trackResponse
    156:156:void update(okhttp3.Response,okhttp3.Response) -> update
okhttp3.Cache$2 -> okhttp3.Cache$2:
    327:328:void <init>(okhttp3.Cache) -> <init>
    334:347:boolean hasNext() -> hasNext
    327:327:java.lang.Object next() -> next
    355:355:java.lang.String next() -> next
    363:363:void remove() -> remove
okhttp3.Cache$CacheRequestImpl -> okhttp3.Cache$CacheRequestImpl:
    435:438:void <init>(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor) -> <init>
    454:460:void abort() -> abort
    469:469:okio.Sink body() -> body
okhttp3.Cache$CacheRequestImpl$1 -> okhttp3.Cache$CacheRequestImpl$1:
    438:438:void <init>(okhttp3.Cache$CacheRequestImpl,okio.Sink,okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor) -> <init>
    440:446:void close() -> close
okhttp3.Cache$CacheResponseBody -> okhttp3.Cache$CacheResponseBody:
    743:749:void <init>(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String) -> <init>
    763:763:long contentLength() -> contentLength
    758:758:okhttp3.MediaType contentType() -> contentType
    770:770:okio.BufferedSource source() -> source
okhttp3.Cache$CacheResponseBody$1 -> okhttp3.Cache$CacheResponseBody$1:
    749:749:void <init>(okhttp3.Cache$CacheResponseBody,okio.Source,okhttp3.internal.cache.DiskLruCache$Snapshot) -> <init>
    751:752:void close() -> close
okhttp3.Cache$Entry -> okhttp3.Cache$Entry:
    475:478:void <clinit>() -> <clinit>
    539:589:void <init>(okio.Source) -> <init>
    593:603:void <init>(okhttp3.Response) -> <init>
    657:657:boolean isHttps() -> isHttps
    696:698:boolean matches(okhttp3.Request,okhttp3.Response) -> matches
    661:675:java.util.List readCertificateList(okio.BufferedSource) -> readCertificateList
    702:719:okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot) -> response
    682:691:void writeCertList(okio.BufferedSink,java.util.List) -> writeCertList
    607:653:void writeTo(okhttp3.internal.cache.DiskLruCache$Editor) -> writeTo
okhttp3.CacheControl -> okhttp3.CacheControl:
    18:28:void <clinit>() -> <clinit>
    46:58:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String) -> <init>
    61:72:void <init>(okhttp3.CacheControl$Builder) -> <init>
    247:261:java.lang.String headerValue() -> headerValue
    107:107:boolean isPrivate() -> isPrivate
    111:111:boolean isPublic() -> isPublic
    95:95:int maxAgeSeconds() -> maxAgeSeconds
    119:119:int maxStaleSeconds() -> maxStaleSeconds
    123:123:int minFreshSeconds() -> minFreshSeconds
    115:115:boolean mustRevalidate() -> mustRevalidate
    83:83:boolean noCache() -> noCache
    88:88:boolean noStore() -> noStore
    137:137:boolean noTransform() -> noTransform
    133:133:boolean onlyIfCached() -> onlyIfCached
    160:237:okhttp3.CacheControl parse(okhttp3.Headers) -> parse
    103:103:int sMaxAgeSeconds() -> sMaxAgeSeconds
    242:243:java.lang.String toString() -> toString
okhttp3.CacheControl$Builder -> okhttp3.CacheControl$Builder:
    265:270:void <init>() -> <init>
    351:351:okhttp3.CacheControl build() -> build
    295:294:okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit) -> maxAge
    311:310:okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> maxStale
    328:327:okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit) -> minFresh
    276:276:okhttp3.CacheControl$Builder noCache() -> noCache
    282:282:okhttp3.CacheControl$Builder noStore() -> noStore
    346:346:okhttp3.CacheControl$Builder noTransform() -> noTransform
    340:340:okhttp3.CacheControl$Builder onlyIfCached() -> onlyIfCached
okhttp3.CertificatePinner -> okhttp3.CertificatePinner:
    128:128:void <clinit>() -> <clinit>
    133:135:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner) -> <init>
    161:203:void check(java.lang.String,java.util.List) -> check
    209:209:void check(java.lang.String,java.security.cert.Certificate[]) -> check
    140:142:boolean equals(java.lang.Object) -> equals
    217:221:java.util.List findMatchingPins(java.lang.String) -> findMatchingPins
    146:147:int hashCode() -> hashCode
    241:242:java.lang.String pin(java.security.cert.Certificate) -> pin
    248:248:okio.ByteString sha1(java.security.cert.X509Certificate) -> sha1
    252:252:okio.ByteString sha256(java.security.cert.X509Certificate) -> sha256
    229:229:okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner) -> withCertificateChainCleaner
okhttp3.CertificatePinner$Builder -> okhttp3.CertificatePinner$Builder:
    317:318:void <init>() -> <init>
    330:328:okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[]) -> add
    338:338:okhttp3.CertificatePinner build() -> build
okhttp3.CertificatePinner$Pin -> okhttp3.CertificatePinner$Pin:
    266:278:void <init>(java.lang.String,java.lang.String) -> <init>
    297:300:boolean equals(java.lang.Object) -> equals
    305:307:int hashCode() -> hashCode
    287:293:boolean matches(java.lang.String) -> matches
    312:312:java.lang.String toString() -> toString
okhttp3.Challenge -> okhttp3.Challenge:
    25:27:void <init>(java.lang.String,java.lang.String) -> <init>
    41:43:boolean equals(java.lang.Object) -> equals
    48:49:int hashCode() -> hashCode
    37:37:java.lang.String realm() -> realm
    32:32:java.lang.String scheme() -> scheme
    54:54:java.lang.String toString() -> toString
okhttp3.CipherSuite -> okhttp3.CipherSuite:
    38:362:void <clinit>() -> <clinit>
    385:387:void <init>(java.lang.String) -> <init>
    376:379:okhttp3.CipherSuite forJavaName(java.lang.String) -> forJavaName
    408:408:java.lang.String javaName() -> javaName
    398:398:okhttp3.CipherSuite of(java.lang.String,int) -> of
    412:412:java.lang.String toString() -> toString
okhttp3.ConnectionPool -> okhttp3.ConnectionPool:
    48:50:void <clinit>() -> <clinit>
    84:84:void <init>() -> <init>
    87:93:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    187:223:long cleanup(long) -> cleanup
    145:146:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    113:113:int connectionCount() -> connectionCount
    156:166:void evictAll() -> evictAll
    119:123:okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> get
    100:103:int idleConnectionCount() -> idleConnectionCount
    238:264:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long) -> pruneAndGetAllocationCount
    132:136:void put(okhttp3.internal.connection.RealConnection) -> put
okhttp3.ConnectionPool$1 -> okhttp3.ConnectionPool$1:
    55:55:void <init>(okhttp3.ConnectionPool) -> <init>
    58:68:void run() -> run
okhttp3.ConnectionSpec -> okhttp3.ConnectionSpec:
    45:81:void <clinit>() -> <clinit>
    88:92:void <init>(okhttp3.ConnectionSpec$Builder) -> <init>
    133:139:void apply(javax.net.ssl.SSLSocket,boolean) -> apply
    104:110:java.util.List cipherSuites() -> cipherSuites
    214:223:boolean equals(java.lang.Object) -> equals
    231:234:int hashCode() -> hashCode
    179:189:boolean isCompatible(javax.net.ssl.SSLSocket) -> isCompatible
    96:96:boolean isTls() -> isTls
    202:206:boolean nonEmptyIntersection(java.lang.String[],java.lang.String[]) -> nonEmptyIntersection
    148:164:okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> supportedSpec
    128:128:boolean supportsTlsExtensions() -> supportsTlsExtensions
    118:124:java.util.List tlsVersions() -> tlsVersions
    240:246:java.lang.String toString() -> toString
okhttp3.ConnectionSpec$Builder -> okhttp3.ConnectionSpec$Builder:
    259:260:void <init>(boolean) -> <init>
    263:267:void <init>(okhttp3.ConnectionSpec) -> <init>
    271:271:okhttp3.ConnectionSpec$Builder allEnabledCipherSuites() -> allEnabledCipherSuites
    298:298:okhttp3.ConnectionSpec$Builder allEnabledTlsVersions() -> allEnabledTlsVersions
    332:332:okhttp3.ConnectionSpec build() -> build
    277:277:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    287:287:okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> cipherSuites
    326:326:okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> supportsTlsExtensions
    304:304:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    315:315:okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> tlsVersions
okhttp3.Cookie -> okhttp3.Cookie:
    45:51:void <clinit>() -> <clinit>
    65:74:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    77:78:void <init>(okhttp3.Cookie$Builder) -> <init>
    381:381:int dateCharacterOffset(java.lang.String,int,int,boolean) -> dateCharacterOffset
    140:140:java.lang.String domain() -> domain
    183:191:boolean domainMatch(okhttp3.HttpUrl,java.lang.String) -> domainMatch
    577:582:boolean equals(java.lang.Object) -> equals
    118:118:long expiresAt() -> expiresAt
    592:600:int hashCode() -> hashCode
    132:132:boolean hostOnly() -> hostOnly
    157:157:boolean httpOnly() -> httpOnly
    170:177:boolean matches(okhttp3.HttpUrl) -> matches
    95:95:java.lang.String name() -> name
    218:218:okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> parse
    223:314:okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String) -> parse
    432:444:java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> parseAll
    417:418:java.lang.String parseDomain(java.lang.String) -> parseDomain
    320:356:long parseExpires(java.lang.String,int,int) -> parseExpires
    401:408:long parseMaxAge(java.lang.String) -> parseMaxAge
    149:149:java.lang.String path() -> path
    199:207:boolean pathMatch(okhttp3.HttpUrl,java.lang.String) -> pathMatch
    105:105:boolean persistent() -> persistent
    162:162:boolean secure() -> secure
    533:533:java.lang.String toString() -> toString
    542:573:java.lang.String toString(boolean) -> toString
    100:100:java.lang.String value() -> value
okhttp3.Cookie$Builder -> okhttp3.Cookie$Builder:
    451:456:void <init>() -> <init>
    528:528:okhttp3.Cookie build() -> build
    489:489:okhttp3.Cookie$Builder domain(java.lang.String) -> domain
    502:501:okhttp3.Cookie$Builder domain(java.lang.String,boolean) -> domain
    479:480:okhttp3.Cookie$Builder expiresAt(long) -> expiresAt
    497:497:okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String) -> hostOnlyDomain
    523:523:okhttp3.Cookie$Builder httpOnly() -> httpOnly
    464:463:okhttp3.Cookie$Builder name(java.lang.String) -> name
    512:512:okhttp3.Cookie$Builder path(java.lang.String) -> path
    518:518:okhttp3.Cookie$Builder secure() -> secure
    471:470:okhttp3.Cookie$Builder value(java.lang.String) -> value
okhttp3.CookieJar -> okhttp3.CookieJar:
    36:36:void <clinit>() -> <clinit>
okhttp3.CookieJar$1 -> okhttp3.CookieJar$1:
    36:36:void <init>() -> <init>
    41:41:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
okhttp3.Credentials -> okhttp3.Credentials:
    23:23:void <init>() -> <init>
    29:34:java.lang.String basic(java.lang.String,java.lang.String) -> basic
okhttp3.Dispatcher -> okhttp3.Dispatcher:
    55:56:void <init>(java.util.concurrent.ExecutorService) -> <init>
    59:53:void <init>() -> <init>
    140:151:void cancelAll() -> cancelAll
    127:133:void enqueue(okhttp3.RealCall$AsyncCall) -> enqueue
    181:182:void executed(okhttp3.RealCall) -> executed
    63:67:java.util.concurrent.ExecutorService executorService() -> executorService
    186:186:void finished(okhttp3.RealCall$AsyncCall) -> finished
    191:191:void finished(okhttp3.RealCall) -> finished
    197:202:void finished(java.util.Deque,java.lang.Object,boolean) -> finished
    86:86:int getMaxRequests() -> getMaxRequests
    107:107:int getMaxRequestsPerHost() -> getMaxRequestsPerHost
    154:166:void promoteCalls() -> promoteCalls
    211:215:java.util.List queuedCalls() -> queuedCalls
    229:229:int queuedCallsCount() -> queuedCallsCount
    220:225:java.util.List runningCalls() -> runningCalls
    233:233:int runningCallsCount() -> runningCallsCount
    173:174:int runningCallsForHost(okhttp3.RealCall$AsyncCall) -> runningCallsForHost
    123:124:void setIdleCallback(java.lang.Runnable) -> setIdleCallback
    81:79:void setMaxRequests(int) -> setMaxRequests
    102:100:void setMaxRequestsPerHost(int) -> setMaxRequestsPerHost
okhttp3.Dns -> okhttp3.Dns:
    36:36:void <clinit>() -> <clinit>
okhttp3.Dns$1 -> okhttp3.Dns$1:
    36:36:void <init>() -> <init>
    39:38:java.util.List lookup(java.lang.String) -> lookup
okhttp3.FormBody -> okhttp3.FormBody:
    30:30:void <clinit>() -> <clinit>
    35:37:void <init>(java.util.List,java.util.List) -> <init>
    66:66:long contentLength() -> contentLength
    62:62:okhttp3.MediaType contentType() -> contentType
    46:46:java.lang.String encodedName(int) -> encodedName
    54:54:java.lang.String encodedValue(int) -> encodedValue
    50:50:java.lang.String name(int) -> name
    42:42:int size() -> size
    58:58:java.lang.String value(int) -> value
    84:98:long writeOrCountBytes(okio.BufferedSink,boolean) -> writeOrCountBytes
    70:70:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.FormBody$Builder -> okhttp3.FormBody$Builder:
    104:106:void <init>() -> <init>
    109:110:okhttp3.FormBody$Builder add(java.lang.String,java.lang.String) -> add
    115:116:okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String) -> addEncoded
    121:121:okhttp3.FormBody build() -> build
okhttp3.Handshake -> okhttp3.Handshake:
    41:45:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> <init>
    92:92:okhttp3.CipherSuite cipherSuite() -> cipherSuite
    120:125:boolean equals(java.lang.Object) -> equals
    49:50:okhttp3.Handshake get(javax.net.ssl.SSLSession) -> get
    78:77:okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> get
    130:133:int hashCode() -> hashCode
    109:109:java.util.List localCertificates() -> localCertificates
    114:115:java.security.Principal localPrincipal() -> localPrincipal
    97:97:java.util.List peerCertificates() -> peerCertificates
    102:103:java.security.Principal peerPrincipal() -> peerPrincipal
    87:87:okhttp3.TlsVersion tlsVersion() -> tlsVersion
okhttp3.Headers -> okhttp3.Headers:
    52:53:void <init>(okhttp3.Headers$Builder) -> <init>
    56:57:void <init>(java.lang.String[]) -> <init>
    145:146:boolean equals(java.lang.Object) -> equals
    62:62:java.lang.String get(java.lang.String) -> get
    176:178:java.lang.String get(java.lang.String[],java.lang.String) -> get
    70:71:java.util.Date getDate(java.lang.String) -> getDate
    150:150:int hashCode() -> hashCode
    81:81:java.lang.String name(int) -> name
    91:95:java.util.Set names() -> names
    113:114:okhttp3.Headers$Builder newBuilder() -> newBuilder
    190:189:okhttp3.Headers of(java.lang.String[]) -> of
    220:217:okhttp3.Headers of(java.util.Map) -> of
    76:76:int size() -> size
    162:170:java.util.Map toMultimap() -> toMultimap
    154:158:java.lang.String toString() -> toString
    86:86:java.lang.String value(int) -> value
    101:109:java.util.List values(java.lang.String) -> values
okhttp3.Headers$Builder -> okhttp3.Headers$Builder:
    239:240:void <init>() -> <init>
    261:263:okhttp3.Headers$Builder add(java.lang.String) -> add
    270:271:okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> add
    247:255:okhttp3.Headers$Builder addLenient(java.lang.String) -> addLenient
    279:280:okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String) -> addLenient
    337:337:okhttp3.Headers build() -> build
    308:307:void checkNameAndValue(java.lang.String,java.lang.String) -> checkNameAndValue
    328:330:java.lang.String get(java.lang.String) -> get
    285:288:okhttp3.Headers$Builder removeAll(java.lang.String) -> removeAll
    300:302:okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> set
okhttp3.HttpUrl -> okhttp3.HttpUrl:
    285:285:void <clinit>() -> <clinit>
    333:346:void <init>(okhttp3.HttpUrl$Builder) -> <init>
    1810:1827:java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean) -> canonicalize
    1835:1834:void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean) -> canonicalize
    1868:1867:java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> canonicalize
    505:507:int defaultPort(java.lang.String) -> defaultPort
    823:825:java.lang.String encodedFragment() -> encodedFragment
    440:443:java.lang.String encodedPassword() -> encodedPassword
    541:543:java.lang.String encodedPath() -> encodedPath
    565:571:java.util.List encodedPathSegments() -> encodedPathSegments
    608:611:java.lang.String encodedQuery() -> encodedQuery
    407:410:java.lang.String encodedUsername() -> encodedUsername
    937:937:boolean equals(java.lang.Object) -> equals
    841:841:java.lang.String fragment() -> fragment
    906:906:okhttp3.HttpUrl get(java.net.URL) -> get
    933:933:okhttp3.HttpUrl get(java.net.URI) -> get
    917:921:okhttp3.HttpUrl getChecked(java.lang.String) -> getChecked
    941:941:int hashCode() -> hashCode
    481:481:java.lang.String host() -> host
    392:392:boolean isHttps() -> isHttps
    615:622:void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List) -> namesAndValuesToQueryString
    867:877:okhttp3.HttpUrl$Builder newBuilder() -> newBuilder
    886:888:okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> newBuilder
    896:898:okhttp3.HttpUrl parse(java.lang.String) -> parse
    458:458:java.lang.String password() -> password
    589:589:java.util.List pathSegments() -> pathSegments
    547:549:void pathSegmentsToString(java.lang.StringBuilder,java.util.List) -> pathSegmentsToString
    526:526:int pathSize() -> pathSize
    1727:1727:java.lang.String percentDecode(java.lang.String,boolean) -> percentDecode
    1731:1737:java.util.List percentDecode(java.util.List,boolean) -> percentDecode
    1742:1753:java.lang.String percentDecode(java.lang.String,int,int,boolean) -> percentDecode
    1759:1758:void percentDecode(okio.Buffer,java.lang.String,int,int,boolean) -> percentDecode
    1778:1780:boolean percentEncoded(java.lang.String,int,int) -> percentEncoded
    497:497:int port() -> port
    668:671:java.lang.String query() -> query
    706:709:java.lang.String queryParameter(java.lang.String) -> queryParameter
    784:784:java.lang.String queryParameterName(int) -> queryParameterName
    729:734:java.util.Set queryParameterNames() -> queryParameterNames
    806:806:java.lang.String queryParameterValue(int) -> queryParameterValue
    756:763:java.util.List queryParameterValues(java.lang.String) -> queryParameterValues
    689:689:int querySize() -> querySize
    634:642:java.util.List queryStringToNamesAndValues(java.lang.String) -> queryStringToNamesAndValues
    850:854:java.lang.String redact() -> redact
    862:863:okhttp3.HttpUrl resolve(java.lang.String) -> resolve
    388:388:java.lang.String scheme() -> scheme
    945:945:java.lang.String toString() -> toString
    372:381:java.net.URI uri() -> uri
    352:354:java.net.URL url() -> url
    425:425:java.lang.String username() -> username
okhttp3.HttpUrl$1 -> okhttp3.HttpUrl$1:
    919:919:void <clinit>() -> <clinit>
okhttp3.HttpUrl$Builder -> okhttp3.HttpUrl$Builder:
    958:959:void <init>() -> <init>
    1042:1040:okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String) -> addEncodedPathSegment
    1055:1053:okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String) -> addEncodedPathSegments
    1141:1140:okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String) -> addEncodedQueryParameter
    1025:1024:okhttp3.HttpUrl$Builder addPathSegment(java.lang.String) -> addPathSegment
    1035:1034:okhttp3.HttpUrl$Builder addPathSegments(java.lang.String) -> addPathSegments
    1061:1065:okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean) -> addPathSegments
    1129:1128:okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String) -> addQueryParameter
    1233:1233:okhttp3.HttpUrl build() -> build
    1557:1571:java.lang.String canonicalizeHost(java.lang.String,int,int) -> canonicalizeHost
    1651:1673:boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> decodeIpv4Suffix
    1582:1641:java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> decodeIpv6
    1020:1020:int effectivePort() -> effectivePort
    1201:1201:okhttp3.HttpUrl$Builder encodedFragment(java.lang.String) -> encodedFragment
    996:995:okhttp3.HttpUrl$Builder encodedPassword(java.lang.String) -> encodedPassword
    1103:1102:okhttp3.HttpUrl$Builder encodedPath(java.lang.String) -> encodedPath
    1121:1120:okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> encodedQuery
    983:982:okhttp3.HttpUrl$Builder encodedUsername(java.lang.String) -> encodedUsername
    1194:1194:okhttp3.HttpUrl$Builder fragment(java.lang.String) -> fragment
    1007:1006:okhttp3.HttpUrl$Builder host(java.lang.String) -> host
    1684:1710:java.lang.String inet6AddressToAscii(byte[]) -> inet6AddressToAscii
    1462:1462:boolean isDot(java.lang.String) -> isDot
    1466:1469:boolean isDotDot(java.lang.String) -> isDotDot
    1291:1309:okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String) -> parse
    1716:1717:int parsePort(java.lang.String,int,int) -> parsePort
    990:989:okhttp3.HttpUrl$Builder password(java.lang.String) -> password
    1483:1489:void pop() -> pop
    1015:1014:okhttp3.HttpUrl$Builder port(int) -> port
    1541:1544:int portColonOffset(java.lang.String,int,int) -> portColonOffset
    1442:1457:void push(java.lang.String,int,int,boolean,boolean) -> push
    1112:1112:okhttp3.HttpUrl$Builder query(java.lang.String) -> query
    1211:1226:okhttp3.HttpUrl$Builder reencodeForUri() -> reencodeForUri
    1180:1185:void removeAllCanonicalQueryParameters(java.lang.String) -> removeAllCanonicalQueryParameters
    1173:1172:okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String) -> removeAllEncodedQueryParameters
    1164:1163:okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String) -> removeAllQueryParameters
    1094:1096:okhttp3.HttpUrl$Builder removePathSegment(int) -> removePathSegment
    1418:1433:void resolvePath(java.lang.String,int,int) -> resolvePath
    965:964:okhttp3.HttpUrl$Builder scheme(java.lang.String) -> scheme
    1500:1504:int schemeDelimiterOffset(java.lang.String,int,int) -> schemeDelimiterOffset
    1085:1082:okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String) -> setEncodedPathSegment
    1157:1158:okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String) -> setEncodedQueryParameter
    1072:1070:okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String) -> setPathSegment
    1151:1152:okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String) -> setQueryParameter
    1527:1527:int slashCount(java.lang.String,int,int) -> slashCount
    1239:1279:java.lang.String toString() -> toString
    977:976:okhttp3.HttpUrl$Builder username(java.lang.String) -> username
okhttp3.HttpUrl$Builder$ParseResult -> okhttp3.HttpUrl$Builder$ParseResult:
    1283:1282:void <clinit>() -> <clinit>
    1282:1282:void <init>(java.lang.String,int) -> <init>
    1282:1282:okhttp3.HttpUrl$Builder$ParseResult valueOf(java.lang.String) -> valueOf
    1282:1282:okhttp3.HttpUrl$Builder$ParseResult[] values() -> values
okhttp3.MediaType -> okhttp3.MediaType:
    30:31:void <clinit>() -> <clinit>
    39:43:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    103:103:java.nio.charset.Charset charset() -> charset
    111:111:java.nio.charset.Charset charset(java.nio.charset.Charset) -> charset
    123:123:boolean equals(java.lang.Object) -> equals
    127:127:int hashCode() -> hashCode
    51:81:okhttp3.MediaType parse(java.lang.String) -> parse
    96:96:java.lang.String subtype() -> subtype
    119:119:java.lang.String toString() -> toString
    89:89:java.lang.String type() -> type
okhttp3.MultipartBody -> okhttp3.MultipartBody:
    34:65:void <clinit>() -> <clinit>
    73:77:void <init>(okio.ByteString,okhttp3.MediaType,java.util.List) -> <init>
    201:219:java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String) -> appendQuotedString
    85:85:java.lang.String boundary() -> boundary
    107:109:long contentLength() -> contentLength
    103:103:okhttp3.MediaType contentType() -> contentType
    98:98:okhttp3.MultipartBody$Part part(int) -> part
    94:94:java.util.List parts() -> parts
    90:90:int size() -> size
    81:81:okhttp3.MediaType type() -> type
    127:184:long writeOrCountBytes(okio.BufferedSink,boolean) -> writeOrCountBytes
    113:113:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.MultipartBody$Builder -> okhttp3.MultipartBody$Builder:
    283:283:void <init>() -> <init>
    286:287:void <init>(java.lang.String) -> <init>
    317:317:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String) -> addFormDataPart
    322:322:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody) -> addFormDataPart
    307:307:okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody) -> addPart
    312:312:okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody) -> addPart
    328:327:okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part) -> addPart
    334:335:okhttp3.MultipartBody build() -> build
    298:296:okhttp3.MultipartBody$Builder setType(okhttp3.MediaType) -> setType
okhttp3.MultipartBody$Part -> okhttp3.MultipartBody$Part:
    263:265:void <init>(okhttp3.Headers,okhttp3.RequestBody) -> <init>
    273:273:okhttp3.RequestBody body() -> body
    225:225:okhttp3.MultipartBody$Part create(okhttp3.RequestBody) -> create
    232:230:okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody) -> create
    242:242:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String) -> createFormData
    249:247:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody) -> createFormData
    269:269:okhttp3.Headers headers() -> headers
okhttp3.OkHttpClient -> okhttp3.OkHttpClient:
    121:128:void <clinit>() -> <clinit>
    207:207:void <init>() -> <init>
    210:250:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    340:340:okhttp3.Authenticator authenticator() -> authenticator
    312:312:okhttp3.Cache cache() -> cache
    336:336:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    281:281:int connectTimeoutMillis() -> connectTimeoutMillis
    348:348:okhttp3.ConnectionPool connectionPool() -> connectionPool
    372:372:java.util.List connectionSpecs() -> connectionSpecs
    308:308:okhttp3.CookieJar cookieJar() -> cookieJar
    364:364:okhttp3.Dispatcher dispatcher() -> dispatcher
    320:320:okhttp3.Dns dns() -> dns
    356:356:boolean followRedirects() -> followRedirects
    352:352:boolean followSslRedirects() -> followSslRedirects
    332:332:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    381:381:java.util.List interceptors() -> interceptors
    316:316:okhttp3.internal.cache.InternalCache internalCache() -> internalCache
    390:390:java.util.List networkInterceptors() -> networkInterceptors
    410:410:okhttp3.OkHttpClient$Builder newBuilder() -> newBuilder
    397:397:okhttp3.Call newCall(okhttp3.Request) -> newCall
    404:405:okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener) -> newWebSocket
    296:296:int pingIntervalMillis() -> pingIntervalMillis
    368:368:java.util.List protocols() -> protocols
    300:300:java.net.Proxy proxy() -> proxy
    344:344:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    304:304:java.net.ProxySelector proxySelector() -> proxySelector
    286:286:int readTimeoutMillis() -> readTimeoutMillis
    360:360:boolean retryOnConnectionFailure() -> retryOnConnectionFailure
    324:324:javax.net.SocketFactory socketFactory() -> socketFactory
    328:328:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    271:275:javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager) -> systemDefaultSslSocketFactory
    256:265:javax.net.ssl.X509TrustManager systemDefaultTrustManager() -> systemDefaultTrustManager
    291:291:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.OkHttpClient$1 -> okhttp3.OkHttpClient$1:
    128:128:void <init>() -> <init>
    130:130:void addLenient(okhttp3.Headers$Builder,java.lang.String) -> addLenient
    134:134:void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> addLenient
    161:161:void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> apply
    143:143:boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    148:148:okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> get
    166:166:okhttp3.HttpUrl getHttpUrlChecked(java.lang.String) -> getHttpUrlChecked
    174:174:okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request) -> newWebSocketCall
    152:152:void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> put
    156:156:okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool) -> routeDatabase
    138:138:void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache) -> setCache
    170:170:okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call) -> streamAllocation
okhttp3.OkHttpClient$Builder -> okhttp3.OkHttpClient$Builder:
    441:460:void <init>() -> <init>
    463:489:void <init>(okhttp3.OkHttpClient) -> <init>
    849:849:okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor) -> addInterceptor
    863:863:okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor) -> addNetworkInterceptor
    706:705:okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator) -> authenticator
    868:868:okhttp3.OkHttpClient build() -> build
    585:586:okhttp3.OkHttpClient$Builder cache(okhttp3.Cache) -> cache
    694:693:okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner) -> certificatePinner
    536:534:int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit) -> checkDuration
    498:498:okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit) -> connectTimeout
    729:728:okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool) -> connectionPool
    835:835:okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List) -> connectionSpecs
    573:572:okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar) -> cookieJar
    778:777:okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher) -> dispatcher
    597:596:okhttp3.OkHttpClient$Builder dns(okhttp3.Dns) -> dns
    746:746:okhttp3.OkHttpClient$Builder followRedirects(boolean) -> followRedirects
    740:740:okhttp3.OkHttpClient$Builder followSslRedirects(boolean) -> followSslRedirects
    683:682:okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier) -> hostnameVerifier
    845:845:java.util.List interceptors() -> interceptors
    859:859:java.util.List networkInterceptors() -> networkInterceptors
    529:529:okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit) -> pingInterval
    811:815:okhttp3.OkHttpClient$Builder protocols(java.util.List) -> protocols
    548:548:okhttp3.OkHttpClient$Builder proxy(java.net.Proxy) -> proxy
    718:717:okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator) -> proxyAuthenticator
    561:561:okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector) -> proxySelector
    507:507:okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit) -> readTimeout
    769:769:okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean) -> retryOnConnectionFailure
    579:580:void setInternalCache(okhttp3.internal.cache.InternalCache) -> setInternalCache
    611:610:okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory) -> socketFactory
    626:625:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory) -> sslSocketFactory
    670:668:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager) -> sslSocketFactory
    516:516:okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit) -> writeTimeout
okhttp3.Protocol -> okhttp3.Protocol:
    33:29:void <clinit>() -> <clinit>
    66:67:void <init>(java.lang.String,int,java.lang.String) -> <init>
    77:81:okhttp3.Protocol get(java.lang.String) -> get
    89:89:java.lang.String toString() -> toString
    29:29:okhttp3.Protocol valueOf(java.lang.String) -> valueOf
    29:29:okhttp3.Protocol[] values() -> values
okhttp3.RealCall -> okhttp3.RealCall:
    44:48:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> <init>
    86:86:void cancel() -> cancel
    72:73:void captureCallStackTrace() -> captureCallStackTrace
    33:33:java.lang.Object clone() -> clone
    33:33:okhttp3.Call clone() -> clone
    99:99:okhttp3.RealCall clone() -> clone
    77:80:void enqueue(okhttp3.Callback) -> enqueue
    56:59:okhttp3.Response execute() -> execute
    166:179:okhttp3.Response getResponseWithInterceptorChain() -> getResponseWithInterceptorChain
    94:94:boolean isCanceled() -> isCanceled
    90:90:boolean isExecuted() -> isExecuted
    161:161:java.lang.String redactedUrl() -> redactedUrl
    52:52:okhttp3.Request request() -> request
    103:103:okhttp3.internal.connection.StreamAllocation streamAllocation() -> streamAllocation
    155:157:java.lang.String toLoggableString() -> toLoggableString
okhttp3.RealCall$AsyncCall -> okhttp3.RealCall$AsyncCall:
    109:111:void <init>(okhttp3.RealCall,okhttp3.Callback) -> <init>
    129:145:void execute() -> execute
    123:123:okhttp3.RealCall get() -> get
    115:115:java.lang.String host() -> host
    119:119:okhttp3.Request request() -> request
okhttp3.Request -> okhttp3.Request:
    36:41:void <init>(okhttp3.Request$Builder) -> <init>
    65:65:okhttp3.RequestBody body() -> body
    81:82:okhttp3.CacheControl cacheControl() -> cacheControl
    57:57:java.lang.String header(java.lang.String) -> header
    53:53:okhttp3.Headers headers() -> headers
    61:61:java.util.List headers(java.lang.String) -> headers
    86:86:boolean isHttps() -> isHttps
    49:49:java.lang.String method() -> method
    73:73:okhttp3.Request$Builder newBuilder() -> newBuilder
    69:69:java.lang.Object tag() -> tag
    90:90:java.lang.String toString() -> toString
    45:45:okhttp3.HttpUrl url() -> url
okhttp3.Request$Builder -> okhttp3.Request$Builder:
    106:108:void <init>() -> <init>
    111:116:void <init>(okhttp3.Request) -> <init>
    176:176:okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    254:254:okhttp3.Request build() -> build
    197:199:okhttp3.Request$Builder cacheControl(okhttp3.CacheControl) -> cacheControl
    215:215:okhttp3.Request$Builder delete(okhttp3.RequestBody) -> delete
    219:219:okhttp3.Request$Builder delete() -> delete
    203:203:okhttp3.Request$Builder get() -> get
    207:207:okhttp3.Request$Builder head() -> head
    164:164:okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> header
    187:187:okhttp3.Request$Builder headers(okhttp3.Headers) -> headers
    232:231:okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody) -> method
    227:227:okhttp3.Request$Builder patch(okhttp3.RequestBody) -> patch
    211:211:okhttp3.Request$Builder post(okhttp3.RequestBody) -> post
    223:223:okhttp3.Request$Builder put(okhttp3.RequestBody) -> put
    181:181:okhttp3.Request$Builder removeHeader(java.lang.String) -> removeHeader
    249:249:okhttp3.Request$Builder tag(java.lang.Object) -> tag
    121:120:okhttp3.Request$Builder url(okhttp3.HttpUrl) -> url
    135:132:okhttp3.Request$Builder url(java.lang.String) -> url
    154:153:okhttp3.Request$Builder url(java.net.URL) -> url
okhttp3.RequestBody -> okhttp3.RequestBody:
    27:27:void <init>() -> <init>
    47:56:okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String) -> create
    61:61:okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString) -> create
    78:78:okhttp3.RequestBody create(okhttp3.MediaType,byte[]) -> create
    85:84:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int) -> create
    105:103:okhttp3.RequestBody create(okhttp3.MediaType,java.io.File) -> create
okhttp3.RequestBody$1 -> okhttp3.RequestBody$1:
    61:61:void <init>(okhttp3.MediaType,okio.ByteString) -> <init>
    67:67:long contentLength() -> contentLength
    63:63:okhttp3.MediaType contentType() -> contentType
    71:71:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.RequestBody$2 -> okhttp3.RequestBody$2:
    86:86:void <init>(okhttp3.MediaType,int,byte[],int) -> <init>
    92:92:long contentLength() -> contentLength
    88:88:okhttp3.MediaType contentType() -> contentType
    96:96:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.RequestBody$3 -> okhttp3.RequestBody$3:
    105:105:void <init>(okhttp3.MediaType,java.io.File) -> <init>
    111:111:long contentLength() -> contentLength
    107:107:okhttp3.MediaType contentType() -> contentType
    117:120:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.Response -> okhttp3.Response:
    58:70:void <init>(okhttp3.Response$Builder) -> <init>
    176:176:okhttp3.ResponseBody body() -> body
    249:250:okhttp3.CacheControl cacheControl() -> cacheControl
    213:213:okhttp3.Response cacheResponse() -> cacheResponse
    234:239:java.util.List challenges() -> challenges
    273:273:void close() -> close
    97:97:int code() -> code
    118:118:okhttp3.Handshake handshake() -> handshake
    126:126:java.lang.String header(java.lang.String) -> header
    130:130:java.lang.String header(java.lang.String,java.lang.String) -> header
    122:122:java.util.List headers(java.lang.String) -> headers
    135:135:okhttp3.Headers headers() -> headers
    185:185:boolean isRedirect() -> isRedirect
    105:105:boolean isSuccessful() -> isSuccessful
    110:110:java.lang.String message() -> message
    204:204:okhttp3.Response networkResponse() -> networkResponse
    180:180:okhttp3.Response$Builder newBuilder() -> newBuilder
    150:164:okhttp3.ResponseBody peekBody(long) -> peekBody
    223:223:okhttp3.Response priorResponse() -> priorResponse
    92:92:okhttp3.Protocol protocol() -> protocol
    268:268:long receivedResponseAtMillis() -> receivedResponseAtMillis
    85:85:okhttp3.Request request() -> request
    259:259:long sentRequestAtMillis() -> sentRequestAtMillis
    277:284:java.lang.String toString() -> toString
okhttp3.Response$Builder -> okhttp3.Response$Builder:
    302:303:void <init>() -> <init>
    306:318:void <init>(okhttp3.Response) -> <init>
    360:360:okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    376:376:okhttp3.Response$Builder body(okhttp3.ResponseBody) -> body
    427:427:okhttp3.Response build() -> build
    387:388:okhttp3.Response$Builder cacheResponse(okhttp3.Response) -> cacheResponse
    411:412:void checkPriorResponse(okhttp3.Response) -> checkPriorResponse
    393:394:void checkSupportResponse(java.lang.String,okhttp3.Response) -> checkSupportResponse
    332:332:okhttp3.Response$Builder code(int) -> code
    342:342:okhttp3.Response$Builder handshake(okhttp3.Handshake) -> handshake
    351:351:okhttp3.Response$Builder header(java.lang.String,java.lang.String) -> header
    371:371:okhttp3.Response$Builder headers(okhttp3.Headers) -> headers
    337:337:okhttp3.Response$Builder message(java.lang.String) -> message
    381:382:okhttp3.Response$Builder networkResponse(okhttp3.Response) -> networkResponse
    405:406:okhttp3.Response$Builder priorResponse(okhttp3.Response) -> priorResponse
    327:327:okhttp3.Response$Builder protocol(okhttp3.Protocol) -> protocol
    422:422:okhttp3.Response$Builder receivedResponseAtMillis(long) -> receivedResponseAtMillis
    365:365:okhttp3.Response$Builder removeHeader(java.lang.String) -> removeHeader
    322:322:okhttp3.Response$Builder request(okhttp3.Request) -> request
    417:417:okhttp3.Response$Builder sentRequestAtMillis(long) -> sentRequestAtMillis
okhttp3.ResponseBody -> okhttp3.ResponseBody:
    101:101:void <init>() -> <init>
    114:114:java.io.InputStream byteStream() -> byteStream
    127:129:byte[] bytes() -> bytes
    156:157:java.io.Reader charStream() -> charStream
    181:182:java.nio.charset.Charset charset() -> charset
    186:186:void close() -> close
    194:203:okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String) -> create
    208:209:okhttp3.ResponseBody create(okhttp3.MediaType,byte[]) -> create
    216:215:okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource) -> create
    171:176:java.lang.String string() -> string
okhttp3.ResponseBody$1 -> okhttp3.ResponseBody$1:
    216:216:void <init>(okhttp3.MediaType,long,okio.BufferedSource) -> <init>
    222:222:long contentLength() -> contentLength
    218:218:okhttp3.MediaType contentType() -> contentType
    226:226:okio.BufferedSource source() -> source
okhttp3.ResponseBody$BomAwareReader -> okhttp3.ResponseBody$BomAwareReader:
    238:240:void <init>(okio.BufferedSource,java.nio.charset.Charset) -> <init>
    255:259:void close() -> close
    244:244:int read(char[],int,int) -> read
okhttp3.Route -> okhttp3.Route:
    41:43:void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress) -> <init>
    57:57:okhttp3.Address address() -> address
    83:87:boolean equals(java.lang.Object) -> equals
    94:96:int hashCode() -> hashCode
    67:67:java.net.Proxy proxy() -> proxy
    79:79:boolean requiresTunnel() -> requiresTunnel
    71:71:java.net.InetSocketAddress socketAddress() -> socketAddress
okhttp3.TlsVersion -> okhttp3.TlsVersion:
    23:22:void <clinit>() -> <clinit>
    32:33:void <init>(java.lang.String,int,java.lang.String) -> <init>
    37:39:okhttp3.TlsVersion forJavaName(java.lang.String) -> forJavaName
    53:53:java.lang.String javaName() -> javaName
    22:22:okhttp3.TlsVersion valueOf(java.lang.String) -> valueOf
    22:22:okhttp3.TlsVersion[] values() -> values
okhttp3.WebSocketListener -> okhttp3.WebSocketListener:
    20:20:void <init>() -> <init>
okhttp3.internal.Internal -> okhttp3.internal.Internal:
    38:38:void <init>() -> <init>
    42:42:void initializeInstanceForTests() -> initializeInstanceForTests
okhttp3.internal.NamedRunnable -> okhttp3.internal.NamedRunnable:
    24:25:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    29:34:void run() -> run
okhttp3.internal.Util -> okhttp3.internal.Util:
    45:76:void <clinit>() -> <clinit>
    79:79:void <init>() -> <init>
    397:415:java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset) -> bomAwareCharset
    84:84:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    100:102:void closeQuietly(java.io.Closeable) -> closeQuietly
    115:117:void closeQuietly(java.net.Socket) -> closeQuietly
    132:134:void closeQuietly(java.net.ServerSocket) -> closeQuietly
    270:272:java.lang.String[] concat(java.lang.String[],java.lang.String) -> concat
    368:379:boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> containsInvalidHostnameAsciiCodes
    329:329:int delimiterOffset(java.lang.String,int,int,java.lang.String) -> delimiterOffset
    340:340:int delimiterOffset(java.lang.String,int,int,char) -> delimiterOffset
    147:147:boolean discard(okio.Source,int,java.util.concurrent.TimeUnit) -> discard
    353:357:java.lang.String domainToAscii(java.lang.String) -> domainToAscii
    90:90:boolean equal(java.lang.Object,java.lang.Object) -> equal
    393:393:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    228:232:java.lang.String hostHeader(okhttp3.HttpUrl,boolean) -> hostHeader
    182:182:java.util.List immutableList(java.util.List) -> immutableList
    187:187:java.util.List immutableList(java.lang.Object[]) -> immutableList
    263:264:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    206:207:java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[]) -> intersect
    215:219:java.util.List intersect(java.lang.Object[],java.lang.Object[]) -> intersect
    258:259:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    158:175:boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit) -> skipAll
    282:282:int skipLeadingAsciiWhitespace(java.lang.String,int,int) -> skipLeadingAsciiWhitespace
    302:302:int skipTrailingAsciiWhitespace(java.lang.String,int,int) -> skipTrailingAsciiWhitespace
    191:191:java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> threadFactory
    422:422:void throwIfFatal(java.lang.Throwable) -> throwIfFatal
    238:248:java.lang.String toHumanReadableAscii(java.lang.String) -> toHumanReadableAscii
    318:320:java.lang.String trimSubstring(java.lang.String,int,int) -> trimSubstring
    388:388:boolean verifyAsIpAddress(java.lang.String) -> verifyAsIpAddress
okhttp3.internal.Util$1 -> okhttp3.internal.Util$1:
    191:191:void <init>(java.lang.String,boolean) -> <init>
    193:194:java.lang.Thread newThread(java.lang.Runnable) -> newThread
okhttp3.internal.Version -> okhttp3.internal.Version:
    23:23:void <init>() -> <init>
okhttp3.internal.cache.CacheInterceptor -> okhttp3.internal.cache.CacheInterceptor:
    48:49:void <init>(okhttp3.internal.cache.InternalCache) -> <init>
    171:221:okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response) -> cacheWritingResponse
    226:249:okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers) -> combine
    53:97:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    257:264:boolean isEndToEnd(java.lang.String) -> isEndToEnd
    147:159:okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache) -> maybeCache
    137:138:okhttp3.Response stripBody(okhttp3.Response) -> stripBody
okhttp3.internal.cache.CacheInterceptor$1 -> okhttp3.internal.cache.CacheInterceptor$1:
    177:177:void <init>(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink) -> <init>
    210:215:void close() -> close
    183:189:long read(okio.Buffer,long) -> read
    206:206:okio.Timeout timeout() -> timeout
okhttp3.internal.cache.CacheStrategy -> okhttp3.internal.cache.CacheStrategy:
    56:58:void <init>(okhttp3.Request,okhttp3.Response) -> <init>
    65:99:boolean isCacheable(okhttp3.Response,okhttp3.Request) -> isCacheable
okhttp3.internal.cache.CacheStrategy$Factory -> okhttp3.internal.cache.CacheStrategy$Factory:
    139:162:void <init>(long,okhttp3.Request,okhttp3.Response) -> <init>
    296:303:long cacheResponseAge() -> cacheResponseAge
    267:286:long computeFreshnessLifetime() -> computeFreshnessLifetime
    172:176:okhttp3.internal.cache.CacheStrategy get() -> get
    185:203:okhttp3.internal.cache.CacheStrategy getCandidate() -> getCandidate
    321:321:boolean hasConditions(okhttp3.Request) -> hasConditions
    312:312:boolean isFreshnessLifetimeHeuristic() -> isFreshnessLifetimeHeuristic
okhttp3.internal.cache.DiskLruCache -> okhttp3.internal.cache.DiskLruCache:
    86:93:void <clinit>() -> <clinit>
    195:204:void <init>(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,java.util.concurrent.Executor) -> <init>
    643:644:void checkNotClosed() -> checkNotClosed
    659:661:void close() -> close
    528:530:void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean) -> completeEdit
    262:255:okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long) -> create
    688:689:void delete() -> delete
    452:452:okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String) -> edit
    456:475:okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    697:703:void evictAll() -> evictAll
    650:655:void flush() -> flush
    429:434:okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String) -> get
    497:497:java.io.File getDirectory() -> getDirectory
    504:504:long getMaxSize() -> getMaxSize
    210:242:void initialize() -> initialize
    639:639:boolean isClosed() -> isClosed
    593:594:boolean journalRebuildRequired() -> journalRebuildRequired
    308:315:okio.BufferedSink newJournalWriter() -> newJournalWriter
    362:375:void processJournal() -> processJournal
    269:303:void readJournal() -> readJournal
    319:321:void readJournalLine(java.lang.String) -> readJournalLine
    385:410:void rebuildJournal() -> rebuildJournal
    604:612:boolean remove(java.lang.String) -> remove
    616:631:boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry) -> removeEntry
    512:516:void setMaxSize(long) -> setMaxSize
    523:524:long size() -> size
    729:730:java.util.Iterator snapshots() -> snapshots
    676:680:void trimToSize() -> trimToSize
    706:708:void validateKey(java.lang.String) -> validateKey
okhttp3.internal.cache.DiskLruCache$1 -> okhttp3.internal.cache.DiskLruCache$1:
    168:168:void <init>(okhttp3.internal.cache.DiskLruCache) -> <init>
    170:190:void run() -> run
okhttp3.internal.cache.DiskLruCache$2 -> okhttp3.internal.cache.DiskLruCache$2:
    309:309:void <clinit>() -> <clinit>
    309:309:void <init>(okhttp3.internal.cache.DiskLruCache,okio.Sink) -> <init>
    312:312:void onException(java.io.IOException) -> onException
okhttp3.internal.cache.DiskLruCache$3 -> okhttp3.internal.cache.DiskLruCache$3:
    730:732:void <init>(okhttp3.internal.cache.DiskLruCache) -> <init>
    741:754:boolean hasNext() -> hasNext
    730:730:java.lang.Object next() -> next
    760:760:okhttp3.internal.cache.DiskLruCache$Snapshot next() -> next
    767:767:void remove() -> remove
okhttp3.internal.cache.DiskLruCache$Editor -> okhttp3.internal.cache.DiskLruCache$Editor:
    829:831:void <init>(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry) -> <init>
    927:935:void abort() -> abort
    939:946:void abortUnlessCommitted() -> abortUnlessCommitted
    911:919:void commit() -> commit
    841:849:void detach() -> detach
    879:903:okio.Sink newSink(int) -> newSink
    858:870:okio.Source newSource(int) -> newSource
okhttp3.internal.cache.DiskLruCache$Editor$1 -> okhttp3.internal.cache.DiskLruCache$Editor$1:
    896:896:void <init>(okhttp3.internal.cache.DiskLruCache$Editor,okio.Sink) -> <init>
    898:900:void onException(java.io.IOException) -> onException
okhttp3.internal.cache.DiskLruCache$Entry -> okhttp3.internal.cache.DiskLruCache$Entry:
    967:982:void <init>(okhttp3.internal.cache.DiskLruCache,java.lang.String) -> <init>
    1009:1009:java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    988:989:void setLengths(java.lang.String[]) -> setLengths
    1018:1018:okhttp3.internal.cache.DiskLruCache$Snapshot snapshot() -> snapshot
    1003:1004:void writeLengths(okio.BufferedSink) -> writeLengths
okhttp3.internal.cache.DiskLruCache$Snapshot -> okhttp3.internal.cache.DiskLruCache$Snapshot:
    787:791:void <init>(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,okio.Source[],long[]) -> <init>
    781:781:java.lang.String access$000(okhttp3.internal.cache.DiskLruCache$Snapshot) -> access$000
    817:818:void close() -> close
    803:803:okhttp3.internal.cache.DiskLruCache$Editor edit() -> edit
    813:813:long getLength(int) -> getLength
    808:808:okio.Source getSource(int) -> getSource
    795:795:java.lang.String key() -> key
okhttp3.internal.cache.FaultHidingSink -> okhttp3.internal.cache.FaultHidingSink:
    28:28:void <init>(okio.Sink) -> <init>
    55:60:void close() -> close
    45:50:void flush() -> flush
    32:40:void write(okio.Buffer,long) -> write
okhttp3.internal.cache2.FileOperator -> okhttp3.internal.cache2.FileOperator:
    44:45:void <init>(java.nio.channels.FileChannel) -> <init>
    83:78:void read(long,okio.Buffer,long) -> read
    50:50:void write(long,okio.Buffer,long) -> write
okhttp3.internal.cache2.Relay -> okhttp3.internal.cache2.Relay:
    45:46:void <clinit>() -> <clinit>
    107:113:void <init>(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long) -> <init>
    186:196:void commit(long) -> commit
    126:131:okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long) -> edit
    203:203:boolean isClosed() -> isClosed
    207:207:okio.ByteString metadata() -> metadata
    216:219:okio.Source newSource() -> newSource
    144:151:okhttp3.internal.cache2.Relay read(java.io.File) -> read
    166:170:void writeHeader(okio.ByteString,long,long) -> writeHeader
    177:181:void writeMetadata(long) -> writeMetadata
okhttp3.internal.cache2.Relay$RelaySource -> okhttp3.internal.cache2.Relay$RelaySource:
    224:228:void <init>(okhttp3.internal.cache2.Relay) -> <init>
    344:354:void close() -> close
    252:252:long read(okio.Buffer,long) -> read
    340:340:okio.Timeout timeout() -> timeout
okhttp3.internal.connection.ConnectInterceptor -> okhttp3.internal.connection.ConnectInterceptor:
    31:32:void <init>(okhttp3.OkHttpClient) -> <init>
    36:45:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.connection.ConnectionSpecSelector -> okhttp3.internal.connection.ConnectionSpecSelector:
    44:46:void <init>(java.util.List) -> <init>
    57:73:okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> configureSecureSocket
    92:126:boolean connectionFailed(java.io.IOException) -> connectionFailed
    135:136:boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> isFallbackPossible
okhttp3.internal.connection.RealConnection -> okhttp3.internal.connection.RealConnection:
    85:86:void <init>(okhttp3.Route) -> <init>
    173:174:void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector) -> buildConnection
    145:151:void buildTunneledConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector) -> buildTunneledConnection
    355:355:void cancel() -> cancel
    91:91:void connect(int,int,int,java.util.List,boolean) -> connect
    178:191:void connectSocket(int,int) -> connectSocket
    225:278:void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector) -> connectTls
    290:315:okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl) -> createTunnel
    341:346:okhttp3.Request createTunnelRequest() -> createTunnelRequest
    199:219:void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector) -> establishProtocol
    405:405:okhttp3.Handshake handshake() -> handshake
    364:382:boolean isHealthy(boolean) -> isHealthy
    413:413:boolean isMultiplexed() -> isMultiplexed
    401:401:void onSettings(okhttp3.internal.http2.Http2Connection) -> onSettings
    396:396:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
    417:420:okhttp3.Protocol protocol() -> protocol
    350:350:okhttp3.Route route() -> route
    359:359:java.net.Socket socket() -> socket
    425:432:java.lang.String toString() -> toString
okhttp3.internal.connection.RouteDatabase -> okhttp3.internal.connection.RouteDatabase:
    28:29:void <init>() -> <init>
    38:39:void connected(okhttp3.Route) -> connected
    33:34:void failed(okhttp3.Route) -> failed
    43:43:boolean shouldPostpone(okhttp3.Route) -> shouldPostpone
okhttp3.internal.connection.RouteException -> okhttp3.internal.connection.RouteException:
    32:36:void <clinit>() -> <clinit>
    42:43:void <init>(java.io.IOException) -> <init>
    51:52:void addConnectException(java.io.IOException) -> addConnectException
    56:58:void addSuppressedIfPossible(java.io.IOException,java.io.IOException) -> addSuppressedIfPossible
    47:47:java.io.IOException getLastConnectException() -> getLastConnectException
okhttp3.internal.connection.RouteSelector -> okhttp3.internal.connection.RouteSelector:
    56:60:void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase) -> <init>
    100:106:void connectFailed(okhttp3.Route,java.io.IOException) -> connectFailed
    186:195:java.lang.String getHostString(java.net.InetSocketAddress) -> getHostString
    67:69:boolean hasNext() -> hasNext
    200:200:boolean hasNextInetSocketAddress() -> hasNextInetSocketAddress
    214:214:boolean hasNextPostponed() -> hasNextPostponed
    126:126:boolean hasNextProxy() -> hasNextProxy
    74:89:okhttp3.Route next() -> next
    205:206:java.net.InetSocketAddress nextInetSocketAddress() -> nextInetSocketAddress
    219:219:okhttp3.Route nextPostponed() -> nextPostponed
    131:132:java.net.Proxy nextProxy() -> nextProxy
    143:162:void resetNextInetSocketAddress(java.net.Proxy) -> resetNextInetSocketAddress
    113:121:void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy) -> resetNextProxy
okhttp3.internal.connection.StreamAllocation -> okhttp3.internal.connection.StreamAllocation:
    87:91:void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object) -> <init>
    325:325:void acquire(okhttp3.internal.connection.RealConnection) -> acquire
    275:279:void cancel() -> cancel
    216:218:okhttp3.internal.http.HttpCodec codec() -> codec
    226:226:okhttp3.internal.connection.RealConnection connection() -> connection
    244:266:void deallocate(boolean,boolean,boolean) -> deallocate
    160:178:okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean) -> findConnection
    132:140:okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean) -> findHealthyConnection
    341:341:boolean hasMoreRoutes() -> hasMoreRoutes
    95:120:okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean) -> newStream
    235:235:void noNewStreams() -> noNewStreams
    230:230:void release() -> release
    330:337:void release(okhttp3.internal.connection.RealConnection) -> release
    222:222:okhttp3.internal.connection.RouteDatabase routeDatabase() -> routeDatabase
    290:314:void streamFailed(java.io.IOException) -> streamFailed
    204:211:void streamFinished(boolean,okhttp3.internal.http.HttpCodec) -> streamFinished
    345:345:java.lang.String toString() -> toString
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference -> okhttp3.internal.connection.StreamAllocation$StreamAllocationReference:
    356:357:void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object) -> <init>
okhttp3.internal.http.BridgeInterceptor -> okhttp3.internal.http.BridgeInterceptor:
    43:44:void <init>(okhttp3.CookieJar) -> <init>
    117:125:java.lang.String cookieHeader(java.util.List) -> cookieHeader
    48:112:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor -> okhttp3.internal.http.CallServerInterceptor:
    33:34:void <init>(boolean) -> <init>
    38:80:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.HttpDate -> okhttp3.internal.http.HttpDate:
    37:71:void <clinit>() -> <clinit>
    117:117:void <init>() -> <init>
    114:114:java.lang.String format(java.util.Date) -> format
    76:108:java.util.Date parse(java.lang.String) -> parse
okhttp3.internal.http.HttpDate$1 -> okhttp3.internal.http.HttpDate$1:
    38:38:void <init>() -> <init>
    38:38:java.lang.Object initialValue() -> initialValue
    41:43:java.text.DateFormat initialValue() -> initialValue
okhttp3.internal.http.HttpHeaders -> okhttp3.internal.http.HttpHeaders:
    43:43:void <clinit>() -> <clinit>
    45:45:void <init>() -> <init>
    49:49:long contentLength(okhttp3.Response) -> contentLength
    53:53:long contentLength(okhttp3.Headers) -> contentLength
    188:202:boolean hasBody(okhttp3.Response) -> hasBody
    81:81:boolean hasVaryAll(okhttp3.Response) -> hasVaryAll
    88:88:boolean hasVaryAll(okhttp3.Headers) -> hasVaryAll
    155:162:java.util.List parseChallenges(okhttp3.Headers,java.lang.String) -> parseChallenges
    242:242:int parseSeconds(java.lang.String,int) -> parseSeconds
    177:182:void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers) -> receiveHeaders
    214:215:int skipUntil(java.lang.String,int,java.lang.String) -> skipUntil
    227:228:int skipWhitespace(java.lang.String,int) -> skipWhitespace
    59:59:long stringToLong(java.lang.String) -> stringToLong
    92:92:java.util.Set varyFields(okhttp3.Response) -> varyFields
    99:108:java.util.Set varyFields(okhttp3.Headers) -> varyFields
    122:124:okhttp3.Headers varyHeaders(okhttp3.Response) -> varyHeaders
    132:142:okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers) -> varyHeaders
    71:72:boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request) -> varyMatches
okhttp3.internal.http.HttpMethod -> okhttp3.internal.http.HttpMethod:
    53:53:void <init>() -> <init>
    20:24:boolean invalidatesCache(java.lang.String) -> invalidatesCache
    36:41:boolean permitsRequestBody(java.lang.String) -> permitsRequestBody
    50:50:boolean redirectsToGet(java.lang.String) -> redirectsToGet
    45:45:boolean redirectsWithBody(java.lang.String) -> redirectsWithBody
    28:32:boolean requiresRequestBody(java.lang.String) -> requiresRequestBody
okhttp3.internal.http.RealInterceptorChain -> okhttp3.internal.http.RealInterceptorChain:
    41:47:void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection,int,okhttp3.Request) -> <init>
    51:51:okhttp3.Connection connection() -> connection
    59:59:okhttp3.internal.http.HttpCodec httpStream() -> httpStream
    67:67:okhttp3.Response proceed(okhttp3.Request) -> proceed
    72:72:okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection) -> proceed
    63:63:okhttp3.Request request() -> request
    109:110:boolean sameConnection(okhttp3.HttpUrl) -> sameConnection
    55:55:okhttp3.internal.connection.StreamAllocation streamAllocation() -> streamAllocation
okhttp3.internal.http.RealResponseBody -> okhttp3.internal.http.RealResponseBody:
    27:29:void <init>(okhttp3.Headers,okio.BufferedSource) -> <init>
    38:38:long contentLength() -> contentLength
    33:34:okhttp3.MediaType contentType() -> contentType
    42:42:okio.BufferedSource source() -> source
okhttp3.internal.http.RequestLine -> okhttp3.internal.http.RequestLine:
    24:24:void <init>() -> <init>
    33:44:java.lang.String get(okhttp3.Request,java.net.Proxy$Type) -> get
    52:52:boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type) -> includeAuthorityInRequestLine
    60:62:java.lang.String requestPath(okhttp3.HttpUrl) -> requestPath
okhttp3.internal.http.RetryAndFollowUpInterceptor -> okhttp3.internal.http.RetryAndFollowUpInterceptor:
    71:73:void <init>(okhttp3.OkHttpClient,boolean) -> <init>
    86:88:void cancel() -> cancel
    191:199:okhttp3.Address createAddress(okhttp3.HttpUrl) -> createAddress
    266:265:okhttp3.Request followUpRequest(okhttp3.Response) -> followUpRequest
    104:114:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    92:92:boolean isCanceled() -> isCanceled
    229:248:boolean isRecoverable(java.io.IOException,boolean) -> isRecoverable
    209:221:boolean recover(java.io.IOException,boolean,okhttp3.Request) -> recover
    358:361:boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl) -> sameConnection
    96:96:void setCallStackTrace(java.lang.Object) -> setCallStackTrace
    100:100:okhttp3.internal.connection.StreamAllocation streamAllocation() -> streamAllocation
okhttp3.internal.http.StatusLine -> okhttp3.internal.http.StatusLine:
    34:37:void <init>(okhttp3.Protocol,int,java.lang.String) -> <init>
    41:41:okhttp3.internal.http.StatusLine get(okhttp3.Response) -> get
    51:69:okhttp3.internal.http.StatusLine parse(java.lang.String) -> parse
    97:103:java.lang.String toString() -> toString
okhttp3.internal.http1.Http1Codec -> okhttp3.internal.http1.Http1Codec:
    88:92:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink) -> <init>
    111:112:void cancel() -> cancel
    96:106:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    260:263:void detachTimeout(okio.ForwardingTimeout) -> detachTimeout
    166:166:void finishRequest() -> finishRequest
    141:157:okio.Source getTransferStream(okhttp3.Response) -> getTransferStream
    162:162:boolean isClosed() -> isClosed
    223:223:okio.Sink newChunkedSink() -> newChunkedSink
    241:241:okio.Source newChunkedSource(okhttp3.HttpUrl) -> newChunkedSource
    229:229:okio.Sink newFixedLengthSink(long) -> newFixedLengthSink
    235:235:okio.Source newFixedLengthSource(long) -> newFixedLengthSource
    247:247:okio.Source newUnknownLengthSource() -> newUnknownLengthSource
    136:137:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    214:219:okhttp3.Headers readHeaders() -> readHeaders
    185:208:okhttp3.Response$Builder readResponse() -> readResponse
    132:132:okhttp3.Response$Builder readResponseHeaders() -> readResponseHeaders
    171:171:void writeRequest(okhttp3.Headers,java.lang.String) -> writeRequest
    126:128:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http1.Http1Codec$AbstractSource -> okhttp3.internal.http1.Http1Codec$AbstractSource:
    344:345:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    344:344:void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1) -> <init>
    357:358:void endOfInput(boolean) -> endOfInput
    349:349:okio.Timeout timeout() -> timeout
okhttp3.internal.http1.Http1Codec$ChunkedSink -> okhttp3.internal.http1.Http1Codec$ChunkedSink:
    313:310:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    336:341:void close() -> close
    331:333:void flush() -> flush
    317:317:okio.Timeout timeout() -> timeout
    321:321:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1Codec$ChunkedSource -> okhttp3.internal.http1.Http1Codec$ChunkedSource:
    416:417:void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.HttpUrl) -> <init>
    462:466:void close() -> close
    422:421:long read(okio.Buffer,long) -> read
    441:452:void readChunkSize() -> readChunkSize
okhttp3.internal.http1.Http1Codec$FixedLengthSink -> okhttp3.internal.http1.Http1Codec$FixedLengthSink:
    272:273:void <init>(okhttp3.internal.http1.Http1Codec,long) -> <init>
    297:299:void close() -> close
    292:293:void flush() -> flush
    277:277:okio.Timeout timeout() -> timeout
    281:281:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1Codec$FixedLengthSource -> okhttp3.internal.http1.Http1Codec$FixedLengthSource:
    373:376:void <init>(okhttp3.internal.http1.Http1Codec,long) -> <init>
    399:405:void close() -> close
    382:381:long read(okio.Buffer,long) -> read
okhttp3.internal.http1.Http1Codec$UnknownLengthSource -> okhttp3.internal.http1.Http1Codec$UnknownLengthSource:
    474:474:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    493:497:void close() -> close
    480:479:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.ConnectionShutdownException -> okhttp3.internal.http2.ConnectionShutdownException:
    24:24:void <init>() -> <init>
okhttp3.internal.http2.ErrorCode -> okhttp3.internal.http2.ErrorCode:
    21:19:void <clinit>() -> <clinit>
    35:36:void <init>(java.lang.String,int,int) -> <init>
    40:41:okhttp3.internal.http2.ErrorCode fromHttp2(int) -> fromHttp2
    19:19:okhttp3.internal.http2.ErrorCode valueOf(java.lang.String) -> valueOf
    19:19:okhttp3.internal.http2.ErrorCode[] values() -> values
okhttp3.internal.http2.Header -> okhttp3.internal.http2.Header:
    24:29:void <clinit>() -> <clinit>
    39:39:void <init>(java.lang.String,java.lang.String) -> <init>
    43:43:void <init>(okio.ByteString,java.lang.String) -> <init>
    46:49:void <init>(okio.ByteString,okio.ByteString) -> <init>
    53:56:boolean equals(java.lang.Object) -> equals
    63:64:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
okhttp3.internal.http2.Hpack -> okhttp3.internal.http2.Hpack:
    47:349:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    591:594:okio.ByteString checkLowercase(okio.ByteString) -> checkLowercase
    352:358:java.util.Map nameToFirstIndex() -> nameToFirstIndex
okhttp3.internal.http2.Hpack$Reader -> okhttp3.internal.http2.Hpack$Reader:
    131:131:void <init>(int,okio.Source) -> <init>
    134:137:void <init>(int,int,okio.Source) -> <init>
    145:149:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    155:158:void clearDynamicTable() -> clearDynamicTable
    233:233:int dynamicTableIndex(int) -> dynamicTableIndex
    166:174:int evictToRecoverBytes(int) -> evictToRecoverBytes
    213:214:java.util.List getAndResetHeaderList() -> getAndResetHeaderList
    262:265:okio.ByteString getName(int) -> getName
    275:306:void insertIntoDynamicTable(int,okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    270:270:boolean isStaticHeader(int) -> isStaticHeader
    141:141:int maxDynamicTableByteCount() -> maxDynamicTableByteCount
    310:310:int readByte() -> readByte
    337:344:okio.ByteString readByteString() -> readByteString
    184:187:void readHeaders() -> readHeaders
    219:225:void readIndexedHeader(int) -> readIndexedHeader
    323:323:int readInt(int,int) -> readInt
    250:252:void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> readLiteralHeaderWithIncrementalIndexingIndexedName
    256:258:void readLiteralHeaderWithIncrementalIndexingNewName() -> readLiteralHeaderWithIncrementalIndexingNewName
    237:239:void readLiteralHeaderWithoutIndexingIndexedName(int) -> readLiteralHeaderWithoutIndexingIndexedName
    243:245:void readLiteralHeaderWithoutIndexingNewName() -> readLiteralHeaderWithoutIndexingNewName
okhttp3.internal.http2.Hpack$Writer -> okhttp3.internal.http2.Hpack$Writer:
    392:392:void <init>(okio.Buffer) -> <init>
    395:399:void <init>(int,boolean,okio.Buffer) -> <init>
    576:580:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    403:406:void clearDynamicTable() -> clearDynamicTable
    414:423:int evictToRecoverBytes(int) -> evictToRecoverBytes
    429:450:void insertIntoDynamicTable(okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    560:572:void setHeaderTableSizeSetting(int) -> setHeaderTableSizeSetting
    547:555:void writeByteString(okio.ByteString) -> writeByteString
    456:520:void writeHeaders(java.util.List) -> writeHeaders
    529:543:void writeInt(int,int,int) -> writeInt
okhttp3.internal.http2.Http2 -> okhttp3.internal.http2.Http2:
    25:101:void <clinit>() -> <clinit>
    105:105:void <init>() -> <init>
    158:156:java.lang.String formatFlags(byte,byte) -> formatFlags
    135:137:java.lang.String frameLog(boolean,int,int,byte,byte) -> frameLog
    109:109:java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]) -> illegalArgument
    113:113:java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> ioException
okhttp3.internal.http2.Http2Codec -> okhttp3.internal.http2.Http2Codec:
    51:74:void <clinit>() -> <clinit>
    90:93:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection) -> <init>
    167:167:void cancel() -> cancel
    97:97:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    111:111:void finishRequest() -> finishRequest
    119:130:java.util.List http2HeadersList(okhttp3.Request) -> http2HeadersList
    162:163:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    140:151:okhttp3.Response$Builder readHttp2HeadersList(java.util.List) -> readHttp2HeadersList
    115:115:okhttp3.Response$Builder readResponseHeaders() -> readResponseHeaders
    101:107:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http2.Http2Codec$StreamFinishingSource -> okhttp3.internal.http2.Http2Codec$StreamFinishingSource:
    171:172:void <init>(okhttp3.internal.http2.Http2Codec,okio.Source) -> <init>
    176:177:void close() -> close
okhttp3.internal.http2.Http2Connection -> okhttp3.internal.http2.Http2Connection:
    55:71:void <clinit>() -> <clinit>
    125:157:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    299:300:void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    404:404:void close() -> close
    411:427:void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode) -> close
    375:375:void flush() -> flush
    162:162:okhttp3.Protocol getProtocol() -> getProtocol
    173:173:okhttp3.internal.http2.Http2Stream getStream(int) -> getStream
    500:500:boolean isShutdown() -> isShutdown
    183:183:int maxConcurrentStreams() -> maxConcurrentStreams
    205:205:okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> newStream
    216:236:okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> newStream
    169:169:int openStreamCount() -> openStreamCount
    334:344:okhttp3.internal.http2.Ping ping() -> ping
    829:832:void pushDataLater(int,okio.BufferedSource,int,boolean) -> pushDataLater
    807:807:void pushHeadersLater(int,java.util.List,boolean) -> pushHeadersLater
    782:788:void pushRequestLater(int,java.util.List) -> pushRequestLater
    850:850:void pushResetLater(int,okhttp3.internal.http2.ErrorCode) -> pushResetLater
    195:195:okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean) -> pushStream
    371:371:okhttp3.internal.http2.Ping removePing(int) -> removePing
    177:179:okhttp3.internal.http2.Http2Stream removeStream(int) -> removeStream
    488:496:void setSettings(okhttp3.internal.http2.Settings) -> setSettings
    384:396:void shutdown(okhttp3.internal.http2.ErrorCode) -> shutdown
    467:467:void start() -> start
    476:483:void start(boolean) -> start
    265:288:void writeData(int,boolean,okio.Buffer,long) -> writeData
    363:367:void writePing(boolean,int,int,okhttp3.internal.http2.Ping) -> writePing
    351:351:void writePingLater(boolean,int,int,okhttp3.internal.http2.Ping) -> writePingLater
    247:247:void writeSynReply(int,boolean,java.util.List) -> writeSynReply
    315:315:void writeSynReset(int,okhttp3.internal.http2.ErrorCode) -> writeSynReset
    304:304:void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode) -> writeSynResetLater
    319:319:void writeWindowUpdateLater(int,long) -> writeWindowUpdateLater
okhttp3.internal.http2.Http2Connection$1 -> okhttp3.internal.http2.Http2Connection$1:
    304:304:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    307:307:void execute() -> execute
okhttp3.internal.http2.Http2Connection$2 -> okhttp3.internal.http2.Http2Connection$2:
    319:319:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long) -> <init>
    322:322:void execute() -> execute
okhttp3.internal.http2.Http2Connection$3 -> okhttp3.internal.http2.Http2Connection$3:
    352:352:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],boolean,int,int,okhttp3.internal.http2.Ping) -> <init>
    355:355:void execute() -> execute
okhttp3.internal.http2.Http2Connection$4 -> okhttp3.internal.http2.Http2Connection$4:
    789:789:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List) -> <init>
    791:797:void execute() -> execute
okhttp3.internal.http2.Http2Connection$5 -> okhttp3.internal.http2.Http2Connection$5:
    807:807:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean) -> <init>
    809:815:void execute() -> execute
okhttp3.internal.http2.Http2Connection$6 -> okhttp3.internal.http2.Http2Connection$6:
    833:833:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean) -> <init>
    836:841:void execute() -> execute
okhttp3.internal.http2.Http2Connection$7 -> okhttp3.internal.http2.Http2Connection$7:
    850:850:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    852:855:void execute() -> execute
okhttp3.internal.http2.Http2Connection$Builder -> okhttp3.internal.http2.Http2Connection$Builder:
    516:517:void <init>(boolean) -> <init>
    545:545:okhttp3.internal.http2.Http2Connection build() -> build
    535:535:okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener) -> listener
    540:540:okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver) -> pushObserver
    521:521:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket) -> socket
    527:530:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink) -> socket
okhttp3.internal.http2.Http2Connection$Listener -> okhttp3.internal.http2.Http2Connection$Listener:
    862:862:void <clinit>() -> <clinit>
    861:861:void <init>() -> <init>
okhttp3.internal.http2.Http2Connection$Listener$1 -> okhttp3.internal.http2.Http2Connection$Listener$1:
    862:862:void <init>() -> <init>
    864:864:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
okhttp3.internal.http2.Http2Connection$ReaderRunnable -> okhttp3.internal.http2.Http2Connection$ReaderRunnable:
    556:558:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader) -> <init>
    695:695:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    586:598:void data(boolean,int,okio.BufferedSource,int) -> data
    562:580:void execute() -> execute
    722:730:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    604:642:void headers(boolean,int,int,java.util.List) -> headers
    711:717:void ping(boolean,int,int) -> ping
    764:764:void pushPromise(int,int,java.util.List) -> pushPromise
    650:656:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    663:684:void settings(boolean,okhttp3.internal.http2.Settings) -> settings
    743:752:void windowUpdate(int,long) -> windowUpdate
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$1:
    627:627:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream) -> <init>
    630:634:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$2:
    679:679:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[]) -> <init>
    681:681:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$3:
    695:695:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Settings) -> <init>
    698:698:void execute() -> execute
okhttp3.internal.http2.Http2Reader -> okhttp3.internal.http2.Http2Reader:
    60:60:void <clinit>() -> <clinit>
    70:74:void <init>(okio.BufferedSource,boolean) -> <init>
    331:331:void close() -> close
    397:397:int lengthWithoutPadding(int,byte,short) -> lengthWithoutPadding
    88:107:boolean nextFrame(okhttp3.internal.http2.Http2Reader$Handler) -> nextFrame
    78:82:void readConnectionPreface() -> readConnectionPreface
    200:197:void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readData
    308:306:void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readGoAway
    180:188:java.util.List readHeaderBlock(int,short,byte,int) -> readHeaderBlock
    164:160:void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readHeaders
    388:390:int readMedium(okio.BufferedSource) -> readMedium
    298:296:void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPing
    211:209:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPriority
    215:219:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int) -> readPriority
    286:284:void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPushPromise
    226:224:void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readRstStream
    239:236:void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readSettings
    325:324:void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readWindowUpdate
okhttp3.internal.http2.Http2Reader$ContinuationSource -> okhttp3.internal.http2.Http2Reader$ContinuationSource:
    348:349:void <init>(okio.BufferedSource) -> <init>
    353:363:long read(okio.Buffer,long) -> read
    375:382:void readContinuationHeader() -> readContinuationHeader
    368:368:okio.Timeout timeout() -> timeout
okhttp3.internal.http2.Http2Stream -> okhttp3.internal.http2.Http2Stream:
    73:74:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,java.util.List) -> <init>
    551:552:void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    437:440:void cancelStreamIfNecessary() -> cancelStreamIfNecessary
    556:557:void checkOutNotClosed() -> checkOutNotClosed
    216:219:void close(okhttp3.internal.http2.ErrorCode) -> close
    236:245:boolean closeInternal(okhttp3.internal.http2.ErrorCode) -> closeInternal
    227:230:void closeLater(okhttp3.internal.http2.ErrorCode) -> closeLater
    122:122:okhttp3.internal.http2.Http2Connection getConnection() -> getConnection
    151:151:okhttp3.internal.http2.ErrorCode getErrorCode() -> getErrorCode
    89:89:int getId() -> getId
    126:126:java.util.List getRequestHeaders() -> getRequestHeaders
    134:140:java.util.List getResponseHeaders() -> getResponseHeaders
    203:207:okio.Sink getSink() -> getSink
    193:193:okio.Source getSource() -> getSource
    117:118:boolean isLocallyInitiated() -> isLocallyInitiated
    104:112:boolean isOpen() -> isOpen
    184:184:okio.Timeout readTimeout() -> readTimeout
    272:272:void receiveData(okio.BufferedSource,int) -> receiveData
    278:282:void receiveFin() -> receiveFin
    253:264:void receiveHeaders(java.util.List) -> receiveHeaders
    289:293:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> receiveRstStream
    163:175:void reply(java.util.List,boolean) -> reply
    571:573:void waitForIo() -> waitForIo
    188:188:okio.Timeout writeTimeout() -> writeTimeout
okhttp3.internal.http2.Http2Stream$FramedDataSink -> okhttp3.internal.http2.Http2Stream$FramedDataSink:
    455:462:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    525:527:void close() -> close
    485:498:void emitDataFrame(boolean) -> emitDataFrame
    510:512:void flush() -> flush
    520:520:okio.Timeout timeout() -> timeout
    473:475:void write(okio.Buffer,long) -> write
okhttp3.internal.http2.Http2Stream$FramedDataSource -> okhttp3.internal.http2.Http2Stream$FramedDataSource:
    319:320:void <init>(okhttp3.internal.http2.Http2Stream,long) -> <init>
    424:425:void checkNotClosed() -> checkNotClosed
    415:419:void close() -> close
    328:325:long read(okio.Buffer,long) -> read
    376:379:void receive(okio.BufferedSource,long) -> receive
    411:411:okio.Timeout timeout() -> timeout
    360:366:void waitUntilReadable() -> waitUntilReadable
okhttp3.internal.http2.Http2Stream$StreamTimeout -> okhttp3.internal.http2.Http2Stream$StreamTimeout:
    581:581:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    595:595:void exitAndThrowIfTimedOut() -> exitAndThrowIfTimedOut
    587:589:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    583:583:void timedOut() -> timedOut
okhttp3.internal.http2.Http2Writer -> okhttp3.internal.http2.Http2Writer:
    47:47:void <clinit>() -> <clinit>
    57:62:void <init>(okio.BufferedSink,boolean) -> <init>
    77:77:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    278:280:void close() -> close
    66:66:void connectionPreface() -> connectionPreface
    170:170:void data(boolean,int,okio.Buffer,int) -> data
    178:180:void dataFrame(int,byte,okio.Buffer,int) -> dataFrame
    120:120:void flush() -> flush
    266:268:void frameHeader(int,int,byte,byte) -> frameHeader
    232:232:void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]) -> goAway
    138:138:void headers(int,java.util.List) -> headers
    298:298:void headers(boolean,int,java.util.List) -> headers
    157:157:int maxDataLength() -> maxDataLength
    211:211:void ping(boolean,int,int) -> ping
    105:105:void pushPromise(int,int,java.util.List) -> pushPromise
    144:144:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    186:186:void settings(okhttp3.internal.http2.Settings) -> settings
    132:132:void synReply(boolean,int,java.util.List) -> synReply
    126:126:void synStream(boolean,int,int,java.util.List) -> synStream
    252:252:void windowUpdate(int,long) -> windowUpdate
    290:293:void writeContinuationFrames(int,long) -> writeContinuationFrames
    283:285:void writeMedium(okio.BufferedSink,int) -> writeMedium
okhttp3.internal.http2.Huffman -> okhttp3.internal.http2.Huffman:
    37:79:void <clinit>() -> <clinit>
    87:88:void <init>() -> <init>
    173:192:void addCode(int,int,byte) -> addCode
    167:168:void buildTree() -> buildTree
    129:163:byte[] decode(byte[]) -> decode
    95:113:void encode(okio.ByteString,okio.BufferedSink) -> encode
    120:122:int encodedLength(okio.ByteString) -> encodedLength
    82:82:okhttp3.internal.http2.Huffman get() -> get
okhttp3.internal.http2.Huffman$Node -> okhttp3.internal.http2.Huffman$Node:
    208:211:void <init>() -> <init>
    220:224:void <init>(int,int) -> <init>
okhttp3.internal.http2.Ping -> okhttp3.internal.http2.Ping:
    29:27:void <init>() -> <init>
    44:44:void cancel() -> cancel
    38:38:void receive() -> receive
    54:55:long roundTripTime() -> roundTripTime
    63:64:long roundTripTime(long,java.util.concurrent.TimeUnit) -> roundTripTime
    33:33:void send() -> send
okhttp3.internal.http2.PushObserver -> okhttp3.internal.http2.PushObserver:
    76:76:void <clinit>() -> <clinit>
okhttp3.internal.http2.PushObserver$1 -> okhttp3.internal.http2.PushObserver$1:
    76:76:void <init>() -> <init>
    88:88:boolean onData(int,okio.BufferedSource,int,boolean) -> onData
okhttp3.internal.http2.Settings -> okhttp3.internal.http2.Settings:
    24:51:void <init>() -> <init>
    54:55:void clear() -> clear
    77:77:int get(int) -> get
    94:94:boolean getEnablePush(boolean) -> getEnablePush
    88:88:int getHeaderTableSize() -> getHeaderTableSize
    115:115:int getInitialWindowSize() -> getInitialWindowSize
    100:100:int getMaxConcurrentStreams(int) -> getMaxConcurrentStreams
    105:105:int getMaxFrameSize(int) -> getMaxFrameSize
    110:110:int getMaxHeaderListSize(int) -> getMaxHeaderListSize
    72:72:boolean isSet(int) -> isSet
    124:125:void merge(okhttp3.internal.http2.Settings) -> merge
    59:65:okhttp3.internal.http2.Settings set(int,int) -> set
    82:82:int size() -> size
okhttp3.internal.http2.StreamResetException -> okhttp3.internal.http2.StreamResetException:
    25:26:void <init>(okhttp3.internal.http2.ErrorCode) -> <init>
okhttp3.internal.io.FileSystem -> okhttp3.internal.io.FileSystem:
    42:42:void <clinit>() -> <clinit>
okhttp3.internal.io.FileSystem$1 -> okhttp3.internal.io.FileSystem$1:
    42:42:void <init>() -> <init>
    59:63:okio.Sink appendingSink(java.io.File) -> appendingSink
    69:70:void delete(java.io.File) -> delete
    90:92:void deleteContents(java.io.File) -> deleteContents
    75:75:boolean exists(java.io.File) -> exists
    83:85:void rename(java.io.File,java.io.File) -> rename
    49:53:okio.Sink sink(java.io.File) -> sink
    79:79:long size(java.io.File) -> size
    44:44:okio.Source source(java.io.File) -> source
okhttp3.internal.platform.AndroidPlatform -> okhttp3.internal.platform.AndroidPlatform:
    52:57:void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod) -> <init>
    166:173:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    182:204:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    102:109:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    63:66:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    114:118:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    138:138:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    151:158:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    123:131:void log(int,java.lang.String,java.lang.Throwable) -> log
    142:145:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    77:95:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner -> okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner:
    222:224:void <init>(java.lang.Object,java.lang.reflect.Method) -> <init>
    231:237:java.util.List clean(java.util.List,java.lang.String) -> clean
    244:244:boolean equals(java.lang.Object) -> equals
okhttp3.internal.platform.AndroidPlatform$CloseGuard -> okhttp3.internal.platform.AndroidPlatform$CloseGuard:
    262:265:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    269:272:java.lang.Object createAndOpen(java.lang.String) -> createAndOpen
    298:307:okhttp3.internal.platform.AndroidPlatform$CloseGuard get() -> get
    284:284:boolean warnIfOpen(java.lang.Object) -> warnIfOpen
okhttp3.internal.platform.Jdk9Platform -> okhttp3.internal.platform.Jdk9Platform:
    34:36:void <init>(java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    85:89:okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> buildIfSupported
    43:52:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    59:69:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    78:78:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.JdkWithJettyBootPlatform -> okhttp3.internal.platform.JdkWithJettyBootPlatform:
    38:43:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class) -> <init>
    61:63:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    86:93:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    48:55:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    69:78:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider -> okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider:
    113:114:void <init>(java.util.List) -> <init>
    118:145:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
okhttp3.internal.platform.OptionalMethod -> okhttp3.internal.platform.OptionalMethod:
    45:48:void <init>(java.lang.Class,java.lang.String,java.lang.Class[]) -> <init>
    148:152:java.lang.reflect.Method getMethod(java.lang.Class) -> getMethod
    164:165:java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getPublicMethod
    106:108:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
    66:71:java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]) -> invokeOptional
    86:94:java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> invokeOptionalWithoutCheckedException
    129:137:java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> invokeWithoutCheckedException
    55:55:boolean isSupported(java.lang.Object) -> isSupported
okhttp3.internal.platform.Platform -> okhttp3.internal.platform.Platform:
    73:76:void <clinit>() -> <clinit>
    72:72:void <init>() -> <init>
    157:161:java.util.List alpnProtocolNames(java.util.List) -> alpnProtocolNames
    167:167:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    199:206:byte[] concatLengthPrefixed(java.util.List) -> concatLengthPrefixed
    124:124:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    172:191:okhttp3.internal.platform.Platform findPlatform() -> findPlatform
    79:79:okhttp3.internal.platform.Platform get() -> get
    142:143:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    128:129:void log(int,java.lang.String,java.lang.Throwable) -> log
    150:153:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    210:226:java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String) -> readFieldOrNull
    92:95:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.tls.BasicCertificateChainCleaner -> okhttp3.internal.tls.BasicCertificateChainCleaner:
    43:44:void <init>(okhttp3.internal.tls.TrustRootIndex) -> <init>
    56:101:java.util.List clean(java.util.List,java.lang.String) -> clean
    121:122:boolean equals(java.lang.Object) -> equals
    116:116:int hashCode() -> hashCode
    106:108:boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> verifySignature
okhttp3.internal.tls.CertificateChainCleaner -> okhttp3.internal.tls.CertificateChainCleaner:
    36:36:void <init>() -> <init>
    41:41:okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> get
    45:45:okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[]) -> get
okhttp3.internal.tls.DistinguishedNameParser -> okhttp3.internal.tls.DistinguishedNameParser:
    38:43:void <init>(javax.security.auth.x500.X500Principal) -> <init>
    187:220:java.lang.String escapedAV() -> escapedAV
    350:402:java.lang.String findMostSpecific(java.lang.String) -> findMostSpecific
    311:312:int getByte(int) -> getByte
    232:234:char getEscaped() -> getEscaped
    263:291:char getUTF8() -> getUTF8
    137:139:java.lang.String hexAV() -> hexAV
    50:66:java.lang.String nextAT() -> nextAT
    104:110:java.lang.String quotedAV() -> quotedAV
okhttp3.internal.tls.OkHostnameVerifier -> okhttp3.internal.tls.OkHostnameVerifier:
    38:38:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    98:102:java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> allSubjectAltNames
    107:131:java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> getSubjectAltNames
    49:50:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    57:59:boolean verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    75:90:boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> verifyHostname
    145:221:boolean verifyHostname(java.lang.String,java.lang.String) -> verifyHostname
    64:66:boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> verifyIpAddress
okhttp3.internal.tls.TrustRootIndex -> okhttp3.internal.tls.TrustRootIndex:
    30:30:void <init>() -> <init>
    38:43:okhttp3.internal.tls.TrustRootIndex get(javax.net.ssl.X509TrustManager) -> get
    48:48:okhttp3.internal.tls.TrustRootIndex get(java.security.cert.X509Certificate[]) -> get
okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex -> okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex:
    64:66:void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> <init>
    88:93:boolean equals(java.lang.Object) -> equals
    71:77:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    98:98:int hashCode() -> hashCode
okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex -> okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex:
    106:115:void <init>(java.security.cert.X509Certificate[]) -> <init>
    138:139:boolean equals(java.lang.Object) -> equals
    120:127:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    143:143:int hashCode() -> hashCode
okhttp3.internal.ws.RealWebSocket -> okhttp3.internal.ws.RealWebSocket:
    53:53:void <clinit>() -> <clinit>
    131:133:void <init>(okhttp3.Request,okhttp3.WebSocketListener,java.util.Random) -> <init>
    52:52:void access$100(okhttp3.internal.ws.RealWebSocket) -> access$100
    164:164:void cancel() -> cancel
    213:215:void checkResponse(okhttp3.Response) -> checkResponse
    375:375:boolean close(int,java.lang.String) -> close
    379:389:boolean close(int,java.lang.String,long) -> close
    168:179:void connect(okhttp3.OkHttpClient) -> connect
    511:518:void failWebSocket(java.lang.Exception,okhttp3.Response) -> failWebSocket
    241:252:void initReaderAndWriter(java.lang.String,long,okhttp3.internal.ws.RealWebSocket$Streams) -> initReaderAndWriter
    259:261:void loopReader() -> loopReader
    313:310:void onReadClose(int,java.lang.String) -> onReadClose
    288:288:void onReadMessage(java.lang.String) -> onReadMessage
    292:292:void onReadMessage(okio.ByteString) -> onReadMessage
    297:297:void onReadPing(okio.ByteString) -> onReadPing
    306:307:void onReadPong(okio.ByteString) -> onReadPong
    280:280:int pingCount() -> pingCount
    367:367:boolean pong(okio.ByteString) -> pong
    284:284:int pongCount() -> pongCount
    271:274:boolean processNextFrame() -> processNextFrame
    160:160:long queueSize() -> queueSize
    156:156:okhttp3.Request request() -> request
    403:404:void runWriter() -> runWriter
    340:339:boolean send(java.lang.String) -> send
    345:344:boolean send(okio.ByteString) -> send
    350:350:boolean send(okio.ByteString,int) -> send
    429:454:boolean writeOneFrame() -> writeOneFrame
    497:500:void writePingFrame() -> writePingFrame
okhttp3.internal.ws.RealWebSocket$1 -> okhttp3.internal.ws.RealWebSocket$1:
    143:143:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    146:149:void run() -> run
okhttp3.internal.ws.RealWebSocket$2 -> okhttp3.internal.ws.RealWebSocket$2:
    179:179:void <init>(okhttp3.internal.ws.RealWebSocket,okhttp3.Request,int) -> <init>
    207:207:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    182:185:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
okhttp3.internal.ws.RealWebSocket$CancelRunnable -> okhttp3.internal.ws.RealWebSocket$CancelRunnable:
    574:574:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    576:576:void run() -> run
okhttp3.internal.ws.RealWebSocket$ClientStreams -> okhttp3.internal.ws.RealWebSocket$ClientStreams:
    565:566:void <init>(okhttp3.internal.connection.StreamAllocation) -> <init>
    570:570:void close() -> close
okhttp3.internal.ws.RealWebSocket$Close -> okhttp3.internal.ws.RealWebSocket$Close:
    542:545:void <init>(int,okio.ByteString,long) -> <init>
okhttp3.internal.ws.RealWebSocket$Message -> okhttp3.internal.ws.RealWebSocket$Message:
    531:533:void <init>(int,okio.ByteString) -> <init>
okhttp3.internal.ws.RealWebSocket$PingRunnable -> okhttp3.internal.ws.RealWebSocket$PingRunnable:
    489:489:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    489:489:void <init>(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.RealWebSocket$1) -> <init>
    491:491:void run() -> run
okhttp3.internal.ws.RealWebSocket$Streams -> okhttp3.internal.ws.RealWebSocket$Streams:
    554:557:void <init>(boolean,okio.BufferedSource,okio.BufferedSink) -> <init>
okhttp3.internal.ws.WebSocketProtocol -> okhttp3.internal.ws.WebSocketProtocol:
    127:128:void <init>() -> <init>
    124:124:java.lang.String acceptHeader(java.lang.String) -> acceptHeader
    112:110:java.lang.String closeCodeExceptionMessage(int) -> closeCodeExceptionMessage
    101:104:void toggleMask(byte[],long,byte[],long) -> toggleMask
    119:120:void validateCloseCode(int) -> validateCloseCode
okhttp3.internal.ws.WebSocketReader -> okhttp3.internal.ws.WebSocketReader:
    78:79:void <init>(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback) -> <init>
    97:101:void processNextFrame() -> processNextFrame
    169:197:void readControlFrame() -> readControlFrame
    106:106:void readHeader() -> readHeader
    246:246:void readMessage(okio.Buffer) -> readMessage
    213:224:void readMessageFrame() -> readMessageFrame
    230:235:void readUntilNonControlFrame() -> readUntilNonControlFrame
okhttp3.internal.ws.WebSocketWriter -> okhttp3.internal.ws.WebSocketWriter:
    64:65:void <init>(boolean,okio.BufferedSink,java.util.Random) -> <init>
    158:159:okio.Sink newMessageSink(int,long) -> newMessageSink
    98:117:void writeClose(int,okio.ByteString) -> writeClose
    123:123:void writeControlFrameSynchronized(int,okio.ByteString) -> writeControlFrameSynchronized
    176:176:void writeMessageFrameSynchronized(int,long,boolean,boolean) -> writeMessageFrameSynchronized
    78:80:void writePing(okio.ByteString) -> writePing
    85:87:void writePong(okio.ByteString) -> writePong
okhttp3.internal.ws.WebSocketWriter$FrameSink -> okhttp3.internal.ws.WebSocketWriter$FrameSink:
    220:220:void <init>(okhttp3.internal.ws.WebSocketWriter) -> <init>
    260:260:void close() -> close
    246:246:void flush() -> flush
    255:255:okio.Timeout timeout() -> timeout
    227:227:void write(okio.Buffer,long) -> write
okio.AsyncTimeout -> okio.AsyncTimeout:
    49:50:void <clinit>() -> <clinit>
    40:40:void <init>() -> <init>
    40:40:okio.AsyncTimeout access$000() -> access$000
    40:40:okio.AsyncTimeout access$002(okio.AsyncTimeout) -> access$002
    341:366:okio.AsyncTimeout awaitTimeout() -> awaitTimeout
    127:136:boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    72:72:void enter() -> enter
    119:121:boolean exit() -> exit
    273:274:void exit(boolean) -> exit
    283:284:java.io.IOException exit(java.io.IOException) -> exit
    293:295:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    144:144:long remainingNanos(long) -> remainingNanos
    85:100:void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> scheduleTimeout
    159:159:okio.Sink sink(okio.Sink) -> sink
    231:231:okio.Source source(okio.Source) -> source
okio.AsyncTimeout$1 -> okio.AsyncTimeout$1:
    159:159:void <init>(okio.AsyncTimeout,okio.Sink) -> <init>
    205:212:void close() -> close
    192:199:void flush() -> flush
    217:217:okio.Timeout timeout() -> timeout
    221:221:java.lang.String toString() -> toString
    161:185:void write(okio.Buffer,long) -> write
okio.AsyncTimeout$2 -> okio.AsyncTimeout$2:
    231:231:void <init>(okio.AsyncTimeout,okio.Source) -> <init>
    249:254:void close() -> close
    234:242:long read(okio.Buffer,long) -> read
    259:259:okio.Timeout timeout() -> timeout
    263:263:java.lang.String toString() -> toString
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$Watchdog:
    302:303:void <init>() -> <init>
    310:322:void run() -> run
okio.Base64 -> okio.Base64:
    110:117:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    31:106:byte[] decode(java.lang.String) -> decode
    125:125:java.lang.String encode(byte[]) -> encode
    133:159:java.lang.String encode(byte[],byte[]) -> encode
    129:129:java.lang.String encodeUrl(byte[]) -> encodeUrl
okio.Buffer -> okio.Buffer:
    51:51:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    802:804:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    1640:1648:okio.Buffer clone() -> clone
    263:269:long completeSegmentByteCount() -> completeSegmentByteCount
    138:138:okio.Buffer copyTo(java.io.OutputStream) -> copyTo
    147:146:okio.Buffer copyTo(java.io.OutputStream,long,long) -> copyTo
    171:170:okio.Buffer copyTo(okio.Buffer,long,long) -> copyTo
    1543:1552:okio.ByteString digest(java.lang.String) -> digest
    50:50:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    1586:1610:boolean equals(java.lang.Object) -> equals
    101:101:boolean exhausted() -> exhausted
    298:299:byte getByte(long) -> getByte
    1618:1626:int hashCode() -> hashCode
    1568:1578:okio.ByteString hmac(java.lang.String,okio.ByteString) -> hmac
    1558:1558:okio.ByteString hmacSha1(okio.ByteString) -> hmacSha1
    1563:1563:okio.ByteString hmacSha256(okio.ByteString) -> hmacSha256
    1266:1266:long indexOf(byte) -> indexOf
    1282:1274:long indexOf(byte,long) -> indexOf
    1322:1322:long indexOf(okio.ByteString) -> indexOf
    1326:1326:long indexOf(okio.ByteString,long) -> indexOf
    1381:1381:long indexOfElement(okio.ByteString) -> indexOfElement
    1393:1385:long indexOfElement(okio.ByteString,long) -> indexOfElement
    113:113:java.io.InputStream inputStream() -> inputStream
    1528:1528:okio.ByteString md5() -> md5
    71:71:java.io.OutputStream outputStream() -> outputStream
    1458:1458:boolean rangeEquals(long,okio.ByteString) -> rangeEquals
    1462:1470:boolean rangeEquals(long,okio.ByteString,int,int) -> rangeEquals
    1483:1494:boolean rangeEquals(okio.Segment,int,okio.ByteString,int,int) -> rangeEquals
    765:765:int read(byte[]) -> read
    778:790:int read(byte[],int,int) -> read
    1259:1257:long read(okio.Buffer,long) -> read
    581:583:long readAll(okio.Sink) -> readAll
    276:276:byte readByte() -> readByte
    747:749:byte[] readByteArray() -> readByteArray
    754:756:byte[] readByteArray(long) -> readByteArray
    528:528:okio.ByteString readByteString() -> readByteString
    532:532:okio.ByteString readByteString(long) -> readByteString
    414:414:long readDecimalLong() -> readDecimalLong
    230:230:okio.Buffer readFrom(java.io.InputStream) -> readFrom
    237:236:okio.Buffer readFrom(java.io.InputStream,long) -> readFrom
    244:242:void readFrom(java.io.InputStream,long,boolean) -> readFrom
    573:575:void readFully(okio.Buffer,long) -> readFully
    770:772:void readFully(byte[]) -> readFully
    472:472:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    336:336:int readInt() -> readInt
    406:406:int readIntLe() -> readIntLe
    368:368:long readLong() -> readLong
    410:410:long readLongLe() -> readLongLe
    307:307:short readShort() -> readShort
    402:402:short readShortLe() -> readShortLe
    602:604:java.lang.String readString(java.nio.charset.Charset) -> readString
    609:610:java.lang.String readString(long,java.nio.charset.Charset) -> readString
    590:592:java.lang.String readUtf8() -> readUtf8
    597:597:java.lang.String readUtf8(long) -> readUtf8
    671:671:int readUtf8CodePoint() -> readUtf8CodePoint
    635:641:java.lang.String readUtf8Line() -> readUtf8Line
    656:665:java.lang.String readUtf8Line(long) -> readUtf8Line
    645:650:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    109:109:boolean request(long) -> request
    105:105:void require(long) -> require
    1517:1521:java.util.List segmentSizes() -> segmentSizes
    536:547:int select(okio.Options) -> select
    560:565:int selectPrefix(okio.Options) -> selectPrefix
    1533:1533:okio.ByteString sha1() -> sha1
    1538:1538:okio.ByteString sha256() -> sha256
    63:63:long size() -> size
    811:811:void skip(long) -> skip
    1654:1655:okio.ByteString snapshot() -> snapshot
    1664:1665:okio.ByteString snapshot(int) -> snapshot
    1512:1512:okio.Timeout timeout() -> timeout
    1635:1635:java.lang.String toString() -> toString
    1153:1151:okio.Segment writableSegment(int) -> writableSegment
    50:50:okio.BufferedSink write(okio.ByteString) -> write
    50:50:okio.BufferedSink write(byte[]) -> write
    50:50:okio.BufferedSink write(byte[],int,int) -> write
    828:827:okio.Buffer write(okio.ByteString) -> write
    971:970:okio.Buffer write(byte[]) -> write
    976:975:okio.Buffer write(byte[],int,int) -> write
    1004:1005:okio.BufferedSink write(okio.Source,long) -> write
    1218:1216:void write(okio.Buffer,long) -> write
    996:994:long writeAll(okio.Source) -> writeAll
    50:50:okio.BufferedSink writeByte(int) -> writeByte
    1012:1014:okio.Buffer writeByte(int) -> writeByte
    50:50:okio.BufferedSink writeDecimalLong(long) -> writeDecimalLong
    1074:1123:okio.Buffer writeDecimalLong(long) -> writeDecimalLong
    50:50:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    1130:1142:okio.Buffer writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    50:50:okio.BufferedSink writeInt(int) -> writeInt
    1034:1042:okio.Buffer writeInt(int) -> writeInt
    50:50:okio.BufferedSink writeIntLe(int) -> writeIntLe
    1047:1047:okio.Buffer writeIntLe(int) -> writeIntLe
    50:50:okio.BufferedSink writeLong(long) -> writeLong
    1051:1063:okio.Buffer writeLong(long) -> writeLong
    50:50:okio.BufferedSink writeLongLe(long) -> writeLongLe
    1068:1068:okio.Buffer writeLongLe(long) -> writeLongLe
    50:50:okio.BufferedSink writeShort(int) -> writeShort
    1019:1025:okio.Buffer writeShort(int) -> writeShort
    50:50:okio.BufferedSink writeShortLe(int) -> writeShortLe
    1030:1030:okio.Buffer writeShortLe(int) -> writeShortLe
    50:50:okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    50:50:okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    949:949:okio.Buffer writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    959:954:okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    201:201:okio.Buffer writeTo(java.io.OutputStream) -> writeTo
    207:206:okio.Buffer writeTo(java.io.OutputStream,long) -> writeTo
    50:50:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    50:50:okio.BufferedSink writeUtf8(java.lang.String,int,int) -> writeUtf8
    833:833:okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    842:837:okio.Buffer writeUtf8(java.lang.String,int,int) -> writeUtf8
    50:50:okio.BufferedSink writeUtf8CodePoint(int) -> writeUtf8CodePoint
    915:942:okio.Buffer writeUtf8CodePoint(int) -> writeUtf8CodePoint
okio.Buffer$1 -> okio.Buffer$1:
    71:71:void <init>(okio.Buffer) -> <init>
    87:87:java.lang.String toString() -> toString
    73:73:void write(int) -> write
    77:77:void write(byte[],int,int) -> write
okio.Buffer$2 -> okio.Buffer$2:
    113:113:void <init>(okio.Buffer) -> <init>
    124:124:int available() -> available
    115:115:int read() -> read
    120:120:int read(byte[],int,int) -> read
    131:131:java.lang.String toString() -> toString
okio.ByteString -> okio.ByteString:
    52:57:void <clinit>() -> <clinit>
    63:64:void <init>(byte[]) -> <init>
    355:355:java.nio.ByteBuffer asByteBuffer() -> asByteBuffer
    130:130:java.lang.String base64() -> base64
    183:183:java.lang.String base64Url() -> base64Url
    502:513:int codePointIndexToCharIndex(java.lang.String,int) -> codePointIndexToCharIndex
    51:51:int compareTo(java.lang.Object) -> compareTo
    462:466:int compareTo(okio.ByteString) -> compareTo
    192:191:okio.ByteString decodeBase64(java.lang.String) -> decodeBase64
    210:209:okio.ByteString decodeHex(java.lang.String) -> decodeHex
    225:225:int decodeHexDigit(char) -> decodeHexDigit
    150:152:okio.ByteString digest(java.lang.String) -> digest
    108:106:okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset) -> encodeString
    99:98:okio.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    398:398:boolean endsWith(okio.ByteString) -> endsWith
    402:402:boolean endsWith(byte[]) -> endsWith
    451:453:boolean equals(java.lang.Object) -> equals
    329:329:byte getByte(int) -> getByte
    457:458:int hashCode() -> hashCode
    198:204:java.lang.String hex() -> hex
    168:172:okio.ByteString hmac(java.lang.String,okio.ByteString) -> hmac
    158:158:okio.ByteString hmacSha1(okio.ByteString) -> hmacSha1
    163:163:okio.ByteString hmacSha256(okio.ByteString) -> hmacSha256
    406:406:int indexOf(okio.ByteString) -> indexOf
    410:410:int indexOf(okio.ByteString,int) -> indexOf
    414:414:int indexOf(byte[]) -> indexOf
    418:420:int indexOf(byte[],int) -> indexOf
    348:348:byte[] internalArray() -> internalArray
    428:428:int lastIndexOf(okio.ByteString) -> lastIndexOf
    432:432:int lastIndexOf(okio.ByteString,int) -> lastIndexOf
    436:436:int lastIndexOf(byte[]) -> lastIndexOf
    440:442:int lastIndexOf(byte[],int) -> lastIndexOf
    135:135:okio.ByteString md5() -> md5
    72:71:okio.ByteString of(byte[]) -> of
    81:80:okio.ByteString of(byte[],int,int) -> of
    91:89:okio.ByteString of(java.nio.ByteBuffer) -> of
    375:375:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    384:386:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    238:235:okio.ByteString read(java.io.InputStream,int) -> read
    517:524:void readObject(java.io.ObjectInputStream) -> readObject
    140:140:okio.ByteString sha1() -> sha1
    145:145:okio.ByteString sha256() -> sha256
    336:336:int size() -> size
    390:390:boolean startsWith(okio.ByteString) -> startsWith
    394:394:boolean startsWith(byte[]) -> startsWith
    121:120:java.lang.String string(java.nio.charset.Charset) -> string
    301:301:okio.ByteString substring(int) -> substring
    311:310:okio.ByteString substring(int,int) -> substring
    253:266:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    278:291:okio.ByteString toAsciiUppercase() -> toAsciiUppercase
    343:343:byte[] toByteArray() -> toByteArray
    479:496:java.lang.String toString() -> toString
    113:115:java.lang.String utf8() -> utf8
    361:360:void write(java.io.OutputStream) -> write
    366:366:void write(okio.Buffer) -> write
    531:532:void writeObject(java.io.ObjectOutputStream) -> writeObject
okio.DeflaterSink -> okio.DeflaterSink:
    44:44:void <init>(okio.Sink,java.util.zip.Deflater) -> <init>
    52:53:void <init>(okio.BufferedSink,java.util.zip.Deflater) -> <init>
    122:146:void close() -> close
    84:104:void deflate(boolean) -> deflate
    117:118:void finishDeflate() -> finishDeflate
    112:113:void flush() -> flush
    150:150:okio.Timeout timeout() -> timeout
    154:154:java.lang.String toString() -> toString
    60:75:void write(okio.Buffer,long) -> write
okio.ForwardingSink -> okio.ForwardingSink:
    24:25:void <init>(okio.Sink) -> <init>
    47:47:void close() -> close
    31:31:okio.Sink delegate() -> delegate
    39:39:void flush() -> flush
    43:43:okio.Timeout timeout() -> timeout
    51:51:java.lang.String toString() -> toString
    35:35:void write(okio.Buffer,long) -> write
okio.ForwardingSource -> okio.ForwardingSource:
    24:25:void <init>(okio.Source) -> <init>
    43:43:void close() -> close
    31:31:okio.Source delegate() -> delegate
    35:35:long read(okio.Buffer,long) -> read
    39:39:okio.Timeout timeout() -> timeout
    47:47:java.lang.String toString() -> toString
okio.ForwardingTimeout -> okio.ForwardingTimeout:
    25:26:void <init>(okio.Timeout) -> <init>
    66:66:okio.Timeout clearDeadline() -> clearDeadline
    62:62:okio.Timeout clearTimeout() -> clearTimeout
    54:54:long deadlineNanoTime() -> deadlineNanoTime
    58:58:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    32:32:okio.Timeout delegate() -> delegate
    50:50:boolean hasDeadline() -> hasDeadline
    37:36:okio.ForwardingTimeout setDelegate(okio.Timeout) -> setDelegate
    70:70:void throwIfReached() -> throwIfReached
    42:42:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    46:46:long timeoutNanos() -> timeoutNanos
okio.GzipSink -> okio.GzipSink:
    56:57:void <init>(okio.Sink) -> <init>
    82:110:void close() -> close
    118:118:java.util.zip.Deflater deflater() -> deflater
    74:74:void flush() -> flush
    78:78:okio.Timeout timeout() -> timeout
    139:139:void updateCrc(okio.Buffer,long) -> updateCrc
    69:66:void write(okio.Buffer,long) -> write
    133:134:void writeFooter() -> writeFooter
    123:129:void writeHeader() -> writeHeader
okio.GzipSource -> okio.GzipSource:
    60:61:void <init>(okio.Source) -> <init>
    205:205:void checkEqual(java.lang.String,int,int) -> checkEqual
    182:182:void close() -> close
    114:164:void consumeHeader() -> consumeHeader
    173:174:void consumeTrailer() -> consumeTrailer
    72:68:long read(okio.Buffer,long) -> read
    178:178:okio.Timeout timeout() -> timeout
    188:194:void updateCrc(okio.Buffer,long,long) -> updateCrc
okio.HashingSink -> okio.HashingSink:
    73:78:void <init>(okio.Sink,java.lang.String) -> <init>
    83:89:void <init>(okio.Sink,okio.ByteString,java.lang.String) -> <init>
    121:122:okio.ByteString hash() -> hash
    64:64:okio.HashingSink hmacSha1(okio.Sink,okio.ByteString) -> hmacSha1
    69:69:okio.HashingSink hmacSha256(okio.Sink,okio.ByteString) -> hmacSha256
    49:49:okio.HashingSink md5(okio.Sink) -> md5
    54:54:okio.HashingSink sha1(okio.Sink) -> sha1
    59:59:okio.HashingSink sha256(okio.Sink) -> sha256
    96:111:void write(okio.Buffer,long) -> write
okio.HashingSource -> okio.HashingSource:
    71:76:void <init>(okio.Source,java.lang.String) -> <init>
    81:87:void <init>(okio.Source,okio.ByteString,java.lang.String) -> <init>
    131:132:okio.ByteString hash() -> hash
    62:62:okio.HashingSource hmacSha1(okio.Source,okio.ByteString) -> hmacSha1
    67:67:okio.HashingSource hmacSha256(okio.Source,okio.ByteString) -> hmacSha256
    47:47:okio.HashingSource md5(okio.Source) -> md5
    94:117:long read(okio.Buffer,long) -> read
    52:52:okio.HashingSource sha1(okio.Source) -> sha1
    57:57:okio.HashingSource sha256(okio.Source) -> sha256
okio.InflaterSource -> okio.InflaterSource:
    40:40:void <init>(okio.Source,java.util.zip.Inflater) -> <init>
    48:49:void <init>(okio.BufferedSource,java.util.zip.Inflater) -> <init>
    123:126:void close() -> close
    58:57:long read(okio.Buffer,long) -> read
    95:98:boolean refill() -> refill
    112:115:void releaseInflatedBytes() -> releaseInflatedBytes
    119:119:okio.Timeout timeout() -> timeout
okio.Okio -> okio.Okio:
    39:39:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    185:184:okio.Sink appendingSink(java.io.File) -> appendingSink
    197:197:okio.Sink blackhole() -> blackhole
    50:50:okio.BufferedSource buffer(okio.Source) -> buffer
    59:59:okio.BufferedSink buffer(okio.Sink) -> buffer
    257:258:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    64:64:okio.Sink sink(java.io.OutputStream) -> sink
    71:68:okio.Sink sink(java.io.OutputStream,okio.Timeout) -> sink
    116:115:okio.Sink sink(java.net.Socket) -> sink
    179:178:okio.Sink sink(java.io.File) -> sink
    192:191:okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[]) -> sink
    123:123:okio.Source source(java.io.InputStream) -> source
    130:127:okio.Source source(java.io.InputStream,okio.Timeout) -> source
    166:165:okio.Source source(java.io.File) -> source
    173:172:okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[]) -> source
    219:218:okio.Source source(java.net.Socket) -> source
    225:225:okio.AsyncTimeout timeout(java.net.Socket) -> timeout
okio.Okio$1 -> okio.Okio$1:
    71:71:void <init>(okio.Timeout,java.io.OutputStream) -> <init>
    96:96:void close() -> close
    92:92:void flush() -> flush
    100:100:okio.Timeout timeout() -> timeout
    104:104:java.lang.String toString() -> toString
    73:86:void write(okio.Buffer,long) -> write
okio.Okio$2 -> okio.Okio$2:
    130:130:void <init>(okio.Timeout,java.io.InputStream) -> <init>
    150:150:void close() -> close
    135:132:long read(okio.Buffer,long) -> read
    154:154:okio.Timeout timeout() -> timeout
    158:158:java.lang.String toString() -> toString
okio.Okio$3 -> okio.Okio$3:
    197:197:void <init>() -> <init>
    205:205:okio.Timeout timeout() -> timeout
    199:199:void write(okio.Buffer,long) -> write
okio.Okio$4 -> okio.Okio$4:
    225:225:void <init>(java.net.Socket) -> <init>
    227:229:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    236:238:void timedOut() -> timedOut
okio.Options -> okio.Options:
    25:26:void <init>(okio.ByteString[]) -> <init>
    22:22:java.lang.Object get(int) -> get
    34:34:okio.ByteString get(int) -> get
    30:30:okio.Options of(okio.ByteString[]) -> of
    38:38:int size() -> size
okio.Pipe -> okio.Pipe:
    44:46:void <init>(long) -> <init>
    56:56:okio.Sink sink() -> sink
    52:52:okio.Source source() -> source
okio.Pipe$PipeSink -> okio.Pipe$PipeSink:
    59:60:void <init>(okio.Pipe) -> <init>
    95:103:void close() -> close
    84:91:void flush() -> flush
    107:107:okio.Timeout timeout() -> timeout
    63:80:void write(okio.Buffer,long) -> write
okio.Pipe$PipeSource -> okio.Pipe$PipeSource:
    111:112:void <init>(okio.Pipe) -> <init>
    130:133:void close() -> close
    115:126:long read(okio.Buffer,long) -> read
    137:137:okio.Timeout timeout() -> timeout
okio.RealBufferedSink -> okio.RealBufferedSink:
    28:29:void <init>(okio.Sink) -> <init>
    34:34:okio.Buffer buffer() -> buffer
    222:242:void close() -> close
    176:176:okio.BufferedSink emit() -> emit
    169:169:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    214:214:void flush() -> flush
    183:183:java.io.OutputStream outputStream() -> outputStream
    246:246:okio.Timeout timeout() -> timeout
    250:250:java.lang.String toString() -> toString
    39:39:void write(okio.Buffer,long) -> write
    45:45:okio.BufferedSink write(okio.ByteString) -> write
    83:83:okio.BufferedSink write(byte[]) -> write
    89:89:okio.BufferedSink write(byte[],int,int) -> write
    106:107:okio.BufferedSink write(okio.Source,long) -> write
    97:95:long writeAll(okio.Source) -> writeAll
    115:115:okio.BufferedSink writeByte(int) -> writeByte
    157:157:okio.BufferedSink writeDecimalLong(long) -> writeDecimalLong
    163:163:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    133:133:okio.BufferedSink writeInt(int) -> writeInt
    139:139:okio.BufferedSink writeIntLe(int) -> writeIntLe
    145:145:okio.BufferedSink writeLong(long) -> writeLong
    151:151:okio.BufferedSink writeLongLe(long) -> writeLongLe
    121:121:okio.BufferedSink writeShort(int) -> writeShort
    127:127:okio.BufferedSink writeShortLe(int) -> writeShortLe
    70:70:okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    77:77:okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    51:51:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    58:58:okio.BufferedSink writeUtf8(java.lang.String,int,int) -> writeUtf8
    64:64:okio.BufferedSink writeUtf8CodePoint(int) -> writeUtf8CodePoint
okio.RealBufferedSink$1 -> okio.RealBufferedSink$1:
    183:183:void <init>(okio.RealBufferedSink) -> <init>
    204:204:void close() -> close
    198:199:void flush() -> flush
    208:208:java.lang.String toString() -> toString
    185:185:void write(int) -> write
    191:191:void write(byte[],int,int) -> write
okio.RealBufferedSource -> okio.RealBufferedSource:
    30:31:void <init>(okio.Source) -> <init>
    36:36:okio.Buffer buffer() -> buffer
    432:435:void close() -> close
    54:54:boolean exhausted() -> exhausted
    314:314:long indexOf(byte) -> indexOf
    318:318:long indexOf(byte,long) -> indexOf
    333:333:long indexOf(okio.ByteString) -> indexOf
    337:337:long indexOf(okio.ByteString,long) -> indexOf
    352:352:long indexOfElement(okio.ByteString) -> indexOfElement
    356:356:long indexOfElement(okio.ByteString,long) -> indexOfElement
    394:394:java.io.InputStream inputStream() -> inputStream
    371:371:boolean rangeEquals(long,okio.ByteString) -> rangeEquals
    377:377:boolean rangeEquals(long,okio.ByteString,int,int) -> rangeEquals
    42:40:long read(okio.Buffer,long) -> read
    116:116:int read(byte[]) -> read
    136:144:int read(byte[],int,int) -> read
    162:159:long readAll(okio.Sink) -> readAll
    72:73:byte readByte() -> readByte
    106:107:byte[] readByteArray() -> readByteArray
    111:112:byte[] readByteArray(long) -> readByteArray
    77:78:okio.ByteString readByteString() -> readByteString
    82:83:okio.ByteString readByteString(long) -> readByteString
    266:280:long readDecimalLong() -> readDecimalLong
    121:130:void readFully(byte[]) -> readFully
    149:153:void readFully(okio.Buffer,long) -> readFully
    284:298:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    246:247:int readInt() -> readInt
    251:252:int readIntLe() -> readIntLe
    256:257:long readLong() -> readLong
    261:262:long readLongLe() -> readLongLe
    236:237:short readShort() -> readShort
    241:242:short readShortLe() -> readShortLe
    189:187:java.lang.String readString(java.nio.charset.Charset) -> readString
    194:195:java.lang.String readString(long,java.nio.charset.Charset) -> readString
    177:178:java.lang.String readUtf8() -> readUtf8
    182:183:java.lang.String readUtf8(long) -> readUtf8
    221:232:int readUtf8CodePoint() -> readUtf8CodePoint
    200:206:java.lang.String readUtf8Line() -> readUtf8Line
    210:215:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    64:63:boolean request(long) -> request
    59:59:void require(long) -> require
    87:87:int select(okio.Options) -> select
    302:302:void skip(long) -> skip
    439:439:okio.Timeout timeout() -> timeout
    443:443:java.lang.String toString() -> toString
okio.RealBufferedSource$1 -> okio.RealBufferedSource$1:
    394:394:void <init>(okio.RealBufferedSource) -> <init>
    417:417:int available() -> available
    422:422:void close() -> close
    396:396:int read() -> read
    405:405:int read(byte[],int,int) -> read
    426:426:java.lang.String toString() -> toString
okio.Segment -> okio.Segment:
    60:63:void <init>() -> <init>
    67:68:void <init>(okio.Segment) -> <init>
    71:76:void <init>(byte[],int,int) -> <init>
    139:139:void compact() -> compact
    84:88:okio.Segment pop() -> pop
    97:100:okio.Segment push(okio.Segment) -> push
    113:113:okio.Segment split(int) -> split
    151:151:void writeTo(okio.Segment,int) -> writeTo
okio.SegmentPool -> okio.SegmentPool:
    33:33:void <init>() -> <init>
    50:50:void recycle(okio.Segment) -> recycle
    37:45:okio.Segment take() -> take
okio.SegmentedByteString -> okio.SegmentedByteString:
    57:76:void <init>(okio.Buffer,int) -> <init>
    178:178:java.nio.ByteBuffer asByteBuffer() -> asByteBuffer
    98:98:java.lang.String base64() -> base64
    134:134:java.lang.String base64Url() -> base64Url
    266:268:boolean equals(java.lang.Object) -> equals
    146:150:byte getByte(int) -> getByte
    272:288:int hashCode() -> hashCode
    102:102:java.lang.String hex() -> hex
    126:126:okio.ByteString hmacSha1(okio.ByteString) -> hmacSha1
    130:130:okio.ByteString hmacSha256(okio.ByteString) -> hmacSha256
    248:248:int indexOf(byte[],int) -> indexOf
    261:261:byte[] internalArray() -> internalArray
    252:252:int lastIndexOf(byte[],int) -> lastIndexOf
    114:114:okio.ByteString md5() -> md5
    211:219:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    228:239:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    156:156:int segment(int) -> segment
    118:118:okio.ByteString sha1() -> sha1
    122:122:okio.ByteString sha256() -> sha256
    161:161:int size() -> size
    94:94:java.lang.String string(java.nio.charset.Charset) -> string
    138:138:okio.ByteString substring(int) -> substring
    142:142:okio.ByteString substring(int,int) -> substring
    106:106:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    110:110:okio.ByteString toAsciiUppercase() -> toAsciiUppercase
    165:170:byte[] toByteArray() -> toByteArray
    257:257:okio.ByteString toByteString() -> toByteString
    292:292:java.lang.String toString() -> toString
    90:90:java.lang.String utf8() -> utf8
    184:182:void write(java.io.OutputStream) -> write
    194:206:void write(okio.Buffer) -> write
    296:296:java.lang.Object writeReplace() -> writeReplace
okio.Timeout -> okio.Timeout:
    49:49:void <clinit>() -> <clinit>
    70:70:void <init>() -> <init>
    135:135:okio.Timeout clearDeadline() -> clearDeadline
    129:129:okio.Timeout clearTimeout() -> clearTimeout
    124:122:okio.Timeout deadline(long,java.util.concurrent.TimeUnit) -> deadline
    105:105:long deadlineNanoTime() -> deadlineNanoTime
    115:116:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    95:95:boolean hasDeadline() -> hasDeadline
    145:146:void throwIfReached() -> throwIfReached
    84:82:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    90:90:long timeoutNanos() -> timeoutNanos
    192:225:void waitUntilNotified(java.lang.Object) -> waitUntilNotified
okio.Timeout$1 -> okio.Timeout$1:
    49:49:void <init>() -> <init>
okio.Util -> okio.Util:
    22:22:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    76:76:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> arrayRangeEquals
    29:30:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    65:65:void sneakyRethrow(java.lang.Throwable) -> sneakyRethrow
    70:70:void sneakyThrow2(java.lang.Throwable) -> sneakyThrow2
org.apache.commons.lang3.ArrayUtils -> org.apache.commons.lang3.ArrayUtils:
    58:58:void <clinit>() -> <clinit>
org.apache.commons.lang3.ClassUtils -> org.apache.commons.lang3.ClassUtils:
    63:149:void <clinit>() -> <clinit>
    194:194:java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    210:239:java.lang.String getShortClassName(java.lang.String) -> getShortClassName
org.apache.commons.lang3.JavaVersion -> org.apache.commons.lang3.JavaVersion:
    33:28:void <clinit>() -> <clinit>
    107:109:void <init>(java.lang.String,int,float,java.lang.String) -> <init>
    150:179:org.apache.commons.lang3.JavaVersion get(java.lang.String) -> get
    204:204:float maxVersion() -> maxVersion
    219:225:float toFloatVersion(java.lang.String) -> toFloatVersion
    195:195:java.lang.String toString() -> toString
    28:28:org.apache.commons.lang3.JavaVersion valueOf(java.lang.String) -> valueOf
    28:28:org.apache.commons.lang3.JavaVersion[] values() -> values
org.apache.commons.lang3.ObjectUtils -> org.apache.commons.lang3.ObjectUtils:
    62:62:void <clinit>() -> <clinit>
    228:228:boolean equals(java.lang.Object,java.lang.Object) -> equals
    404:402:void identityToString(java.lang.StringBuffer,java.lang.Object) -> identityToString
org.apache.commons.lang3.ObjectUtils$Null -> org.apache.commons.lang3.ObjectUtils$Null:
    754:754:void <init>() -> <init>
org.apache.commons.lang3.StringUtils -> org.apache.commons.lang3.StringUtils:
    209:209:boolean isEmpty(java.lang.CharSequence) -> isEmpty
    7024:7026:boolean isWhitespace(java.lang.CharSequence) -> isWhitespace
    3758:3758:java.lang.String join(long[],char) -> join
    4039:4046:java.lang.String join(long[],char,int,int) -> join
    4371:4371:java.lang.String join(java.lang.Object[],java.lang.String) -> join
    4424:4434:java.lang.String join(java.lang.Object[],java.lang.String,int,int) -> join
    3022:3022:java.lang.String[] split(java.lang.String,char) -> split
    3371:3396:java.lang.String[] splitWorker(java.lang.String,char,boolean) -> splitWorker
org.apache.commons.lang3.SystemUtils -> org.apache.commons.lang3.SystemUtils:
    88:1479:void <clinit>() -> <clinit>
    1520:1520:boolean getJavaVersionMatches(java.lang.String) -> getJavaVersionMatches
    1531:1531:boolean getOSMatches(java.lang.String,java.lang.String) -> getOSMatches
    1541:1541:boolean getOSMatchesName(java.lang.String) -> getOSMatchesName
    1559:1562:java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    1645:1645:boolean isJavaVersionMatch(java.lang.String,java.lang.String) -> isJavaVersionMatch
    1664:1664:boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> isOSMatch
    1681:1681:boolean isOSNameMatch(java.lang.String,java.lang.String) -> isOSNameMatch
    1695:1703:boolean isOSVersionMatch(java.lang.String,java.lang.String) -> isOSVersionMatch
org.apache.commons.lang3.Validate -> org.apache.commons.lang3.Validate:
    158:158:void isTrue(boolean,java.lang.String,java.lang.Object[]) -> isTrue
org.apache.commons.lang3.builder.CompareToBuilder -> org.apache.commons.lang3.builder.CompareToBuilder:
    110:111:void <init>() -> <init>
    377:377:org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object) -> append
    406:432:org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator) -> append
    475:478:org.apache.commons.lang3.builder.CompareToBuilder append(long,long) -> append
    491:494:org.apache.commons.lang3.builder.CompareToBuilder append(int,int) -> append
    507:510:org.apache.commons.lang3.builder.CompareToBuilder append(short,short) -> append
    523:526:org.apache.commons.lang3.builder.CompareToBuilder append(char,char) -> append
    539:542:org.apache.commons.lang3.builder.CompareToBuilder append(byte,byte) -> append
    560:563:org.apache.commons.lang3.builder.CompareToBuilder append(double,double) -> append
    581:584:org.apache.commons.lang3.builder.CompareToBuilder append(float,float) -> append
    597:606:org.apache.commons.lang3.builder.CompareToBuilder append(boolean,boolean) -> append
    660:679:org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator) -> append
    700:719:org.apache.commons.lang3.builder.CompareToBuilder append(long[],long[]) -> append
    740:759:org.apache.commons.lang3.builder.CompareToBuilder append(int[],int[]) -> append
    780:799:org.apache.commons.lang3.builder.CompareToBuilder append(short[],short[]) -> append
    820:839:org.apache.commons.lang3.builder.CompareToBuilder append(char[],char[]) -> append
    860:879:org.apache.commons.lang3.builder.CompareToBuilder append(byte[],byte[]) -> append
    900:919:org.apache.commons.lang3.builder.CompareToBuilder append(double[],double[]) -> append
    940:959:org.apache.commons.lang3.builder.CompareToBuilder append(float[],float[]) -> append
    980:999:org.apache.commons.lang3.builder.CompareToBuilder append(boolean[],boolean[]) -> append
    442:461:void appendArray(java.lang.Object,java.lang.Object,java.util.Comparator) -> appendArray
    1015:1015:int toComparison() -> toComparison
org.apache.commons.lang3.builder.EqualsBuilder -> org.apache.commons.lang3.builder.EqualsBuilder:
    95:95:void <clinit>() -> <clinit>
    219:211:void <init>() -> <init>
    462:469:org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object,java.lang.Object) -> append
    531:534:org.apache.commons.lang3.builder.EqualsBuilder append(long,long) -> append
    546:549:org.apache.commons.lang3.builder.EqualsBuilder append(int,int) -> append
    561:564:org.apache.commons.lang3.builder.EqualsBuilder append(short,short) -> append
    576:579:org.apache.commons.lang3.builder.EqualsBuilder append(char,char) -> append
    591:594:org.apache.commons.lang3.builder.EqualsBuilder append(byte,byte) -> append
    612:615:org.apache.commons.lang3.builder.EqualsBuilder append(double,double) -> append
    632:635:org.apache.commons.lang3.builder.EqualsBuilder append(float,float) -> append
    646:649:org.apache.commons.lang3.builder.EqualsBuilder append(boolean,boolean) -> append
    664:671:org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    695:702:org.apache.commons.lang3.builder.EqualsBuilder append(long[],long[]) -> append
    726:733:org.apache.commons.lang3.builder.EqualsBuilder append(int[],int[]) -> append
    757:764:org.apache.commons.lang3.builder.EqualsBuilder append(short[],short[]) -> append
    788:795:org.apache.commons.lang3.builder.EqualsBuilder append(char[],char[]) -> append
    819:826:org.apache.commons.lang3.builder.EqualsBuilder append(byte[],byte[]) -> append
    850:857:org.apache.commons.lang3.builder.EqualsBuilder append(double[],double[]) -> append
    881:888:org.apache.commons.lang3.builder.EqualsBuilder append(float[],float[]) -> append
    912:919:org.apache.commons.lang3.builder.EqualsBuilder append(boolean[],boolean[]) -> append
    491:515:void appendArray(java.lang.Object,java.lang.Object) -> appendArray
    939:939:boolean isEquals() -> isEquals
    963:963:void setEquals(boolean) -> setEquals
org.apache.commons.lang3.builder.HashCodeBuilder -> org.apache.commons.lang3.builder.HashCodeBuilder:
    121:121:void <clinit>() -> <clinit>
    568:572:void <init>(int,int) -> <init>
    597:597:org.apache.commons.lang3.builder.HashCodeBuilder append(boolean) -> append
    612:615:org.apache.commons.lang3.builder.HashCodeBuilder append(boolean[]) -> append
    633:633:org.apache.commons.lang3.builder.HashCodeBuilder append(byte) -> append
    650:653:org.apache.commons.lang3.builder.HashCodeBuilder append(byte[]) -> append
    669:669:org.apache.commons.lang3.builder.HashCodeBuilder append(char) -> append
    684:687:org.apache.commons.lang3.builder.HashCodeBuilder append(char[]) -> append
    703:703:org.apache.commons.lang3.builder.HashCodeBuilder append(double) -> append
    717:720:org.apache.commons.lang3.builder.HashCodeBuilder append(double[]) -> append
    736:736:org.apache.commons.lang3.builder.HashCodeBuilder append(float) -> append
    751:754:org.apache.commons.lang3.builder.HashCodeBuilder append(float[]) -> append
    770:770:org.apache.commons.lang3.builder.HashCodeBuilder append(int) -> append
    785:788:org.apache.commons.lang3.builder.HashCodeBuilder append(int[]) -> append
    808:808:org.apache.commons.lang3.builder.HashCodeBuilder append(long) -> append
    823:826:org.apache.commons.lang3.builder.HashCodeBuilder append(long[]) -> append
    843:851:org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object) -> append
    901:904:org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object[]) -> append
    920:920:org.apache.commons.lang3.builder.HashCodeBuilder append(short) -> append
    935:938:org.apache.commons.lang3.builder.HashCodeBuilder append(short[]) -> append
    868:886:void appendArray(java.lang.Object) -> appendArray
    993:993:int hashCode() -> hashCode
    967:967:int toHashCode() -> toHashCode
org.apache.commons.lang3.builder.StandardToStringStyle -> org.apache.commons.lang3.builder.StandardToStringStyle:
    43:43:void <init>() -> <init>
    417:417:java.lang.String getNullText() -> getNullText
    100:100:boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    228:228:void setArrayEnd(java.lang.String) -> setArrayEnd
    203:203:void setArrayStart(java.lang.String) -> setArrayStart
    303:303:void setContentEnd(java.lang.String) -> setContentEnd
    278:278:void setContentStart(java.lang.String) -> setContentStart
    328:328:void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    353:353:void setFieldSeparator(java.lang.String) -> setFieldSeparator
    65:65:void setUseClassName(boolean) -> setUseClassName
    110:110:void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
org.apache.commons.lang3.builder.ToStringBuilder -> org.apache.commons.lang3.builder.ToStringBuilder:
    93:93:void <clinit>() -> <clinit>
    237:237:void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle) -> <init>
    251:262:void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer) -> <init>
    526:526:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean) -> append
    539:539:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean[]) -> append
    663:663:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double) -> append
    755:755:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int) -> append
    847:847:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object) -> append
    116:116:org.apache.commons.lang3.builder.ToStringStyle getDefaultStyle() -> getDefaultStyle
    1021:1021:java.lang.Object getObject() -> getObject
    1030:1030:java.lang.StringBuffer getStringBuffer() -> getStringBuffer
    1042:1042:org.apache.commons.lang3.builder.ToStringStyle getStyle() -> getStyle
    1057:1062:java.lang.String toString() -> toString
org.apache.commons.lang3.builder.ToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle:
    81:167:void <clinit>() -> <clinit>
    357:349:void <init>() -> <init>
    470:479:void append(java.lang.StringBuffer,java.lang.String,java.lang.Object,java.lang.Boolean) -> append
    707:709:void append(java.lang.StringBuffer,java.lang.String,int) -> append
    819:821:void append(java.lang.StringBuffer,java.lang.String,double) -> append
    875:877:void append(java.lang.StringBuffer,java.lang.String,boolean) -> append
    1426:1438:void append(java.lang.StringBuffer,java.lang.String,boolean[],java.lang.Boolean) -> append
    1483:1488:void appendClassName(java.lang.StringBuffer,java.lang.Object) -> appendClassName
    1522:1522:void appendContentEnd(java.lang.StringBuffer) -> appendContentEnd
    1513:1513:void appendContentStart(java.lang.StringBuffer) -> appendContentStart
    613:613:void appendCyclicObject(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendCyclicObject
    626:626:void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
    638:638:void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Collection) -> appendDetail
    650:650:void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Map) -> appendDetail
    693:693:void appendDetail(java.lang.StringBuffer,java.lang.String,long) -> appendDetail
    721:721:void appendDetail(java.lang.StringBuffer,java.lang.String,int) -> appendDetail
    749:749:void appendDetail(java.lang.StringBuffer,java.lang.String,short) -> appendDetail
    777:777:void appendDetail(java.lang.StringBuffer,java.lang.String,byte) -> appendDetail
    805:805:void appendDetail(java.lang.StringBuffer,java.lang.String,char) -> appendDetail
    833:833:void appendDetail(java.lang.StringBuffer,java.lang.String,double) -> appendDetail
    861:861:void appendDetail(java.lang.StringBuffer,java.lang.String,float) -> appendDetail
    889:889:void appendDetail(java.lang.StringBuffer,java.lang.String,boolean) -> appendDetail
    930:943:void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendDetail
    1024:1031:void appendDetail(java.lang.StringBuffer,java.lang.String,long[]) -> appendDetail
    1085:1092:void appendDetail(java.lang.StringBuffer,java.lang.String,int[]) -> appendDetail
    1146:1153:void appendDetail(java.lang.StringBuffer,java.lang.String,short[]) -> appendDetail
    1207:1214:void appendDetail(java.lang.StringBuffer,java.lang.String,byte[]) -> appendDetail
    1268:1275:void appendDetail(java.lang.StringBuffer,java.lang.String,char[]) -> appendDetail
    1329:1336:void appendDetail(java.lang.StringBuffer,java.lang.String,double[]) -> appendDetail
    1390:1397:void appendDetail(java.lang.StringBuffer,java.lang.String,float[]) -> appendDetail
    1451:1458:void appendDetail(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendDetail
    426:430:void appendEnd(java.lang.StringBuffer,java.lang.Object) -> appendEnd
    1566:1566:void appendFieldEnd(java.lang.StringBuffer,java.lang.String) -> appendFieldEnd
    1543:1543:void appendFieldSeparator(java.lang.StringBuffer) -> appendFieldSeparator
    1553:1555:void appendFieldStart(java.lang.StringBuffer,java.lang.String) -> appendFieldStart
    1500:1503:void appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object) -> appendIdentityHashCode
    502:596:void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> appendInternal
    1534:1534:void appendNullText(java.lang.StringBuffer,java.lang.String) -> appendNullText
    409:413:void appendStart(java.lang.StringBuffer,java.lang.Object) -> appendStart
    663:665:void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendSummary
    983:983:void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendSummary
    1044:1044:void appendSummary(java.lang.StringBuffer,java.lang.String,long[]) -> appendSummary
    1105:1105:void appendSummary(java.lang.StringBuffer,java.lang.String,int[]) -> appendSummary
    1166:1166:void appendSummary(java.lang.StringBuffer,java.lang.String,short[]) -> appendSummary
    1227:1227:void appendSummary(java.lang.StringBuffer,java.lang.String,byte[]) -> appendSummary
    1288:1288:void appendSummary(java.lang.StringBuffer,java.lang.String,char[]) -> appendSummary
    1349:1349:void appendSummary(java.lang.StringBuffer,java.lang.String,double[]) -> appendSummary
    1410:1410:void appendSummary(java.lang.StringBuffer,java.lang.String,float[]) -> appendSummary
    1471:1471:void appendSummary(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendSummary
    1585:1587:void appendSummarySize(java.lang.StringBuffer,java.lang.String,int) -> appendSummarySize
    1785:1785:java.lang.String getArrayEnd() -> getArrayEnd
    1759:1759:java.lang.String getArrayStart() -> getArrayStart
    1863:1863:java.lang.String getContentEnd() -> getContentEnd
    1837:1837:java.lang.String getContentStart() -> getContentStart
    1989:1989:java.lang.String getNullText() -> getNullText
    188:188:java.util.Map getRegistry() -> getRegistry
    1621:1621:java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    1606:1608:boolean isFullDetail(java.lang.Boolean) -> isFullDetail
    203:204:boolean isRegistered(java.lang.Object) -> isRegistered
    1677:1677:boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    218:222:void register(java.lang.Object) -> register
    440:451:void removeLastFieldSeparator(java.lang.StringBuffer) -> removeLastFieldSeparator
    1800:1800:void setArrayEnd(java.lang.String) -> setArrayEnd
    1774:1774:void setArrayStart(java.lang.String) -> setArrayStart
    1878:1878:void setContentEnd(java.lang.String) -> setContentEnd
    1852:1852:void setContentStart(java.lang.String) -> setContentStart
    1904:1904:void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    1930:1930:void setFieldSeparator(java.lang.String) -> setFieldSeparator
    1954:1954:void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    2004:2004:void setNullText(java.lang.String) -> setNullText
    2068:2068:void setSizeEndText(java.lang.String) -> setSizeEndText
    2036:2036:void setSizeStartText(java.lang.String) -> setSizeStartText
    2132:2132:void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
    2100:2100:void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    1644:1644:void setUseClassName(boolean) -> setUseClassName
    1706:1706:void setUseFieldNames(boolean) -> setUseFieldNames
    1686:1686:void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    1666:1666:void setUseShortClassName(boolean) -> setUseShortClassName
    240:244:void unregister(java.lang.Object) -> unregister
org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle:
    2158:2158:void <init>() -> <init>
org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle:
    2382:2402:void <init>() -> <init>
    2541:2538:void append(java.lang.StringBuffer,java.lang.String,boolean[],java.lang.Boolean) -> append
    2557:2554:void append(java.lang.StringBuffer,java.lang.String,java.lang.Object,java.lang.Boolean) -> append
    2567:2567:void appendDetail(java.lang.StringBuffer,java.lang.String,char) -> appendDetail
    2574:2579:void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
    2625:2621:void appendFieldStart(java.lang.StringBuffer,java.lang.String) -> appendFieldStart
    2614:2614:void appendValueAsString(java.lang.StringBuffer,java.lang.String) -> appendValueAsString
    2598:2599:boolean isJsonArray(java.lang.String) -> isJsonArray
    2603:2604:boolean isJsonObject(java.lang.String) -> isJsonObject
org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle:
    2295:2299:void <init>() -> <init>
org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle:
    2332:2334:void <init>() -> <init>
org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle:
    2191:2192:void <init>() -> <init>
org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle:
    2225:2227:void <init>() -> <init>
org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle:
    2259:2264:void <init>() -> <init>
org.apache.commons.lang3.math.NumberUtils -> org.apache.commons.lang3.math.NumberUtils:
    35:69:void <clinit>() -> <clinit>
    227:227:float toFloat(java.lang.String,float) -> toFloat
org.apache.commons.lang3.tuple.ImmutablePair -> org.apache.commons.lang3.tuple.ImmutablePair:
    67:69:void <init>(java.lang.Object,java.lang.Object) -> <init>
    78:78:java.lang.Object getLeft() -> getLeft
    86:86:java.lang.Object getRight() -> getRight
    100:100:java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.tuple.Pair -> org.apache.commons.lang3.tuple.Pair:
    41:41:void <init>() -> <init>
    41:41:int compareTo(java.lang.Object) -> compareTo
    117:118:int compareTo(org.apache.commons.lang3.tuple.Pair) -> compareTo
    133:136:boolean equals(java.lang.Object) -> equals
    91:91:java.lang.Object getKey() -> getKey
    104:104:java.lang.Object getValue() -> getValue
    150:151:int hashCode() -> hashCode
    161:161:java.lang.String toString() -> toString
org.apache.http.ProtocolVersion -> org.apache.http.ProtocolVersion:
    74:76:void <init>(java.lang.String,int,int) -> <init>
    280:280:java.lang.Object clone() -> clone
    173:178:boolean equals(java.lang.Object) -> equals
    107:107:int getMajor() -> getMajor
    116:116:int getMinor() -> getMinor
    98:98:java.lang.String getProtocol() -> getProtocol
    152:152:int hashCode() -> hashCode
    270:276:java.lang.String toString() -> toString
org.apache.http.client.methods.HttpDelete -> org.apache.http.client.methods.HttpDelete:
    68:69:void <init>(java.lang.String) -> <init>
org.apache.http.client.methods.HttpEntityEnclosingRequestBase -> org.apache.http.client.methods.HttpEntityEnclosingRequestBase:
    51:51:void <init>() -> <init>
    69:72:java.lang.Object clone() -> clone
    59:59:void setEntity(org.apache.http.HttpEntity) -> setEntity
org.apache.http.client.methods.HttpGet -> org.apache.http.client.methods.HttpGet:
    68:69:void <init>(java.lang.String) -> <init>
org.apache.http.client.methods.HttpHead -> org.apache.http.client.methods.HttpHead:
    71:72:void <init>(java.lang.String) -> <init>
org.apache.http.client.methods.HttpOptions -> org.apache.http.client.methods.HttpOptions:
    76:77:void <init>(java.lang.String) -> <init>
org.apache.http.client.methods.HttpPost -> org.apache.http.client.methods.HttpPost:
    75:76:void <init>(java.lang.String) -> <init>
org.apache.http.client.methods.HttpPut -> org.apache.http.client.methods.HttpPut:
    67:68:void <init>(java.lang.String) -> <init>
org.apache.http.client.methods.HttpRequestBase -> org.apache.http.client.methods.HttpRequestBase:
    67:68:void <init>() -> <init>
    168:174:java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpTrace -> org.apache.http.client.methods.HttpTrace:
    70:71:void <init>(java.lang.String) -> <init>
org.apache.http.client.utils.CloneUtils -> org.apache.http.client.utils.CloneUtils:
    49:70:java.lang.Object clone(java.lang.Object) -> clone
org.apache.http.entity.AbstractHttpEntity -> org.apache.http.entity.AbstractHttpEntity:
    63:63:void <init>() -> <init>
org.apache.http.entity.BasicHttpEntity -> org.apache.http.entity.BasicHttpEntity:
    59:60:void <init>() -> <init>
    80:81:java.io.InputStream getContent() -> getContent
    65:65:long getContentLength() -> getContentLength
    117:118:void setContent(java.io.InputStream) -> setContent
    107:107:void setContentLength(long) -> setContentLength
org.apache.http.entity.ByteArrayEntity -> org.apache.http.entity.ByteArrayEntity:
    52:54:void <init>(byte[]) -> <init>
    90:90:java.lang.Object clone() -> clone
    68:68:java.io.InputStream getContent() -> getContent
    64:64:long getContentLength() -> getContentLength
org.apache.http.message.AbstractHttpMessage -> org.apache.http.message.AbstractHttpMessage:
    57:59:void <init>(org.apache.http.params.HttpParams) -> <init>
    63:63:void <init>() -> <init>
    101:99:void addHeader(java.lang.String,java.lang.String) -> addHeader
    88:88:org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    152:155:org.apache.http.params.HttpParams getParams() -> getParams
    114:112:void setHeader(java.lang.String,java.lang.String) -> setHeader
    119:119:void setHeaders(org.apache.http.Header[]) -> setHeaders
org.apache.http.message.BasicHeader -> org.apache.http.message.BasicHeader:
    58:60:void <init>(java.lang.String,java.lang.String) -> <init>
    89:89:java.lang.Object clone() -> clone
    67:67:java.lang.String getName() -> getName
    71:71:java.lang.String getValue() -> getValue
    76:76:java.lang.String toString() -> toString
org.apache.http.message.BasicHttpResponse -> org.apache.http.message.BasicHttpResponse:
    73:75:void <init>(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale) -> <init>
    90:90:void <init>(org.apache.http.StatusLine) -> <init>
    122:122:org.apache.http.HttpEntity getEntity() -> getEntity
    117:117:org.apache.http.StatusLine getStatusLine() -> getStatusLine
    173:173:void setEntity(org.apache.http.HttpEntity) -> setEntity
org.apache.http.message.BasicLineFormatter -> org.apache.http.message.BasicLineFormatter:
    66:66:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    120:114:org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    322:334:void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> doFormatHeader
    255:268:void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> doFormatStatusLine
    147:147:int estimateProtocolVersionLen(org.apache.http.ProtocolVersion) -> estimateProtocolVersionLen
    300:295:org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
    237:233:org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    83:85:org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer) -> initBuffer
org.apache.http.message.BasicStatusLine -> org.apache.http.message.BasicStatusLine:
    68:70:void <init>(org.apache.http.ProtocolVersion,int,java.lang.String) -> <init>
    103:103:java.lang.Object clone() -> clone
    89:89:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    93:93:java.lang.String getReasonPhrase() -> getReasonPhrase
    85:85:int getStatusCode() -> getStatusCode
    98:98:java.lang.String toString() -> toString
org.apache.http.message.HeaderGroup -> org.apache.http.message.HeaderGroup:
    58:59:void <init>() -> <init>
    79:79:void addHeader(org.apache.http.Header) -> addHeader
    66:66:void clear() -> clear
    289:290:java.lang.Object clone() -> clone
    229:229:org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    123:128:void setHeaders(org.apache.http.Header[]) -> setHeaders
    105:112:void updateHeader(org.apache.http.Header) -> updateHeader
org.apache.http.params.AbstractHttpParams -> org.apache.http.params.AbstractHttpParams:
    53:53:void <init>() -> <init>
    78:78:org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
org.apache.http.params.BasicHttpParams -> org.apache.http.params.BasicHttpParams:
    61:58:void <init>() -> <init>
    147:148:java.lang.Object clone() -> clone
    159:163:void copyParams(org.apache.http.params.HttpParams) -> copyParams
    69:69:org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
org.apache.http.params.HttpConnectionParams -> org.apache.http.params.HttpConnectionParams:
    186:184:void setConnectionTimeout(org.apache.http.params.HttpParams,int) -> setConnectionTimeout
    72:70:void setSoTimeout(org.apache.http.params.HttpParams,int) -> setSoTimeout
org.apache.http.util.CharArrayBuffer -> org.apache.http.util.CharArrayBuffer:
    56:58:void <init>(int) -> <init>
    110:116:void append(java.lang.String) -> append
    160:165:void append(char) -> append
    240:240:void clear() -> clear
    311:313:void ensureCapacity(int) -> ensureCapacity
    64:66:void expand(int) -> expand
    470:470:java.lang.String toString() -> toString
org.apmem.tools.layouts.FlowLayout -> org.apmem.tools.layouts.FlowLayout:
    28:29:void <init>(android.content.Context) -> <init>
    33:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    237:283:void applyGravityToLine(org.apmem.tools.layouts.LineDefinition) -> applyGravityToLine
    196:232:void applyGravityToLines(java.util.List,int,int) -> applyGravityToLines
    170:187:void applyPositionsToViews(org.apmem.tools.layouts.LineDefinition) -> applyPositionsToViews
    152:164:void calculateLinesAndChildPosition(java.util.List) -> calculateLinesAndChildPosition
    366:366:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    440:443:android.graphics.Paint createPaint(int) -> createPaint
    468:470:boolean debugDraw() -> debugDraw
    359:360:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    385:434:void drawDebugInfo(android.graphics.Canvas,android.view.View) -> drawDebugInfo
    138:138:int findSize(int,int,int) -> findSize
    18:18:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    371:371:org.apmem.tools.layouts.FlowLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    18:18:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    18:18:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    376:376:org.apmem.tools.layouts.FlowLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    381:381:org.apmem.tools.layouts.FlowLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    288:299:int getGravity(org.apmem.tools.layouts.FlowLayout$LayoutParams) -> getGravity
    489:489:int getGravity() -> getGravity
    324:332:int getGravityFromRelative(int) -> getGravityFromRelative
    498:503:int getLayoutDirection() -> getLayoutDirection
    448:448:int getOrientation() -> getOrientation
    343:343:float getWeight(org.apmem.tools.layouts.FlowLayout$LayoutParams) -> getWeight
    480:480:float getWeightDefault() -> getWeightDefault
    457:457:boolean isDebugDraw() -> isDebugDraw
    348:352:void onLayout(boolean,int,int,int,int) -> onLayout
    44:128:void onMeasure(int,int) -> onMeasure
    461:462:void setDebugDraw(boolean) -> setDebugDraw
    493:494:void setGravity(int) -> setGravity
    507:508:void setLayoutDirection(int) -> setLayoutDirection
    452:453:void setOrientation(int) -> setOrientation
    484:485:void setWeightDefault(float) -> setWeightDefault
org.apmem.tools.layouts.FlowLayout$LayoutParams -> org.apmem.tools.layouts.FlowLayout$LayoutParams:
    538:539:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    543:528:void <init>(int,int) -> <init>
    547:528:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    511:511:int access$002(org.apmem.tools.layouts.FlowLayout$LayoutParams,int) -> access$002
    511:511:int access$100(org.apmem.tools.layouts.FlowLayout$LayoutParams) -> access$100
    511:511:int access$200(org.apmem.tools.layouts.FlowLayout$LayoutParams) -> access$200
    632:632:int getGravity() -> getGravity
    576:576:int getInlineStartLength() -> getInlineStartLength
    600:600:int getInlineStartThickness() -> getInlineStartThickness
    584:584:int getLength() -> getLength
    608:611:int getSpacingLength() -> getSpacingLength
    616:619:int getSpacingThickness() -> getSpacingThickness
    592:592:int getThickness() -> getThickness
    640:640:float getWeight() -> getWeight
    551:551:boolean gravitySpecified() -> gravitySpecified
    648:648:boolean isNewLine() -> isNewLine
    559:565:void readStyleParameters(android.content.Context,android.util.AttributeSet) -> readStyleParameters
    580:580:void setInlineStartLength(int) -> setInlineStartLength
    604:604:void setInlineStartThickness(int) -> setInlineStartThickness
    588:588:void setLength(int) -> setLength
    571:572:void setPosition(int,int) -> setPosition
    596:596:void setThickness(int) -> setThickness
    555:555:boolean weightSpecified() -> weightSpecified
org.apmem.tools.layouts.LayoutConfiguration -> org.apmem.tools.layouts.LayoutConfiguration:
    15:24:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:57:int getGravity() -> getGravity
    65:65:int getLayoutDirection() -> getLayoutDirection
    29:29:int getOrientation() -> getOrientation
    49:49:float getWeightDefault() -> getWeightDefault
    41:41:boolean isDebugDraw() -> isDebugDraw
    45:45:void setDebugDraw(boolean) -> setDebugDraw
    61:61:void setGravity(int) -> setGravity
    70:72:void setLayoutDirection(int) -> setLayoutDirection
    34:36:void setOrientation(int) -> setOrientation
    53:53:void setWeightDefault(float) -> setWeightDefault
org.apmem.tools.layouts.LineDefinition -> org.apmem.tools.layouts.LineDefinition:
    16:19:void <init>(int) -> <init>
    23:23:void addView(android.view.View) -> addView
    27:32:void addView(int,android.view.View) -> addView
    36:37:boolean canFit(android.view.View) -> canFit
    53:53:int getLineLength() -> getLineLength
    57:57:int getLineStartLength() -> getLineStartLength
    41:41:int getLineStartThickness() -> getLineStartThickness
    49:49:int getLineThickness() -> getLineThickness
    65:65:java.util.List getViews() -> getViews
    73:73:void setLength(int) -> setLength
    61:61:void setLineStartLength(int) -> setLineStartLength
    45:45:void setLineStartThickness(int) -> setLineStartThickness
    69:69:void setThickness(int) -> setThickness
org.apmem.tools.layouts.R$styleable -> org.apmem.tools.layouts.R$styleable:
    30:38:void <clinit>() -> <clinit>
org.mula.androidbase.AndroidBugReporter -> org.mula.androidbase.AndroidBugReporter:
    23:24:void <init>(android.content.Context) -> <init>
    118:136:void dumpBugReportToFile() -> dumpBugReportToFile
    37:42:java.lang.String getBugReport() -> getBugReport
    49:69:java.lang.String getDeviceInfo() -> getDeviceInfo
    76:99:java.lang.String getLogcat() -> getLogcat
org.mula.androidbase.AndroidDirFinder -> org.mula.androidbase.AndroidDirFinder:
    26:27:void <init>(android.content.Context) -> <init>
    33:42:java.io.File getFilesDir(java.lang.String) -> getFilesDir
org.mula.androidbase.AndroidDirFinder_Factory -> org.mula.androidbase.AndroidDirFinder_Factory:
    15:16:void <init>(javax.inject.Provider) -> <init>
    25:25:org.mula.androidbase.AndroidDirFinder_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    21:21:org.mula.androidbase.AndroidDirFinder get() -> get
    29:29:org.mula.androidbase.AndroidDirFinder newInstance(android.content.Context) -> newInstance
org.mula.androidbase.AppContextModule -> org.mula.androidbase.AppContextModule:
    15:16:void <init>(android.content.Context) -> <init>
    23:23:android.content.Context getContext() -> getContext
org.mula.androidbase.AppContextModule_GetContextFactory -> org.mula.androidbase.AppContextModule_GetContextFactory:
    15:16:void <init>(org.mula.androidbase.AppContextModule) -> <init>
    25:25:org.mula.androidbase.AppContextModule_GetContextFactory create(org.mula.androidbase.AppContextModule) -> create
    8:8:java.lang.Object get() -> get
    21:21:android.content.Context get() -> get
    29:29:android.content.Context getContext(org.mula.androidbase.AppContextModule) -> getContext
org.mula.androidbase.BaseExceptionHandler -> org.mula.androidbase.BaseExceptionHandler:
    20:22:void <init>(org.mula.androidbase.activities.BaseActivity) -> <init>
    33:50:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
org.mula.androidbase.SSLContextProvider -> org.mula.androidbase.SSLContextProvider:
    23:24:void <init>(android.content.Context) -> <init>
    31:50:javax.net.ssl.SSLContext getCACertSSLContext() -> getCACertSSLContext
org.mula.androidbase.SSLContextProvider_Factory -> org.mula.androidbase.SSLContextProvider_Factory:
    15:16:void <init>(javax.inject.Provider) -> <init>
    25:25:org.mula.androidbase.SSLContextProvider_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    21:21:org.mula.androidbase.SSLContextProvider get() -> get
    29:29:org.mula.androidbase.SSLContextProvider newInstance(android.content.Context) -> newInstance
org.mula.androidbase.activities.ActivityContextModule -> org.mula.androidbase.activities.ActivityContextModule:
    15:16:void <init>(android.content.Context) -> <init>
    23:23:android.content.Context getContext() -> getContext
org.mula.androidbase.activities.ActivityContextModule_GetContextFactory -> org.mula.androidbase.activities.ActivityContextModule_GetContextFactory:
    15:16:void <init>(org.mula.androidbase.activities.ActivityContextModule) -> <init>
    25:25:org.mula.androidbase.activities.ActivityContextModule_GetContextFactory create(org.mula.androidbase.activities.ActivityContextModule) -> create
    8:8:java.lang.Object get() -> get
    21:21:android.content.Context get() -> get
    29:29:android.content.Context getContext(org.mula.androidbase.activities.ActivityContextModule) -> getContext
org.mula.androidbase.activities.BaseActivity -> org.mula.androidbase.activities.BaseActivity:
    31:31:void <init>() -> <init>
    103:103:java.lang.Thread$UncaughtExceptionHandler getExceptionHandler() -> getExceptionHandler
    60:62:void lambda$restartWithFade$0(java.lang.Class) -> lambda$restartWithFade$0$BaseActivity
    90:91:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    97:98:void onCreate(android.os.Bundle) -> onCreate
    43:44:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    52:53:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    109:110:void onResume() -> onResume
    58:58:void restartWithFade(java.lang.Class) -> restartWithFade
    69:69:void setBaseMenu(org.mula.androidbase.activities.BaseMenu) -> setBaseMenu
    74:74:void setScreen(org.mula.androidbase.activities.BaseScreen) -> setScreen
    79:79:void showDialog(androidx.appcompat.app.AppCompatDialogFragment,java.lang.String) -> showDialog
    84:84:void showDialog(androidx.appcompat.app.AppCompatDialog) -> showDialog
org.mula.androidbase.activities.BaseActivityModule -> org.mula.androidbase.activities.BaseActivityModule:
    13:14:void <init>(org.mula.androidbase.activities.BaseActivity) -> <init>
    20:20:org.mula.androidbase.activities.BaseActivity getBaseActivity() -> getBaseActivity
org.mula.androidbase.activities.BaseActivityModule_GetBaseActivityFactory -> org.mula.androidbase.activities.BaseActivityModule_GetBaseActivityFactory:
    14:15:void <init>(org.mula.androidbase.activities.BaseActivityModule) -> <init>
    24:24:org.mula.androidbase.activities.BaseActivityModule_GetBaseActivityFactory create(org.mula.androidbase.activities.BaseActivityModule) -> create
    7:7:java.lang.Object get() -> get
    20:20:org.mula.androidbase.activities.BaseActivity get() -> get
    28:28:org.mula.androidbase.activities.BaseActivity getBaseActivity(org.mula.androidbase.activities.BaseActivityModule) -> getBaseActivity
org.mula.androidbase.activities.BaseMenu -> org.mula.androidbase.activities.BaseMenu:
    23:24:void <init>(org.mula.androidbase.activities.BaseActivity) -> <init>
    38:38:void invalidate() -> invalidate
    64:66:void onCreate(android.view.MenuInflater,android.view.Menu) -> onCreate
org.mula.androidbase.activities.BaseRootView -> org.mula.androidbase.activities.BaseRootView:
    42:43:void <init>(android.content.Context) -> <init>
    89:90:com.google.android.material.bottomnavigation.BottomNavigationView getBottomNav() -> getBottomNav
    98:99:int getBottomNavColor() -> getBottomNavColor
    48:48:boolean getDisplayHomeAsUp() -> getDisplayHomeAsUp
    110:110:org.mula.androidbase.activities.BaseScreen getScreen() -> getScreen
    59:60:androidx.appcompat.widget.Toolbar getToolbar() -> getToolbar
    68:69:int getToolbarColor() -> getToolbarColor
    74:82:void initToolbar() -> initToolbar
    104:104:void onAttachedToScreen(org.mula.androidbase.activities.BaseScreen) -> onAttachedToScreen
    53:53:void setDisplayHomeAsUp(boolean) -> setDisplayHomeAsUp
org.mula.androidbase.activities.BaseScreen -> org.mula.androidbase.activities.BaseScreen:
    54:55:void <init>(org.mula.androidbase.activities.BaseActivity) -> <init>
    41:41:org.mula.androidbase.activities.BaseSelectionMenu access$100(org.mula.androidbase.activities.BaseScreen) -> access$100
    61:69:int getDefaultActionBarColor(android.content.Context) -> getDefaultActionBarColor
    117:119:void invalidateToolbar() -> invalidateToolbar
    121:130:void lambda$invalidateToolbar$0() -> lambda$invalidateToolbar$0$BaseScreen
    256:257:void setActionBarColor(androidx.appcompat.app.ActionBar,int) -> setActionBarColor
    168:168:void setMenu(org.mula.androidbase.activities.BaseMenu) -> setMenu
    178:182:void setRootView(org.mula.androidbase.activities.BaseRootView) -> setRootView
    192:192:void setSelectionMenu(org.mula.androidbase.activities.BaseSelectionMenu) -> setSelectionMenu
    262:265:void setStatusBarColor(int) -> setStatusBarColor
    78:102:void setupActionBarColor(androidx.appcompat.app.AppCompatActivity,int) -> setupActionBarColor
    202:211:void showMessage(java.lang.Integer) -> showMessage
    218:227:void showSendEmailScreen(int,int,java.lang.String) -> showSendEmailScreen
    232:240:void showSendFileScreen(java.lang.String) -> showSendFileScreen
    251:251:void startSelection() -> startSelection
org.mula.androidbase.activities.BaseScreen$ActionModeWrapper -> org.mula.androidbase.activities.BaseScreen$ActionModeWrapper:
    268:268:void <init>(org.mula.androidbase.activities.BaseScreen) -> <init>
    268:268:void <init>(org.mula.androidbase.activities.BaseScreen,org.mula.androidbase.activities.BaseScreen$1) -> <init>
    274:275:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    282:284:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    291:292:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    299:300:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
org.mula.androidbase.activities.BaseSelectionMenu -> org.mula.androidbase.activities.BaseSelectionMenu:
    22:22:void <init>() -> <init>
    32:32:void finish() -> finish
    40:40:void invalidate() -> invalidate
    57:59:void onCreate(android.view.MenuInflater,androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreate
    100:100:void setTitle(java.lang.String) -> setTitle
org.mula.androidbase.utils.ColorUtils -> org.mula.androidbase.utils.ColorUtils:
    37:37:int setAlpha(int,float) -> setAlpha
    44:46:int setMinValue(int,float) -> setMinValue
org.mula.androidbase.utils.FileUtils -> org.mula.androidbase.utils.FileUtils:
    17:19:void copy(java.io.File,java.io.File) -> copy
    24:25:void copy(java.io.InputStream,java.io.File) -> copy
    33:34:void copy(java.io.InputStream,java.io.OutputStream) -> copy
    44:62:java.io.File getDir(java.io.File[],java.lang.String) -> getDir
org.mula.androidbase.utils.InterfaceUtils -> org.mula.androidbase.utils.InterfaceUtils:
    39:43:float dpToPixels(android.content.Context,float) -> dpToPixels
    57:63:float getDimension(android.content.Context,int) -> getDimension
    30:34:android.graphics.Typeface getFontAwesome(android.content.Context) -> getFontAwesome
    84:84:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    70:78:void setupEditorAction(android.view.ViewGroup,android.widget.TextView$OnEditorActionListener) -> setupEditorAction
    48:52:float spToPixels(android.content.Context,float) -> spToPixels
org.mula.androidbase.utils.StyledResources -> org.mula.androidbase.utils.StyledResources:
    21:22:void <init>(android.content.Context) -> <init>
    32:34:boolean getBoolean(int) -> getBoolean
    50:52:int getColor(int) -> getColor
    59:61:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    68:70:float getFloat(int) -> getFloat
    77:78:int[] getPalette() -> getPalette
    85:87:int getResource(int) -> getResource
    96:99:android.content.res.TypedArray getTypedArray(int) -> getTypedArray
org.mula.finance.Adapters.CalculatorAdapter -> org.mula.finance.Adapters.CalculatorAdapter:
    26:26:void <init>(java.util.ArrayList) -> <init>
    81:81:int getItemCount() -> getItemCount
    22:22:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    60:66:void onBindViewHolder(org.mula.finance.Adapters.CalculatorAdapter$CalculatorViewHolder,int) -> onBindViewHolder
    22:22:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    49:50:org.mula.finance.Adapters.CalculatorAdapter$CalculatorViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
org.mula.finance.Adapters.CalculatorAdapter$1 -> org.mula.finance.Adapters.CalculatorAdapter$1:
    66:66:void <init>(org.mula.finance.Adapters.CalculatorAdapter,org.mula.finance.Models.IntentLink) -> <init>
    69:75:void onClick(android.view.View) -> onClick
org.mula.finance.Adapters.CalculatorAdapter$CalculatorViewHolder -> org.mula.finance.Adapters.CalculatorAdapter$CalculatorViewHolder:
    38:41:void <init>(android.view.View) -> <init>
    29:29:android.view.View access$000(org.mula.finance.Adapters.CalculatorAdapter$CalculatorViewHolder) -> access$000
    29:29:android.widget.TextView access$100(org.mula.finance.Adapters.CalculatorAdapter$CalculatorViewHolder) -> access$100
org.mula.finance.Adapters.CategoryAdapter -> org.mula.finance.Adapters.CategoryAdapter:
    23:23:void <init>(java.util.List) -> <init>
    20:20:void onBindChildViewHolder(com.thoughtbot.expandablerecyclerview.viewholders.ChildViewHolder,int,com.thoughtbot.expandablerecyclerview.models.ExpandableGroup,int) -> onBindChildViewHolder
    41:53:void onBindChildViewHolder(org.mula.finance.Adapters.CategoryViewHolder,int,com.thoughtbot.expandablerecyclerview.models.ExpandableGroup,int) -> onBindChildViewHolder
    20:20:void onBindGroupViewHolder(com.thoughtbot.expandablerecyclerview.viewholders.GroupViewHolder,int,com.thoughtbot.expandablerecyclerview.models.ExpandableGroup) -> onBindGroupViewHolder
    59:60:void onBindGroupViewHolder(org.mula.finance.Adapters.IntentLinkViewHolder,int,com.thoughtbot.expandablerecyclerview.models.ExpandableGroup) -> onBindGroupViewHolder
    20:20:com.thoughtbot.expandablerecyclerview.viewholders.ChildViewHolder onCreateChildViewHolder(android.view.ViewGroup,int) -> onCreateChildViewHolder
    35:36:org.mula.finance.Adapters.CategoryViewHolder onCreateChildViewHolder(android.view.ViewGroup,int) -> onCreateChildViewHolder
    20:20:com.thoughtbot.expandablerecyclerview.viewholders.GroupViewHolder onCreateGroupViewHolder(android.view.ViewGroup,int) -> onCreateGroupViewHolder
    29:30:org.mula.finance.Adapters.IntentLinkViewHolder onCreateGroupViewHolder(android.view.ViewGroup,int) -> onCreateGroupViewHolder
org.mula.finance.Adapters.CategoryAdapter$1 -> org.mula.finance.Adapters.CategoryAdapter$1:
    44:44:void <init>(org.mula.finance.Adapters.CategoryAdapter,org.mula.finance.Models.Category) -> <init>
    47:50:void onClick(android.view.View) -> onClick
org.mula.finance.Adapters.CategoryViewHolder -> org.mula.finance.Adapters.CategoryViewHolder:
    18:20:void <init>(android.view.View) -> <init>
    24:24:void bind(org.mula.finance.Models.Category) -> bind
org.mula.finance.Adapters.IntentLinkViewHolder -> org.mula.finance.Adapters.IntentLinkViewHolder:
    20:23:void <init>(android.view.View) -> <init>
    27:32:void bind(org.mula.finance.Models.IntentLink) -> bind
org.mula.finance.Adapters.IntentLinkViewHolder$1 -> org.mula.finance.Adapters.IntentLinkViewHolder$1:
    32:32:void <init>(org.mula.finance.Adapters.IntentLinkViewHolder,org.mula.finance.Models.IntentLink) -> <init>
    35:37:void onClick(android.view.View) -> onClick
org.mula.finance.AsyncTasks.InsertExpenseAsyncTask -> org.mula.finance.AsyncTasks.InsertExpenseAsyncTask:
    12:13:void <init>(org.mula.finance.Databases.AppDatabase) -> <init>
    9:9:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    18:19:java.lang.Void doInBackground(org.mula.finance.Models.Expense[]) -> doInBackground
org.mula.finance.AsyncTasks.QuestionCategoryRetrieveAsyncTask -> org.mula.finance.AsyncTasks.QuestionCategoryRetrieveAsyncTask:
    10:10:void <init>() -> <init>
    10:10:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    20:20:java.util.List doInBackground(java.lang.Integer[]) -> doInBackground
    10:10:void onPostExecute(java.lang.Object) -> onPostExecute
    24:24:void onPostExecute(java.util.List) -> onPostExecute
    15:15:void setDelegate(org.mula.finance.AsyncTasks.QuestionCategoryAsyncTaskDelegate) -> setDelegate
    16:16:void setQuestionDatabase(org.mula.finance.Databases.QuestionDatabase) -> setQuestionDatabase
org.mula.finance.AsyncTasks.QuestionInsertAsyncTask -> org.mula.finance.AsyncTasks.QuestionInsertAsyncTask:
    10:10:void <init>() -> <init>
    10:10:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    20:20:java.lang.String doInBackground(java.util.List[]) -> doInBackground
    16:16:void setQuestionDatabase(org.mula.finance.Databases.QuestionDatabase) -> setQuestionDatabase
org.mula.finance.AsyncTasks.QuestionRetrieveAsyncTask -> org.mula.finance.AsyncTasks.QuestionRetrieveAsyncTask:
    8:8:void <init>() -> <init>
    8:8:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    18:18:org.mula.finance.Models.Question doInBackground(java.lang.Integer[]) -> doInBackground
    8:8:void onPostExecute(java.lang.Object) -> onPostExecute
    22:22:void onPostExecute(org.mula.finance.Models.Question) -> onPostExecute
    13:13:void setDelegate(org.mula.finance.AsyncTasks.QuestionAsyncTaskDelegate) -> setDelegate
    14:14:void setQuestionDatabase(org.mula.finance.Databases.QuestionDatabase) -> setQuestionDatabase
org.mula.finance.AsyncTasks.ScoreInsertAsyncTask -> org.mula.finance.AsyncTasks.ScoreInsertAsyncTask:
    12:12:void <init>() -> <init>
    12:12:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    21:21:java.lang.String doInBackground(org.mula.finance.Models.Score[]) -> doInBackground
    17:17:void setScoreDatabase(org.mula.finance.Databases.ScoreDatabase) -> setScoreDatabase
org.mula.finance.AsyncTasks.ScoreRetrieveAsyncTask -> org.mula.finance.AsyncTasks.ScoreRetrieveAsyncTask:
    10:10:void <init>() -> <init>
    10:10:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    19:19:java.util.List doInBackground(java.lang.Integer[]) -> doInBackground
    10:10:void onPostExecute(java.lang.Object) -> onPostExecute
    23:23:void onPostExecute(java.util.List) -> onPostExecute
    14:14:void setDelegate(org.mula.finance.AsyncTasks.ScoreListAsyncTaskDelegate) -> setDelegate
    15:15:void setScoreDatabase(org.mula.finance.Databases.ScoreDatabase) -> setScoreDatabase
org.mula.finance.DaggerHabitsApplicationComponent -> org.mula.finance.DaggerHabitsApplicationComponent:
    68:68:void <init>(org.mula.androidbase.AppContextModule,org.mula.finance.HabitsModule,org.mula.finance.DaggerHabitsApplicationComponent$1) -> <init>
    118:120:void <init>(org.mula.androidbase.AppContextModule,org.mula.finance.HabitsModule) -> <init>
    124:124:org.mula.finance.DaggerHabitsApplicationComponent$Builder builder() -> builder
    169:169:org.mula.finance.core.commands.CommandRunner getCommandRunner() -> getCommandRunner
    173:173:android.content.Context getContext() -> getContext
    177:177:org.mula.finance.core.commands.CreateHabitCommandFactory getCreateHabitCommandFactory() -> getCreateHabitCommandFactory
    181:181:org.mula.finance.core.commands.EditHabitCommandFactory getEditHabitCommandFactory() -> getEditHabitCommandFactory
    185:185:org.mula.finance.core.io.GenericImporter getGenericImporter() -> getGenericImporter
    137:137:org.mula.finance.core.io.HabitBullCSVImporter getHabitBullCSVImporter() -> getHabitBullCSVImporter
    189:189:org.mula.finance.core.ui.screens.habits.list.HabitCardListCache getHabitCardListCache() -> getHabitCardListCache
    193:193:org.mula.finance.core.models.HabitList getHabitList() -> getHabitList
    197:197:org.mula.finance.intents.IntentFactory getIntentFactory() -> getIntentFactory
    201:201:org.mula.finance.intents.IntentParser getIntentParser() -> getIntentParser
    128:128:org.mula.finance.core.io.LoopDBImporter getLoopDBImporter() -> getLoopDBImporter
    205:205:org.mula.finance.core.utils.MidnightTimer getMidnightTimer() -> getMidnightTimer
    209:209:org.mula.finance.core.models.ModelFactory getModelFactory() -> getModelFactory
    213:213:org.mula.finance.core.ui.NotificationTray getNotificationTray() -> getNotificationTray
    217:217:org.mula.finance.intents.PendingIntentFactory getPendingIntentFactory() -> getPendingIntentFactory
    221:221:org.mula.finance.core.preferences.Preferences getPreferences() -> getPreferences
    229:229:org.mula.finance.receivers.ReminderController getReminderController() -> getReminderController
    225:225:org.mula.finance.core.reminders.ReminderScheduler getReminderScheduler() -> getReminderScheduler
    131:131:org.mula.finance.core.io.RewireDBImporter getRewireDBImporter() -> getRewireDBImporter
    233:233:org.mula.finance.sync.SyncManager getSyncManager() -> getSyncManager
    237:237:org.mula.finance.core.tasks.TaskRunner getTaskRunner() -> getTaskRunner
    134:134:org.mula.finance.core.io.TickmateDBImporter getTickmateDBImporter() -> getTickmateDBImporter
    241:241:org.mula.finance.core.preferences.WidgetPreferences getWidgetPreferences() -> getWidgetPreferences
    245:245:org.mula.finance.widgets.WidgetUpdater getWidgetUpdater() -> getWidgetUpdater
    142:164:void initialize(org.mula.androidbase.AppContextModule,org.mula.finance.HabitsModule) -> initialize
org.mula.finance.DaggerHabitsApplicationComponent$Builder -> org.mula.finance.DaggerHabitsApplicationComponent$Builder:
    247:247:void <init>(org.mula.finance.DaggerHabitsApplicationComponent$1) -> <init>
    252:252:void <init>() -> <init>
    256:256:org.mula.finance.DaggerHabitsApplicationComponent$Builder appContextModule(org.mula.androidbase.AppContextModule) -> appContextModule
    275:279:org.mula.finance.HabitsApplicationComponent build() -> build
org.mula.finance.DataAccessObjects.ExpenseDao_Impl -> org.mula.finance.DataAccessObjects.ExpenseDao_Impl:
    28:61:void <init>(androidx.room.RoomDatabase) -> <init>
    99:127:java.util.List getAll() -> getAll
    72:79:void insert(org.mula.finance.Models.Expense[]) -> insert
org.mula.finance.DataAccessObjects.ExpenseDao_Impl$1 -> org.mula.finance.DataAccessObjects.ExpenseDao_Impl$1:
    30:30:void <init>(org.mula.finance.DataAccessObjects.ExpenseDao_Impl,androidx.room.RoomDatabase) -> <init>
    30:30:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    38:57:void bind(androidx.sqlite.db.SupportSQLiteStatement,org.mula.finance.Models.Expense) -> bind
org.mula.finance.DataAccessObjects.ExpenseDao_Impl$2 -> org.mula.finance.DataAccessObjects.ExpenseDao_Impl$2:
    61:61:void <init>(org.mula.finance.DataAccessObjects.ExpenseDao_Impl,androidx.room.RoomDatabase) -> <init>
org.mula.finance.DataAccessObjects.QuestionDao_Impl -> org.mula.finance.DataAccessObjects.QuestionDao_Impl:
    30:80:void <init>(androidx.room.RoomDatabase) -> <init>
    200:237:org.mula.finance.Models.Question getQuestion(int) -> getQuestion
    243:280:java.util.List getQuestionCategory(int) -> getQuestionCategory
    122:129:void insertAll(java.util.List) -> insertAll
org.mula.finance.DataAccessObjects.QuestionDao_Impl$1 -> org.mula.finance.DataAccessObjects.QuestionDao_Impl$1:
    32:32:void <init>(org.mula.finance.DataAccessObjects.QuestionDao_Impl,androidx.room.RoomDatabase) -> <init>
    32:32:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    40:66:void bind(androidx.sqlite.db.SupportSQLiteStatement,org.mula.finance.Models.Question) -> bind
org.mula.finance.DataAccessObjects.QuestionDao_Impl$2 -> org.mula.finance.DataAccessObjects.QuestionDao_Impl$2:
    69:69:void <init>(org.mula.finance.DataAccessObjects.QuestionDao_Impl,androidx.room.RoomDatabase) -> <init>
org.mula.finance.DataAccessObjects.QuestionDao_Impl$3 -> org.mula.finance.DataAccessObjects.QuestionDao_Impl$3:
    80:80:void <init>(org.mula.finance.DataAccessObjects.QuestionDao_Impl,androidx.room.RoomDatabase) -> <init>
org.mula.finance.DataAccessObjects.ScoreDao_Impl -> org.mula.finance.DataAccessObjects.ScoreDao_Impl:
    32:71:void <init>(androidx.room.RoomDatabase) -> <init>
    138:161:java.util.List getAllScores() -> getAllScores
    101:108:void insert(org.mula.finance.Models.Score[]) -> insert
org.mula.finance.DataAccessObjects.ScoreDao_Impl$1 -> org.mula.finance.DataAccessObjects.ScoreDao_Impl$1:
    34:34:void <init>(org.mula.finance.DataAccessObjects.ScoreDao_Impl,androidx.room.RoomDatabase) -> <init>
    34:34:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    42:44:void bind(androidx.sqlite.db.SupportSQLiteStatement,org.mula.finance.Models.Score) -> bind
org.mula.finance.DataAccessObjects.ScoreDao_Impl$2 -> org.mula.finance.DataAccessObjects.ScoreDao_Impl$2:
    47:47:void <init>(org.mula.finance.DataAccessObjects.ScoreDao_Impl,androidx.room.RoomDatabase) -> <init>
    47:47:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> bind
    55:57:void bind(androidx.sqlite.db.SupportSQLiteStatement,org.mula.finance.Models.Score) -> bind
org.mula.finance.DataAccessObjects.ScoreDao_Impl$3 -> org.mula.finance.DataAccessObjects.ScoreDao_Impl$3:
    60:60:void <init>(org.mula.finance.DataAccessObjects.ScoreDao_Impl,androidx.room.RoomDatabase) -> <init>
org.mula.finance.DataAccessObjects.ScoreDao_Impl$4 -> org.mula.finance.DataAccessObjects.ScoreDao_Impl$4:
    71:71:void <init>(org.mula.finance.DataAccessObjects.ScoreDao_Impl,androidx.room.RoomDatabase) -> <init>
org.mula.finance.Databases.AppDatabase -> org.mula.finance.Databases.AppDatabase:
    13:13:void <init>() -> <init>
    18:20:org.mula.finance.Databases.AppDatabase getInstance(android.content.Context) -> getInstance
org.mula.finance.Databases.AppDatabase_Impl -> org.mula.finance.Databases.AppDatabase_Impl:
    29:29:void <init>() -> <init>
    29:29:java.util.List access$000(org.mula.finance.Databases.AppDatabase_Impl) -> access$000
    29:29:java.util.List access$100(org.mula.finance.Databases.AppDatabase_Impl) -> access$100
    29:29:java.util.List access$1000(org.mula.finance.Databases.AppDatabase_Impl) -> access$1000
    29:29:java.util.List access$200(org.mula.finance.Databases.AppDatabase_Impl) -> access$200
    29:29:java.util.List access$300(org.mula.finance.Databases.AppDatabase_Impl) -> access$300
    29:29:java.util.List access$400(org.mula.finance.Databases.AppDatabase_Impl) -> access$400
    29:29:java.util.List access$500(org.mula.finance.Databases.AppDatabase_Impl) -> access$500
    29:29:androidx.sqlite.db.SupportSQLiteDatabase access$602(org.mula.finance.Databases.AppDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$602
    29:29:void access$700(org.mula.finance.Databases.AppDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$700
    29:29:java.util.List access$800(org.mula.finance.Databases.AppDatabase_Impl) -> access$800
    29:29:java.util.List access$900(org.mula.finance.Databases.AppDatabase_Impl) -> access$900
    111:113:androidx.room.InvalidationTracker createInvalidationTracker() -> createInvalidationTracker
    34:105:androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration) -> createOpenHelper
    135:143:org.mula.finance.DataAccessObjects.ExpenseDao expenseDao() -> expenseDao
org.mula.finance.Databases.AppDatabase_Impl$1 -> org.mula.finance.Databases.AppDatabase_Impl$1:
    34:34:void <init>(org.mula.finance.Databases.AppDatabase_Impl,int) -> <init>
    37:39:void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> createAllTables
    44:47:void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> dropAllTables
    54:56:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> onCreate
    63:67:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
    74:74:void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> onPreMigrate
    83:98:androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase) -> onValidateSchema
org.mula.finance.Databases.QuestionDatabase -> org.mula.finance.Databases.QuestionDatabase:
    13:13:void <init>() -> <init>
    20:23:org.mula.finance.Databases.QuestionDatabase getInstance(android.content.Context) -> getInstance
org.mula.finance.Databases.QuestionDatabase_Impl -> org.mula.finance.Databases.QuestionDatabase_Impl:
    29:29:void <init>() -> <init>
    29:29:java.util.List access$000(org.mula.finance.Databases.QuestionDatabase_Impl) -> access$000
    29:29:java.util.List access$100(org.mula.finance.Databases.QuestionDatabase_Impl) -> access$100
    29:29:java.util.List access$1000(org.mula.finance.Databases.QuestionDatabase_Impl) -> access$1000
    29:29:java.util.List access$200(org.mula.finance.Databases.QuestionDatabase_Impl) -> access$200
    29:29:java.util.List access$300(org.mula.finance.Databases.QuestionDatabase_Impl) -> access$300
    29:29:java.util.List access$400(org.mula.finance.Databases.QuestionDatabase_Impl) -> access$400
    29:29:java.util.List access$500(org.mula.finance.Databases.QuestionDatabase_Impl) -> access$500
    29:29:androidx.sqlite.db.SupportSQLiteDatabase access$602(org.mula.finance.Databases.QuestionDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$602
    29:29:void access$700(org.mula.finance.Databases.QuestionDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$700
    29:29:java.util.List access$800(org.mula.finance.Databases.QuestionDatabase_Impl) -> access$800
    29:29:java.util.List access$900(org.mula.finance.Databases.QuestionDatabase_Impl) -> access$900
    113:115:androidx.room.InvalidationTracker createInvalidationTracker() -> createInvalidationTracker
    34:107:androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration) -> createOpenHelper
    137:145:org.mula.finance.DataAccessObjects.QuestionDao questionDao() -> questionDao
org.mula.finance.Databases.QuestionDatabase_Impl$1 -> org.mula.finance.Databases.QuestionDatabase_Impl$1:
    34:34:void <init>(org.mula.finance.Databases.QuestionDatabase_Impl,int) -> <init>
    37:39:void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> createAllTables
    44:47:void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> dropAllTables
    54:56:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> onCreate
    63:67:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
    74:74:void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> onPreMigrate
    83:100:androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase) -> onValidateSchema
org.mula.finance.Databases.ScoreDatabase -> org.mula.finance.Databases.ScoreDatabase:
    13:13:void <init>() -> <init>
    20:23:org.mula.finance.Databases.ScoreDatabase getInstance(android.content.Context) -> getInstance
org.mula.finance.Databases.ScoreDatabase_Impl -> org.mula.finance.Databases.ScoreDatabase_Impl:
    29:29:void <init>() -> <init>
    29:29:java.util.List access$000(org.mula.finance.Databases.ScoreDatabase_Impl) -> access$000
    29:29:java.util.List access$100(org.mula.finance.Databases.ScoreDatabase_Impl) -> access$100
    29:29:java.util.List access$1000(org.mula.finance.Databases.ScoreDatabase_Impl) -> access$1000
    29:29:java.util.List access$200(org.mula.finance.Databases.ScoreDatabase_Impl) -> access$200
    29:29:java.util.List access$300(org.mula.finance.Databases.ScoreDatabase_Impl) -> access$300
    29:29:java.util.List access$400(org.mula.finance.Databases.ScoreDatabase_Impl) -> access$400
    29:29:java.util.List access$500(org.mula.finance.Databases.ScoreDatabase_Impl) -> access$500
    29:29:androidx.sqlite.db.SupportSQLiteDatabase access$602(org.mula.finance.Databases.ScoreDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$602
    29:29:void access$700(org.mula.finance.Databases.ScoreDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> access$700
    29:29:java.util.List access$800(org.mula.finance.Databases.ScoreDatabase_Impl) -> access$800
    29:29:java.util.List access$900(org.mula.finance.Databases.ScoreDatabase_Impl) -> access$900
    109:111:androidx.room.InvalidationTracker createInvalidationTracker() -> createInvalidationTracker
    34:103:androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration) -> createOpenHelper
    133:141:org.mula.finance.DataAccessObjects.ScoreDao scoreDao() -> scoreDao
org.mula.finance.Databases.ScoreDatabase_Impl$1 -> org.mula.finance.Databases.ScoreDatabase_Impl$1:
    34:34:void <init>(org.mula.finance.Databases.ScoreDatabase_Impl,int) -> <init>
    37:39:void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> createAllTables
    44:47:void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> dropAllTables
    54:56:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> onCreate
    63:67:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> onOpen
    74:74:void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> onPreMigrate
    83:96:androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase) -> onValidateSchema
org.mula.finance.Fragments.CalculatorFragment -> org.mula.finance.Fragments.CalculatorFragment:
    84:73:void <init>() -> <init>
    195:216:void getStockPricesOnline() -> getStockPricesOnline
    158:158:void lambda$onCreateView$0(android.view.View) -> lambda$onCreateView$0$CalculatorFragment
    108:109:void onCreate(android.os.Bundle) -> onCreate
    118:187:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    221:284:void onResponse(java.lang.String) -> onResponse
org.mula.finance.Fragments.CalculatorFragment$1 -> org.mula.finance.Fragments.CalculatorFragment$1:
    198:198:void <init>(org.mula.finance.Fragments.CalculatorFragment) -> <init>
    201:207:void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
org.mula.finance.Fragments.DailyQuizFragment -> org.mula.finance.Fragments.DailyQuizFragment:
    55:41:void <init>() -> <init>
    28:28:android.widget.RadioButton access$002(org.mula.finance.Fragments.DailyQuizFragment,android.widget.RadioButton) -> access$002
    28:28:android.widget.RadioGroup access$100(org.mula.finance.Fragments.DailyQuizFragment) -> access$100
    28:28:android.view.View access$200(org.mula.finance.Fragments.DailyQuizFragment) -> access$200
    28:28:int access$300(org.mula.finance.Fragments.DailyQuizFragment) -> access$300
    28:28:int access$302(org.mula.finance.Fragments.DailyQuizFragment,int) -> access$302
    28:28:int access$308(org.mula.finance.Fragments.DailyQuizFragment) -> access$308
    28:28:android.content.SharedPreferences access$400(org.mula.finance.Fragments.DailyQuizFragment) -> access$400
    28:28:android.content.SharedPreferences$Editor access$500(org.mula.finance.Fragments.DailyQuizFragment) -> access$500
    28:28:org.mula.finance.Models.Question access$600(org.mula.finance.Fragments.DailyQuizFragment) -> access$600
    137:139:void handleQuestionReturned(org.mula.finance.Models.Question) -> handleQuestionReturned
    170:173:void insertQuestionsInDatabase(java.util.List) -> insertQuestionsInDatabase
    60:63:org.mula.finance.Fragments.DailyQuizFragment newInstance(int) -> newInstance
    107:111:void onAttach(android.content.Context) -> onAttach
    71:94:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    118:118:void onDetach() -> onDetach
    177:180:void retrieveQuestionFromDatabase(int) -> retrieveQuestionFromDatabase
    128:131:void setQuestion(org.mula.finance.Models.Question) -> setQuestion
org.mula.finance.Fragments.DailyQuizFragment$1 -> org.mula.finance.Fragments.DailyQuizFragment$1:
    139:139:void <init>(org.mula.finance.Fragments.DailyQuizFragment) -> <init>
    142:163:void onClick(android.view.View) -> onClick
org.mula.finance.Fragments.ExpenseLineChartFragment -> org.mula.finance.Fragments.ExpenseLineChartFragment:
    36:36:void <init>() -> <init>
    46:97:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
org.mula.finance.Fragments.ExpensePieChartFragment -> org.mula.finance.Fragments.ExpensePieChartFragment:
    35:36:void <init>(java.lang.String) -> <init>
    44:76:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
org.mula.finance.Fragments.ExpensePieChartFragment$1 -> org.mula.finance.Fragments.ExpensePieChartFragment$1:
    65:65:void <init>(org.mula.finance.Fragments.ExpensePieChartFragment) -> <init>
    68:68:void onSelectPie(com.razerdp.widget.animatedpieview.data.IPieInfo,boolean) -> onSelectPie
org.mula.finance.Fragments.HomeFragment -> org.mula.finance.Fragments.HomeFragment:
    59:59:void <init>() -> <init>
    48:48:android.media.MediaPlayer access$000(org.mula.finance.Fragments.HomeFragment) -> access$000
    48:48:android.content.Context access$100(org.mula.finance.Fragments.HomeFragment) -> access$100
    72:73:void onCreate(android.os.Bundle) -> onCreate
    81:111:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
org.mula.finance.Fragments.HomeFragment$1 -> org.mula.finance.Fragments.HomeFragment$1:
    92:92:void <init>(org.mula.finance.Fragments.HomeFragment) -> <init>
    95:97:void onClick(android.view.View) -> onClick
org.mula.finance.Fragments.HomeFragment$2 -> org.mula.finance.Fragments.HomeFragment$2:
    101:101:void <init>(org.mula.finance.Fragments.HomeFragment) -> <init>
    104:106:void onClick(android.view.View) -> onClick
org.mula.finance.Fragments.InformationFragment -> org.mula.finance.Fragments.InformationFragment:
    54:46:void <init>() -> <init>
    132:148:void handleScoreListReturned(java.util.List) -> handleScoreListReturned
    62:63:void onCreate(android.os.Bundle) -> onCreate
    72:117:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    168:171:void retrieveScoreListFromDb() -> retrieveScoreListFromDb
org.mula.finance.Fragments.LineChartFragment -> org.mula.finance.Fragments.LineChartFragment:
    38:38:void <init>() -> <init>
    48:152:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
org.mula.finance.Fragments.LineChartFragment$1 -> org.mula.finance.Fragments.LineChartFragment$1:
    152:152:void <init>(org.mula.finance.Fragments.LineChartFragment,android.widget.TextView) -> <init>
    152:152:void onChanged(java.lang.Object) -> onChanged
    155:155:void onChanged(java.lang.String) -> onChanged
org.mula.finance.Fragments.PieChartFragment -> org.mula.finance.Fragments.PieChartFragment:
    34:34:void <init>() -> <init>
    43:77:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
org.mula.finance.Fragments.PieChartFragment$1 -> org.mula.finance.Fragments.PieChartFragment$1:
    66:66:void <init>(org.mula.finance.Fragments.PieChartFragment) -> <init>
    69:69:void onSelectPie(com.razerdp.widget.animatedpieview.data.IPieInfo,boolean) -> onSelectPie
org.mula.finance.Fragments.PieChartFragment$2 -> org.mula.finance.Fragments.PieChartFragment$2:
    77:77:void <init>(org.mula.finance.Fragments.PieChartFragment,android.widget.TextView) -> <init>
    77:77:void onChanged(java.lang.Object) -> onChanged
    80:80:void onChanged(java.lang.String) -> onChanged
org.mula.finance.HabitsApplication -> org.mula.finance.HabitsApplication:
    18:18:void <init>() -> <init>
    18:18:org.mula.finance.core.reminders.ReminderScheduler access$getReminderScheduler$p(org.mula.finance.HabitsApplication) -> access$getReminderScheduler$p
    18:18:org.mula.finance.widgets.WidgetUpdater access$getWidgetUpdater$p(org.mula.finance.HabitsApplication) -> access$getWidgetUpdater$p
    73:73:org.mula.finance.HabitsApplicationComponent getComponent() -> getComponent
    26:59:void onCreate() -> onCreate
    66:69:void onTerminate() -> onTerminate
org.mula.finance.HabitsApplication$Companion -> org.mula.finance.HabitsApplication$Companion:
    75:75:void <init>() -> <init>
    75:75:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    80:80:boolean isTestMode() -> isTestMode
org.mula.finance.HabitsApplication$onCreate$1 -> org.mula.finance.HabitsApplication$onCreate$1:
    60:61:void doInBackground() -> doInBackground
org.mula.finance.HabitsBackupAgent -> org.mula.finance.HabitsBackupAgent:
    10:10:void <init>() -> <init>
    12:13:void onCreate() -> onCreate
org.mula.finance.HabitsDatabaseOpener -> org.mula.finance.HabitsDatabaseOpener:
    35:35:void <init>(android.content.Context,java.lang.String,int) -> <init>
    38:40:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    60:60:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    44:45:void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    51:52:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
org.mula.finance.HabitsModule -> org.mula.finance.HabitsModule:
    25:25:void <init>() -> <init>
    65:65:org.mula.finance.core.models.ModelFactory getModelFactory() -> getModelFactory
    29:29:org.mula.finance.core.preferences.Preferences getPreferences(org.mula.finance.preferences.SharedPreferencesStorage) -> getPreferences
    40:40:org.mula.finance.core.reminders.ReminderScheduler getReminderScheduler(org.mula.finance.intents.IntentScheduler,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.models.HabitList,org.mula.finance.core.preferences.WidgetPreferences) -> getReminderScheduler
    51:51:org.mula.finance.core.ui.NotificationTray getTray(org.mula.finance.core.tasks.TaskRunner,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.preferences.Preferences,org.mula.finance.notifications.AndroidNotificationTray) -> getTray
    59:59:org.mula.finance.core.preferences.WidgetPreferences getWidgetPreferences(org.mula.finance.preferences.SharedPreferencesStorage) -> getWidgetPreferences
org.mula.finance.HabitsModule_GetDatabaseOpenerFactory -> org.mula.finance.HabitsModule_GetDatabaseOpenerFactory:
    24:26:void <init>(org.mula.finance.HabitsModule,javax.inject.Provider) -> <init>
    36:36:org.mula.finance.HabitsModule_GetDatabaseOpenerFactory create(org.mula.finance.HabitsModule,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    31:31:org.mula.finance.core.database.DatabaseOpener get() -> get
    41:41:org.mula.finance.core.database.DatabaseOpener getDatabaseOpener(org.mula.finance.HabitsModule,org.mula.finance.database.AndroidDatabaseOpener) -> getDatabaseOpener
org.mula.finance.HabitsModule_GetHabitListFactory -> org.mula.finance.HabitsModule_GetHabitListFactory:
    24:26:void <init>(org.mula.finance.HabitsModule,javax.inject.Provider) -> <init>
    36:36:org.mula.finance.HabitsModule_GetHabitListFactory create(org.mula.finance.HabitsModule,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    31:31:org.mula.finance.core.models.HabitList get() -> get
    40:40:org.mula.finance.core.models.HabitList getHabitList(org.mula.finance.HabitsModule,org.mula.finance.core.models.sqlite.SQLiteHabitList) -> getHabitList
org.mula.finance.HabitsModule_GetModelFactoryFactory -> org.mula.finance.HabitsModule_GetModelFactoryFactory:
    19:20:void <init>(org.mula.finance.HabitsModule) -> <init>
    29:29:org.mula.finance.HabitsModule_GetModelFactoryFactory create(org.mula.finance.HabitsModule) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.core.models.ModelFactory get() -> get
    33:33:org.mula.finance.core.models.ModelFactory getModelFactory(org.mula.finance.HabitsModule) -> getModelFactory
org.mula.finance.HabitsModule_GetPreferencesFactory -> org.mula.finance.HabitsModule_GetPreferencesFactory:
    24:26:void <init>(org.mula.finance.HabitsModule,javax.inject.Provider) -> <init>
    36:36:org.mula.finance.HabitsModule_GetPreferencesFactory create(org.mula.finance.HabitsModule,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    31:31:org.mula.finance.core.preferences.Preferences get() -> get
    41:41:org.mula.finance.core.preferences.Preferences getPreferences(org.mula.finance.HabitsModule,org.mula.finance.preferences.SharedPreferencesStorage) -> getPreferences
org.mula.finance.HabitsModule_GetReminderSchedulerFactory -> org.mula.finance.HabitsModule_GetReminderSchedulerFactory:
    35:40:void <init>(org.mula.finance.HabitsModule,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    52:52:org.mula.finance.HabitsModule_GetReminderSchedulerFactory create(org.mula.finance.HabitsModule,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    13:13:java.lang.Object get() -> get
    45:45:org.mula.finance.core.reminders.ReminderScheduler get() -> get
    57:57:org.mula.finance.core.reminders.ReminderScheduler getReminderScheduler(org.mula.finance.HabitsModule,org.mula.finance.intents.IntentScheduler,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.models.HabitList,org.mula.finance.core.preferences.WidgetPreferences) -> getReminderScheduler
org.mula.finance.HabitsModule_GetTrayFactory -> org.mula.finance.HabitsModule_GetTrayFactory:
    34:39:void <init>(org.mula.finance.HabitsModule,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    50:50:org.mula.finance.HabitsModule_GetTrayFactory create(org.mula.finance.HabitsModule,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    13:13:java.lang.Object get() -> get
    44:44:org.mula.finance.core.ui.NotificationTray get() -> get
    55:55:org.mula.finance.core.ui.NotificationTray getTray(org.mula.finance.HabitsModule,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.preferences.Preferences,org.mula.finance.notifications.AndroidNotificationTray) -> getTray
org.mula.finance.HabitsModule_GetWidgetPreferencesFactory -> org.mula.finance.HabitsModule_GetWidgetPreferencesFactory:
    24:26:void <init>(org.mula.finance.HabitsModule,javax.inject.Provider) -> <init>
    36:36:org.mula.finance.HabitsModule_GetWidgetPreferencesFactory create(org.mula.finance.HabitsModule,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    31:31:org.mula.finance.core.preferences.WidgetPreferences get() -> get
    41:41:org.mula.finance.core.preferences.WidgetPreferences getWidgetPreferences(org.mula.finance.HabitsModule,org.mula.finance.preferences.SharedPreferencesStorage) -> getWidgetPreferences
org.mula.finance.Models.Article -> org.mula.finance.Models.Article:
    21:21:void <init>() -> <init>
    24:30:void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    60:60:java.lang.String getArticleCategory() -> getArticleCategory
    77:77:java.lang.String getArticleFull() -> getArticleFull
    92:187:java.util.ArrayList getArticleList1() -> getArticleList1
    221:257:java.util.ArrayList getArticleList2() -> getArticleList2
    270:324:java.util.ArrayList getArticleList3() -> getArticleList3
    343:402:java.util.ArrayList getArticleList4() -> getArticleList4
    69:69:java.lang.String getArticleSnippet() -> getArticleSnippet
    52:52:java.lang.String getArticleTitle() -> getArticleTitle
    84:84:java.lang.String getImageURL() -> getImageURL
org.mula.finance.Models.Category -> org.mula.finance.Models.Category:
    12:15:void <init>(java.lang.String,int,android.content.Intent) -> <init>
    29:29:int getCategory() -> getCategory
    37:37:android.content.Intent getCategoryIntent() -> getCategoryIntent
    25:25:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.mula.finance.Models.Company -> org.mula.finance.Models.Company:
    19:19:java.util.Map getCompanyStockPrices() -> getCompanyStockPrices
org.mula.finance.Models.DailyPrice -> org.mula.finance.Models.DailyPrice:
    61:61:java.lang.String getDailyClose() -> getDailyClose
    45:45:java.lang.String getDailyHigh() -> getDailyHigh
    53:53:java.lang.String getDailyLow() -> getDailyLow
    37:37:java.lang.String getDailyOpen() -> getDailyOpen
org.mula.finance.Models.Expense -> org.mula.finance.Models.Expense:
    8:8:void <init>() -> <init>
org.mula.finance.Models.IntentLink -> org.mula.finance.Models.IntentLink:
    20:23:void <init>(java.lang.String,android.content.Intent,int,int,java.util.List) -> <init>
    38:38:int getLinkDrawable() -> getLinkDrawable
    34:34:android.content.Intent getLinkIntent() -> getLinkIntent
    30:30:java.lang.String getLinkName() -> getLinkName
org.mula.finance.Models.LineChartViewModel -> org.mula.finance.Models.LineChartViewModel:
    11:13:void <init>() -> <init>
    17:17:androidx.lifecycle.LiveData getText() -> getText
org.mula.finance.Models.PieChartViewModel -> org.mula.finance.Models.PieChartViewModel:
    11:13:void <init>() -> <init>
    17:17:androidx.lifecycle.LiveData getText() -> getText
org.mula.finance.Models.Question -> org.mula.finance.Models.Question:
    18:25:void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    70:70:java.lang.String getAnswer() -> getAnswer
    78:78:int getCategory() -> getCategory
    29:29:int getId() -> getId
    46:46:java.lang.String getOptionA() -> getOptionA
    54:54:java.lang.String getOptionB() -> getOptionB
    62:62:java.lang.String getOptionC() -> getOptionC
    37:37:java.lang.String getQuestion() -> getQuestion
org.mula.finance.Models.Score -> org.mula.finance.Models.Score:
    14:17:void <init>(int,int,int) -> <init>
    37:37:int getCategory() -> getCategory
    21:21:int getId() -> getId
    29:29:int getScore() -> getScore
org.mula.finance.activities.AddExpenseActivity -> org.mula.finance.activities.AddExpenseActivity:
    29:29:void <init>() -> <init>
    29:29:android.app.DatePickerDialog$OnDateSetListener access$000(org.mula.finance.activities.AddExpenseActivity) -> access$000
    29:29:android.widget.Button access$100(org.mula.finance.activities.AddExpenseActivity) -> access$100
    29:29:java.util.Date access$202(org.mula.finance.activities.AddExpenseActivity,java.util.Date) -> access$202
    89:93:void addToDatabase(android.view.View) -> addToDatabase
    42:73:void onCreate(android.os.Bundle) -> onCreate
    112:113:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
org.mula.finance.activities.AddExpenseActivity$1 -> org.mula.finance.activities.AddExpenseActivity$1:
    57:57:void <init>(org.mula.finance.activities.AddExpenseActivity) -> <init>
    61:69:void onClick(android.view.View) -> onClick
org.mula.finance.activities.AddExpenseActivity$2 -> org.mula.finance.activities.AddExpenseActivity$2:
    73:73:void <init>(org.mula.finance.activities.AddExpenseActivity) -> <init>
    77:80:void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
org.mula.finance.activities.AndroidThemeSwitcher -> org.mula.finance.activities.AndroidThemeSwitcher:
    20:20:void <init>(org.mula.androidbase.activities.BaseActivity,org.mula.finance.core.preferences.Preferences) -> <init>
    33:35:void applyDarkTheme() -> applyDarkTheme
    39:39:void applyLightTheme() -> applyLightTheme
    43:45:void applyPureBlackTheme() -> applyPureBlackTheme
    50:50:int getDialogTheme() -> getDialogTheme
    23:24:int getSystemTheme() -> getSystemTheme
org.mula.finance.activities.AndroidThemeSwitcher_Factory -> org.mula.finance.activities.AndroidThemeSwitcher_Factory:
    23:25:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    35:35:org.mula.finance.activities.AndroidThemeSwitcher_Factory create(javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    30:30:org.mula.finance.activities.AndroidThemeSwitcher get() -> get
    39:39:org.mula.finance.activities.AndroidThemeSwitcher newInstance(org.mula.androidbase.activities.BaseActivity,org.mula.finance.core.preferences.Preferences) -> newInstance
org.mula.finance.activities.DaggerHabitsActivityComponent -> org.mula.finance.activities.DaggerHabitsActivityComponent:
    92:92:void <init>(org.mula.androidbase.activities.ActivityContextModule,org.mula.androidbase.activities.BaseActivityModule,org.mula.finance.activities.HabitModule,org.mula.finance.HabitsApplicationComponent,org.mula.finance.activities.DaggerHabitsActivityComponent$1) -> <init>
    185:187:void <init>(org.mula.androidbase.activities.ActivityContextModule,org.mula.androidbase.activities.BaseActivityModule,org.mula.finance.activities.HabitModule,org.mula.finance.HabitsApplicationComponent) -> <init>
    191:191:org.mula.finance.activities.DaggerHabitsActivityComponent$Builder builder() -> builder
    195:195:org.mula.androidbase.AndroidDirFinder getAndroidDirFinder() -> getAndroidDirFinder
    201:201:org.mula.finance.activities.habits.list.BugReporterProxy getBugReporterProxy() -> getBugReporterProxy
    258:258:org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory getColorPickerDialogFactory() -> getColorPickerDialogFactory
    262:262:org.mula.finance.activities.habits.list.views.HabitCardListAdapter getHabitCardListAdapter() -> getHabitCardListAdapter
    198:198:org.mula.finance.activities.HabitsDirFinder getHabitsDirFinder() -> getHabitsDirFinder
    266:266:org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior getListHabitsBehavior() -> getListHabitsBehavior
    274:274:org.mula.finance.activities.habits.list.ListHabitsRootView getListHabitsRootView() -> getListHabitsRootView
    278:278:org.mula.finance.activities.habits.list.ListHabitsScreen getListHabitsScreen() -> getListHabitsScreen
    286:286:org.mula.finance.activities.habits.show.ShowHabitScreen getShowHabitScreen() -> getShowHabitScreen
    290:290:org.mula.finance.activities.AndroidThemeSwitcher getThemeSwitcher() -> getThemeSwitcher
    207:253:void initialize(org.mula.androidbase.activities.ActivityContextModule,org.mula.androidbase.activities.BaseActivityModule,org.mula.finance.activities.HabitModule,org.mula.finance.HabitsApplicationComponent) -> initialize
org.mula.finance.activities.DaggerHabitsActivityComponent$Builder -> org.mula.finance.activities.DaggerHabitsActivityComponent$Builder:
    292:292:void <init>(org.mula.finance.activities.DaggerHabitsActivityComponent$1) -> <init>
    301:301:void <init>() -> <init>
    305:305:org.mula.finance.activities.DaggerHabitsActivityComponent$Builder activityContextModule(org.mula.androidbase.activities.ActivityContextModule) -> activityContextModule
    310:310:org.mula.finance.activities.DaggerHabitsActivityComponent$Builder baseActivityModule(org.mula.androidbase.activities.BaseActivityModule) -> baseActivityModule
    326:330:org.mula.finance.activities.HabitsActivityComponent build() -> build
    315:315:org.mula.finance.activities.DaggerHabitsActivityComponent$Builder habitModule(org.mula.finance.activities.HabitModule) -> habitModule
    321:321:org.mula.finance.activities.DaggerHabitsActivityComponent$Builder habitsApplicationComponent(org.mula.finance.HabitsApplicationComponent) -> habitsApplicationComponent
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getCommandRunner -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getCommandRunner:
    422:423:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    418:418:java.lang.Object get() -> get
    428:428:org.mula.finance.core.commands.CommandRunner get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getContext -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getContext:
    408:409:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    404:404:java.lang.Object get() -> get
    414:414:android.content.Context get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getGenericImporter -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getGenericImporter:
    464:465:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    460:460:java.lang.Object get() -> get
    470:470:org.mula.finance.core.io.GenericImporter get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getHabitCardListCache -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getHabitCardListCache:
    338:339:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    334:334:java.lang.Object get() -> get
    344:344:org.mula.finance.core.ui.screens.habits.list.HabitCardListCache get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getHabitList -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getHabitList:
    394:395:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    390:390:java.lang.Object get() -> get
    400:400:org.mula.finance.core.models.HabitList get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getIntentFactory -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getIntentFactory:
    450:451:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    446:446:java.lang.Object get() -> get
    456:456:org.mula.finance.intents.IntentFactory get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getMidnightTimer -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getMidnightTimer:
    366:367:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    362:362:java.lang.Object get() -> get
    372:372:org.mula.finance.core.utils.MidnightTimer get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getModelFactory -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getModelFactory:
    478:479:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    474:474:java.lang.Object get() -> get
    484:484:org.mula.finance.core.models.ModelFactory get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getNotificationTray -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getNotificationTray:
    436:437:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    432:432:java.lang.Object get() -> get
    442:442:org.mula.finance.core.ui.NotificationTray get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getPreferences -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getPreferences:
    352:353:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    348:348:java.lang.Object get() -> get
    358:358:org.mula.finance.core.preferences.Preferences get() -> get
org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getTaskRunner -> org.mula.finance.activities.DaggerHabitsActivityComponent$org_mula_finance_HabitsApplicationComponent_getTaskRunner:
    380:381:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    376:376:java.lang.Object get() -> get
    386:386:org.mula.finance.core.tasks.TaskRunner get() -> get
org.mula.finance.activities.ExpenseTrackerActivity -> org.mula.finance.activities.ExpenseTrackerActivity:
    28:28:void <init>() -> <init>
    86:103:void getLineChartValues(java.util.List) -> getLineChartValues
    108:113:void getPieChartValues(java.util.List) -> getPieChartValues
    118:124:java.util.Date getThirtyDaysAgo() -> getThirtyDaysAgo
    66:70:void getValues() -> getValues
    128:129:void launchAddExpenseActivity(android.view.View) -> launchAddExpenseActivity
    37:62:void onCreate(android.os.Bundle) -> onCreate
    74:82:void removeInvalidDates(java.util.List) -> removeInvalidDates
org.mula.finance.activities.ExpenseTrackerActivity$1 -> org.mula.finance.activities.ExpenseTrackerActivity$1:
    86:86:void <init>(org.mula.finance.activities.ExpenseTrackerActivity) -> <init>
    86:86:int compare(java.lang.Object,java.lang.Object) -> compare
    89:89:int compare(org.mula.finance.Models.Expense,org.mula.finance.Models.Expense) -> compare
org.mula.finance.activities.HabitModule -> org.mula.finance.activities.HabitModule:
    9:9:void <init>(org.mula.finance.core.models.Habit) -> <init>
    10:10:org.mula.finance.core.models.Habit getHabit() -> getHabit
org.mula.finance.activities.HabitModule_GetHabitFactory -> org.mula.finance.activities.HabitModule_GetHabitFactory:
    19:20:void <init>(org.mula.finance.activities.HabitModule) -> <init>
    29:29:org.mula.finance.activities.HabitModule_GetHabitFactory create(org.mula.finance.activities.HabitModule) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.core.models.Habit get() -> get
    33:33:org.mula.finance.core.models.Habit getHabit(org.mula.finance.activities.HabitModule) -> getHabit
org.mula.finance.activities.HabitsActivity -> org.mula.finance.activities.HabitsActivity:
    14:14:void <init>() -> <init>
    16:16:org.mula.finance.HabitsApplicationComponent getAppComponent() -> getAppComponent
    15:15:org.mula.finance.activities.HabitsActivityComponent getComponent() -> getComponent
    38:40:org.mula.finance.core.models.Habit getHabitFromIntent(org.mula.finance.core.models.HabitList) -> getHabitFromIntent
    19:21:void onCreate(android.os.Bundle) -> onCreate
org.mula.finance.activities.HabitsDirFinder -> org.mula.finance.activities.HabitsDirFinder:
    11:11:void <init>(org.mula.androidbase.AndroidDirFinder) -> <init>
    16:16:java.io.File getCSVOutputDir() -> getCSVOutputDir
org.mula.finance.activities.HabitsDirFinder_Factory -> org.mula.finance.activities.HabitsDirFinder_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    30:30:org.mula.finance.activities.HabitsDirFinder_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.activities.HabitsDirFinder get() -> get
    34:34:org.mula.finance.activities.HabitsDirFinder newInstance(org.mula.androidbase.AndroidDirFinder) -> newInstance
org.mula.finance.activities.InvestmentCalculatorActivity -> org.mula.finance.activities.InvestmentCalculatorActivity:
    21:21:void <init>() -> <init>
    21:21:void access$000(org.mula.finance.activities.InvestmentCalculatorActivity) -> access$000
    21:21:void access$100(org.mula.finance.activities.InvestmentCalculatorActivity) -> access$100
    82:132:void computeValue() -> computeValue
    44:69:void onCreate(android.os.Bundle) -> onCreate
    139:182:void resetCalc() -> resetCalc
org.mula.finance.activities.InvestmentCalculatorActivity$1 -> org.mula.finance.activities.InvestmentCalculatorActivity$1:
    62:62:void <init>(org.mula.finance.activities.InvestmentCalculatorActivity) -> <init>
    65:65:void onClick(android.view.View) -> onClick
org.mula.finance.activities.InvestmentCalculatorActivity$2 -> org.mula.finance.activities.InvestmentCalculatorActivity$2:
    69:69:void <init>(org.mula.finance.activities.InvestmentCalculatorActivity) -> <init>
    72:72:void onClick(android.view.View) -> onClick
org.mula.finance.activities.MainActivity -> org.mula.finance.activities.MainActivity:
    28:28:void <init>() -> <init>
    28:28:androidx.fragment.app.Fragment access$000(org.mula.finance.activities.MainActivity) -> access$000
    28:28:void access$100(org.mula.finance.activities.MainActivity,androidx.fragment.app.Fragment) -> access$100
    28:28:androidx.fragment.app.Fragment access$200(org.mula.finance.activities.MainActivity) -> access$200
    28:28:androidx.fragment.app.Fragment access$300(org.mula.finance.activities.MainActivity) -> access$300
    60:100:void onCreate(android.os.Bundle) -> onCreate
    130:151:void showQuizPopup() -> showQuizPopup
    109:118:void swapMenuFragment(androidx.fragment.app.Fragment) -> swapMenuFragment
org.mula.finance.activities.MainActivity$1 -> org.mula.finance.activities.MainActivity$1:
    80:80:void <init>(org.mula.finance.activities.MainActivity) -> <init>
    84:89:boolean onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
org.mula.finance.activities.QuizActivity -> org.mula.finance.activities.QuizActivity:
    34:54:void <init>() -> <init>
    34:34:org.mula.finance.Models.Question access$000(org.mula.finance.activities.QuizActivity) -> access$000
    34:34:int access$100(org.mula.finance.activities.QuizActivity) -> access$100
    34:34:int access$108(org.mula.finance.activities.QuizActivity) -> access$108
    34:34:int access$200(org.mula.finance.activities.QuizActivity) -> access$200
    34:34:int access$208(org.mula.finance.activities.QuizActivity) -> access$208
    34:34:android.widget.Button access$300(org.mula.finance.activities.QuizActivity) -> access$300
    34:34:int access$400(org.mula.finance.activities.QuizActivity) -> access$400
    34:34:android.media.MediaPlayer access$500(org.mula.finance.activities.QuizActivity) -> access$500
    221:285:java.util.List getQuestionList() -> getQuestionList
    108:113:void handleQuestionListReturned(java.util.List) -> handleQuestionListReturned
    165:166:void handleQuestionReturned(org.mula.finance.Models.Question) -> handleQuestionReturned
    176:179:void handleScoreListReturned(java.util.List) -> handleScoreListReturned
    200:203:void insertQuestionListInDatabase(java.util.List) -> insertQuestionListInDatabase
    183:186:void insertScoreInDB(org.mula.finance.Models.Score) -> insertScoreInDB
    62:89:void onCreate(android.os.Bundle) -> onCreate
    208:211:void retrieveQuestionListFromDatabase(int) -> retrieveQuestionListFromDatabase
    190:193:void retrieveScoreListFromDb() -> retrieveScoreListFromDb
    97:101:void setQuestion(org.mula.finance.Models.Question,int) -> setQuestion
org.mula.finance.activities.QuizActivity$1 -> org.mula.finance.activities.QuizActivity$1:
    113:113:void <init>(org.mula.finance.activities.QuizActivity,java.util.List) -> <init>
    117:153:void onClick(android.view.View) -> onClick
org.mula.finance.activities.TaxCalculatorActivity -> org.mula.finance.activities.TaxCalculatorActivity:
    20:20:void <init>() -> <init>
    20:20:android.widget.Switch access$000(org.mula.finance.activities.TaxCalculatorActivity) -> access$000
    20:20:android.widget.Button access$100(org.mula.finance.activities.TaxCalculatorActivity) -> access$100
    20:20:android.media.MediaPlayer access$200(org.mula.finance.activities.TaxCalculatorActivity) -> access$200
    20:20:android.widget.Button access$300(org.mula.finance.activities.TaxCalculatorActivity) -> access$300
    20:20:android.media.MediaPlayer access$400(org.mula.finance.activities.TaxCalculatorActivity) -> access$400
    94:417:void calculateTax(android.view.View) -> calculateTax
    423:424:void clearText(android.view.View) -> clearText
    33:77:void onCreate(android.os.Bundle) -> onCreate
org.mula.finance.activities.TaxCalculatorActivity$1 -> org.mula.finance.activities.TaxCalculatorActivity$1:
    50:50:void <init>(org.mula.finance.activities.TaxCalculatorActivity) -> <init>
    55:62:void onClick(android.view.View) -> onClick
org.mula.finance.activities.TaxCalculatorActivity$2 -> org.mula.finance.activities.TaxCalculatorActivity$2:
    67:67:void <init>(org.mula.finance.activities.TaxCalculatorActivity) -> <init>
    71:72:void onClick(android.view.View) -> onClick
org.mula.finance.activities.TaxCalculatorActivity$3 -> org.mula.finance.activities.TaxCalculatorActivity$3:
    77:77:void <init>(org.mula.finance.activities.TaxCalculatorActivity) -> <init>
    81:82:void onClick(android.view.View) -> onClick
org.mula.finance.activities.article.ArticleActivity -> org.mula.finance.activities.article.ArticleActivity:
    18:29:void <init>() -> <init>
    18:18:int access$000(org.mula.finance.activities.article.ArticleActivity) -> access$000
    18:18:void access$100(org.mula.finance.activities.article.ArticleActivity,int,int) -> access$100
    116:119:void launchDetailActivity(int,int) -> launchDetailActivity
    35:107:void onCreate(android.os.Bundle) -> onCreate
org.mula.finance.activities.article.ArticleActivity$1 -> org.mula.finance.activities.article.ArticleActivity$1:
    54:54:void <init>(org.mula.finance.activities.article.ArticleActivity) -> <init>
    57:57:void onClick(android.view.View,int) -> onClick
org.mula.finance.activities.article.ArticleActivity$2 -> org.mula.finance.activities.article.ArticleActivity$2:
    72:72:void <init>(org.mula.finance.activities.article.ArticleActivity) -> <init>
    75:75:void onClick(android.view.View,int) -> onClick
org.mula.finance.activities.article.ArticleActivity$3 -> org.mula.finance.activities.article.ArticleActivity$3:
    85:85:void <init>(org.mula.finance.activities.article.ArticleActivity) -> <init>
    88:88:void onClick(android.view.View,int) -> onClick
org.mula.finance.activities.article.ArticleActivity$4 -> org.mula.finance.activities.article.ArticleActivity$4:
    99:99:void <init>(org.mula.finance.activities.article.ArticleActivity) -> <init>
    102:102:void onClick(android.view.View,int) -> onClick
org.mula.finance.activities.article.ArticleAdapter -> org.mula.finance.activities.article.ArticleAdapter:
    28:31:void <init>(java.util.ArrayList,org.mula.finance.activities.article.ArticleAdapter$RecyclerViewClickListener) -> <init>
    88:88:int getItemCount() -> getItemCount
    20:20:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    72:80:void onBindViewHolder(org.mula.finance.activities.article.ArticleAdapter$RestaurantViewHolder,int) -> onBindViewHolder
    20:20:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    63:64:org.mula.finance.activities.article.ArticleAdapter$RestaurantViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
org.mula.finance.activities.article.ArticleAdapter$RestaurantViewHolder -> org.mula.finance.activities.article.ArticleAdapter$RestaurantViewHolder:
    47:52:void <init>(android.view.View,org.mula.finance.activities.article.ArticleAdapter$RecyclerViewClickListener) -> <init>
    57:57:void onClick(android.view.View) -> onClick
org.mula.finance.activities.article.ArticleDetailActivity -> org.mula.finance.activities.article.ArticleDetailActivity:
    13:13:void <init>() -> <init>
    16:25:void onCreate(android.os.Bundle) -> onCreate
org.mula.finance.activities.article.ArticleFragment -> org.mula.finance.activities.article.ArticleFragment:
    26:22:void <init>() -> <init>
    21:21:org.mula.finance.Models.Article access$000(org.mula.finance.activities.article.ArticleFragment) -> access$000
    21:21:void access$100(org.mula.finance.activities.article.ArticleFragment,java.lang.String,java.lang.String) -> access$100
    35:80:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    92:93:void searchRestaurant(java.lang.String,java.lang.String) -> searchRestaurant
org.mula.finance.activities.article.ArticleFragment$1 -> org.mula.finance.activities.article.ArticleFragment$1:
    80:80:void <init>(org.mula.finance.activities.article.ArticleFragment) -> <init>
    84:84:void onClick(android.view.View) -> onClick
org.mula.finance.activities.category.ArticleSelectionActivity -> org.mula.finance.activities.category.ArticleSelectionActivity:
    15:21:void <init>() -> <init>
    26:52:void onCreate(android.os.Bundle) -> onCreate
org.mula.finance.activities.category.ArticleSelectionActivity$1 -> org.mula.finance.activities.category.ArticleSelectionActivity$1:
    52:52:void <init>(org.mula.finance.activities.category.ArticleSelectionActivity) -> <init>
    56:68:void onPageScrolled(int,float,int) -> onPageScrolled
org.mula.finance.activities.category.CategoryAdapter -> org.mula.finance.activities.category.CategoryAdapter:
    26:28:void <init>(java.util.List,android.content.Context) -> <init>
    20:20:android.content.Context access$000(org.mula.finance.activities.category.CategoryAdapter) -> access$000
    20:20:java.util.List access$100(org.mula.finance.activities.category.CategoryAdapter) -> access$100
    75:75:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    33:33:int getCount() -> getCount
    44:69:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    38:38:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
org.mula.finance.activities.category.CategoryAdapter$1 -> org.mula.finance.activities.category.CategoryAdapter$1:
    58:58:void <init>(org.mula.finance.activities.category.CategoryAdapter,int) -> <init>
    62:64:void onClick(android.view.View) -> onClick
org.mula.finance.activities.category.Model -> org.mula.finance.activities.category.Model:
    10:14:void <init>(int,java.lang.String,java.lang.String,int) -> <init>
    34:34:java.lang.String getDesc() -> getDesc
    42:42:int getId() -> getId
    18:18:int getImage() -> getImage
    26:26:java.lang.String getTitle() -> getTitle
org.mula.finance.activities.common.dialogs.ColorPickerDialog -> org.mula.finance.activities.common.dialogs.ColorPickerDialog:
    11:11:void <init>() -> <init>
    17:18:void lambda$setListener$0(org.mula.finance.core.ui.callbacks.OnColorPickedCallback,int) -> lambda$setListener$0$ColorPickerDialog
    15:15:void setListener(org.mula.finance.core.ui.callbacks.OnColorPickedCallback) -> setListener
org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory -> org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory:
    22:23:void <init>(android.content.Context) -> <init>
    28:32:org.mula.finance.activities.common.dialogs.ColorPickerDialog create(int) -> create
org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory_Factory -> org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory get() -> get
    33:33:org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory newInstance(android.content.Context) -> newInstance
org.mula.finance.activities.common.dialogs.ConfirmDeleteDialog -> org.mula.finance.activities.common.dialogs.ConfirmDeleteDialog:
    36:42:void <init>(android.content.Context,org.mula.finance.core.ui.callbacks.OnConfirmedCallback) -> <init>
    41:41:void lambda$new$0(org.mula.finance.core.ui.callbacks.OnConfirmedCallback,android.content.DialogInterface,int) -> lambda$new$0
org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory -> org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory:
    18:19:void <init>(javax.inject.Provider) -> <init>
    29:29:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    23:24:org.mula.finance.activities.common.dialogs.ConfirmDeleteDialog create(org.mula.finance.core.ui.callbacks.OnConfirmedCallback) -> create
org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory_Factory -> org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory get() -> get
    33:33:org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory newInstance(javax.inject.Provider) -> newInstance
org.mula.finance.activities.common.dialogs.ConfirmDeleteDialog_ViewBinding -> org.mula.finance.activities.common.dialogs.ConfirmDeleteDialog_ViewBinding:
    27:27:void <init>(org.mula.finance.activities.common.dialogs.ConfirmDeleteDialog,android.view.View) -> <init>
    31:35:void <init>(org.mula.finance.activities.common.dialogs.ConfirmDeleteDialog,android.content.Context) -> <init>
org.mula.finance.activities.common.dialogs.HistoryEditorDialog -> org.mula.finance.activities.common.dialogs.HistoryEditorDialog:
    42:43:void <init>() -> <init>
    23:23:org.mula.finance.core.models.Habit access$100(org.mula.finance.activities.common.dialogs.HistoryEditorDialog) -> access$100
    49:49:void onClick(android.content.DialogInterface,int) -> onClick
    56:88:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    94:94:void onModelChange() -> onModelChange
    100:101:void onPause() -> onPause
    107:118:void onResume() -> onResume
    124:125:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    141:142:void refreshData() -> refreshData
    130:131:void setController(org.mula.finance.activities.common.dialogs.HistoryEditorDialog$Controller) -> setController
    136:136:void setHabit(org.mula.finance.core.models.Habit) -> setHabit
org.mula.finance.activities.common.dialogs.HistoryEditorDialog$1 -> org.mula.finance.activities.common.dialogs.HistoryEditorDialog$1:
    43:43:void <init>(org.mula.finance.activities.common.dialogs.HistoryEditorDialog) -> <init>
org.mula.finance.activities.common.dialogs.HistoryEditorDialog$RefreshTask -> org.mula.finance.activities.common.dialogs.HistoryEditorDialog$RefreshTask:
    147:147:void <init>(org.mula.finance.activities.common.dialogs.HistoryEditorDialog) -> <init>
    147:147:void <init>(org.mula.finance.activities.common.dialogs.HistoryEditorDialog,org.mula.finance.activities.common.dialogs.HistoryEditorDialog$1) -> <init>
    154:154:void doInBackground() -> doInBackground
    160:165:void onPostExecute() -> onPostExecute
org.mula.finance.activities.common.dialogs.NumberPickerFactory -> org.mula.finance.activities.common.dialogs.NumberPickerFactory:
    35:35:void <init>(android.content.Context) -> <init>
    42:82:androidx.appcompat.app.AlertDialog create(double,java.lang.String,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$NumberPickerCallback) -> create
    88:90:void refreshInitialValue(android.widget.NumberPicker) -> refreshInitialValue
org.mula.finance.activities.common.dialogs.NumberPickerFactory$create$1 -> org.mula.finance.activities.common.dialogs.NumberPickerFactory$create$1:
    58:58:java.lang.String format(int) -> format
org.mula.finance.activities.common.dialogs.NumberPickerFactory$create$2 -> org.mula.finance.activities.common.dialogs.NumberPickerFactory$create$2:
    78:78:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.mula.finance.activities.common.dialogs.NumberPickerFactory$create$dialog$1 -> org.mula.finance.activities.common.dialogs.NumberPickerFactory$create$dialog$1:
    68:70:void onClick(android.content.DialogInterface,int) -> onClick
org.mula.finance.activities.common.dialogs.NumberPickerFactory_Factory -> org.mula.finance.activities.common.dialogs.NumberPickerFactory_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.activities.common.dialogs.NumberPickerFactory_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.activities.common.dialogs.NumberPickerFactory get() -> get
    33:33:org.mula.finance.activities.common.dialogs.NumberPickerFactory newInstance(android.content.Context) -> newInstance
org.mula.finance.activities.common.dialogs.WeekdayPickerDialog -> org.mula.finance.activities.common.dialogs.WeekdayPickerDialog:
    22:22:void <init>() -> <init>
    70:70:void lambda$onCreateDialog$0(android.content.DialogInterface,int) -> lambda$onCreateDialog$0$WeekdayPickerDialog
    34:34:void onClick(android.content.DialogInterface,int,boolean) -> onClick
    55:56:void onClick(android.content.DialogInterface,int) -> onClick
    39:42:void onCreate(android.os.Bundle) -> onCreate
    62:73:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    48:49:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    78:78:void setListener(org.mula.finance.activities.common.dialogs.WeekdayPickerDialog$OnWeekdaysPickedListener) -> setListener
    83:83:void setSelectedDays(org.mula.finance.core.models.WeekdayList) -> setSelectedDays
org.mula.finance.activities.common.views.BarChart -> org.mula.finance.activities.common.views.BarChart:
    26:29:void <clinit>() -> <clinit>
    87:88:void <init>(android.content.Context) -> <init>
    93:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    254:267:void drawBar(android.graphics.Canvas,android.graphics.RectF,double) -> drawBar
    272:317:void drawFooter(android.graphics.Canvas,android.graphics.RectF,org.mula.finance.core.models.Timestamp) -> drawFooter
    325:337:void drawGrid(android.graphics.Canvas,android.graphics.RectF) -> drawGrid
    344:365:void drawValue(android.graphics.Canvas,android.graphics.RectF,double) -> drawValue
    371:377:float getMaxDayWidth() -> getMaxDayWidth
    386:392:float getMaxMonthWidth() -> getMaxMonthWidth
    400:403:void init() -> init
    408:411:void initCache(int,int) -> initCache
    416:421:void initColors() -> initColors
    426:436:void initDateFormats() -> initDateFormats
    441:450:void initPaints() -> initPaints
    455:456:void initRects() -> initRects
    153:206:void onDraw(android.graphics.Canvas) -> onDraw
    212:214:void onMeasure(int,int) -> onMeasure
    225:249:void onSizeChanged(int,int,int,int) -> onSizeChanged
    99:111:void populateWithRandomData() -> populateWithRandomData
    116:117:void setBucketSize(int) -> setBucketSize
    122:129:void setCheckmarks(java.util.List) -> setCheckmarks
    134:135:void setColor(int) -> setColor
    140:141:void setIsTransparencyEnabled(boolean) -> setIsTransparencyEnabled
    461:462:void setModeOrColor(android.graphics.Paint,android.graphics.PorterDuffXfermode,int) -> setModeOrColor
    146:147:void setTarget(double) -> setTarget
org.mula.finance.activities.common.views.BundleSavedState -> org.mula.finance.activities.common.views.BundleSavedState:
    11:12:void <clinit>() -> <clinit>
    33:34:void <init>(android.os.Parcelable,android.os.Bundle) -> <init>
    39:40:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    46:47:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.mula.finance.activities.common.views.BundleSavedState$1 -> org.mula.finance.activities.common.views.BundleSavedState$1:
    14:14:void <init>() -> <init>
    14:14:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    19:19:org.mula.finance.activities.common.views.BundleSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    14:14:java.lang.Object[] newArray(int) -> newArray
    25:25:org.mula.finance.activities.common.views.BundleSavedState[] newArray(int) -> newArray
org.mula.finance.activities.common.views.FrequencyChart -> org.mula.finance.activities.common.views.FrequencyChart:
    64:65:void <init>(android.content.Context) -> <init>
    70:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    189:205:void drawColumn(android.graphics.Canvas,android.graphics.RectF,java.util.GregorianCalendar) -> drawColumn
    210:216:void drawFooter(android.graphics.Canvas,android.graphics.RectF,java.util.GregorianCalendar) -> drawFooter
    223:241:void drawGrid(android.graphics.Canvas,android.graphics.RectF) -> drawGrid
    246:255:void drawMarker(android.graphics.Canvas,android.graphics.RectF,java.lang.Integer) -> drawMarker
    99:101:int getMaxFreq(java.util.HashMap) -> getMaxFreq
    261:267:float getMaxMonthWidth() -> getMaxMonthWidth
    275:278:void init() -> init
    283:291:void initColors() -> initColors
    296:304:void initDateFormats() -> initDateFormats
    114:122:void initPaints() -> initPaints
    310:311:void initRects() -> initRects
    128:150:void onDraw(android.graphics.Canvas) -> onDraw
    157:159:void onMeasure(int,int) -> onMeasure
    170:184:void onSizeChanged(int,int,int,int) -> onSizeChanged
    316:330:void populateWithRandomData() -> populateWithRandomData
    77:79:void setColor(int) -> setColor
    91:92:void setFirstWeekday(int) -> setFirstWeekday
    84:86:void setFrequency(java.util.HashMap) -> setFrequency
    109:109:void setIsBackgroundTransparent(boolean) -> setIsBackgroundTransparent
org.mula.finance.activities.common.views.HistoryChart -> org.mula.finance.activities.common.views.HistoryChart:
    88:89:void <init>(android.content.Context) -> <init>
    94:95:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    287:292:void drawAxis(android.graphics.Canvas,android.graphics.RectF) -> drawAxis
    302:317:void drawColumn(android.graphics.Canvas,android.graphics.RectF,java.util.GregorianCalendar,int) -> drawColumn
    325:340:void drawColumnHeader(android.graphics.Canvas,android.graphics.RectF,java.util.GregorianCalendar) -> drawColumnHeader
    348:363:void drawSquare(android.graphics.Canvas,android.graphics.RectF,java.util.GregorianCalendar,int) -> drawSquare
    371:372:float getWeekdayLabelWidth() -> getWeekdayLabelWidth
    379:387:void init() -> init
    392:418:void initColors() -> initColors
    424:432:void initDateFormats() -> initDateFormats
    208:216:void initPaints() -> initPaints
    438:438:void initRects() -> initRects
    222:242:void onDraw(android.graphics.Canvas) -> onDraw
    101:101:void onLongPress(android.view.MotionEvent) -> onLongPress
    248:250:void onMeasure(int,int) -> onMeasure
    107:138:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    261:282:void onSizeChanged(int,int,int,int) -> onSizeChanged
    144:156:void populateWithRandomData() -> populateWithRandomData
    444:457:org.mula.finance.core.models.Timestamp positionToTimestamp(float,float) -> positionToTimestamp
    162:163:void setCheckmarks(int[]) -> setCheckmarks
    168:170:void setColor(int) -> setColor
    175:175:void setController(org.mula.finance.activities.common.views.HistoryChart$Controller) -> setController
    202:203:void setFirstWeekday(int) -> setFirstWeekday
    185:186:void setIsBackgroundTransparent(boolean) -> setIsBackgroundTransparent
    191:191:void setIsEditable(boolean) -> setIsEditable
    180:180:void setNumerical(boolean) -> setNumerical
    196:197:void setTarget(int) -> setTarget
    462:472:void updateDate() -> updateDate
org.mula.finance.activities.common.views.HistoryChart$1 -> org.mula.finance.activities.common.views.HistoryChart$1:
    381:381:void <init>(org.mula.finance.activities.common.views.HistoryChart) -> <init>
org.mula.finance.activities.common.views.HistoryChart$Controller$-CC -> org.mula.finance.activities.common.views.HistoryChart$Controller$-CC:
    void org.mula.finance.activities.common.views.HistoryChart$Controller.onToggleCheckmark(org.mula.finance.core.models.Timestamp) -> $default$onToggleCheckmark
org.mula.finance.activities.common.views.RingView -> org.mula.finance.activities.common.views.RingView:
    22:22:void <clinit>() -> <clinit>
    60:69:void <init>(android.content.Context) -> <init>
    74:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    112:112:int getColor() -> getColor
    249:249:float getPercentage() -> getPercentage
    254:254:float getPrecision() -> getPrecision
    221:236:void init() -> init
    152:193:void onDraw(android.graphics.Canvas) -> onDraw
    199:208:void onMeasure(int,int) -> onMeasure
    214:216:void onSizeChanged(int,int,int,int) -> onSizeChanged
    241:244:void reallocateCache() -> reallocateCache
    100:101:void setBackgroundColor(int) -> setBackgroundColor
    106:107:void setColor(int) -> setColor
    117:117:void setIsTransparencyEnabled(boolean) -> setIsTransparencyEnabled
    122:123:void setPercentage(float) -> setPercentage
    128:129:void setPrecision(float) -> setPrecision
    134:135:void setText(java.lang.String) -> setText
    140:140:void setTextSize(float) -> setTextSize
    145:146:void setThickness(float) -> setThickness
org.mula.finance.activities.common.views.ScoreChart -> org.mula.finance.activities.common.views.ScoreChart:
    25:28:void <clinit>() -> <clinit>
    83:84:void <init>(android.content.Context) -> <init>
    89:90:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    246:290:void drawFooter(android.graphics.Canvas,android.graphics.RectF,org.mula.finance.core.models.Timestamp) -> drawFooter
    298:313:void drawGrid(android.graphics.Canvas,android.graphics.RectF) -> drawGrid
    318:319:void drawLine(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF) -> drawLine
    325:337:void drawMarker(android.graphics.Canvas,android.graphics.RectF) -> drawMarker
    343:349:float getMaxDayWidth() -> getMaxDayWidth
    358:364:float getMaxMonthWidth() -> getMaxMonthWidth
    372:375:void init() -> init
    380:383:void initCache(int,int) -> initCache
    388:393:void initColors() -> initColors
    398:409:void initDateFormats() -> initDateFormats
    415:423:void initPaints() -> initPaints
    428:429:void initRects() -> initRects
    139:198:void onDraw(android.graphics.Canvas) -> onDraw
    204:206:void onMeasure(int,int) -> onMeasure
    217:241:void onSizeChanged(int,int,int,int) -> onSizeChanged
    95:106:void populateWithRandomData() -> populateWithRandomData
    114:115:void setBucketSize(int) -> setBucketSize
    126:127:void setColor(int) -> setColor
    120:121:void setIsTransparencyEnabled(boolean) -> setIsTransparencyEnabled
    434:435:void setModeOrColor(android.graphics.Paint,android.graphics.PorterDuffXfermode,int) -> setModeOrColor
    132:133:void setScores(java.util.List) -> setScores
org.mula.finance.activities.common.views.ScrollableChart -> org.mula.finance.activities.common.views.ScrollableChart:
    35:36:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:47:int getDataOffset() -> getDataOffset
    87:87:int getMaxX() -> getMaxX
    196:200:void init(android.content.Context) -> init
    53:60:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    76:81:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    93:107:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    113:120:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    126:141:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    160:160:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    178:181:void setMaxDataOffset(int) -> setMaxDataOffset
    186:186:void setScrollController(org.mula.finance.activities.common.views.ScrollableChart$ScrollController) -> setScrollController
    166:167:void setScrollDirection(int) -> setScrollDirection
    191:191:void setScrollerBucketSize(int) -> setScrollerBucketSize
    205:213:void updateDataOffset() -> updateDataOffset
org.mula.finance.activities.common.views.ScrollableChart$1 -> org.mula.finance.activities.common.views.ScrollableChart$1:
    200:200:void <init>(org.mula.finance.activities.common.views.ScrollableChart) -> <init>
org.mula.finance.activities.common.views.ScrollableChart$ScrollController$-CC -> org.mula.finance.activities.common.views.ScrollableChart$ScrollController$-CC:
    void org.mula.finance.activities.common.views.ScrollableChart$ScrollController.onDataOffsetChanged(int) -> $default$onDataOffsetChanged
org.mula.finance.activities.common.views.StreakChart -> org.mula.finance.activities.common.views.StreakChart:
    61:62:void <init>(android.content.Context) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    173:209:void drawRow(android.graphics.Canvas,org.mula.finance.core.models.Streak,android.graphics.RectF) -> drawRow
    79:79:int getMaxStreakCount() -> getMaxStreakCount
    215:223:void init() -> init
    228:240:void initColors() -> initColors
    245:247:void initPaints() -> initPaints
    121:129:void onDraw(android.graphics.Canvas) -> onDraw
    136:147:void onMeasure(int,int) -> onMeasure
    156:168:void onSizeChanged(int,int,int,int) -> onSizeChanged
    252:255:int percentageToColor(float) -> percentageToColor
    84:95:void populateWithRandomData() -> populateWithRandomData
    100:101:void setColor(int) -> setColor
    107:107:void setIsBackgroundTransparent(boolean) -> setIsBackgroundTransparent
    112:115:void setStreaks(java.util.List) -> setStreaks
    260:279:void updateMaxMinLengths() -> updateMaxMinLengths
org.mula.finance.activities.common.views.TaskProgressBar -> org.mula.finance.activities.common.views.TaskProgressBar:
    14:22:void <init>(android.content.Context,org.mula.finance.core.tasks.TaskRunner) -> <init>
    11:11:org.mula.finance.core.tasks.TaskRunner access$getRunner$p(org.mula.finance.activities.common.views.TaskProgressBar) -> access$getRunner$p
    29:31:void onAttachedToWindow() -> onAttachedToWindow
    35:36:void onDetachedFromWindow() -> onDetachedFromWindow
    26:26:void onTaskFinished(org.mula.finance.core.tasks.Task) -> onTaskFinished
    25:25:void onTaskStarted(org.mula.finance.core.tasks.Task) -> onTaskStarted
    40:48:void update() -> update
org.mula.finance.activities.common.views.TaskProgressBar$update$callback$1 -> org.mula.finance.activities.common.views.TaskProgressBar$update$callback$1:
    11:11:java.lang.Object invoke() -> invoke
    41:46:void invoke() -> invoke
org.mula.finance.activities.habits.edit.EditHabitDialog -> org.mula.finance.activities.habits.edit.EditHabitDialog:
    34:34:void <init>() -> <init>
    34:34:org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory access$000(org.mula.finance.activities.habits.edit.EditHabitDialog) -> access$000
    71:72:int getTheme() -> getTheme
    121:121:int getTitle() -> getTitle
    142:142:int getTypeFromArguments() -> getTypeFromArguments
    147:154:void initDependencies() -> initDependencies
    78:82:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    160:160:void onButtonDiscardClick() -> onButtonDiscardClick
    111:114:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    91:103:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    166:186:void onSaveButtonClick() -> onSaveButtonClick
    192:199:org.mula.finance.core.models.Habit parseHabitFromArguments() -> parseHabitFromArguments
    206:220:void populateForm() -> populateForm
    273:275:void restoreChildFragmentListeners() -> restoreChildFragmentListeners
    127:135:void saveHabit(org.mula.finance.core.models.Habit) -> saveHabit
    225:225:void setupNameController() -> setupNameController
    246:246:void setupReminderController() -> setupReminderController
org.mula.finance.activities.habits.edit.EditHabitDialog$1 -> org.mula.finance.activities.habits.edit.EditHabitDialog$1:
    226:226:void <init>(org.mula.finance.activities.habits.edit.EditHabitDialog) -> <init>
    235:236:void lambda$onColorPickerClicked$0(int) -> lambda$onColorPickerClicked$0$EditHabitDialog$1
    230:239:void onColorPickerClicked(int) -> onColorPickerClicked
org.mula.finance.activities.habits.edit.EditHabitDialog$2 -> org.mula.finance.activities.habits.edit.EditHabitDialog$2:
    247:247:void <init>(org.mula.finance.activities.habits.edit.EditHabitDialog) -> <init>
    252:256:void onTimeClicked(int,int) -> onTimeClicked
    262:265:void onWeekdayClicked(org.mula.finance.core.models.WeekdayList) -> onWeekdayClicked
org.mula.finance.activities.habits.edit.EditHabitDialogFactory -> org.mula.finance.activities.habits.edit.EditHabitDialogFactory:
    19:19:void <init>() -> <init>
    24:27:org.mula.finance.activities.habits.edit.EditHabitDialog createBoolean() -> createBoolean
    33:36:org.mula.finance.activities.habits.edit.EditHabitDialog createNumerical() -> createNumerical
    42:43:org.mula.finance.activities.habits.edit.EditHabitDialog edit(org.mula.finance.core.models.Habit) -> edit
org.mula.finance.activities.habits.edit.EditHabitDialogFactory_Factory -> org.mula.finance.activities.habits.edit.EditHabitDialogFactory_Factory:
    14:14:void <init>() -> <init>
    21:21:org.mula.finance.activities.habits.edit.EditHabitDialogFactory_Factory create() -> create
    6:6:java.lang.Object get() -> get
    17:17:org.mula.finance.activities.habits.edit.EditHabitDialogFactory get() -> get
    25:25:org.mula.finance.activities.habits.edit.EditHabitDialogFactory newInstance() -> newInstance
org.mula.finance.activities.habits.edit.EditHabitDialogFactory_Factory$InstanceHolder -> org.mula.finance.activities.habits.edit.EditHabitDialogFactory_Factory$InstanceHolder:
    29:29:void <clinit>() -> <clinit>
    28:28:org.mula.finance.activities.habits.edit.EditHabitDialogFactory_Factory access$000() -> access$000
org.mula.finance.activities.habits.edit.EditHabitDialog_ViewBinding -> org.mula.finance.activities.habits.edit.EditHabitDialog_ViewBinding:
    26:44:void <init>(org.mula.finance.activities.habits.edit.EditHabitDialog,android.view.View) -> <init>
org.mula.finance.activities.habits.edit.EditHabitDialog_ViewBinding$1 -> org.mula.finance.activities.habits.edit.EditHabitDialog_ViewBinding$1:
    36:36:void <init>(org.mula.finance.activities.habits.edit.EditHabitDialog_ViewBinding,org.mula.finance.activities.habits.edit.EditHabitDialog) -> <init>
    39:39:void doClick(android.view.View) -> doClick
org.mula.finance.activities.habits.edit.EditHabitDialog_ViewBinding$2 -> org.mula.finance.activities.habits.edit.EditHabitDialog_ViewBinding$2:
    44:44:void <init>(org.mula.finance.activities.habits.edit.EditHabitDialog_ViewBinding,org.mula.finance.activities.habits.edit.EditHabitDialog) -> <init>
    47:47:void doClick(android.view.View) -> doClick
org.mula.finance.activities.habits.edit.views.ExampleEditText -> org.mula.finance.activities.habits.edit.views.ExampleEditText:
    39:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:53:java.lang.String getRealText() -> getRealText
    77:80:void init() -> init
    59:60:void onFocusChange(android.view.View,boolean) -> onFocusChange
    65:66:void setExample(java.lang.String) -> setExample
    71:72:void setRealText(java.lang.String) -> setRealText
    85:95:void updateText() -> updateText
org.mula.finance.activities.habits.edit.views.FrequencyPanel -> org.mula.finance.activities.habits.edit.views.FrequencyPanel:
    40:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:60:org.mula.finance.core.models.Frequency getFrequency() -> getFrequency
    130:133:int getQuickSelectPosition(org.mula.finance.core.models.Frequency) -> getQuickSelectPosition
    79:78:void onFrequencySelected(int) -> onFrequencySelected
    66:72:void setFrequency(org.mula.finance.core.models.Frequency) -> setFrequency
    139:140:void showCustomFrequency() -> showCustomFrequency
    145:147:void showSimplifiedFrequency(int) -> showSimplifiedFrequency
    87:120:boolean validate() -> validate
org.mula.finance.activities.habits.edit.views.FrequencyPanel_ViewBinding -> org.mula.finance.activities.habits.edit.views.FrequencyPanel_ViewBinding:
    28:47:void <init>(org.mula.finance.activities.habits.edit.views.FrequencyPanel,android.view.View) -> <init>
org.mula.finance.activities.habits.edit.views.FrequencyPanel_ViewBinding$1 -> org.mula.finance.activities.habits.edit.views.FrequencyPanel_ViewBinding$1:
    37:37:void <init>(org.mula.finance.activities.habits.edit.views.FrequencyPanel_ViewBinding,org.mula.finance.activities.habits.edit.views.FrequencyPanel) -> <init>
    40:40:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
org.mula.finance.activities.habits.edit.views.NameDescriptionPanel -> org.mula.finance.activities.habits.edit.views.NameDescriptionPanel:
    42:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:53:int getColor() -> getColor
    65:65:java.lang.String getDescription() -> getDescription
    77:77:java.lang.String getName() -> getName
    71:71:java.lang.String getQuestion() -> getQuestion
    112:114:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    120:123:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    82:92:void populateFrom(org.mula.finance.core.models.Habit) -> populateFrom
    58:59:void setColor(int) -> setColor
    134:134:void setController(org.mula.finance.activities.habits.edit.views.NameDescriptionPanel$Controller) -> setController
    129:129:void showColorPicker() -> showColorPicker
    97:101:boolean validate() -> validate
org.mula.finance.activities.habits.edit.views.NameDescriptionPanel$1 -> org.mula.finance.activities.habits.edit.views.NameDescriptionPanel$1:
    48:48:void <init>(org.mula.finance.activities.habits.edit.views.NameDescriptionPanel) -> <init>
org.mula.finance.activities.habits.edit.views.NameDescriptionPanel$Controller$-CC -> org.mula.finance.activities.habits.edit.views.NameDescriptionPanel$Controller$-CC:
    void org.mula.finance.activities.habits.edit.views.NameDescriptionPanel$Controller.onColorPickerClicked(int) -> $default$onColorPickerClicked
org.mula.finance.activities.habits.edit.views.NameDescriptionPanel_ViewBinding -> org.mula.finance.activities.habits.edit.views.NameDescriptionPanel_ViewBinding:
    26:35:void <init>(org.mula.finance.activities.habits.edit.views.NameDescriptionPanel,android.view.View) -> <init>
org.mula.finance.activities.habits.edit.views.NameDescriptionPanel_ViewBinding$1 -> org.mula.finance.activities.habits.edit.views.NameDescriptionPanel_ViewBinding$1:
    35:35:void <init>(org.mula.finance.activities.habits.edit.views.NameDescriptionPanel_ViewBinding,org.mula.finance.activities.habits.edit.views.NameDescriptionPanel) -> <init>
    38:38:void doClick(android.view.View) -> doClick
org.mula.finance.activities.habits.edit.views.ReminderPanel -> org.mula.finance.activities.habits.edit.views.ReminderPanel:
    46:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:59:org.mula.finance.core.models.Reminder getReminder() -> getReminder
    146:152:void onDateSpinnerClick() -> onDateSpinnerClick
    114:123:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    129:137:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    85:85:void onTimeCleared(com.android.datetimepicker.time.RadialPickerLayout) -> onTimeCleared
    91:93:void onTimeSet(com.android.datetimepicker.time.RadialPickerLayout,int,int) -> onTimeSet
    158:159:void onWeekdayClicked() -> onWeekdayClicked
    99:102:void onWeekdaysSet(org.mula.finance.core.models.WeekdayList) -> onWeekdaysSet
    108:108:void setController(org.mula.finance.activities.habits.edit.views.ReminderPanel$Controller) -> setController
    64:79:void setReminder(org.mula.finance.core.models.Reminder) -> setReminder
org.mula.finance.activities.habits.edit.views.ReminderPanel$1 -> org.mula.finance.activities.habits.edit.views.ReminderPanel$1:
    52:52:void <init>(org.mula.finance.activities.habits.edit.views.ReminderPanel) -> <init>
org.mula.finance.activities.habits.edit.views.ReminderPanel$Controller$-CC -> org.mula.finance.activities.habits.edit.views.ReminderPanel$Controller$-CC:
    void org.mula.finance.activities.habits.edit.views.ReminderPanel$Controller.onTimeClicked(int,int) -> $default$onTimeClicked
    void org.mula.finance.activities.habits.edit.views.ReminderPanel$Controller.onWeekdayClicked(org.mula.finance.core.models.WeekdayList) -> $default$onWeekdayClicked
org.mula.finance.activities.habits.edit.views.ReminderPanel_ViewBinding -> org.mula.finance.activities.habits.edit.views.ReminderPanel_ViewBinding:
    29:46:void <init>(org.mula.finance.activities.habits.edit.views.ReminderPanel,android.view.View) -> <init>
org.mula.finance.activities.habits.edit.views.ReminderPanel_ViewBinding$1 -> org.mula.finance.activities.habits.edit.views.ReminderPanel_ViewBinding$1:
    36:36:void <init>(org.mula.finance.activities.habits.edit.views.ReminderPanel_ViewBinding,org.mula.finance.activities.habits.edit.views.ReminderPanel) -> <init>
    39:39:void doClick(android.view.View) -> doClick
org.mula.finance.activities.habits.edit.views.ReminderPanel_ViewBinding$2 -> org.mula.finance.activities.habits.edit.views.ReminderPanel_ViewBinding$2:
    46:46:void <init>(org.mula.finance.activities.habits.edit.views.ReminderPanel_ViewBinding,org.mula.finance.activities.habits.edit.views.ReminderPanel) -> <init>
    49:49:void doClick(android.view.View) -> doClick
org.mula.finance.activities.habits.edit.views.TargetPanel -> org.mula.finance.activities.habits.edit.views.TargetPanel:
    33:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:double getTargetValue() -> getTargetValue
    53:53:java.lang.String getUnit() -> getUnit
    48:48:void setTargetValue(double) -> setTargetValue
    58:58:void setUnit(java.lang.String) -> setUnit
    63:69:boolean validate() -> validate
org.mula.finance.activities.habits.edit.views.TargetPanel_ViewBinding -> org.mula.finance.activities.habits.edit.views.TargetPanel_ViewBinding:
    23:27:void <init>(org.mula.finance.activities.habits.edit.views.TargetPanel,android.view.View) -> <init>
org.mula.finance.activities.habits.list.BugReporterProxy -> org.mula.finance.activities.habits.list.BugReporterProxy:
    19:19:void <init>(android.content.Context) -> <init>
org.mula.finance.activities.habits.list.BugReporterProxy_Factory -> org.mula.finance.activities.habits.list.BugReporterProxy_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.activities.habits.list.BugReporterProxy_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.activities.habits.list.BugReporterProxy get() -> get
    33:33:org.mula.finance.activities.habits.list.BugReporterProxy newInstance(android.content.Context) -> newInstance
org.mula.finance.activities.habits.list.ListHabitsActivity -> org.mula.finance.activities.habits.list.ListHabitsActivity:
    13:13:void <init>() -> <init>
    23:33:void onCreate(android.os.Bundle) -> onCreate
    37:40:void onPause() -> onPause
    44:53:void onResume() -> onResume
org.mula.finance.activities.habits.list.ListHabitsMenu -> org.mula.finance.activities.habits.list.ListHabitsMenu:
    21:21:void <init>(org.mula.androidbase.activities.BaseActivity,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.ui.ThemeSwitcher,org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior) -> <init>
    24:30:void onCreate(android.view.Menu) -> onCreate
    34:37:boolean onItemSelected(android.view.MenuItem) -> onItemSelected
org.mula.finance.activities.habits.list.ListHabitsMenu_Factory -> org.mula.finance.activities.habits.list.ListHabitsMenu_Factory:
    30:34:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    45:45:org.mula.finance.activities.habits.list.ListHabitsMenu_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    11:11:java.lang.Object get() -> get
    39:39:org.mula.finance.activities.habits.list.ListHabitsMenu get() -> get
    50:50:org.mula.finance.activities.habits.list.ListHabitsMenu newInstance(org.mula.androidbase.activities.BaseActivity,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.ui.ThemeSwitcher,org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior) -> newInstance
org.mula.finance.activities.habits.list.ListHabitsRootView -> org.mula.finance.activities.habits.list.ListHabitsRootView:
    36:70:void <init>(android.content.Context,org.mula.finance.core.ui.screens.habits.list.HintListFactory,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.utils.MidnightTimer,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.activities.habits.list.views.HabitCardListAdapter,org.mula.finance.activities.habits.list.views.HabitCardListViewFactory) -> <init>
    41:41:com.google.android.material.bottomnavigation.BottomNavigationView getBmenu() -> getBmenu
    78:78:com.google.android.material.bottomnavigation.BottomNavigationView getBottomNav() -> getBottomNav
    113:117:int getCheckmarkCount() -> getCheckmarkCount
    44:44:org.mula.finance.activities.habits.list.views.HeaderView getHeader() -> getHeader
    43:43:org.mula.finance.activities.habits.list.views.HintView getHintView() -> getHintView
    38:38:org.mula.finance.activities.habits.list.views.HabitCardListView getListView() -> getListView
    39:39:org.mula.finance.activities.habits.list.views.EmptyListView getLlEmpty() -> getLlEmpty
    42:42:org.mula.finance.activities.common.views.TaskProgressBar getProgressBar() -> getProgressBar
    40:40:androidx.appcompat.widget.Toolbar getTbar() -> getTbar
    74:74:androidx.appcompat.widget.Toolbar getToolbar() -> getToolbar
    94:96:void onAttachedToWindow() -> onAttachedToWindow
    100:101:void onDetachedFromWindow() -> onDetachedFromWindow
    82:82:void onModelChange() -> onModelChange
    105:109:void onSizeChanged(int,int,int,int) -> onSizeChanged
    86:86:void setupControllers() -> setupControllers
    121:121:void updateEmptyView() -> updateEmptyView
org.mula.finance.activities.habits.list.ListHabitsRootView$1$1 -> org.mula.finance.activities.habits.list.ListHabitsRootView$1$1:
    28:28:java.lang.Object invoke(java.lang.Object) -> invoke
    58:58:void invoke(android.widget.RelativeLayout$LayoutParams) -> invoke
org.mula.finance.activities.habits.list.ListHabitsRootView$setupControllers$1 -> org.mula.finance.activities.habits.list.ListHabitsRootView$setupControllers$1:
    86:86:void <init>(org.mula.finance.activities.habits.list.ListHabitsRootView) -> <init>
    88:88:void onDataOffsetChanged(int) -> onDataOffsetChanged
org.mula.finance.activities.habits.list.ListHabitsRootView_Factory -> org.mula.finance.activities.habits.list.ListHabitsRootView_Factory:
    41:48:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    61:61:org.mula.finance.activities.habits.list.ListHabitsRootView_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    14:14:java.lang.Object get() -> get
    53:53:org.mula.finance.activities.habits.list.ListHabitsRootView get() -> get
    67:67:org.mula.finance.activities.habits.list.ListHabitsRootView newInstance(android.content.Context,org.mula.finance.core.ui.screens.habits.list.HintListFactory,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.utils.MidnightTimer,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.activities.habits.list.views.HabitCardListAdapter,org.mula.finance.activities.habits.list.views.HabitCardListViewFactory) -> newInstance
org.mula.finance.activities.habits.list.ListHabitsScreen -> org.mula.finance.activities.habits.list.ListHabitsScreen:
    63:70:void <init>(org.mula.androidbase.activities.BaseActivity,org.mula.finance.activities.habits.list.ListHabitsRootView,org.mula.finance.core.commands.CommandRunner,org.mula.finance.intents.IntentFactory,org.mula.finance.core.ui.ThemeSwitcher,org.mula.finance.core.preferences.Preferences,org.mula.finance.activities.habits.list.views.HabitCardListAdapter,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.tasks.ExportDBTaskFactory,org.mula.finance.tasks.ImportDataTaskFactory,org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory,org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory,org.mula.finance.activities.habits.edit.EditHabitDialogFactory,org.mula.finance.activities.common.dialogs.NumberPickerFactory,dagger.Lazy,dagger.Lazy,dagger.Lazy) -> <init>
    43:43:org.mula.finance.activities.habits.list.views.HabitCardListAdapter access$getAdapter$p(org.mula.finance.activities.habits.list.ListHabitsScreen) -> access$getAdapter$p
    197:202:java.lang.Integer getExecuteString(org.mula.finance.core.commands.Command) -> getExecuteString
    74:76:void onAttached() -> onAttached
    84:85:void onCommandExecuted(org.mula.finance.core.commands.Command,java.lang.Long) -> onCommandExecuted
    80:80:void onDettached() -> onDettached
    222:222:void onExportDB() -> onExportDB
    208:208:void onImportData(java.io.File,kotlin.jvm.functions.Function0) -> onImportData
    99:106:void onOpenDocumentResult(int,android.content.Intent) -> onOpenDocumentResult
    91:90:void onResult(int,int,android.content.Intent) -> onResult
    116:112:void onSettingsResult(int) -> onSettingsResult
    183:185:void showColorPicker(int,org.mula.finance.core.ui.callbacks.OnColorPickedCallback) -> showColorPicker
    126:127:void showCreateBooleanHabitScreen() -> showCreateBooleanHabitScreen
    131:132:void showCreateNumericalHabitScreen() -> showCreateNumericalHabitScreen
    136:136:void showDeleteConfirmationScreen(org.mula.finance.core.ui.callbacks.OnConfirmedCallback) -> showDeleteConfirmationScreen
    140:141:void showEditHabitsScreen(java.util.List) -> showEditHabitsScreen
    145:146:void showHabitScreen(org.mula.finance.core.models.Habit) -> showHabitScreen
    150:151:void showImportScreen() -> showImportScreen
    155:156:void showIntroScreen() -> showIntroScreen
    160:160:void showMessage(org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$Message) -> showMessage
    191:191:void showNumberPicker(double,java.lang.String,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$NumberPickerCallback) -> showNumberPicker
    173:173:void showSendBugReportToDeveloperScreen(java.lang.String) -> showSendBugReportToDeveloperScreen
org.mula.finance.activities.habits.list.ListHabitsScreen$onExportDB$1 -> org.mula.finance.activities.habits.list.ListHabitsScreen$onExportDB$1:
    223:224:void onExportDBFinished(java.lang.String) -> onExportDBFinished
org.mula.finance.activities.habits.list.ListHabitsScreen$onImportData$1 -> org.mula.finance.activities.habits.list.ListHabitsScreen$onImportData$1:
    210:217:void onImportDataFinished(int) -> onImportDataFinished
org.mula.finance.activities.habits.list.ListHabitsScreen$onOpenDocumentResult$1 -> org.mula.finance.activities.habits.list.ListHabitsScreen$onOpenDocumentResult$1:
    43:43:java.lang.Object invoke() -> invoke
    103:103:void invoke() -> invoke
org.mula.finance.activities.habits.list.ListHabitsScreen_Factory -> org.mula.finance.activities.habits.list.ListHabitsScreen_Factory:
    78:95:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    116:116:org.mula.finance.activities.habits.list.ListHabitsScreen_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    23:23:java.lang.Object get() -> get
    100:100:org.mula.finance.activities.habits.list.ListHabitsScreen get() -> get
    127:127:org.mula.finance.activities.habits.list.ListHabitsScreen newInstance(org.mula.androidbase.activities.BaseActivity,org.mula.finance.activities.habits.list.ListHabitsRootView,org.mula.finance.core.commands.CommandRunner,org.mula.finance.intents.IntentFactory,org.mula.finance.core.ui.ThemeSwitcher,org.mula.finance.core.preferences.Preferences,org.mula.finance.activities.habits.list.views.HabitCardListAdapter,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.tasks.ExportDBTaskFactory,org.mula.finance.tasks.ImportDataTaskFactory,org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory,org.mula.finance.activities.common.dialogs.ColorPickerDialogFactory,org.mula.finance.activities.habits.edit.EditHabitDialogFactory,org.mula.finance.activities.common.dialogs.NumberPickerFactory,dagger.Lazy,dagger.Lazy,dagger.Lazy) -> newInstance
org.mula.finance.activities.habits.list.ListHabitsSelectionMenu -> org.mula.finance.activities.habits.list.ListHabitsSelectionMenu:
    27:27:void <init>(org.mula.finance.activities.habits.list.ListHabitsScreen,org.mula.finance.activities.habits.list.views.HabitCardListAdapter,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior,dagger.Lazy,org.mula.finance.core.ui.NotificationTray) -> <init>
    30:31:void onFinish() -> onFinish
    35:42:boolean onItemClicked(android.view.MenuItem) -> onItemClicked
    72:83:boolean onPrepare(android.view.Menu) -> onPrepare
    89:89:void onSelectionChange() -> onSelectionChange
    90:90:void onSelectionFinish() -> onSelectionFinish
    88:88:void onSelectionStart() -> onSelectionStart
org.mula.finance.activities.habits.list.ListHabitsSelectionMenu_Factory -> org.mula.finance.activities.habits.list.ListHabitsSelectionMenu_Factory:
    43:50:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    64:64:org.mula.finance.activities.habits.list.ListHabitsSelectionMenu_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    15:15:java.lang.Object get() -> get
    55:55:org.mula.finance.activities.habits.list.ListHabitsSelectionMenu get() -> get
    71:71:org.mula.finance.activities.habits.list.ListHabitsSelectionMenu newInstance(org.mula.finance.activities.habits.list.ListHabitsScreen,org.mula.finance.activities.habits.list.views.HabitCardListAdapter,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior,dagger.Lazy,org.mula.finance.core.ui.NotificationTray) -> newInstance
org.mula.finance.activities.habits.list.views.ButtonPanelView -> org.mula.finance.activities.habits.list.views.ButtonPanelView:
    16:31:void <init>(android.content.Context,org.mula.finance.core.preferences.Preferences) -> <init>
    19:19:int getButtonCount() -> getButtonCount
    31:31:java.util.List getButtons() -> getButtons
    25:25:int getDataOffset() -> getDataOffset
    15:15:org.mula.finance.core.preferences.Preferences getPreferences() -> getPreferences
    39:49:void inflateButtons() -> inflateButtons
    52:53:void onAttachedToWindow() -> onAttachedToWindow
    34:34:void onCheckmarkSequenceChanged() -> onCheckmarkSequenceChanged
    57:58:void onDetachedFromWindow() -> onDetachedFromWindow
    62:65:void onMeasure(int,int) -> onMeasure
    21:22:void setButtonCount(int) -> setButtonCount
    31:31:void setButtons(java.util.List) -> setButtons
    27:28:void setDataOffset(int) -> setDataOffset
org.mula.finance.activities.habits.list.views.CheckmarkButtonView -> org.mula.finance.activities.habits.list.views.CheckmarkButtonView:
    21:43:void <init>(android.content.Context,org.mula.finance.core.preferences.Preferences) -> <init>
    25:25:int getColor() -> getColor
    37:37:kotlin.jvm.functions.Function0 getOnToggle() -> getOnToggle
    20:20:org.mula.finance.core.preferences.Preferences getPreferences() -> getPreferences
    31:31:int getValue() -> getValue
    57:58:void onClick(android.view.View) -> onClick
    67:68:void onDraw(android.graphics.Canvas) -> onDraw
    62:62:boolean onLongClick(android.view.View) -> onLongClick
    72:74:void onMeasure(int,int) -> onMeasure
    47:53:void performToggle() -> performToggle
    27:28:void setColor(int) -> setColor
    37:37:void setOnToggle(kotlin.jvm.functions.Function0) -> setOnToggle
    33:34:void setValue(int) -> setValue
org.mula.finance.activities.habits.list.views.CheckmarkButtonView$Drawer -> org.mula.finance.activities.habits.list.views.CheckmarkButtonView$Drawer:
    78:82:void <init>(org.mula.finance.activities.habits.list.views.CheckmarkButtonView) -> <init>
    90:103:void draw(android.graphics.Canvas) -> draw
org.mula.finance.activities.habits.list.views.CheckmarkButtonView$onToggle$1 -> org.mula.finance.activities.habits.list.views.CheckmarkButtonView$onToggle$1:
    18:18:java.lang.Object invoke() -> invoke
org.mula.finance.activities.habits.list.views.CheckmarkButtonViewFactory -> org.mula.finance.activities.habits.list.views.CheckmarkButtonViewFactory:
    22:24:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    34:34:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    28:29:org.mula.finance.activities.habits.list.views.CheckmarkButtonView create() -> create
org.mula.finance.activities.habits.list.views.CheckmarkButtonViewFactory_Factory -> org.mula.finance.activities.habits.list.views.CheckmarkButtonViewFactory_Factory:
    23:25:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    35:35:org.mula.finance.activities.habits.list.views.CheckmarkButtonViewFactory_Factory create(javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    30:30:org.mula.finance.activities.habits.list.views.CheckmarkButtonViewFactory get() -> get
    40:40:org.mula.finance.activities.habits.list.views.CheckmarkButtonViewFactory newInstance(javax.inject.Provider,javax.inject.Provider) -> newInstance
org.mula.finance.activities.habits.list.views.CheckmarkPanelView -> org.mula.finance.activities.habits.list.views.CheckmarkPanelView:
    18:32:void <init>(android.content.Context,org.mula.finance.core.preferences.Preferences,org.mula.finance.activities.habits.list.views.CheckmarkButtonViewFactory) -> <init>
    14:14:android.view.View createButton() -> createButton
    38:38:org.mula.finance.activities.habits.list.views.CheckmarkButtonView createButton() -> createButton
    26:26:int getColor() -> getColor
    32:32:kotlin.jvm.functions.Function1 getOnToggle() -> getOnToggle
    20:20:int[] getValues() -> getValues
    28:29:void setColor(int) -> setColor
    34:35:void setOnToggle(kotlin.jvm.functions.Function1) -> setOnToggle
    22:23:void setValues(int[]) -> setValues
    42:53:void setupButtons() -> setupButtons
org.mula.finance.activities.habits.list.views.CheckmarkPanelView$onToggle$1 -> org.mula.finance.activities.habits.list.views.CheckmarkPanelView$onToggle$1:
    14:14:java.lang.Object invoke(java.lang.Object) -> invoke
org.mula.finance.activities.habits.list.views.CheckmarkPanelView$setupButtons$$inlined$forEachIndexed$lambda$1 -> org.mula.finance.activities.habits.list.views.CheckmarkPanelView$setupButtons$$inlined$forEachIndexed$lambda$1:
    14:14:java.lang.Object invoke() -> invoke
    51:51:void invoke() -> invoke
org.mula.finance.activities.habits.list.views.CheckmarkPanelViewFactory -> org.mula.finance.activities.habits.list.views.CheckmarkPanelViewFactory:
    25:28:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    40:40:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    32:35:org.mula.finance.activities.habits.list.views.CheckmarkPanelView create() -> create
org.mula.finance.activities.habits.list.views.CheckmarkPanelViewFactory_Factory -> org.mula.finance.activities.habits.list.views.CheckmarkPanelViewFactory_Factory:
    26:29:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    40:40:org.mula.finance.activities.habits.list.views.CheckmarkPanelViewFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    34:34:org.mula.finance.activities.habits.list.views.CheckmarkPanelViewFactory get() -> get
    46:46:org.mula.finance.activities.habits.list.views.CheckmarkPanelViewFactory newInstance(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> newInstance
org.mula.finance.activities.habits.list.views.EmptyListView -> org.mula.finance.activities.habits.list.views.EmptyListView:
    14:28:void <init>(android.content.Context) -> <init>
org.mula.finance.activities.habits.list.views.HabitCardListAdapter -> org.mula.finance.activities.habits.list.views.HabitCardListAdapter:
    63:76:void <init>(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.utils.MidnightTimer) -> <init>
    82:82:void atMidnight() -> atMidnight
    87:87:void cancelRefresh() -> cancelRefresh
    96:98:void clearSelection() -> clearSelection
    111:111:org.mula.finance.core.models.Habit getItem(int) -> getItem
    117:117:int getItemCount() -> getItemCount
    123:123:long getItemId(int) -> getItemId
    129:129:org.mula.finance.core.models.ModelObservable getObservable() -> getObservable
    136:136:java.util.List getSelected() -> getSelected
    146:146:boolean isSelectionEmpty() -> isSelectionEmpty
    151:151:boolean isSortable() -> isSortable
    159:160:void onAttached() -> onAttached
    34:34:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    168:175:void onBindViewHolder(org.mula.finance.activities.habits.list.views.HabitCardViewHolder,int) -> onBindViewHolder
    34:34:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    196:198:org.mula.finance.activities.habits.list.views.HabitCardViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    206:207:void onDetached() -> onDetached
    213:214:void onItemChanged(int) -> onItemChanged
    220:221:void onItemInserted(int) -> onItemInserted
    227:228:void onItemMoved(int,int) -> onItemMoved
    234:235:void onItemRemoved(int) -> onItemRemoved
    241:241:void onRefreshFinished() -> onRefreshFinished
    34:34:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    181:182:void onViewAttachedToWindow(org.mula.finance.activities.habits.list.views.HabitCardViewHolder) -> onViewAttachedToWindow
    34:34:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    188:189:void onViewDetachedFromWindow(org.mula.finance.activities.habits.list.views.HabitCardViewHolder) -> onViewDetachedFromWindow
    258:259:void performRemove(java.util.List) -> performRemove
    276:276:void performReorder(int,int) -> performReorder
    282:282:void refresh() -> refresh
    288:288:void setFilter(org.mula.finance.core.models.HabitMatcher) -> setFilter
    300:300:void setListView(org.mula.finance.activities.habits.list.views.HabitCardListView) -> setListView
    306:307:void setOrder(org.mula.finance.core.models.HabitList$Order) -> setOrder
    317:323:void toggleSelection(int) -> toggleSelection
org.mula.finance.activities.habits.list.views.HabitCardListAdapter_Factory -> org.mula.finance.activities.habits.list.views.HabitCardListAdapter_Factory:
    26:29:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    39:39:org.mula.finance.activities.habits.list.views.HabitCardListAdapter_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    34:34:org.mula.finance.activities.habits.list.views.HabitCardListAdapter get() -> get
    44:44:org.mula.finance.activities.habits.list.views.HabitCardListAdapter newInstance(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.utils.MidnightTimer) -> newInstance
org.mula.finance.activities.habits.list.views.HabitCardListController -> org.mula.finance.activities.habits.list.views.HabitCardListController:
    19:31:void <init>(org.mula.finance.activities.habits.list.views.HabitCardListAdapter,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior,dagger.Lazy) -> <init>
    19:19:org.mula.finance.activities.habits.list.views.HabitCardListController$Mode access$getActiveMode$p(org.mula.finance.activities.habits.list.views.HabitCardListController) -> access$getActiveMode$p
    19:19:org.mula.finance.activities.habits.list.views.HabitCardListAdapter access$getAdapter$p(org.mula.finance.activities.habits.list.views.HabitCardListController) -> access$getAdapter$p
    19:19:org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior access$getBehavior$p(org.mula.finance.activities.habits.list.views.HabitCardListController) -> access$getBehavior$p
    19:19:org.mula.finance.activities.habits.list.views.HabitCardListController$SelectionMode access$getSELECTION_MODE$p(org.mula.finance.activities.habits.list.views.HabitCardListController) -> access$getSELECTION_MODE$p
    19:19:dagger.Lazy access$getSelectionMenu$p(org.mula.finance.activities.habits.list.views.HabitCardListController) -> access$getSelectionMenu$p
    19:19:void access$setActiveMode$p(org.mula.finance.activities.habits.list.views.HabitCardListController,org.mula.finance.activities.habits.list.views.HabitCardListController$Mode) -> access$setActiveMode$p
    75:77:void cancelSelection() -> cancelSelection
    36:43:void drop(int,int) -> drop
    47:47:void onItemClick(int) -> onItemClick
    51:51:void onItemLongClick(int) -> onItemLongClick
    55:57:void onModelChange() -> onModelChange
    62:62:void onSelectionFinished() -> onSelectionFinished
    70:71:void toggleSelection(int) -> toggleSelection
org.mula.finance.activities.habits.list.views.HabitCardListController$NormalMode -> org.mula.finance.activities.habits.list.views.HabitCardListController$NormalMode:
    100:100:void <init>(org.mula.finance.activities.habits.list.views.HabitCardListController) -> <init>
    102:104:void onItemClick(int) -> onItemClick
    108:108:boolean onItemLongClick(int) -> onItemLongClick
    117:119:void startSelection(int) -> startSelection
org.mula.finance.activities.habits.list.views.HabitCardListController$SelectionMode -> org.mula.finance.activities.habits.list.views.HabitCardListController$SelectionMode:
    127:127:void <init>(org.mula.finance.activities.habits.list.views.HabitCardListController) -> <init>
    145:148:void notifyListener() -> notifyListener
    129:130:void onItemClick(int) -> onItemClick
    134:135:boolean onItemLongClick(int) -> onItemLongClick
org.mula.finance.activities.habits.list.views.HabitCardListController_Factory -> org.mula.finance.activities.habits.list.views.HabitCardListController_Factory:
    28:31:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    42:42:org.mula.finance.activities.habits.list.views.HabitCardListController_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    11:11:java.lang.Object get() -> get
    36:36:org.mula.finance.activities.habits.list.views.HabitCardListController get() -> get
    47:47:org.mula.finance.activities.habits.list.views.HabitCardListController newInstance(org.mula.finance.activities.habits.list.views.HabitCardListAdapter,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior,dagger.Lazy) -> newInstance
org.mula.finance.activities.habits.list.views.HabitCardListView -> org.mula.finance.activities.habits.list.views.HabitCardListView:
    23:44:void <init>(android.content.Context,org.mula.finance.activities.habits.list.views.HabitCardListAdapter,org.mula.finance.activities.habits.list.views.HabitCardViewFactory,dagger.Lazy) -> <init>
    18:18:org.mula.finance.activities.habits.list.views.HabitCardListAdapter access$getAdapter$p(org.mula.finance.activities.habits.list.views.HabitCardListView) -> access$getAdapter$p
    18:18:dagger.Lazy access$getController$p(org.mula.finance.activities.habits.list.views.HabitCardListView) -> access$getController$p
    18:18:androidx.recyclerview.widget.ItemTouchHelper access$getTouchHelper$p(org.mula.finance.activities.habits.list.views.HabitCardListView) -> access$getTouchHelper$p
    76:76:void attachCardView(org.mula.finance.activities.habits.list.views.HabitCardViewHolder) -> attachCardView
    56:56:android.view.View bindCardView(org.mula.finance.activities.habits.list.views.HabitCardViewHolder,org.mula.finance.core.models.Habit,double,int[],boolean) -> bindCardView
    48:48:android.view.View createHabitCardView() -> createHabitCardView
    80:80:void detachCardView(org.mula.finance.activities.habits.list.views.HabitCardViewHolder) -> detachCardView
    25:25:int getCheckmarkCount() -> getCheckmarkCount
    27:27:int getDataOffset() -> getDataOffset
    84:85:void onAttachedToWindow() -> onAttachedToWindow
    89:90:void onDetachedFromWindow() -> onDetachedFromWindow
    94:99:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    103:107:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    25:25:void setCheckmarkCount(int) -> setCheckmarkCount
    29:32:void setDataOffset(int) -> setDataOffset
org.mula.finance.activities.habits.list.views.HabitCardListView$CardViewGestureDetector -> org.mula.finance.activities.habits.list.views.HabitCardListView$CardViewGestureDetector:
    117:119:void <init>(org.mula.finance.activities.habits.list.views.HabitCardListView,org.mula.finance.activities.habits.list.views.HabitCardViewHolder) -> <init>
    122:124:void onLongPress(android.view.MotionEvent) -> onLongPress
    128:129:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
org.mula.finance.activities.habits.list.views.HabitCardListView$TouchHelperCallback -> org.mula.finance.activities.habits.list.views.HabitCardListView$TouchHelperCallback:
    134:134:void <init>(org.mula.finance.activities.habits.list.views.HabitCardListView) -> <init>
    137:137:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    143:143:boolean onMove(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMove
org.mula.finance.activities.habits.list.views.HabitCardListView$bindCardView$1 -> org.mula.finance.activities.habits.list.views.HabitCardListView$bindCardView$1:
    68:68:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.mula.finance.activities.habits.list.views.HabitCardListViewFactory -> org.mula.finance.activities.habits.list.views.HabitCardListViewFactory:
    28:32:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    45:45:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    36:40:org.mula.finance.activities.habits.list.views.HabitCardListView create() -> create
org.mula.finance.activities.habits.list.views.HabitCardListViewFactory_Factory -> org.mula.finance.activities.habits.list.views.HabitCardListViewFactory_Factory:
    30:34:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    46:46:org.mula.finance.activities.habits.list.views.HabitCardListViewFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    39:39:org.mula.finance.activities.habits.list.views.HabitCardListViewFactory get() -> get
    53:53:org.mula.finance.activities.habits.list.views.HabitCardListViewFactory newInstance(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> newInstance
org.mula.finance.activities.habits.list.views.HabitCardView -> org.mula.finance.activities.habits.list.views.HabitCardView:
    30:145:void <init>(android.content.Context,org.mula.finance.activities.habits.list.views.CheckmarkPanelViewFactory,org.mula.finance.activities.habits.list.views.NumberPanelViewFactory,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior) -> <init>
    25:25:void access$copyAttributesFrom(org.mula.finance.activities.habits.list.views.HabitCardView,org.mula.finance.core.models.Habit) -> access$copyAttributesFrom
    25:25:org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior access$getBehavior$p(org.mula.finance.activities.habits.list.views.HabitCardView) -> access$getBehavior$p
    180:199:void copyAttributesFrom(org.mula.finance.core.models.Habit) -> copyAttributesFrom
    34:34:int getButtonCount() -> getButtonCount
    40:40:int getDataOffset() -> getDataOffset
    47:47:org.mula.finance.core.models.Habit getHabit() -> getHabit
    58:58:double getScore() -> getScore
    78:78:double getThreshold() -> getThreshold
    65:65:java.lang.String getUnit() -> getUnit
    71:71:int[] getValues() -> getValues
    169:170:void onAttachedToWindow() -> onAttachedToWindow
    174:175:void onDetachedFromWindow() -> onDetachedFromWindow
    149:149:void onModelChange() -> onModelChange
    36:37:void setButtonCount(int) -> setButtonCount
    42:44:void setDataOffset(int) -> setDataOffset
    49:54:void setHabit(org.mula.finance.core.models.Habit) -> setHabit
    60:61:void setScore(double) -> setScore
    155:156:void setSelected(boolean) -> setSelected
    80:80:void setThreshold(double) -> setThreshold
    67:67:void setUnit(java.lang.String) -> setUnit
    73:74:void setValues(int[]) -> setValues
    160:165:void triggerRipple(org.mula.finance.core.models.Timestamp) -> triggerRipple
    214:218:void triggerRipple(float,float) -> triggerRipple
    222:233:void updateBackground(boolean) -> updateBackground
org.mula.finance.activities.habits.list.views.HabitCardView$$special$$inlined$apply$lambda$1 -> org.mula.finance.activities.habits.list.views.HabitCardView$$special$$inlined$apply$lambda$1:
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    110:111:void invoke(org.mula.finance.core.models.Timestamp) -> invoke
org.mula.finance.activities.habits.list.views.HabitCardView$$special$$inlined$apply$lambda$2 -> org.mula.finance.activities.habits.list.views.HabitCardView$$special$$inlined$apply$lambda$2:
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    118:119:void invoke(org.mula.finance.core.models.Timestamp) -> invoke
org.mula.finance.activities.habits.list.views.HabitCardView$5$1 -> org.mula.finance.activities.habits.list.views.HabitCardView$5$1:
    135:136:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.mula.finance.activities.habits.list.views.HabitCardView$copyAttributesFrom$1 -> org.mula.finance.activities.habits.list.views.HabitCardView$copyAttributesFrom$1:
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    181:183:int invoke(org.mula.finance.core.models.Habit) -> invoke
org.mula.finance.activities.habits.list.views.HabitCardView$onModelChange$1 -> org.mula.finance.activities.habits.list.views.HabitCardView$onModelChange$1:
    150:150:void run() -> run
org.mula.finance.activities.habits.list.views.HabitCardView$triggerRipple$1 -> org.mula.finance.activities.habits.list.views.HabitCardView$triggerRipple$1:
    218:218:void run() -> run
org.mula.finance.activities.habits.list.views.HabitCardViewFactory -> org.mula.finance.activities.habits.list.views.HabitCardViewFactory:
    28:32:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    45:45:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    36:40:org.mula.finance.activities.habits.list.views.HabitCardView create() -> create
org.mula.finance.activities.habits.list.views.HabitCardViewFactory_Factory -> org.mula.finance.activities.habits.list.views.HabitCardViewFactory_Factory:
    29:33:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    45:45:org.mula.finance.activities.habits.list.views.HabitCardViewFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    38:38:org.mula.finance.activities.habits.list.views.HabitCardViewFactory get() -> get
    52:52:org.mula.finance.activities.habits.list.views.HabitCardViewFactory newInstance(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> newInstance
org.mula.finance.activities.habits.list.views.HabitCardViewHolder -> org.mula.finance.activities.habits.list.views.HabitCardViewHolder:
    8:8:void <init>(android.view.View) -> <init>
org.mula.finance.activities.habits.list.views.HeaderView -> org.mula.finance.activities.habits.list.views.HeaderView:
    23:38:void <init>(android.content.Context,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.utils.MidnightTimer) -> <init>
    42:42:void atMidnight() -> atMidnight
    29:29:int getButtonCount() -> getButtonCount
    22:22:org.mula.finance.core.utils.MidnightTimer getMidnightTimer() -> getMidnightTimer
    21:21:org.mula.finance.core.preferences.Preferences getPrefs() -> getPrefs
    51:54:void onAttachedToWindow() -> onAttachedToWindow
    46:47:void onCheckmarkSequenceChanged() -> onCheckmarkSequenceChanged
    58:60:void onDetachedFromWindow() -> onDetachedFromWindow
    64:65:void onDraw(android.graphics.Canvas) -> onDraw
    69:70:void onMeasure(int,int) -> onMeasure
    31:32:void setButtonCount(int) -> setButtonCount
    75:77:void updateScrollDirection() -> updateScrollDirection
org.mula.finance.activities.habits.list.views.HeaderView$Drawer -> org.mula.finance.activities.habits.list.views.HeaderView$Drawer:
    80:82:void <init>(org.mula.finance.activities.habits.list.views.HeaderView) -> <init>
    92:112:void draw(android.graphics.Canvas) -> draw
org.mula.finance.activities.habits.list.views.HeaderView$atMidnight$1 -> org.mula.finance.activities.habits.list.views.HeaderView$atMidnight$1:
    42:42:void run() -> run
org.mula.finance.activities.habits.list.views.HintView -> org.mula.finance.activities.habits.list.views.HintView:
    19:45:void <init>(android.content.Context,org.mula.finance.core.ui.screens.habits.list.HintList) -> <init>
    16:16:void access$dismiss(org.mula.finance.activities.habits.list.views.HintView) -> access$dismiss
    66:66:void dismiss() -> dismiss
    21:21:android.widget.TextView getHintContent() -> getHintContent
    49:50:void onAttachedToWindow() -> onAttachedToWindow
    54:62:void showNext() -> showNext
org.mula.finance.activities.habits.list.views.HintView$2 -> org.mula.finance.activities.habits.list.views.HintView$2:
    45:45:void onClick(android.view.View) -> onClick
org.mula.finance.activities.habits.list.views.HintView$DismissAnimator -> org.mula.finance.activities.habits.list.views.HintView$DismissAnimator:
    69:69:void <init>(org.mula.finance.activities.habits.list.views.HintView) -> <init>
    71:71:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.mula.finance.activities.habits.list.views.NumberButtonView -> org.mula.finance.activities.habits.list.views.NumberButtonView:
    39:72:void <init>(android.content.Context,org.mula.finance.core.preferences.Preferences) -> <init>
    43:43:int getColor() -> getColor
    67:67:kotlin.jvm.functions.Function0 getOnEdit() -> getOnEdit
    38:38:org.mula.finance.core.preferences.Preferences getPreferences() -> getPreferences
    55:55:double getThreshold() -> getThreshold
    61:61:java.lang.String getUnits() -> getUnits
    49:49:double getValue() -> getValue
    76:77:void onClick(android.view.View) -> onClick
    86:87:void onDraw(android.graphics.Canvas) -> onDraw
    81:81:boolean onLongClick(android.view.View) -> onLongClick
    91:93:void onMeasure(int,int) -> onMeasure
    45:46:void setColor(int) -> setColor
    67:67:void setOnEdit(kotlin.jvm.functions.Function0) -> setOnEdit
    57:58:void setThreshold(double) -> setThreshold
    63:64:void setUnits(java.lang.String) -> setUnits
    51:52:void setValue(double) -> setValue
org.mula.finance.activities.habits.list.views.NumberButtonView$Drawer -> org.mula.finance.activities.habits.list.views.NumberButtonView$Drawer:
    96:122:void <init>(org.mula.finance.activities.habits.list.views.NumberButtonView,android.content.Context) -> <init>
    127:140:void draw(android.graphics.Canvas) -> draw
org.mula.finance.activities.habits.list.views.NumberButtonView$onEdit$1 -> org.mula.finance.activities.habits.list.views.NumberButtonView$onEdit$1:
    36:36:java.lang.Object invoke() -> invoke
org.mula.finance.activities.habits.list.views.NumberButtonViewFactory -> org.mula.finance.activities.habits.list.views.NumberButtonViewFactory:
    22:24:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    34:34:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    28:29:org.mula.finance.activities.habits.list.views.NumberButtonView create() -> create
org.mula.finance.activities.habits.list.views.NumberButtonViewFactory_Factory -> org.mula.finance.activities.habits.list.views.NumberButtonViewFactory_Factory:
    23:25:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    35:35:org.mula.finance.activities.habits.list.views.NumberButtonViewFactory_Factory create(javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    30:30:org.mula.finance.activities.habits.list.views.NumberButtonViewFactory get() -> get
    40:40:org.mula.finance.activities.habits.list.views.NumberButtonViewFactory newInstance(javax.inject.Provider,javax.inject.Provider) -> newInstance
org.mula.finance.activities.habits.list.views.NumberButtonViewKt -> org.mula.finance.activities.habits.list.views.NumberButtonViewKt:
    19:20:void <clinit>() -> <clinit>
    1:1:android.graphics.Typeface access$getBOLD_TYPEFACE$p() -> access$getBOLD_TYPEFACE$p
    1:1:android.graphics.Typeface access$getNORMAL_TYPEFACE$p() -> access$getNORMAL_TYPEFACE$p
    23:32:java.lang.String toShortString(double) -> toShortString
org.mula.finance.activities.habits.list.views.NumberPanelView -> org.mula.finance.activities.habits.list.views.NumberPanelView:
    17:43:void <init>(android.content.Context,org.mula.finance.core.preferences.Preferences,org.mula.finance.activities.habits.list.views.NumberButtonViewFactory) -> <init>
    13:13:android.view.View createButton() -> createButton
    49:49:org.mula.finance.activities.habits.list.views.NumberButtonView createButton() -> createButton
    31:31:int getColor() -> getColor
    43:43:kotlin.jvm.functions.Function1 getOnEdit() -> getOnEdit
    25:25:double getThreshold() -> getThreshold
    37:37:java.lang.String getUnits() -> getUnits
    19:19:double[] getValues() -> getValues
    33:34:void setColor(int) -> setColor
    45:46:void setOnEdit(kotlin.jvm.functions.Function1) -> setOnEdit
    27:28:void setThreshold(double) -> setThreshold
    39:40:void setUnits(java.lang.String) -> setUnits
    21:22:void setValues(double[]) -> setValues
    53:66:void setupButtons() -> setupButtons
org.mula.finance.activities.habits.list.views.NumberPanelView$onEdit$1 -> org.mula.finance.activities.habits.list.views.NumberPanelView$onEdit$1:
    13:13:java.lang.Object invoke(java.lang.Object) -> invoke
org.mula.finance.activities.habits.list.views.NumberPanelView$setupButtons$$inlined$forEachIndexed$lambda$1 -> org.mula.finance.activities.habits.list.views.NumberPanelView$setupButtons$$inlined$forEachIndexed$lambda$1:
    13:13:java.lang.Object invoke() -> invoke
    64:64:void invoke() -> invoke
org.mula.finance.activities.habits.list.views.NumberPanelViewFactory -> org.mula.finance.activities.habits.list.views.NumberPanelViewFactory:
    25:28:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    40:40:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    32:35:org.mula.finance.activities.habits.list.views.NumberPanelView create() -> create
org.mula.finance.activities.habits.list.views.NumberPanelViewFactory_Factory -> org.mula.finance.activities.habits.list.views.NumberPanelViewFactory_Factory:
    26:29:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    40:40:org.mula.finance.activities.habits.list.views.NumberPanelViewFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    34:34:org.mula.finance.activities.habits.list.views.NumberPanelViewFactory get() -> get
    46:46:org.mula.finance.activities.habits.list.views.NumberPanelViewFactory newInstance(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> newInstance
org.mula.finance.activities.habits.show.ShowHabitActivity -> org.mula.finance.activities.habits.show.ShowHabitActivity:
    14:14:void <init>() -> <init>
    19:20:void onCreate(android.os.Bundle) -> onCreate
org.mula.finance.activities.habits.show.ShowHabitRootView -> org.mula.finance.activities.habits.show.ShowHabitRootView:
    70:79:void <init>(android.content.Context,org.mula.finance.core.models.Habit) -> <init>
    85:89:int getToolbarColor() -> getToolbarColor
    131:138:void initCards() -> initCards
    111:112:void initToolbar() -> initToolbar
    96:96:void lambda$onModelChange$0() -> lambda$onModelChange$0$ShowHabitRootView
    118:119:void onAttachedToWindow() -> onAttachedToWindow
    125:126:void onDetachedFromWindow() -> onDetachedFromWindow
    95:99:void onModelChange() -> onModelChange
    104:105:void setController(org.mula.finance.activities.habits.show.ShowHabitRootView$Controller) -> setController
org.mula.finance.activities.habits.show.ShowHabitRootView$1 -> org.mula.finance.activities.habits.show.ShowHabitRootView$1:
    76:76:void <init>(org.mula.finance.activities.habits.show.ShowHabitRootView) -> <init>
org.mula.finance.activities.habits.show.ShowHabitRootView$Controller$-CC -> org.mula.finance.activities.habits.show.ShowHabitRootView$Controller$-CC:
    void org.mula.finance.activities.habits.show.ShowHabitRootView$Controller.onToolbarChanged() -> $default$onToolbarChanged
org.mula.finance.activities.habits.show.ShowHabitRootView_Factory -> org.mula.finance.activities.habits.show.ShowHabitRootView_Factory:
    23:25:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    35:35:org.mula.finance.activities.habits.show.ShowHabitRootView_Factory create(javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    30:30:org.mula.finance.activities.habits.show.ShowHabitRootView get() -> get
    39:39:org.mula.finance.activities.habits.show.ShowHabitRootView newInstance(android.content.Context,org.mula.finance.core.models.Habit) -> newInstance
org.mula.finance.activities.habits.show.ShowHabitRootView_ViewBinding -> org.mula.finance.activities.habits.show.ShowHabitRootView_ViewBinding:
    32:44:void <init>(org.mula.finance.activities.habits.show.ShowHabitRootView,android.view.View) -> <init>
org.mula.finance.activities.habits.show.ShowHabitScreen -> org.mula.finance.activities.habits.show.ShowHabitScreen:
    50:58:void <init>(org.mula.androidbase.activities.BaseActivity,org.mula.finance.core.models.Habit,org.mula.finance.activities.habits.show.ShowHabitRootView,org.mula.finance.activities.habits.show.ShowHabitsMenu,org.mula.finance.activities.habits.edit.EditHabitDialogFactory,org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory,dagger.Lazy) -> <init>
    124:124:void close() -> close
    64:64:void onEditHistoryButtonClick() -> onEditHistoryButtonClick
    70:70:void onToggleCheckmark(org.mula.finance.core.models.Timestamp) -> onToggleCheckmark
    76:76:void onToolbarChanged() -> onToolbarChanged
    82:86:void reattachDialogs() -> reattachDialogs
    119:119:void showDeleteConfirmationScreen(org.mula.finance.core.ui.callbacks.OnConfirmedCallback) -> showDeleteConfirmationScreen
    92:92:void showEditHabitScreen(org.mula.finance.core.models.Habit) -> showEditHabitScreen
    98:101:void showEditHistoryScreen() -> showEditHistoryScreen
    107:113:void showMessage(org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior$Message) -> showMessage
org.mula.finance.activities.habits.show.ShowHabitScreen$1 -> org.mula.finance.activities.habits.show.ShowHabitScreen$1:
    107:107:void <clinit>() -> <clinit>
org.mula.finance.activities.habits.show.ShowHabitScreen_Factory -> org.mula.finance.activities.habits.show.ShowHabitScreen_Factory:
    42:49:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    63:63:org.mula.finance.activities.habits.show.ShowHabitScreen_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    14:14:java.lang.Object get() -> get
    54:54:org.mula.finance.activities.habits.show.ShowHabitScreen get() -> get
    69:69:org.mula.finance.activities.habits.show.ShowHabitScreen newInstance(org.mula.androidbase.activities.BaseActivity,org.mula.finance.core.models.Habit,org.mula.finance.activities.habits.show.ShowHabitRootView,org.mula.finance.activities.habits.show.ShowHabitsMenu,org.mula.finance.activities.habits.edit.EditHabitDialogFactory,org.mula.finance.activities.common.dialogs.ConfirmDeleteDialogFactory,dagger.Lazy) -> newInstance
org.mula.finance.activities.habits.show.ShowHabitsMenu -> org.mula.finance.activities.habits.show.ShowHabitsMenu:
    33:35:void <init>(org.mula.androidbase.activities.BaseActivity,dagger.Lazy,org.mula.finance.core.preferences.Preferences) -> <init>
    41:44:void onCreate(android.view.Menu) -> onCreate
    50:61:boolean onItemSelected(android.view.MenuItem) -> onItemSelected
org.mula.finance.activities.habits.show.ShowHabitsMenu_Factory -> org.mula.finance.activities.habits.show.ShowHabitsMenu_Factory:
    28:31:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    41:41:org.mula.finance.activities.habits.show.ShowHabitsMenu_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    12:12:java.lang.Object get() -> get
    36:36:org.mula.finance.activities.habits.show.ShowHabitsMenu get() -> get
    46:46:org.mula.finance.activities.habits.show.ShowHabitsMenu newInstance(org.mula.androidbase.activities.BaseActivity,dagger.Lazy,org.mula.finance.core.preferences.Preferences) -> newInstance
org.mula.finance.activities.habits.show.views.BarCard -> org.mula.finance.activities.habits.show.views.BarCard:
    29:30:void <clinit>() -> <clinit>
    51:52:void <init>(android.content.Context) -> <init>
    57:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    27:27:org.mula.finance.core.preferences.Preferences access$000(org.mula.finance.activities.habits.show.views.BarCard) -> access$000
    27:27:int access$100(org.mula.finance.activities.habits.show.views.BarCard) -> access$100
    102:102:org.mula.finance.core.tasks.Task createRefreshTask() -> createRefreshTask
    77:88:void init() -> init
    93:96:void initEditMode() -> initEditMode
    71:72:void onBoolItemSelected(int) -> onBoolItemSelected
    64:65:void onNumericalItemSelected(int) -> onNumericalItemSelected
org.mula.finance.activities.habits.show.views.BarCard$RefreshTask -> org.mula.finance.activities.habits.show.views.BarCard$RefreshTask:
    110:111:void <init>(org.mula.finance.activities.habits.show.views.BarCard,org.mula.finance.core.models.Habit) -> <init>
    117:125:void doInBackground() -> doInBackground
    131:142:void onPreExecute() -> onPreExecute
org.mula.finance.activities.habits.show.views.BarCard_ViewBinding -> org.mula.finance.activities.habits.show.views.BarCard_ViewBinding:
    30:61:void <init>(org.mula.finance.activities.habits.show.views.BarCard,android.view.View) -> <init>
org.mula.finance.activities.habits.show.views.BarCard_ViewBinding$1 -> org.mula.finance.activities.habits.show.views.BarCard_ViewBinding$1:
    37:37:void <init>(org.mula.finance.activities.habits.show.views.BarCard_ViewBinding,org.mula.finance.activities.habits.show.views.BarCard) -> <init>
    40:40:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
org.mula.finance.activities.habits.show.views.BarCard_ViewBinding$2 -> org.mula.finance.activities.habits.show.views.BarCard_ViewBinding$2:
    50:50:void <init>(org.mula.finance.activities.habits.show.views.BarCard_ViewBinding,org.mula.finance.activities.habits.show.views.BarCard) -> <init>
    53:53:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
org.mula.finance.activities.habits.show.views.FrequencyCard -> org.mula.finance.activities.habits.show.views.FrequencyCard:
    38:39:void <init>(android.content.Context) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    25:25:org.mula.finance.core.preferences.Preferences access$100(org.mula.finance.activities.habits.show.views.FrequencyCard) -> access$100
    51:51:org.mula.finance.core.tasks.Task createRefreshTask() -> createRefreshTask
    56:64:void init() -> init
    69:72:void initEditMode() -> initEditMode
org.mula.finance.activities.habits.show.views.FrequencyCard$RefreshTask -> org.mula.finance.activities.habits.show.views.FrequencyCard$RefreshTask:
    75:75:void <init>(org.mula.finance.activities.habits.show.views.FrequencyCard) -> <init>
    75:75:void <init>(org.mula.finance.activities.habits.show.views.FrequencyCard,org.mula.finance.activities.habits.show.views.FrequencyCard$1) -> <init>
    80:84:void doInBackground() -> doInBackground
    90:93:void onPreExecute() -> onPreExecute
org.mula.finance.activities.habits.show.views.FrequencyCard_ViewBinding -> org.mula.finance.activities.habits.show.views.FrequencyCard_ViewBinding:
    24:28:void <init>(org.mula.finance.activities.habits.show.views.FrequencyCard,android.view.View) -> <init>
org.mula.finance.activities.habits.show.views.HabitCard -> org.mula.finance.activities.habits.show.views.HabitCard:
    33:34:void <init>(android.content.Context) -> <init>
    39:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    92:93:void attachTo(org.mula.finance.core.models.Habit) -> attachTo
    98:99:void detachFrom(org.mula.finance.core.models.Habit) -> detachFrom
    46:46:org.mula.finance.core.models.Habit getHabit() -> getHabit
    104:109:void init() -> init
    60:60:void lambda$onModelChange$0() -> lambda$onModelChange$0$HabitCard
    66:70:void onAttachedToWindow() -> onAttachedToWindow
    76:77:void onDetachedFromWindow() -> onDetachedFromWindow
    60:60:void onModelChange() -> onModelChange
    82:85:void refreshData() -> refreshData
    51:54:void setHabit(org.mula.finance.core.models.Habit) -> setHabit
org.mula.finance.activities.habits.show.views.HistoryCard -> org.mula.finance.activities.habits.show.views.HistoryCard:
    38:39:void <init>(android.content.Context) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    22:22:org.mula.finance.core.preferences.Preferences access$100(org.mula.finance.activities.habits.show.views.HistoryCard) -> access$100
    85:85:org.mula.finance.core.tasks.Task createRefreshTask() -> createRefreshTask
    61:71:void init() -> init
    76:79:void initEditMode() -> initEditMode
    51:51:void onClickEditButton() -> onClickEditButton
    56:56:void setController(org.mula.finance.activities.habits.show.views.HistoryCard$Controller) -> setController
org.mula.finance.activities.habits.show.views.HistoryCard$1 -> org.mula.finance.activities.habits.show.views.HistoryCard$1:
    70:70:void <init>(org.mula.finance.activities.habits.show.views.HistoryCard) -> <init>
org.mula.finance.activities.habits.show.views.HistoryCard$Controller$-CC -> org.mula.finance.activities.habits.show.views.HistoryCard$Controller$-CC:
    void org.mula.finance.activities.habits.show.views.HistoryCard$Controller.onEditHistoryButtonClick() -> $default$onEditHistoryButtonClick
org.mula.finance.activities.habits.show.views.HistoryCard$RefreshTask -> org.mula.finance.activities.habits.show.views.HistoryCard$RefreshTask:
    93:93:void <init>(org.mula.finance.activities.habits.show.views.HistoryCard,org.mula.finance.core.models.Habit,org.mula.finance.activities.habits.show.views.HistoryCard$1) -> <init>
    98:99:void <init>(org.mula.finance.activities.habits.show.views.HistoryCard,org.mula.finance.core.models.Habit) -> <init>
    105:108:void doInBackground() -> doInBackground
    114:120:void onPreExecute() -> onPreExecute
org.mula.finance.activities.habits.show.views.HistoryCard_ViewBinding -> org.mula.finance.activities.habits.show.views.HistoryCard_ViewBinding:
    27:35:void <init>(org.mula.finance.activities.habits.show.views.HistoryCard,android.view.View) -> <init>
org.mula.finance.activities.habits.show.views.HistoryCard_ViewBinding$1 -> org.mula.finance.activities.habits.show.views.HistoryCard_ViewBinding$1:
    35:35:void <init>(org.mula.finance.activities.habits.show.views.HistoryCard_ViewBinding,org.mula.finance.activities.habits.show.views.HistoryCard) -> <init>
    38:38:void doClick(android.view.View) -> doClick
org.mula.finance.activities.habits.show.views.NotesCard -> org.mula.finance.activities.habits.show.views.NotesCard:
    10:16:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    25:25:org.mula.finance.core.tasks.Task createRefreshTask() -> createRefreshTask
    20:22:void refreshData() -> refreshData
org.mula.finance.activities.habits.show.views.OverviewCard -> org.mula.finance.activities.habits.show.views.OverviewCard:
    51:52:void <init>(android.content.Context) -> <init>
    57:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    24:24:org.mula.finance.activities.habits.show.views.OverviewCard$Cache access$200(org.mula.finance.activities.habits.show.views.OverviewCard) -> access$200
    24:24:void access$300(org.mula.finance.activities.habits.show.views.OverviewCard) -> access$300
    24:24:int access$402(org.mula.finance.activities.habits.show.views.OverviewCard,int) -> access$402
    24:24:void access$500(org.mula.finance.activities.habits.show.views.OverviewCard) -> access$500
    129:129:org.mula.finance.core.tasks.Task createRefreshTask() -> createRefreshTask
    64:63:java.lang.String formatPercentageDiff(float) -> formatPercentageDiff
    69:72:void init() -> init
    77:82:void initEditMode() -> initEditMode
    87:89:void refreshColors() -> refreshColors
    94:112:void refreshScore() -> refreshScore
org.mula.finance.activities.habits.show.views.OverviewCard$Cache -> org.mula.finance.activities.habits.show.views.OverviewCard$Cache:
    115:115:void <init>(org.mula.finance.activities.habits.show.views.OverviewCard) -> <init>
    115:115:void <init>(org.mula.finance.activities.habits.show.views.OverviewCard,org.mula.finance.activities.habits.show.views.OverviewCard$1) -> <init>
org.mula.finance.activities.habits.show.views.OverviewCard$RefreshTask -> org.mula.finance.activities.habits.show.views.OverviewCard$RefreshTask:
    132:132:void <init>(org.mula.finance.activities.habits.show.views.OverviewCard) -> <init>
    132:132:void <init>(org.mula.finance.activities.habits.show.views.OverviewCard,org.mula.finance.activities.habits.show.views.OverviewCard$1) -> <init>
    137:149:void doInBackground() -> doInBackground
    155:156:void onPostExecute() -> onPostExecute
    162:163:void onPreExecute() -> onPreExecute
org.mula.finance.activities.habits.show.views.OverviewCard_ViewBinding -> org.mula.finance.activities.habits.show.views.OverviewCard_ViewBinding:
    24:32:void <init>(org.mula.finance.activities.habits.show.views.OverviewCard,android.view.View) -> <init>
org.mula.finance.activities.habits.show.views.ScoreCard -> org.mula.finance.activities.habits.show.views.ScoreCard:
    29:29:void <clinit>() -> <clinit>
    47:48:void <init>(android.content.Context) -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    27:27:org.mula.finance.core.preferences.Preferences access$100(org.mula.finance.activities.habits.show.views.ScoreCard) -> access$100
    27:27:int access$200(org.mula.finance.activities.habits.show.views.ScoreCard) -> access$200
    122:122:org.mula.finance.core.tasks.Task createRefreshTask() -> createRefreshTask
    83:84:int getDefaultSpinnerPosition() -> getDefaultSpinnerPosition
    60:68:org.mula.finance.core.utils.DateUtils$TruncateField getTruncateField(int) -> getTruncateField
    89:108:void init() -> init
    74:78:void onItemSelected(int) -> onItemSelected
    114:116:void setBucketSizeFromPosition(int) -> setBucketSizeFromPosition
org.mula.finance.activities.habits.show.views.ScoreCard$RefreshTask -> org.mula.finance.activities.habits.show.views.ScoreCard$RefreshTask:
    125:125:void <init>(org.mula.finance.activities.habits.show.views.ScoreCard) -> <init>
    125:125:void <init>(org.mula.finance.activities.habits.show.views.ScoreCard,org.mula.finance.activities.habits.show.views.ScoreCard$1) -> <init>
    130:141:void doInBackground() -> doInBackground
    147:150:void onPreExecute() -> onPreExecute
org.mula.finance.activities.habits.show.views.ScoreCard_ViewBinding -> org.mula.finance.activities.habits.show.views.ScoreCard_ViewBinding:
    28:46:void <init>(org.mula.finance.activities.habits.show.views.ScoreCard,android.view.View) -> <init>
org.mula.finance.activities.habits.show.views.ScoreCard_ViewBinding$1 -> org.mula.finance.activities.habits.show.views.ScoreCard_ViewBinding$1:
    35:35:void <init>(org.mula.finance.activities.habits.show.views.ScoreCard_ViewBinding,org.mula.finance.activities.habits.show.views.ScoreCard) -> <init>
    38:38:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
org.mula.finance.activities.habits.show.views.StreakCard -> org.mula.finance.activities.habits.show.views.StreakCard:
    33:34:void <init>(android.content.Context) -> <init>
    39:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    62:62:org.mula.finance.core.tasks.Task createRefreshTask() -> createRefreshTask
    45:48:void init() -> init
    53:56:void initEditMode() -> initEditMode
org.mula.finance.activities.habits.show.views.StreakCard$RefreshTask -> org.mula.finance.activities.habits.show.views.StreakCard$RefreshTask:
    65:65:void <init>(org.mula.finance.activities.habits.show.views.StreakCard) -> <init>
    65:65:void <init>(org.mula.finance.activities.habits.show.views.StreakCard,org.mula.finance.activities.habits.show.views.StreakCard$1) -> <init>
    72:74:void doInBackground() -> doInBackground
    80:81:void onPostExecute() -> onPostExecute
    87:90:void onPreExecute() -> onPreExecute
org.mula.finance.activities.habits.show.views.StreakCard_ViewBinding -> org.mula.finance.activities.habits.show.views.StreakCard_ViewBinding:
    24:28:void <init>(org.mula.finance.activities.habits.show.views.StreakCard,android.view.View) -> <init>
org.mula.finance.activities.habits.show.views.SubtitleCard -> org.mula.finance.activities.habits.show.views.SubtitleCard:
    33:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    104:104:org.mula.finance.core.tasks.Task createRefreshTask() -> createRefreshTask
    59:62:void init() -> init
    68:70:void initEditMode() -> initEditMode
    40:54:void refreshData() -> refreshData
    75:90:java.lang.String toText(org.mula.finance.core.models.Frequency) -> toText
    96:96:void updateReminderText(org.mula.finance.core.models.Reminder) -> updateReminderText
org.mula.finance.activities.habits.show.views.SubtitleCard_ViewBinding -> org.mula.finance.activities.habits.show.views.SubtitleCard_ViewBinding:
    23:28:void <init>(org.mula.finance.activities.habits.show.views.SubtitleCard,android.view.View) -> <init>
org.mula.finance.activities.intro.IntroActivity -> org.mula.finance.activities.intro.IntroActivity:
    16:16:void <init>() -> <init>
    18:28:void init(android.os.Bundle) -> init
    36:36:void onDonePressed() -> onDonePressed
org.mula.finance.activities.settings.SettingsActivity -> org.mula.finance.activities.settings.SettingsActivity:
    15:15:void <init>() -> <init>
    20:22:void onCreate(android.os.Bundle) -> onCreate
    27:33:void setupActionBarColor() -> setupActionBarColor
org.mula.finance.activities.settings.SettingsFragment -> org.mula.finance.activities.settings.SettingsFragment:
    32:32:void <init>() -> <init>
    177:178:boolean lambda$setResultOnPreferenceClick$0(int,androidx.preference.Preference) -> lambda$setResultOnPreferenceClick$0$SettingsFragment
    50:57:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    63:78:void onCreate(android.os.Bundle) -> onCreate
    90:91:void onPause() -> onPause
    97:116:boolean onPreferenceTreeClick(androidx.preference.Preference) -> onPreferenceTreeClick
    122:142:void onResume() -> onResume
    162:169:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    174:175:void setResultOnPreferenceClick(java.lang.String,int) -> setResultOnPreferenceClick
    185:194:void showRingtonePicker() -> showRingtonePicker
    199:202:void updateRingtoneDescription() -> updateRingtoneDescription
    207:221:void updateSync() -> updateSync
    147:155:void updateWeekdayPreference() -> updateWeekdayPreference
org.mula.finance.activities.video.VideoFragment -> org.mula.finance.activities.video.VideoFragment:
    19:19:void <init>() -> <init>
    70:84:void onClick(android.view.View) -> onClick
    30:44:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
org.mula.finance.activities.video.VideoFragment$1 -> org.mula.finance.activities.video.VideoFragment$1:
    33:33:void <init>(org.mula.finance.activities.video.VideoFragment,android.widget.TextView) -> <init>
    33:33:void onChanged(java.lang.Object) -> onChanged
    36:36:void onChanged(java.lang.String) -> onChanged
org.mula.finance.activities.video.VideoViewModel -> org.mula.finance.activities.video.VideoViewModel:
    11:13:void <init>() -> <init>
    17:17:androidx.lifecycle.LiveData getText() -> getText
org.mula.finance.automation.DaggerFireSettingReceiver_ReceiverComponent -> org.mula.finance.automation.DaggerFireSettingReceiver_ReceiverComponent:
    16:16:void <init>(org.mula.finance.HabitsApplicationComponent,org.mula.finance.automation.DaggerFireSettingReceiver_ReceiverComponent$1) -> <init>
    20:21:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    25:25:org.mula.finance.automation.DaggerFireSettingReceiver_ReceiverComponent$Builder builder() -> builder
    30:30:org.mula.finance.core.ui.widgets.WidgetBehavior getWidgetController() -> getWidgetController
org.mula.finance.automation.DaggerFireSettingReceiver_ReceiverComponent$Builder -> org.mula.finance.automation.DaggerFireSettingReceiver_ReceiverComponent$Builder:
    32:32:void <init>(org.mula.finance.automation.DaggerFireSettingReceiver_ReceiverComponent$1) -> <init>
    35:35:void <init>() -> <init>
    45:46:org.mula.finance.automation.FireSettingReceiver$ReceiverComponent build() -> build
    40:40:org.mula.finance.automation.DaggerFireSettingReceiver_ReceiverComponent$Builder habitsApplicationComponent(org.mula.finance.HabitsApplicationComponent) -> habitsApplicationComponent
org.mula.finance.automation.EditSettingActivity -> org.mula.finance.automation.EditSettingActivity:
    29:29:void <init>() -> <init>
    31:32:void onCreate(android.os.Bundle) -> onCreate
org.mula.finance.automation.EditSettingController -> org.mula.finance.automation.EditSettingController:
    28:28:void <init>(android.app.Activity) -> <init>
    50:48:java.lang.String getActionName(int) -> getActionName
    31:43:void onSave(org.mula.finance.core.models.Habit,int) -> onSave
org.mula.finance.automation.EditSettingRootView -> org.mula.finance.automation.EditSettingRootView:
    22:40:void <init>(android.content.Context,org.mula.finance.core.models.HabitList,org.mula.finance.automation.EditSettingController,org.mula.finance.automation.SettingUtils$Arguments) -> <init>
    31:31:androidx.appcompat.widget.AppCompatSpinner getActionSpinner() -> getActionSpinner
    28:28:androidx.appcompat.widget.AppCompatSpinner getHabitSpinner() -> getHabitSpinner
    25:25:androidx.appcompat.widget.Toolbar getTbar() -> getTbar
    45:45:androidx.appcompat.widget.Toolbar getToolbar() -> getToolbar
    49:53:int getToolbarColor() -> getToolbarColor
    58:61:void onClickSave() -> onClickSave
    65:68:void populateHabitSpinner() -> populateHabitSpinner
    31:31:void setActionSpinner(androidx.appcompat.widget.AppCompatSpinner) -> setActionSpinner
    28:28:void setHabitSpinner(androidx.appcompat.widget.AppCompatSpinner) -> setHabitSpinner
    25:25:void setTbar(androidx.appcompat.widget.Toolbar) -> setTbar
org.mula.finance.automation.EditSettingRootView_ViewBinding -> org.mula.finance.automation.EditSettingRootView_ViewBinding:
    26:35:void <init>(org.mula.finance.automation.EditSettingRootView,android.view.View) -> <init>
org.mula.finance.automation.EditSettingRootView_ViewBinding$1 -> org.mula.finance.automation.EditSettingRootView_ViewBinding$1:
    35:35:void <init>(org.mula.finance.automation.EditSettingRootView_ViewBinding,org.mula.finance.automation.EditSettingRootView) -> <init>
    38:38:void doClick(android.view.View) -> doClick
org.mula.finance.automation.FireSettingReceiver -> org.mula.finance.automation.FireSettingReceiver:
    36:36:void <init>() -> <init>
    41:41:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.mula.finance.automation.SettingUtils -> org.mula.finance.automation.SettingUtils:
    7:7:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    10:14:org.mula.finance.automation.SettingUtils$Arguments parseIntent(android.content.Intent,org.mula.finance.core.models.HabitList) -> parseIntent
org.mula.finance.automation.SettingUtils$Arguments -> org.mula.finance.automation.SettingUtils$Arguments:
    17:17:void <init>(int,org.mula.finance.core.models.Habit) -> <init>
    17:17:int getAction() -> getAction
    17:17:org.mula.finance.core.models.Habit getHabit() -> getHabit
org.mula.finance.core.commands.ArchiveHabitsCommand -> org.mula.finance.core.commands.ArchiveHabitsCommand:
    24:26:void <init>(org.mula.finance.core.models.HabitList,java.util.List) -> <init>
    32:33:void execute() -> execute
    15:15:java.lang.Object toRecord() -> toRecord
    40:40:org.mula.finance.core.commands.ArchiveHabitsCommand$Record toRecord() -> toRecord
org.mula.finance.core.commands.ArchiveHabitsCommand$Record -> org.mula.finance.core.commands.ArchiveHabitsCommand$Record:
    62:67:void <init>(org.mula.finance.core.commands.ArchiveHabitsCommand) -> <init>
    74:79:org.mula.finance.core.commands.ArchiveHabitsCommand toCommand(org.mula.finance.core.models.HabitList) -> toCommand
org.mula.finance.core.commands.ChangeHabitColorCommand -> org.mula.finance.core.commands.ChangeHabitColorCommand:
    32:37:void <init>(org.mula.finance.core.models.HabitList,java.util.List,java.lang.Integer) -> <init>
    43:44:void execute() -> execute
    15:15:java.lang.Object toRecord() -> toRecord
    51:51:org.mula.finance.core.commands.ChangeHabitColorCommand$Record toRecord() -> toRecord
org.mula.finance.core.commands.ChangeHabitColorCommand$Record -> org.mula.finance.core.commands.ChangeHabitColorCommand$Record:
    77:83:void <init>(org.mula.finance.core.commands.ChangeHabitColorCommand) -> <init>
    90:95:org.mula.finance.core.commands.ChangeHabitColorCommand toCommand(org.mula.finance.core.models.HabitList) -> toCommand
org.mula.finance.core.commands.Command -> org.mula.finance.core.commands.Command:
    27:29:void <init>() -> <init>
    42:42:java.lang.String getId() -> getId
    52:52:boolean isRemote() -> isRemote
    47:47:void setId(java.lang.String) -> setId
    57:57:void setRemote(boolean) -> setRemote
    63:63:java.lang.String toJson() -> toJson
org.mula.finance.core.commands.CommandParser -> org.mula.finance.core.commands.CommandParser:
    23:25:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.ModelFactory) -> <init>
    31:67:org.mula.finance.core.commands.Command parse(java.lang.String) -> parse
org.mula.finance.core.commands.CommandParser_Factory -> org.mula.finance.core.commands.CommandParser_Factory:
    23:25:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    35:35:org.mula.finance.core.commands.CommandParser_Factory create(javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    30:30:org.mula.finance.core.commands.CommandParser get() -> get
    39:39:org.mula.finance.core.commands.CommandParser newInstance(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.ModelFactory) -> newInstance
org.mula.finance.core.commands.CommandRunner -> org.mula.finance.core.commands.CommandRunner:
    30:32:void <init>(org.mula.finance.core.tasks.TaskRunner) -> <init>
    22:22:java.util.LinkedList access$000(org.mula.finance.core.commands.CommandRunner) -> access$000
    37:37:void addListener(org.mula.finance.core.commands.CommandRunner$Listener) -> addListener
    42:42:void execute(org.mula.finance.core.commands.Command,java.lang.Long) -> execute
    61:61:void removeListener(org.mula.finance.core.commands.CommandRunner$Listener) -> removeListener
org.mula.finance.core.commands.CommandRunner$1 -> org.mula.finance.core.commands.CommandRunner$1:
    43:43:void <init>(org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.commands.Command,java.lang.Long) -> <init>
    47:47:void doInBackground() -> doInBackground
    53:54:void onPostExecute() -> onPostExecute
org.mula.finance.core.commands.CommandRunner_Factory -> org.mula.finance.core.commands.CommandRunner_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.core.commands.CommandRunner_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.core.commands.CommandRunner get() -> get
    33:33:org.mula.finance.core.commands.CommandRunner newInstance(org.mula.finance.core.tasks.TaskRunner) -> newInstance
org.mula.finance.core.commands.CreateHabitCommand -> org.mula.finance.core.commands.CreateHabitCommand:
    33:36:void <init>(org.mula.finance.core.models.ModelFactory,org.mula.finance.core.models.HabitList,org.mula.finance.core.models.Habit) -> <init>
    42:47:void execute() -> execute
    17:17:java.lang.Object toRecord() -> toRecord
    54:54:org.mula.finance.core.commands.CreateHabitCommand$Record toRecord() -> toRecord
org.mula.finance.core.commands.CreateHabitCommand$Record -> org.mula.finance.core.commands.CreateHabitCommand$Record:
    83:86:void <init>(org.mula.finance.core.commands.CreateHabitCommand) -> <init>
    92:97:org.mula.finance.core.commands.CreateHabitCommand toCommand(org.mula.finance.core.models.ModelFactory,org.mula.finance.core.models.HabitList) -> toCommand
org.mula.finance.core.commands.CreateHabitCommandFactory -> org.mula.finance.core.commands.CreateHabitCommandFactory:
    18:19:void <init>(javax.inject.Provider) -> <init>
    31:31:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    23:26:org.mula.finance.core.commands.CreateHabitCommand create(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.Habit) -> create
org.mula.finance.core.commands.CreateRepetitionCommand -> org.mula.finance.core.commands.CreateRepetitionCommand:
    35:38:void <init>(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp,int) -> <init>
    44:52:void execute() -> execute
    17:17:java.lang.Object toRecord() -> toRecord
    65:65:org.mula.finance.core.commands.CreateRepetitionCommand$Record toRecord() -> toRecord
org.mula.finance.core.commands.CreateRepetitionCommand$Record -> org.mula.finance.core.commands.CreateRepetitionCommand$Record:
    93:96:void <init>(org.mula.finance.core.commands.CreateRepetitionCommand) -> <init>
    105:106:org.mula.finance.core.commands.CreateRepetitionCommand toCommand(org.mula.finance.core.models.HabitList) -> toCommand
org.mula.finance.core.commands.DeleteHabitsCommand -> org.mula.finance.core.commands.DeleteHabitsCommand:
    25:27:void <init>(org.mula.finance.core.models.HabitList,java.util.List) -> <init>
    34:35:void execute() -> execute
    40:40:java.util.List getSelected() -> getSelected
    15:15:java.lang.Object toRecord() -> toRecord
    47:47:org.mula.finance.core.commands.DeleteHabitsCommand$Record toRecord() -> toRecord
org.mula.finance.core.commands.DeleteHabitsCommand$Record -> org.mula.finance.core.commands.DeleteHabitsCommand$Record:
    68:73:void <init>(org.mula.finance.core.commands.DeleteHabitsCommand) -> <init>
    80:85:org.mula.finance.core.commands.DeleteHabitsCommand toCommand(org.mula.finance.core.models.HabitList) -> toCommand
org.mula.finance.core.commands.EditHabitCommand -> org.mula.finance.core.commands.EditHabitCommand:
    41:43:void <init>(org.mula.finance.core.models.ModelFactory,org.mula.finance.core.models.HabitList,org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> <init>
    82:83:void copyAttributes(org.mula.finance.core.models.Habit) -> copyAttributes
    64:64:void execute() -> execute
    19:19:java.lang.Object toRecord() -> toRecord
    71:71:org.mula.finance.core.commands.EditHabitCommand$Record toRecord() -> toRecord
org.mula.finance.core.commands.EditHabitCommand$Record -> org.mula.finance.core.commands.EditHabitCommand$Record:
    106:109:void <init>(org.mula.finance.core.commands.EditHabitCommand) -> <init>
    116:117:org.mula.finance.core.commands.EditHabitCommand toCommand(org.mula.finance.core.models.ModelFactory,org.mula.finance.core.models.HabitList) -> toCommand
org.mula.finance.core.commands.EditHabitCommandFactory -> org.mula.finance.core.commands.EditHabitCommandFactory:
    18:19:void <init>(javax.inject.Provider) -> <init>
    32:32:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    23:27:org.mula.finance.core.commands.EditHabitCommand create(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> create
org.mula.finance.core.commands.ToggleRepetitionCommand -> org.mula.finance.core.commands.ToggleRepetitionCommand:
    29:32:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp) -> <init>
    38:39:void execute() -> execute
    45:45:org.mula.finance.core.models.Habit getHabit() -> getHabit
    15:15:java.lang.Object toRecord() -> toRecord
    52:52:org.mula.finance.core.commands.ToggleRepetitionCommand$Record toRecord() -> toRecord
org.mula.finance.core.commands.ToggleRepetitionCommand$Record -> org.mula.finance.core.commands.ToggleRepetitionCommand$Record:
    74:77:void <init>(org.mula.finance.core.commands.ToggleRepetitionCommand) -> <init>
    85:86:org.mula.finance.core.commands.ToggleRepetitionCommand toCommand(org.mula.finance.core.models.HabitList) -> toCommand
org.mula.finance.core.commands.UnarchiveHabitsCommand -> org.mula.finance.core.commands.UnarchiveHabitsCommand:
    25:27:void <init>(org.mula.finance.core.models.HabitList,java.util.List) -> <init>
    33:34:void execute() -> execute
    15:15:java.lang.Object toRecord() -> toRecord
    41:41:org.mula.finance.core.commands.UnarchiveHabitsCommand$Record toRecord() -> toRecord
org.mula.finance.core.commands.UnarchiveHabitsCommand$Record -> org.mula.finance.core.commands.UnarchiveHabitsCommand$Record:
    63:68:void <init>(org.mula.finance.core.commands.UnarchiveHabitsCommand) -> <init>
    76:81:org.mula.finance.core.commands.UnarchiveHabitsCommand toCommand(org.mula.finance.core.models.HabitList) -> toCommand
org.mula.finance.core.database.MigrationHelper -> org.mula.finance.core.database.MigrationHelper:
    13:14:void <clinit>() -> <clinit>
    19:20:void <init>(org.mula.finance.core.database.Database) -> <init>
    27:36:void migrateTo(int) -> migrateTo
    43:52:java.io.InputStream open(java.lang.String) -> open
org.mula.finance.core.database.Repository -> org.mula.finance.core.database.Repository:
    23:25:void <init>(java.lang.Class,org.mula.finance.core.database.Database) -> <init>
    216:215:java.lang.String buildSelectQuery() -> buildSelectQuery
    200:210:void copyFieldFromCursor(java.lang.Object,java.lang.reflect.Field,org.mula.finance.core.database.Cursor,int) -> copyFieldFromCursor
    172:173:java.util.List cursorToMultipleRecords(org.mula.finance.core.database.Cursor) -> cursorToMultipleRecords
    182:193:java.lang.Object cursorToSingleRecord(org.mula.finance.core.database.Cursor) -> cursorToSingleRecord
    78:78:void execSQL(java.lang.String,java.lang.Object[]) -> execSQL
    90:103:void executeAsTransaction(java.lang.Runnable) -> executeAsTransaction
    35:35:java.lang.Object find(java.lang.Long) -> find
    49:52:java.util.List findAll(java.lang.String,java.lang.String[]) -> findAll
    62:66:java.lang.Object findFirst(java.lang.String,java.lang.String[]) -> findFirst
    253:269:java.lang.String[] getColumnNames() -> getColumnNames
    221:227:java.util.List getFieldColumnPairs() -> getFieldColumnPairs
    237:245:java.lang.reflect.Field[] getFields() -> getFields
    306:321:java.lang.reflect.Field getIdField() -> getIdField
    291:298:java.lang.String getIdName() -> getIdName
    328:335:org.mula.finance.core.database.Table getTableAnnotation() -> getTableAnnotation
    277:283:java.lang.String getTableName() -> getTableName
    157:165:void remove(java.lang.Object) -> remove
    122:145:void save(java.lang.Object) -> save
org.mula.finance.core.database.SQLParser -> org.mula.finance.core.database.SQLParser:
    89:147:java.util.List parse(java.io.InputStream) -> parse
org.mula.finance.core.database.Tokenizer -> org.mula.finance.core.database.Tokenizer:
    32:33:void <init>(java.io.InputStream) -> <init>
    38:42:boolean hasNext() -> hasNext
    47:51:int next() -> next
    56:71:boolean skip(java.lang.String) -> skip
org.mula.finance.core.database.UnsupportedDatabaseVersionException -> org.mula.finance.core.database.UnsupportedDatabaseVersionException:
    5:5:void <init>() -> <init>
org.mula.finance.core.io.AbstractImporter -> org.mula.finance.core.io.AbstractImporter:
    21:22:void <init>(org.mula.finance.core.models.HabitList) -> <init>
    31:39:boolean isSQLite3File(java.io.File) -> isSQLite3File
org.mula.finance.core.io.GenericImporter -> org.mula.finance.core.io.GenericImporter:
    29:34:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.io.LoopDBImporter,org.mula.finance.core.io.RewireDBImporter,org.mula.finance.core.io.TickmateDBImporter,org.mula.finance.core.io.HabitBullCSVImporter) -> <init>
    40:41:boolean canHandle(java.io.File) -> canHandle
    49:50:void importHabitsFromFile(java.io.File) -> importHabitsFromFile
org.mula.finance.core.io.HabitBullCSVImporter -> org.mula.finance.core.io.HabitBullCSVImporter:
    33:34:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.ModelFactory) -> <init>
    40:42:boolean canHandle(java.io.File) -> canHandle
    49:84:void importHabitsFromFile(java.io.File) -> importHabitsFromFile
org.mula.finance.core.io.HabitsCSVExporter -> org.mula.finance.core.io.HabitsCSVExporter:
    43:49:void <init>(org.mula.finance.core.models.HabitList,java.util.List,java.io.File) -> <init>
    66:76:void addFileToZip(java.util.zip.ZipOutputStream,java.lang.String) -> addFileToZip
    81:87:void cleanup() -> cleanup
    231:240:org.mula.finance.core.models.Timestamp[] getTimeframe() -> getTimeframe
    93:94:java.lang.String sanitizeFilename(java.lang.String) -> sanitizeFilename
    56:58:java.lang.String writeArchive() -> writeArchive
    136:140:void writeCheckmarks(java.lang.String,org.mula.finance.core.models.CheckmarkList) -> writeCheckmarks
    100:120:void writeHabits() -> writeHabits
    156:201:void writeMultipleHabits() -> writeMultipleHabits
    213:218:void writeMultipleHabitsHeader(java.io.Writer) -> writeMultipleHabitsHeader
    126:130:void writeScores(java.lang.String,org.mula.finance.core.models.ScoreList) -> writeScores
    247:259:java.lang.String writeZipFile() -> writeZipFile
org.mula.finance.core.io.LoopDBImporter -> org.mula.finance.core.io.LoopDBImporter:
    41:43:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.ModelFactory,org.mula.finance.core.database.DatabaseOpener) -> <init>
    49:72:boolean canHandle(java.io.File) -> canHandle
    80:104:void importHabitsFromFile(java.io.File) -> importHabitsFromFile
org.mula.finance.core.io.RewireDBImporter -> org.mula.finance.core.io.RewireDBImporter:
    39:41:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.ModelFactory,org.mula.finance.core.database.DatabaseOpener) -> <init>
    47:56:boolean canHandle(java.io.File) -> canHandle
    143:165:void createCheckmarks(org.mula.finance.core.database.Database,org.mula.finance.core.models.Habit,int) -> createCheckmarks
    77:132:void createHabits(org.mula.finance.core.database.Database) -> createHabits
    170:203:void createReminder(org.mula.finance.core.database.Database,org.mula.finance.core.models.Habit,int) -> createReminder
    63:68:void importHabitsFromFile(java.io.File) -> importHabitsFromFile
org.mula.finance.core.io.TickmateDBImporter -> org.mula.finance.core.io.TickmateDBImporter:
    37:39:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.ModelFactory,org.mula.finance.core.database.DatabaseOpener) -> <init>
    45:54:boolean canHandle(java.io.File) -> canHandle
    77:98:void createCheckmarks(org.mula.finance.core.database.Database,org.mula.finance.core.models.Habit,int) -> createCheckmarks
    107:130:void createHabits(org.mula.finance.core.database.Database) -> createHabits
    61:66:void importHabitsFromFile(java.io.File) -> importHabitsFromFile
org.mula.finance.core.models.Checkmark -> org.mula.finance.core.models.Checkmark:
    53:55:void <init>(org.mula.finance.core.models.Timestamp,int) -> <init>
    63:70:boolean equals(java.lang.Object) -> equals
    75:75:org.mula.finance.core.models.Timestamp getTimestamp() -> getTimestamp
    80:80:int getValue() -> getValue
    86:89:int hashCode() -> hashCode
    95:98:java.lang.String toString() -> toString
org.mula.finance.core.models.CheckmarkList -> org.mula.finance.core.models.CheckmarkList:
    29:31:void <init>(org.mula.finance.core.models.Habit) -> <init>
    38:38:java.util.List buildCheckmarksFromIntervals(org.mula.finance.core.models.Repetition[],java.util.ArrayList) -> buildCheckmarksFromIntervals
    85:100:java.util.ArrayList buildIntervals(org.mula.finance.core.models.Frequency,org.mula.finance.core.models.Repetition[]) -> buildIntervals
    270:287:void compute() -> compute
    307:307:void computeNumerical(org.mula.finance.core.models.Repetition[]) -> computeNumerical
    329:331:void computeYesNo(org.mula.finance.core.models.Repetition[]) -> computeYesNo
    335:337:java.util.List getAll() -> getAll
    151:157:int[] getAllValues() -> getAllValues
    184:186:org.mula.finance.core.models.Checkmark getToday() -> getToday
    196:198:int getTodayValue() -> getTodayValue
    216:223:int[] getValues(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> getValues
    399:421:java.util.List groupBy(org.mula.finance.core.utils.DateUtils$TruncateField,int) -> groupBy
    114:121:void snapIntervalsTogether(java.util.ArrayList) -> snapIntervalsTogether
    247:251:void writeCSV(java.io.Writer) -> writeCSV
org.mula.finance.core.models.CheckmarkList$Interval -> org.mula.finance.core.models.CheckmarkList$Interval:
    349:352:void <init>(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> <init>
    364:372:boolean equals(java.lang.Object) -> equals
    378:382:int hashCode() -> hashCode
    356:356:int length() -> length
    388:392:java.lang.String toString() -> toString
org.mula.finance.core.models.Frequency -> org.mula.finance.core.models.Frequency:
    16:24:void <clinit>() -> <clinit>
    31:35:void <init>(int,int) -> <init>
    42:49:boolean equals(java.lang.Object) -> equals
    54:54:int getDenominator() -> getDenominator
    59:59:int getNumerator() -> getNumerator
    65:68:int hashCode() -> hashCode
    73:73:double toDouble() -> toDouble
    79:82:java.lang.String toString() -> toString
org.mula.finance.core.models.Habit -> org.mula.finance.core.models.Habit:
    62:67:void <init>(org.mula.finance.core.models.ModelFactory) -> <init>
    71:77:void <init>(org.mula.finance.core.models.ModelFactory,org.mula.finance.core.models.Habit$HabitData) -> <init>
    96:98:void copyFrom(org.mula.finance.core.models.Habit) -> copyFrom
    106:106:org.mula.finance.core.models.CheckmarkList getCheckmarks() -> getCheckmarks
    120:120:java.lang.Integer getColor() -> getColor
    327:327:org.mula.finance.core.models.Habit$HabitData getData() -> getData
    131:131:java.lang.String getDescription() -> getDescription
    142:142:org.mula.finance.core.models.Frequency getFrequency() -> getFrequency
    153:153:java.lang.Long getId() -> getId
    164:164:java.lang.String getName() -> getName
    174:174:org.mula.finance.core.models.ModelObservable getObservable() -> getObservable
    332:332:java.lang.Integer getPosition() -> getPosition
    342:342:java.lang.String getQuestion() -> getQuestion
    190:190:org.mula.finance.core.models.Reminder getReminder() -> getReminder
    202:202:org.mula.finance.core.models.RepetitionList getRepetitions() -> getRepetitions
    208:208:org.mula.finance.core.models.ScoreList getScores() -> getScores
    214:214:org.mula.finance.core.models.StreakList getStreaks() -> getStreaks
    219:219:int getTargetType() -> getTargetType
    232:232:double getTargetValue() -> getTargetValue
    243:243:int getType() -> getType
    257:257:java.lang.String getUnit() -> getUnit
    272:272:java.lang.String getUriString() -> getUriString
    277:277:boolean hasId() -> hasId
    287:287:boolean hasReminder() -> hasReminder
    292:294:void invalidateNewerThan(org.mula.finance.core.models.Timestamp) -> invalidateNewerThan
    299:299:boolean isArchived() -> isArchived
    309:317:boolean isCompletedToday() -> isCompletedToday
    322:322:boolean isNumerical() -> isNumerical
    304:305:void setArchived(boolean) -> setArchived
    125:126:void setColor(java.lang.Integer) -> setColor
    136:137:void setDescription(java.lang.String) -> setDescription
    147:148:void setFrequency(org.mula.finance.core.models.Frequency) -> setFrequency
    158:159:void setId(java.lang.Long) -> setId
    169:170:void setName(java.lang.String) -> setName
    337:337:void setPosition(int) -> setPosition
    346:346:void setQuestion(java.lang.String) -> setQuestion
    196:197:void setReminder(org.mula.finance.core.models.Reminder) -> setReminder
    225:228:void setTargetType(int) -> setTargetType
    238:237:void setTargetValue(double) -> setTargetValue
    249:252:void setType(int) -> setType
    262:263:void setUnit(java.lang.String) -> setUnit
    479:482:java.lang.String toString() -> toString
org.mula.finance.core.models.Habit$HabitData -> org.mula.finance.core.models.Habit$HabitData:
    382:393:void <init>() -> <init>
    397:409:void <init>(org.mula.finance.core.models.Habit$HabitData) -> <init>
    436:453:boolean equals(java.lang.Object) -> equals
    459:472:int hashCode() -> hashCode
    415:428:java.lang.String toString() -> toString
org.mula.finance.core.models.HabitList -> org.mula.finance.core.models.HabitList:
    35:37:void <init>() -> <init>
    41:43:void <init>(org.mula.finance.core.models.HabitMatcher) -> <init>
    90:90:org.mula.finance.core.models.ModelObservable getObservable() -> getObservable
    130:133:void removeAll() -> removeAll
    146:150:void repair() -> repair
    181:181:void update(org.mula.finance.core.models.Habit) -> update
    195:225:void writeCSV(java.io.Writer) -> writeCSV
org.mula.finance.core.models.HabitList$Order -> org.mula.finance.core.models.HabitList$Order:
    230:228:void <clinit>() -> <clinit>
    228:228:void <init>(java.lang.String,int) -> <init>
    228:228:org.mula.finance.core.models.HabitList$Order valueOf(java.lang.String) -> valueOf
    228:228:org.mula.finance.core.models.HabitList$Order[] values() -> values
org.mula.finance.core.models.HabitMatcher -> org.mula.finance.core.models.HabitMatcher:
    7:10:void <clinit>() -> <clinit>
    21:24:void <init>(boolean,boolean,boolean) -> <init>
    29:29:boolean isArchivedAllowed() -> isArchivedAllowed
    34:34:boolean isCompletedAllowed() -> isCompletedAllowed
    39:39:boolean isReminderRequired() -> isReminderRequired
    44:46:boolean matches(org.mula.finance.core.models.Habit) -> matches
org.mula.finance.core.models.HabitMatcherBuilder -> org.mula.finance.core.models.HabitMatcherBuilder:
    5:11:void <init>() -> <init>
    15:15:org.mula.finance.core.models.HabitMatcher build() -> build
    21:21:org.mula.finance.core.models.HabitMatcherBuilder setArchivedAllowed(boolean) -> setArchivedAllowed
    27:27:org.mula.finance.core.models.HabitMatcherBuilder setCompletedAllowed(boolean) -> setCompletedAllowed
    33:33:org.mula.finance.core.models.HabitMatcherBuilder setReminderRequired(boolean) -> setReminderRequired
org.mula.finance.core.models.HabitNotFoundException -> org.mula.finance.core.models.HabitNotFoundException:
    5:5:void <init>() -> <init>
org.mula.finance.core.models.ModelFactory$-CC -> org.mula.finance.core.models.ModelFactory$-CC:
    19:19:org.mula.finance.core.models.Habit org.mula.finance.core.models.ModelFactory.buildHabit() -> $default$buildHabit
    24:24:org.mula.finance.core.models.Habit org.mula.finance.core.models.ModelFactory.buildHabit(org.mula.finance.core.models.Habit$HabitData) -> $default$buildHabit
org.mula.finance.core.models.ModelObservable -> org.mula.finance.core.models.ModelObservable:
    23:24:void <init>() -> <init>
    34:35:void addListener(org.mula.finance.core.models.ModelObservable$Listener) -> addListener
    44:45:void notifyListeners() -> notifyListeners
    57:58:void removeListener(org.mula.finance.core.models.ModelObservable$Listener) -> removeListener
org.mula.finance.core.models.Reminder -> org.mula.finance.core.models.Reminder:
    20:23:void <init>(int,int,org.mula.finance.core.models.WeekdayList) -> <init>
    52:60:boolean equals(java.lang.Object) -> equals
    29:29:org.mula.finance.core.models.WeekdayList getDays() -> getDays
    34:34:int getHour() -> getHour
    39:39:int getMinute() -> getMinute
    44:44:long getTimeInMillis() -> getTimeInMillis
    66:70:int hashCode() -> hashCode
    76:80:java.lang.String toString() -> toString
org.mula.finance.core.models.Repetition -> org.mula.finance.core.models.Repetition:
    35:37:void <init>(org.mula.finance.core.models.Timestamp,int) -> <init>
    44:51:boolean equals(java.lang.Object) -> equals
    56:56:org.mula.finance.core.models.Timestamp getTimestamp() -> getTimestamp
    61:61:int getValue() -> getValue
    67:70:int hashCode() -> hashCode
    76:79:java.lang.String toString() -> toString
org.mula.finance.core.models.RepetitionList -> org.mula.finance.core.models.RepetitionList:
    23:25:void <init>(org.mula.finance.core.models.Habit) -> <init>
    48:48:boolean containsTimestamp(org.mula.finance.core.models.Timestamp) -> containsTimestamp
    79:79:org.mula.finance.core.models.ModelObservable getObservable() -> getObservable
    120:140:java.util.HashMap getWeekdayFrequency() -> getWeekdayFrequency
    173:174:org.mula.finance.core.models.Repetition toggle(org.mula.finance.core.models.Timestamp) -> toggle
    198:201:void toggle(org.mula.finance.core.models.Timestamp,int) -> toggle
org.mula.finance.core.models.Score -> org.mula.finance.core.models.Score:
    27:29:void <init>(org.mula.finance.core.models.Timestamp,double) -> <init>
    59:59:int compareNewer(org.mula.finance.core.models.Score) -> compareNewer
    49:49:double compute(double,double,double) -> compute
    86:93:boolean equals(java.lang.Object) -> equals
    64:64:org.mula.finance.core.models.Timestamp getTimestamp() -> getTimestamp
    69:69:double getValue() -> getValue
    99:102:int hashCode() -> hashCode
    75:78:java.lang.String toString() -> toString
org.mula.finance.core.models.ScoreList -> org.mula.finance.core.models.ScoreList:
    29:31:void <init>(org.mula.finance.core.models.Habit) -> <init>
    181:193:void compute(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> compute
    206:210:void computeAll() -> computeAll
    252:276:void forceRecompute(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp,double) -> forceRecompute
    283:296:java.util.HashMap getGroupedValues(org.mula.finance.core.utils.DateUtils$TruncateField,int) -> getGroupedValues
    46:46:org.mula.finance.core.models.ModelObservable getObservable() -> getObservable
    56:56:double getTodayValue() -> getTodayValue
    70:72:double getValue(org.mula.finance.core.models.Timestamp) -> getValue
    107:111:double[] getValues(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> getValues
    118:121:java.util.List groupBy(org.mula.finance.core.utils.DateUtils$TruncateField,int) -> groupBy
    305:315:java.util.List groupsToAvgScores(java.util.HashMap) -> groupsToAvgScores
    137:137:java.util.Iterator iterator() -> iterator
    121:121:int lambda$groupBy$0(org.mula.finance.core.models.Score,org.mula.finance.core.models.Score) -> lambda$groupBy$0
    153:160:void writeCSV(java.io.Writer) -> writeCSV
org.mula.finance.core.models.Streak -> org.mula.finance.core.models.Streak:
    15:17:void <init>(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> <init>
    22:25:int compareLonger(org.mula.finance.core.models.Streak) -> compareLonger
    30:30:int compareNewer(org.mula.finance.core.models.Streak) -> compareNewer
    62:69:boolean equals(java.lang.Object) -> equals
    35:35:org.mula.finance.core.models.Timestamp getEnd() -> getEnd
    40:40:int getLength() -> getLength
    45:45:org.mula.finance.core.models.Timestamp getStart() -> getStart
    75:78:int hashCode() -> hashCode
    51:54:java.lang.String toString() -> toString
org.mula.finance.core.models.StreakList -> org.mula.finance.core.models.StreakList:
    23:25:void <init>(org.mula.finance.core.models.Habit) -> <init>
    75:82:java.util.List checkmarksToStreaks(org.mula.finance.core.models.Timestamp,int[]) -> checkmarksToStreaks
    96:100:org.mula.finance.core.models.Timestamp findBeginning() -> findBeginning
    33:36:java.util.List getBest(int) -> getBest
    115:128:java.util.ArrayList getTransitions(org.mula.finance.core.models.Timestamp,int[]) -> getTransitions
    34:34:int lambda$getBest$0(org.mula.finance.core.models.Streak,org.mula.finance.core.models.Streak) -> lambda$getBest$0
    36:36:int lambda$getBest$1(org.mula.finance.core.models.Streak,org.mula.finance.core.models.Streak) -> lambda$getBest$1
    53:55:void rebuild() -> rebuild
org.mula.finance.core.models.Timestamp -> org.mula.finance.core.models.Timestamp:
    34:34:void <clinit>() -> <clinit>
    39:41:void <init>(long) -> <init>
    52:52:void <init>(java.util.GregorianCalendar) -> <init>
    66:66:int compare(org.mula.finance.core.models.Timestamp) -> compare
    114:114:int daysUntil(org.mula.finance.core.models.Timestamp) -> daysUntil
    74:80:boolean equals(java.lang.Object) -> equals
    57:57:long getUnixTime() -> getUnixTime
    153:153:int getWeekday() -> getWeekday
    86:86:int hashCode() -> hashCode
    119:119:boolean isNewerThan(org.mula.finance.core.models.Timestamp) -> isNewerThan
    124:124:boolean isOlderThan(org.mula.finance.core.models.Timestamp) -> isOlderThan
    99:99:org.mula.finance.core.models.Timestamp minus(int) -> minus
    94:94:org.mula.finance.core.models.Timestamp oldest(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> oldest
    104:104:org.mula.finance.core.models.Timestamp plus(int) -> plus
    135:137:java.util.GregorianCalendar toCalendar() -> toCalendar
    130:130:java.util.Date toJavaDate() -> toJavaDate
    144:144:java.lang.String toString() -> toString
    158:158:org.mula.finance.core.models.Timestamp truncate(org.mula.finance.core.utils.DateUtils$TruncateField,int) -> truncate
org.mula.finance.core.models.WeekdayList -> org.mula.finance.core.models.WeekdayList:
    12:12:void <clinit>() -> <clinit>
    17:23:void <init>(int) -> <init>
    29:30:void <init>(boolean[]) -> <init>
    63:67:boolean equals(java.lang.Object) -> equals
    73:73:int hashCode() -> hashCode
    35:35:boolean isEmpty() -> isEmpty
    41:41:boolean[] toArray() -> toArray
    51:51:int toInteger() -> toInteger
    79:81:java.lang.String toString() -> toString
org.mula.finance.core.models.memory.MemoryCheckmarkList -> org.mula.finance.core.models.memory.MemoryCheckmarkList:
    23:24:void <init>(org.mula.finance.core.models.Habit) -> <init>
    30:31:void add(java.util.List) -> add
    40:62:java.util.List getByInterval(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> getByInterval
    84:85:org.mula.finance.core.models.Checkmark getNewestComputed() -> getNewestComputed
    76:77:org.mula.finance.core.models.Checkmark getOldestComputed() -> getOldestComputed
    68:69:void invalidateNewerThan(org.mula.finance.core.models.Timestamp) -> invalidateNewerThan
    32:32:int lambda$add$0(org.mula.finance.core.models.Checkmark,org.mula.finance.core.models.Checkmark) -> lambda$add$0
org.mula.finance.core.models.memory.MemoryHabitList -> org.mula.finance.core.models.memory.MemoryHabitList:
    33:28:void <init>() -> <init>
    40:44:void <init>(org.mula.finance.core.models.HabitMatcher,java.util.Comparator,org.mula.finance.core.models.memory.MemoryHabitList) -> <init>
    51:53:void add(org.mula.finance.core.models.Habit) -> add
    69:74:org.mula.finance.core.models.Habit getById(long) -> getById
    81:81:org.mula.finance.core.models.Habit getByPosition(int) -> getByPosition
    108:139:java.util.Comparator getComparatorByOrder(org.mula.finance.core.models.HabitList$Order) -> getComparatorByOrder
    88:88:org.mula.finance.core.models.HabitList getFiltered(org.mula.finance.core.models.HabitMatcher) -> getFiltered
    94:94:org.mula.finance.core.models.HabitList$Order getOrder() -> getOrder
    145:145:int indexOf(org.mula.finance.core.models.Habit) -> indexOf
    152:152:java.util.Iterator iterator() -> iterator
    109:109:int lambda$getComparatorByOrder$0(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> lambda$getComparatorByOrder$0
    113:116:int lambda$getComparatorByOrder$1(java.util.Comparator,org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> lambda$getComparatorByOrder$1
    121:124:int lambda$getComparatorByOrder$2(java.util.Comparator,org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> lambda$getComparatorByOrder$2
    129:132:int lambda$getComparatorByOrder$3(java.util.Comparator,org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> lambda$getComparatorByOrder$3
    209:209:void loadFromParent() -> loadFromParent
    158:161:void remove(org.mula.finance.core.models.Habit) -> remove
    166:167:void reorder(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> reorder
    218:219:void resort() -> resort
    100:104:void setOrder(org.mula.finance.core.models.HabitList$Order) -> setOrder
    190:190:int size() -> size
    202:202:void throwIfHasParent() -> throwIfHasParent
    196:198:void update(java.util.List) -> update
org.mula.finance.core.models.memory.MemoryModelFactory -> org.mula.finance.core.models.memory.MemoryModelFactory:
    16:16:void <init>() -> <init>
    21:21:org.mula.finance.core.models.CheckmarkList buildCheckmarkList(org.mula.finance.core.models.Habit) -> buildCheckmarkList
    51:51:org.mula.finance.core.database.Repository buildHabitListRepository() -> buildHabitListRepository
    33:33:org.mula.finance.core.models.RepetitionList buildRepetitionList(org.mula.finance.core.models.Habit) -> buildRepetitionList
    57:57:org.mula.finance.core.database.Repository buildRepetitionListRepository() -> buildRepetitionListRepository
    39:39:org.mula.finance.core.models.ScoreList buildScoreList(org.mula.finance.core.models.Habit) -> buildScoreList
    45:45:org.mula.finance.core.models.StreakList buildStreakList(org.mula.finance.core.models.Habit) -> buildStreakList
org.mula.finance.core.models.memory.MemoryRepetitionList -> org.mula.finance.core.models.memory.MemoryRepetitionList:
    23:24:void <init>(org.mula.finance.core.models.Habit) -> <init>
    30:31:void add(org.mula.finance.core.models.Repetition) -> add
    37:46:java.util.List getByInterval(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> getByInterval
    56:57:org.mula.finance.core.models.Repetition getByTimestamp(org.mula.finance.core.models.Timestamp) -> getByTimestamp
    85:93:org.mula.finance.core.models.Repetition getNewest() -> getNewest
    66:74:org.mula.finance.core.models.Repetition getOldest() -> getOldest
    110:110:long getTotalCount() -> getTotalCount
    47:47:int lambda$getByInterval$0(org.mula.finance.core.models.Repetition,org.mula.finance.core.models.Repetition) -> lambda$getByInterval$0
    103:104:void remove(org.mula.finance.core.models.Repetition) -> remove
    116:117:void removeAll() -> removeAll
org.mula.finance.core.models.memory.MemoryScoreList -> org.mula.finance.core.models.memory.MemoryScoreList:
    20:21:void <init>(org.mula.finance.core.models.Habit) -> <init>
    27:30:void add(java.util.List) -> add
    38:46:java.util.List getByInterval(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> getByInterval
    56:57:org.mula.finance.core.models.Score getComputedByTimestamp(org.mula.finance.core.models.Timestamp) -> getComputedByTimestamp
    81:82:org.mula.finance.core.models.Score getNewestComputed() -> getNewestComputed
    89:90:org.mula.finance.core.models.Score getOldestComputed() -> getOldestComputed
    65:66:void invalidateNewerThan(org.mula.finance.core.models.Timestamp) -> invalidateNewerThan
    29:29:int lambda$add$0(org.mula.finance.core.models.Score,org.mula.finance.core.models.Score) -> lambda$add$0
    73:74:java.util.List toList() -> toList
org.mula.finance.core.models.memory.MemoryStreakList -> org.mula.finance.core.models.memory.MemoryStreakList:
    20:21:void <init>(org.mula.finance.core.models.Habit) -> <init>
    46:48:void add(java.util.List) -> add
    61:62:java.util.List getAll() -> getAll
    29:30:org.mula.finance.core.models.Streak getNewestComputed() -> getNewestComputed
    39:40:void invalidateNewerThan(org.mula.finance.core.models.Timestamp) -> invalidateNewerThan
    47:47:int lambda$add$0(org.mula.finance.core.models.Streak,org.mula.finance.core.models.Streak) -> lambda$add$0
    54:55:void removeNewestComputed() -> removeNewestComputed
org.mula.finance.core.models.sqlite.SQLModelFactory -> org.mula.finance.core.models.sqlite.SQLModelFactory:
    50:51:void <init>(org.mula.finance.core.database.Database) -> <init>
    57:57:org.mula.finance.core.models.CheckmarkList buildCheckmarkList(org.mula.finance.core.models.Habit) -> buildCheckmarkList
    87:87:org.mula.finance.core.database.Repository buildHabitListRepository() -> buildHabitListRepository
    69:69:org.mula.finance.core.models.RepetitionList buildRepetitionList(org.mula.finance.core.models.Habit) -> buildRepetitionList
    93:93:org.mula.finance.core.database.Repository buildRepetitionListRepository() -> buildRepetitionListRepository
    75:75:org.mula.finance.core.models.ScoreList buildScoreList(org.mula.finance.core.models.Habit) -> buildScoreList
    81:81:org.mula.finance.core.models.StreakList buildStreakList(org.mula.finance.core.models.Habit) -> buildStreakList
org.mula.finance.core.models.sqlite.SQLiteHabitList -> org.mula.finance.core.models.sqlite.SQLiteHabitList:
    59:62:void <init>(org.mula.finance.core.models.ModelFactory) -> <init>
    83:94:void add(org.mula.finance.core.models.Habit) -> add
    100:101:org.mula.finance.core.models.Habit getById(long) -> getById
    108:109:org.mula.finance.core.models.Habit getByPosition(int) -> getByPosition
    116:117:org.mula.finance.core.models.HabitList getFiltered(org.mula.finance.core.models.HabitMatcher) -> getFiltered
    124:124:org.mula.finance.core.models.HabitList$Order getOrder() -> getOrder
    137:138:int indexOf(org.mula.finance.core.models.Habit) -> indexOf
    144:145:java.util.Iterator iterator() -> iterator
    153:155:void lambda$rebuildOrder$0(java.util.List) -> lambda$rebuildOrder$0$SQLiteHabitList
    170:171:void lambda$remove$1(org.mula.finance.core.models.Habit,org.mula.finance.core.models.sqlite.records.HabitRecord) -> lambda$remove$1$SQLiteHabitList
    67:76:void loadRecords() -> loadRecords
    150:158:void rebuildOrder() -> rebuildOrder
    163:167:void remove(org.mula.finance.core.models.Habit) -> remove
    190:197:void reorder(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> reorder
    223:226:void repair() -> repair
    130:132:void setOrder(org.mula.finance.core.models.HabitList$Order) -> setOrder
    231:232:int size() -> size
    238:250:void update(java.util.List) -> update
org.mula.finance.core.models.sqlite.SQLiteHabitList_Factory -> org.mula.finance.core.models.sqlite.SQLiteHabitList_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.core.models.sqlite.SQLiteHabitList_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.core.models.sqlite.SQLiteHabitList get() -> get
    33:33:org.mula.finance.core.models.sqlite.SQLiteHabitList newInstance(org.mula.finance.core.models.ModelFactory) -> newInstance
org.mula.finance.core.models.sqlite.SQLiteRepetitionList -> org.mula.finance.core.models.sqlite.SQLiteRepetitionList:
    53:55:void <init>(org.mula.finance.core.models.Habit,org.mula.finance.core.models.ModelFactory) -> <init>
    75:82:void add(org.mula.finance.core.models.Repetition) -> add
    150:150:void check(java.lang.Long) -> check
    88:89:java.util.List getByInterval(org.mula.finance.core.models.Timestamp,org.mula.finance.core.models.Timestamp) -> getByInterval
    96:97:org.mula.finance.core.models.Repetition getByTimestamp(org.mula.finance.core.models.Timestamp) -> getByTimestamp
    110:111:org.mula.finance.core.models.Repetition getNewest() -> getNewest
    103:104:org.mula.finance.core.models.Repetition getOldest() -> getOldest
    138:139:long getTotalCount() -> getTotalCount
    60:69:void loadRecords() -> loadRecords
    117:123:void remove(org.mula.finance.core.models.Repetition) -> remove
    128:131:void removeAll() -> removeAll
org.mula.finance.core.models.sqlite.records.HabitRecord -> org.mula.finance.core.models.sqlite.records.HabitRecord:
    35:35:void <init>() -> <init>
    90:115:void copyFrom(org.mula.finance.core.models.Habit) -> copyFrom
    121:136:void copyTo(org.mula.finance.core.models.Habit) -> copyTo
org.mula.finance.core.models.sqlite.records.RepetitionRecord -> org.mula.finance.core.models.sqlite.records.RepetitionRecord:
    33:33:void <init>() -> <init>
    51:52:void copyFrom(org.mula.finance.core.models.Repetition) -> copyFrom
    57:57:org.mula.finance.core.models.Repetition toRepetition() -> toRepetition
org.mula.finance.core.preferences.Preferences -> org.mula.finance.core.preferences.Preferences:
    31:34:void <init>(org.mula.finance.core.preferences.Preferences$Storage) -> <init>
    39:39:void addListener(org.mula.finance.core.preferences.Preferences$Listener) -> addListener
    44:44:java.lang.Integer getDefaultHabitColor(int) -> getDefaultHabitColor
    50:59:org.mula.finance.core.models.HabitList$Order getDefaultOrder() -> getDefaultOrder
    70:76:int getDefaultScoreSpinnerPosition() -> getDefaultScoreSpinnerPosition
    329:331:int getFirstWeekday() -> getFirstWeekday
    89:89:int getLastHintNumber() -> getLastHintNumber
    94:96:org.mula.finance.core.models.Timestamp getLastHintTimestamp() -> getLastHintTimestamp
    101:101:long getLastSync() -> getLastSync
    189:189:int getLaunchCount() -> getLaunchCount
    111:111:boolean getShowArchived() -> getShowArchived
    121:121:boolean getShowCompleted() -> getShowCompleted
    141:141:java.lang.String getSyncAddress() -> getSyncAddress
    152:156:java.lang.String getSyncClientId() -> getSyncClientId
    163:163:java.lang.String getSyncKey() -> getSyncKey
    174:174:int getTheme() -> getTheme
    318:318:int getWidgetOpacity() -> getWidgetOpacity
    184:184:void incrementLaunchCount() -> incrementLaunchCount
    287:290:boolean isCheckmarkSequenceReversed() -> isCheckmarkSequenceReversed
    194:194:boolean isDeveloper() -> isDeveloper
    204:204:boolean isFirstRun() -> isFirstRun
    214:214:boolean isPureBlackEnabled() -> isPureBlackEnabled
    224:224:boolean isShortToggleEnabled() -> isShortToggleEnabled
    234:234:boolean isSyncEnabled() -> isSyncEnabled
    245:245:boolean isWidgetStackEnabled() -> isWidgetStackEnabled
    250:250:void removeListener(org.mula.finance.core.preferences.Preferences$Listener) -> removeListener
    295:297:void setCheckmarkSequenceReversed(boolean) -> setCheckmarkSequenceReversed
    260:260:void setDefaultHabitColor(int) -> setDefaultHabitColor
    65:65:void setDefaultOrder(org.mula.finance.core.models.HabitList$Order) -> setDefaultOrder
    84:84:void setDefaultScoreSpinnerPosition(int) -> setDefaultScoreSpinnerPosition
    209:209:void setFirstRun(boolean) -> setFirstRun
    313:313:void setLastAppVersion(int) -> setLastAppVersion
    106:106:void setLastSync(long) -> setLastSync
    271:272:void setNotificationsLed(boolean) -> setNotificationsLed
    265:266:void setNotificationsSticky(boolean) -> setNotificationsSticky
    116:116:void setShowArchived(boolean) -> setShowArchived
    126:126:void setShowCompleted(boolean) -> setShowCompleted
    239:240:void setSyncEnabled(boolean) -> setSyncEnabled
    282:282:boolean shouldMakeNotificationsLed() -> shouldMakeNotificationsLed
    277:277:boolean shouldMakeNotificationsSticky() -> shouldMakeNotificationsSticky
    302:303:void updateLastHint(int,org.mula.finance.core.models.Timestamp) -> updateLastHint
org.mula.finance.core.preferences.Preferences$Listener$-CC -> org.mula.finance.core.preferences.Preferences$Listener$-CC:
    void org.mula.finance.core.preferences.Preferences$Listener.onCheckmarkSequenceChanged() -> $default$onCheckmarkSequenceChanged
    void org.mula.finance.core.preferences.Preferences$Listener.onNotificationsChanged() -> $default$onNotificationsChanged
    void org.mula.finance.core.preferences.Preferences$Listener.onSyncFeatureChanged() -> $default$onSyncFeatureChanged
org.mula.finance.core.preferences.Preferences$Storage$-CC -> org.mula.finance.core.preferences.Preferences$Storage$-CC:
    380:382:long[] org.mula.finance.core.preferences.Preferences$Storage.getLongArray(java.lang.String,long[]) -> $default$getLongArray
    375:375:void org.mula.finance.core.preferences.Preferences$Storage.putLongArray(java.lang.String,long[]) -> $default$putLongArray
org.mula.finance.core.preferences.WidgetPreferences -> org.mula.finance.core.preferences.WidgetPreferences:
    14:15:void <init>(org.mula.finance.core.preferences.Preferences$Storage) -> <init>
    19:19:void addWidget(int,long[]) -> addWidget
    48:48:java.lang.String getHabitIdKey(int) -> getHabitIdKey
    24:32:long[] getHabitIdsFromWidgetId(int) -> getHabitIdsFromWidgetId
    53:53:java.lang.String getSnoozeKey(long) -> getSnoozeKey
    44:44:long getSnoozeTime(long) -> getSnoozeTime
    58:58:void removeSnoozeTime(long) -> removeSnoozeTime
    38:39:void removeWidget(int) -> removeWidget
    63:63:void setSnoozeTime(java.lang.Long,long) -> setSnoozeTime
org.mula.finance.core.reminders.ReminderScheduler -> org.mula.finance.core.reminders.ReminderScheduler:
    38:42:void <init>(org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.models.HabitList,org.mula.finance.core.reminders.ReminderScheduler$SystemScheduler,org.mula.finance.core.preferences.WidgetPreferences) -> <init>
    49:52:void onCommandExecuted(org.mula.finance.core.commands.Command,java.lang.Long) -> onCommandExecuted
    56:93:void schedule(org.mula.finance.core.models.Habit) -> schedule
    125:130:void scheduleAll() -> scheduleAll
    97:121:void scheduleAtTime(org.mula.finance.core.models.Habit,long) -> scheduleAtTime
    144:148:void snoozeReminder(org.mula.finance.core.models.Habit,long) -> snoozeReminder
    134:135:void startListening() -> startListening
    139:140:void stopListening() -> stopListening
org.mula.finance.core.tasks.CancelableTask -> org.mula.finance.core.tasks.CancelableTask:
    5:7:void <init>() -> <init>
    12:13:void cancel() -> cancel
    18:18:boolean isCanceled() -> isCanceled
org.mula.finance.core.tasks.ExportCSVTask -> org.mula.finance.core.tasks.ExportCSVTask:
    36:40:void <init>(org.mula.finance.core.models.HabitList,java.util.List,java.io.File,org.mula.finance.core.tasks.ExportCSVTask$Listener) -> <init>
    49:54:void doInBackground() -> doInBackground
    61:61:void onPostExecute() -> onPostExecute
org.mula.finance.core.tasks.Task$-CC -> org.mula.finance.core.tasks.Task$-CC:
    void org.mula.finance.core.tasks.Task.cancel() -> $default$cancel
    boolean org.mula.finance.core.tasks.Task.isCanceled() -> $default$isCanceled
    void org.mula.finance.core.tasks.Task.onAttached(org.mula.finance.core.tasks.TaskRunner) -> $default$onAttached
    void org.mula.finance.core.tasks.Task.onPostExecute() -> $default$onPostExecute
    void org.mula.finance.core.tasks.Task.onPreExecute() -> $default$onPreExecute
    void org.mula.finance.core.tasks.Task.onProgressUpdate(int) -> $default$onProgressUpdate
org.mula.finance.core.ui.NotificationTray -> org.mula.finance.core.ui.NotificationTray:
    50:55:void <init>(org.mula.finance.core.tasks.TaskRunner,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.ui.NotificationTray$SystemTray) -> <init>
    26:26:org.mula.finance.core.ui.NotificationTray$SystemTray access$000(org.mula.finance.core.ui.NotificationTray) -> access$000
    26:26:int access$100(org.mula.finance.core.ui.NotificationTray,org.mula.finance.core.models.Habit) -> access$100
    60:62:void cancel(org.mula.finance.core.models.Habit) -> cancel
    118:120:int getNotificationId(org.mula.finance.core.models.Habit) -> getNotificationId
    77:78:void lambda$onCommandExecuted$0(org.mula.finance.core.models.Habit) -> lambda$onCommandExecuted$0$NotificationTray
    69:87:void onCommandExecuted(org.mula.finance.core.commands.Command,java.lang.Long) -> onCommandExecuted
    94:94:void onNotificationsChanged() -> onNotificationsChanged
    125:128:void reshowAll() -> reshowAll
    99:101:void show(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp,long) -> show
    106:107:void startListening() -> startListening
    112:113:void stopListening() -> stopListening
org.mula.finance.core.ui.NotificationTray$NotificationData -> org.mula.finance.core.ui.NotificationTray$NotificationData:
    151:153:void <init>(org.mula.finance.core.ui.NotificationTray,org.mula.finance.core.models.Timestamp,long) -> <init>
org.mula.finance.core.ui.NotificationTray$ShowNotificationTask -> org.mula.finance.core.ui.NotificationTray$ShowNotificationTask:
    168:171:void <init>(org.mula.finance.core.ui.NotificationTray,org.mula.finance.core.models.Habit,org.mula.finance.core.ui.NotificationTray$NotificationData) -> <init>
    177:177:void doInBackground() -> doInBackground
    183:209:void onPostExecute() -> onPostExecute
    215:221:boolean shouldShowReminderToday() -> shouldShowReminderToday
org.mula.finance.core.ui.ThemeSwitcher -> org.mula.finance.core.ui.ThemeSwitcher:
    20:21:void <init>(org.mula.finance.core.preferences.Preferences) -> <init>
    26:33:void apply() -> apply
    47:48:boolean isNightMode() -> isNightMode
org.mula.finance.core.ui.screens.habits.list.HabitCardListCache -> org.mula.finance.core.ui.screens.habits.list.HabitCardListCache:
    63:64:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.tasks.TaskRunner) -> <init>
    34:34:int access$000(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache) -> access$000
    34:34:org.mula.finance.core.models.HabitList access$100(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache) -> access$100
    34:34:org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$CacheData access$200(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache) -> access$200
    34:34:org.mula.finance.core.tasks.Task access$302(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache,org.mula.finance.core.tasks.Task) -> access$302
    34:34:org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$Listener access$400(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache) -> access$400
    81:82:void cancelTasks() -> cancelTasks
    86:86:int[] getCheckmarks(long) -> getCheckmarks
    98:98:org.mula.finance.core.models.Habit getHabitByPosition(int) -> getHabitByPosition
    104:104:int getHabitCount() -> getHabitCount
    109:109:org.mula.finance.core.models.HabitList$Order getOrder() -> getOrder
    114:114:double getScore(long) -> getScore
    119:121:void onAttached() -> onAttached
    127:129:void onCommandExecuted(org.mula.finance.core.commands.Command,java.lang.Long) -> onCommandExecuted
    133:134:void onDetached() -> onDetached
    138:141:void refreshAllHabits() -> refreshAllHabits
    145:146:void refreshHabit(long) -> refreshHabit
    150:160:void remove(long) -> remove
    164:168:void reorder(int,int) -> reorder
    172:173:void setCheckmarkCount(int) -> setCheckmarkCount
    178:177:void setFilter(org.mula.finance.core.models.HabitMatcher) -> setFilter
    184:183:void setListener(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$Listener) -> setListener
    190:189:void setOrder(org.mula.finance.core.models.HabitList$Order) -> setOrder
org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$1 -> org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$1:
    74:74:void <init>(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache) -> <init>
org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$CacheData -> org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$CacheData:
    240:244:void <init>(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache) -> <init>
    251:249:void copyCheckmarksFrom(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$CacheData) -> copyCheckmarksFrom
    265:263:void copyScoresFrom(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$CacheData) -> copyScoresFrom
    275:281:void fetchHabits() -> fetchHabits
org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$Listener$-CC -> org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$Listener$-CC:
    void org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$Listener.onItemChanged(int) -> $default$onItemChanged
    void org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$Listener.onItemInserted(int) -> $default$onItemInserted
    void org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$Listener.onItemMoved(int,int) -> $default$onItemMoved
    void org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$Listener.onItemRemoved(int) -> $default$onItemRemoved
    void org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$Listener.onRefreshFinished() -> $default$onRefreshFinished
org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$RefreshTask -> org.mula.finance.core.ui.screens.habits.list.HabitCardListCache$RefreshTask:
    298:301:void <init>(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache) -> <init>
    305:307:void <init>(org.mula.finance.core.ui.screens.habits.list.HabitCardListCache,long) -> <init>
    313:314:void cancel() -> cancel
    319:343:void doInBackground() -> doInBackground
    349:348:void onAttached(org.mula.finance.core.tasks.TaskRunner) -> onAttached
    355:357:void onPostExecute() -> onPostExecute
    362:364:void onProgressUpdate(int) -> onProgressUpdate
    368:374:void performInsert(org.mula.finance.core.models.Habit,int) -> performInsert
    381:380:void performMove(org.mula.finance.core.models.Habit,int,int) -> performMove
    388:402:void performUpdate(long,int) -> performUpdate
    406:422:void processPosition(int) -> processPosition
    426:433:void processRemovedHabits() -> processRemovedHabits
org.mula.finance.core.ui.screens.habits.list.HabitCardListCache_Factory -> org.mula.finance.core.ui.screens.habits.list.HabitCardListCache_Factory:
    26:29:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    39:39:org.mula.finance.core.ui.screens.habits.list.HabitCardListCache_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    34:34:org.mula.finance.core.ui.screens.habits.list.HabitCardListCache get() -> get
    44:44:org.mula.finance.core.ui.screens.habits.list.HabitCardListCache newInstance(org.mula.finance.core.models.HabitList,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.tasks.TaskRunner) -> newInstance
org.mula.finance.core.ui.screens.habits.list.HintList -> org.mula.finance.core.ui.screens.habits.list.HintList:
    32:34:void <init>(org.mula.finance.core.preferences.Preferences,java.lang.String[]) -> <init>
    48:52:java.lang.String pop() -> pop
    62:64:boolean shouldShow() -> shouldShow
org.mula.finance.core.ui.screens.habits.list.HintListFactory -> org.mula.finance.core.ui.screens.habits.list.HintListFactory:
    16:17:void <init>(javax.inject.Provider) -> <init>
    26:26:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    21:21:org.mula.finance.core.ui.screens.habits.list.HintList create(java.lang.String[]) -> create
org.mula.finance.core.ui.screens.habits.list.HintListFactory_Factory -> org.mula.finance.core.ui.screens.habits.list.HintListFactory_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.core.ui.screens.habits.list.HintListFactory_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.core.ui.screens.habits.list.HintListFactory get() -> get
    33:33:org.mula.finance.core.ui.screens.habits.list.HintListFactory newInstance(javax.inject.Provider) -> newInstance
org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior -> org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior:
    55:62:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$DirFinder,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$Screen,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$BugReporter) -> <init>
    77:78:void lambda$onEdit$0(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp,double) -> lambda$onEdit$0$ListHabitsBehavior
    93:94:void lambda$onExportCSV$1(java.lang.String) -> lambda$onExportCSV$1$ListHabitsBehavior
    107:107:void lambda$onReorderHabit$2(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> lambda$onReorderHabit$2$ListHabitsBehavior
    114:115:void lambda$onRepairDB$3() -> lambda$onRepairDB$3$ListHabitsBehavior
    67:67:void onClickHabit(org.mula.finance.core.models.Habit) -> onClickHabit
    72:75:void onEdit(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp) -> onEdit
    86:90:void onExportCSV() -> onExportCSV
    100:102:void onFirstRun() -> onFirstRun
    107:107:void onReorderHabit(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Habit) -> onReorderHabit
    112:112:void onRepairDB() -> onRepairDB
    121:131:void onSendBugReport() -> onSendBugReport
    137:138:void onStartup() -> onStartup
    143:143:void onToggle(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp) -> onToggle
org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$Message -> org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$Message:
    150:148:void <clinit>() -> <clinit>
    148:148:void <init>(java.lang.String,int) -> <init>
    148:148:org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$Message valueOf(java.lang.String) -> valueOf
    148:148:org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$Message[] values() -> values
org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior_Factory -> org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior_Factory:
    38:45:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    58:58:org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    11:11:java.lang.Object get() -> get
    50:50:org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior get() -> get
    65:65:org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior newInstance(org.mula.finance.core.models.HabitList,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$DirFinder,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$Screen,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.ui.screens.habits.list.ListHabitsBehavior$BugReporter) -> newInstance
org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior -> org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior:
    38:46:void <init>(org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior$Screen,org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior$Adapter,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.ui.ThemeSwitcher) -> <init>
    51:51:void onCreateBooleanHabit() -> onCreateBooleanHabit
    56:56:void onCreateNumericalHabit() -> onCreateNumericalHabit
    81:81:void onSortByColor() -> onSortByColor
    86:86:void onSortByManually() -> onSortByManually
    96:96:void onSortByName() -> onSortByName
    91:91:void onSortByScore() -> onSortByScore
    67:69:void onToggleShowArchived() -> onToggleShowArchived
    74:76:void onToggleShowCompleted() -> onToggleShowCompleted
    102:106:void updateAdapterFilter() -> updateAdapterFilter
org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior_Factory -> org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior_Factory:
    28:32:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    44:44:org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    37:37:org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior get() -> get
    50:50:org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior newInstance(org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior$Screen,org.mula.finance.core.ui.screens.habits.list.ListHabitsMenuBehavior$Adapter,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.ui.ThemeSwitcher) -> newInstance
org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior -> org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior:
    40:44:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior$Screen,org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior$Adapter,org.mula.finance.core.commands.CommandRunner) -> <init>
    49:50:boolean canArchive() -> canArchive
    57:57:boolean canEdit() -> canEdit
    62:63:boolean canUnarchive() -> canUnarchive
    82:85:void lambda$onChangeColor$0(java.util.List,int) -> lambda$onChangeColor$0$ListHabitsSelectionMenuBehavior
    94:97:void lambda$onDeleteHabits$1(java.util.List) -> lambda$onDeleteHabits$1$ListHabitsSelectionMenuBehavior
    70:72:void onArchiveHabits() -> onArchiveHabits
    77:80:void onChangeColor() -> onChangeColor
    91:92:void onDeleteHabits() -> onDeleteHabits
    103:103:void onEditHabits() -> onEditHabits
    108:110:void onUnarchiveHabits() -> onUnarchiveHabits
org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior_Factory -> org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior_Factory:
    29:33:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    46:46:org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    38:38:org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior get() -> get
    52:52:org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior newInstance(org.mula.finance.core.models.HabitList,org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior$Screen,org.mula.finance.core.ui.screens.habits.list.ListHabitsSelectionMenuBehavior$Adapter,org.mula.finance.core.commands.CommandRunner) -> newInstance
org.mula.finance.core.ui.screens.habits.show.ShowHabitBehavior -> org.mula.finance.core.ui.screens.habits.show.ShowHabitBehavior:
    33:37:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.models.Habit,org.mula.finance.core.ui.screens.habits.show.ShowHabitBehavior$Screen) -> <init>
    42:42:void onEditHistory() -> onEditHistory
    47:47:void onToggleCheckmark(org.mula.finance.core.models.Timestamp) -> onToggleCheckmark
org.mula.finance.core.ui.screens.habits.show.ShowHabitBehavior_Factory -> org.mula.finance.core.ui.screens.habits.show.ShowHabitBehavior_Factory:
    29:33:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    44:44:org.mula.finance.core.ui.screens.habits.show.ShowHabitBehavior_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    38:38:org.mula.finance.core.ui.screens.habits.show.ShowHabitBehavior get() -> get
    49:49:org.mula.finance.core.ui.screens.habits.show.ShowHabitBehavior newInstance(org.mula.finance.core.models.HabitList,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.models.Habit,org.mula.finance.core.ui.screens.habits.show.ShowHabitBehavior$Screen) -> newInstance
org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior -> org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior:
    52:58:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.Habit,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior$Screen,org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior$System,org.mula.finance.core.commands.CommandRunner) -> <init>
    84:86:void lambda$onDeleteHabit$1(java.util.List) -> lambda$onDeleteHabit$1$ShowHabitMenuBehavior
    74:75:void lambda$onExportCSV$0(java.lang.String) -> lambda$onExportCSV$0$ShowHabitMenuBehavior
    81:83:void onDeleteHabit() -> onDeleteHabit
    63:63:void onEditHabit() -> onEditHabit
    68:71:void onExportCSV() -> onExportCSV
    92:108:void onRandomize() -> onRandomize
org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior$Message -> org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior$Message:
    113:111:void <clinit>() -> <clinit>
    111:111:void <init>(java.lang.String,int) -> <init>
    111:111:org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior$Message valueOf(java.lang.String) -> valueOf
    111:111:org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior$Message[] values() -> values
org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior_Factory -> org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior_Factory:
    36:42:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    55:55:org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    11:11:java.lang.Object get() -> get
    47:47:org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior get() -> get
    61:61:org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior newInstance(org.mula.finance.core.models.HabitList,org.mula.finance.core.models.Habit,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior$Screen,org.mula.finance.core.ui.screens.habits.show.ShowHabitMenuBehavior$System,org.mula.finance.core.commands.CommandRunner) -> newInstance
org.mula.finance.core.ui.widgets.WidgetBehavior -> org.mula.finance.core.ui.widgets.WidgetBehavior:
    30:33:void <init>(org.mula.finance.core.models.HabitList,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.ui.NotificationTray) -> <init>
    38:41:void onAddRepetition(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp) -> onAddRepetition
    46:49:void onRemoveRepetition(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp) -> onRemoveRepetition
    54:54:void onToggleRepetition(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp) -> onToggleRepetition
    59:59:void performToggle(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp) -> performToggle
org.mula.finance.core.utils.ColorConstants -> org.mula.finance.core.utils.ColorConstants:
    5:5:void <clinit>() -> <clinit>
org.mula.finance.core.utils.DateFormats -> org.mula.finance.core.utils.DateFormats:
    16:17:java.text.SimpleDateFormat fromSkeleton(java.lang.String,java.util.Locale) -> fromSkeleton
    23:23:java.text.SimpleDateFormat getBackupDateFormat() -> getBackupDateFormat
    28:28:java.text.SimpleDateFormat getCSVDateFormat() -> getCSVDateFormat
org.mula.finance.core.utils.DateUtils -> org.mula.finance.core.utils.DateUtils:
    30:31:long applyTimezone(long) -> applyTimezone
    36:39:java.lang.String formatHeaderDate(java.util.GregorianCalendar) -> formatHeaderDate
    44:46:java.util.GregorianCalendar getCalendar(long) -> getCalendar
    116:116:int getFirstWeekdayNumberAccordingToLocale() -> getFirstWeekdayNumberAccordingToLocale
    52:56:long getLocalTime() -> getLocalTime
    200:201:java.util.Locale getLocale() -> getLocale
    129:129:java.lang.String[] getLongWeekdayNames(int) -> getLongWeekdayNames
    142:142:java.lang.String[] getShortWeekdayNames(int) -> getShortWeekdayNames
    153:153:long getStartOfDay(long) -> getStartOfDay
    158:158:long getStartOfToday() -> getStartOfToday
    168:168:java.util.GregorianCalendar getStartOfTodayCalendar() -> getStartOfTodayCalendar
    173:174:java.util.TimeZone getTimezone() -> getTimezone
    148:148:org.mula.finance.core.models.Timestamp getToday() -> getToday
    242:251:long getUpcomingTimeInMillis(int,int) -> getUpcomingTimeInMillis
    74:79:java.lang.String[] getWeekdayNames(int,int) -> getWeekdayNames
    96:96:int[] getWeekdaySequence(int) -> getWeekdaySequence
    163:163:long millisecondsUntilTomorrow() -> millisecondsUntilTomorrow
    184:185:long removeTimezone(long) -> removeTimezone
    208:215:java.lang.Long truncate(org.mula.finance.core.utils.DateUtils$TruncateField,long,int) -> truncate
org.mula.finance.core.utils.DateUtils$1 -> org.mula.finance.core.utils.DateUtils$1:
    211:211:void <clinit>() -> <clinit>
org.mula.finance.core.utils.DateUtils$TruncateField -> org.mula.finance.core.utils.DateUtils$TruncateField:
    256:254:void <clinit>() -> <clinit>
    254:254:void <init>(java.lang.String,int) -> <init>
    254:254:org.mula.finance.core.utils.DateUtils$TruncateField valueOf(java.lang.String) -> valueOf
    254:254:org.mula.finance.core.utils.DateUtils$TruncateField[] values() -> values
org.mula.finance.core.utils.MidnightTimer -> org.mula.finance.core.utils.MidnightTimer:
    24:25:void <init>() -> <init>
    30:31:void addListener(org.mula.finance.core.utils.MidnightTimer$MidnightListener) -> addListener
    41:41:void lambda$onResume$0() -> lambda$onResume$0$MidnightTimer
    53:54:void notifyListeners() -> notifyListeners
    35:36:void onPause() -> onPause
    40:44:void onResume() -> onResume
    48:49:void removeListener(org.mula.finance.core.utils.MidnightTimer$MidnightListener) -> removeListener
org.mula.finance.core.utils.MidnightTimer_Factory -> org.mula.finance.core.utils.MidnightTimer_Factory:
    14:14:void <init>() -> <init>
    21:21:org.mula.finance.core.utils.MidnightTimer_Factory create() -> create
    6:6:java.lang.Object get() -> get
    17:17:org.mula.finance.core.utils.MidnightTimer get() -> get
    25:25:org.mula.finance.core.utils.MidnightTimer newInstance() -> newInstance
org.mula.finance.core.utils.MidnightTimer_Factory$InstanceHolder -> org.mula.finance.core.utils.MidnightTimer_Factory$InstanceHolder:
    29:29:void <clinit>() -> <clinit>
    28:28:org.mula.finance.core.utils.MidnightTimer_Factory access$000() -> access$000
org.mula.finance.core.utils.StringUtils -> org.mula.finance.core.utils.StringUtils:
    21:34:org.apache.commons.lang3.builder.ToStringStyle defaultToStringStyle() -> defaultToStringStyle
    16:16:java.lang.String getRandomId() -> getRandomId
    39:39:java.lang.String joinLongs(long[]) -> joinLongs
    44:47:long[] splitLongs(java.lang.String) -> splitLongs
org.mula.finance.database.AndroidCursor -> org.mula.finance.database.AndroidCursor:
    24:24:void <init>(android.database.Cursor) -> <init>
    26:26:void close() -> close
    40:41:java.lang.Double getDouble(int) -> getDouble
    30:31:java.lang.Integer getInt(int) -> getInt
    35:36:java.lang.Long getLong(int) -> getLong
    45:46:java.lang.String getString(int) -> getString
    27:27:boolean moveToNext() -> moveToNext
org.mula.finance.database.AndroidDatabase -> org.mula.finance.database.AndroidDatabase:
    26:26:void <init>(android.database.sqlite.SQLiteDatabase) -> <init>
    28:28:void beginTransaction() -> beginTransaction
    31:31:void close() -> close
    56:56:void delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
    30:30:void endTransaction() -> endTransaction
    38:38:void execute(java.lang.String,java.lang.Object[]) -> execute
    32:32:int getVersion() -> getVersion
    49:50:java.lang.Long insert(java.lang.String,java.util.Map) -> insert
    60:68:android.content.ContentValues mapToContentValues(java.util.Map) -> mapToContentValues
    26:26:org.mula.finance.core.database.Cursor query(java.lang.String,java.lang.String[]) -> query
    35:35:org.mula.finance.database.AndroidCursor query(java.lang.String,java.lang.String[]) -> query
    29:29:void setTransactionSuccessful() -> setTransactionSuccessful
    44:45:int update(java.lang.String,java.util.Map,java.lang.String,java.lang.String[]) -> update
org.mula.finance.database.AndroidDatabaseOpener -> org.mula.finance.database.AndroidDatabaseOpener:
    27:27:void <init>() -> <init>
    27:27:org.mula.finance.core.database.Database open(java.io.File) -> open
    29:29:org.mula.finance.database.AndroidDatabase open(java.io.File) -> open
org.mula.finance.database.AndroidDatabaseOpener_Factory -> org.mula.finance.database.AndroidDatabaseOpener_Factory:
    14:14:void <init>() -> <init>
    21:21:org.mula.finance.database.AndroidDatabaseOpener_Factory create() -> create
    6:6:java.lang.Object get() -> get
    17:17:org.mula.finance.database.AndroidDatabaseOpener get() -> get
    25:25:org.mula.finance.database.AndroidDatabaseOpener newInstance() -> newInstance
org.mula.finance.database.AndroidDatabaseOpener_Factory$InstanceHolder -> org.mula.finance.database.AndroidDatabaseOpener_Factory$InstanceHolder:
    29:29:void <clinit>() -> <clinit>
    28:28:org.mula.finance.database.AndroidDatabaseOpener_Factory access$000() -> access$000
org.mula.finance.intents.IntentFactory -> org.mula.finance.intents.IntentFactory:
    14:14:void <init>() -> <init>
    17:19:android.content.Intent openDocument() -> openDocument
    24:24:android.content.Intent startIntroActivity(android.content.Context) -> startIntroActivity
    30:31:android.content.Intent startShowHabitActivity(android.content.Context,org.mula.finance.core.models.Habit) -> startShowHabitActivity
org.mula.finance.intents.IntentFactory_Factory -> org.mula.finance.intents.IntentFactory_Factory:
    14:14:void <init>() -> <init>
    21:21:org.mula.finance.intents.IntentFactory_Factory create() -> create
    6:6:java.lang.Object get() -> get
    17:17:org.mula.finance.intents.IntentFactory get() -> get
    25:25:org.mula.finance.intents.IntentFactory newInstance() -> newInstance
org.mula.finance.intents.IntentFactory_Factory$InstanceHolder -> org.mula.finance.intents.IntentFactory_Factory$InstanceHolder:
    29:29:void <clinit>() -> <clinit>
    28:28:org.mula.finance.intents.IntentFactory_Factory access$000() -> access$000
org.mula.finance.intents.IntentParser -> org.mula.finance.intents.IntentParser:
    17:17:void <init>(org.mula.finance.core.models.HabitList) -> <init>
    20:20:org.mula.finance.intents.IntentParser$CheckmarkIntentData parseCheckmarkIntent(android.content.Intent) -> parseCheckmarkIntent
    25:26:org.mula.finance.core.models.Habit parseHabit(android.net.Uri) -> parseHabit
    31:36:org.mula.finance.core.models.Timestamp parseTimestamp(android.content.Intent) -> parseTimestamp
org.mula.finance.intents.IntentParser$CheckmarkIntentData -> org.mula.finance.intents.IntentParser$CheckmarkIntentData:
    41:41:void <init>(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp) -> <init>
    41:41:org.mula.finance.core.models.Habit getHabit() -> getHabit
    41:41:org.mula.finance.core.models.Timestamp getTimestamp() -> getTimestamp
org.mula.finance.intents.IntentParser_Factory -> org.mula.finance.intents.IntentParser_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.intents.IntentParser_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.intents.IntentParser get() -> get
    33:33:org.mula.finance.intents.IntentParser newInstance(org.mula.finance.core.models.HabitList) -> newInstance
org.mula.finance.intents.IntentScheduler -> org.mula.finance.intents.IntentScheduler:
    22:28:void <init>(android.content.Context,org.mula.finance.intents.PendingIntentFactory) -> <init>
    53:53:void log(java.lang.String,java.lang.String) -> log
    57:58:void logReminderScheduled(org.mula.finance.core.models.Habit,long) -> logReminderScheduled
    32:41:void schedule(long,android.app.PendingIntent) -> schedule
    47:49:void scheduleShowReminder(long,org.mula.finance.core.models.Habit,long) -> scheduleShowReminder
org.mula.finance.intents.IntentScheduler_Factory -> org.mula.finance.intents.IntentScheduler_Factory:
    22:24:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    34:34:org.mula.finance.intents.IntentScheduler_Factory create(javax.inject.Provider,javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    29:29:org.mula.finance.intents.IntentScheduler get() -> get
    38:38:org.mula.finance.intents.IntentScheduler newInstance(android.content.Context,org.mula.finance.intents.PendingIntentFactory) -> newInstance
org.mula.finance.intents.PendingIntentFactory -> org.mula.finance.intents.PendingIntentFactory:
    18:18:void <init>(android.content.Context,org.mula.finance.intents.IntentFactory) -> <init>
    24:23:android.app.PendingIntent addCheckmark(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp) -> addCheckmark
    34:33:android.app.PendingIntent dismissNotification(org.mula.finance.core.models.Habit) -> dismissNotification
    43:42:android.app.PendingIntent removeRepetition(org.mula.finance.core.models.Habit) -> removeRepetition
    52:56:android.app.PendingIntent showHabit(org.mula.finance.core.models.Habit) -> showHabit
    62:61:android.app.PendingIntent showReminder(org.mula.finance.core.models.Habit,java.lang.Long,long) -> showReminder
    74:73:android.app.PendingIntent snoozeNotification(org.mula.finance.core.models.Habit) -> snoozeNotification
    83:82:android.app.PendingIntent toggleCheckmark(org.mula.finance.core.models.Habit,java.lang.Long) -> toggleCheckmark
org.mula.finance.intents.PendingIntentFactory_Factory -> org.mula.finance.intents.PendingIntentFactory_Factory:
    22:24:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    34:34:org.mula.finance.intents.PendingIntentFactory_Factory create(javax.inject.Provider,javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    29:29:org.mula.finance.intents.PendingIntentFactory get() -> get
    38:38:org.mula.finance.intents.PendingIntentFactory newInstance(android.content.Context,org.mula.finance.intents.IntentFactory) -> newInstance
org.mula.finance.notifications.AndroidNotificationTray -> org.mula.finance.notifications.AndroidNotificationTray:
    26:32:void <init>(android.content.Context,org.mula.finance.intents.PendingIntentFactory,org.mula.finance.core.preferences.Preferences,org.mula.finance.notifications.RingtoneManager) -> <init>
    75:123:android.app.Notification buildNotification(org.mula.finance.core.models.Habit,long,org.mula.finance.core.models.Timestamp,boolean) -> buildNotification
    73:73:android.app.Notification buildNotification$default(org.mula.finance.notifications.AndroidNotificationTray,org.mula.finance.core.models.Habit,long,org.mula.finance.core.models.Timestamp,boolean,int,java.lang.Object) -> buildNotification$default
    35:35:void log(java.lang.String) -> log
    40:42:void removeNotification(int) -> removeNotification
    49:67:void showNotification(org.mula.finance.core.models.Habit,int,org.mula.finance.core.models.Timestamp,long) -> showNotification
org.mula.finance.notifications.AndroidNotificationTray$Companion -> org.mula.finance.notifications.AndroidNotificationTray$Companion:
    138:138:void <init>() -> <init>
    138:138:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    141:141:void createAndroidNotificationChannel(android.content.Context) -> createAndroidNotificationChannel
org.mula.finance.notifications.AndroidNotificationTray_Factory -> org.mula.finance.notifications.AndroidNotificationTray_Factory:
    30:34:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    46:46:org.mula.finance.notifications.AndroidNotificationTray_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    39:39:org.mula.finance.notifications.AndroidNotificationTray get() -> get
    52:52:org.mula.finance.notifications.AndroidNotificationTray newInstance(android.content.Context,org.mula.finance.intents.PendingIntentFactory,org.mula.finance.core.preferences.Preferences,org.mula.finance.notifications.RingtoneManager) -> newInstance
org.mula.finance.notifications.RingtoneManager -> org.mula.finance.notifications.RingtoneManager:
    17:20:void <init>(android.content.Context) -> <init>
    24:32:java.lang.String getName() -> getName
    39:43:android.net.Uri getURI() -> getURI
    50:54:void update(android.content.Intent) -> update
org.mula.finance.notifications.RingtoneManager_Factory -> org.mula.finance.notifications.RingtoneManager_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.notifications.RingtoneManager_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.notifications.RingtoneManager get() -> get
    33:33:org.mula.finance.notifications.RingtoneManager newInstance(android.content.Context) -> newInstance
org.mula.finance.notifications.SnoozeDelayPickerActivity -> org.mula.finance.notifications.SnoozeDelayPickerActivity:
    25:25:void <init>() -> <init>
    88:89:void finish() -> finish
    55:55:void lambda$onCreate$0(android.content.DialogInterface) -> lambda$onCreate$0$SnoozeDelayPickerActivity
    64:65:void lambda$showTimePicker$1(com.android.datetimepicker.time.RadialPickerLayout,int,int) -> lambda$showTimePicker$1$SnoozeDelayPickerActivity
    38:56:void onCreate(android.os.Bundle) -> onCreate
    76:82:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    95:96:void onPause() -> onPause
    61:70:void showTimePicker() -> showTimePicker
org.mula.finance.preferences.SharedPreferencesStorage -> org.mula.finance.preferences.SharedPreferencesStorage:
    15:26:void <init>(android.content.Context) -> <init>
    32:32:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    35:35:int getInt(java.lang.String,int) -> getInt
    38:38:long getLong(java.lang.String,long) -> getLong
    41:41:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    44:44:void onAttached(org.mula.finance.core.preferences.Preferences) -> onAttached
    64:76:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    48:48:void putBoolean(java.lang.String,boolean) -> putBoolean
    51:51:void putInt(java.lang.String,int) -> putInt
    54:54:void putLong(java.lang.String,long) -> putLong
    57:57:void putString(java.lang.String,java.lang.String) -> putString
    60:60:void remove(java.lang.String) -> remove
org.mula.finance.preferences.SharedPreferencesStorage_Factory -> org.mula.finance.preferences.SharedPreferencesStorage_Factory:
    19:20:void <init>(javax.inject.Provider) -> <init>
    29:29:org.mula.finance.preferences.SharedPreferencesStorage_Factory create(javax.inject.Provider) -> create
    8:8:java.lang.Object get() -> get
    25:25:org.mula.finance.preferences.SharedPreferencesStorage get() -> get
    33:33:org.mula.finance.preferences.SharedPreferencesStorage newInstance(android.content.Context) -> newInstance
org.mula.finance.receivers.ConnectivityReceiver -> org.mula.finance.receivers.ConnectivityReceiver:
    10:10:void <init>() -> <init>
    13:13:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.mula.finance.receivers.DaggerWidgetReceiver_WidgetComponent -> org.mula.finance.receivers.DaggerWidgetReceiver_WidgetComponent:
    16:16:void <init>(org.mula.finance.HabitsApplicationComponent,org.mula.finance.receivers.DaggerWidgetReceiver_WidgetComponent$1) -> <init>
    20:21:void <init>(org.mula.finance.HabitsApplicationComponent) -> <init>
    25:25:org.mula.finance.receivers.DaggerWidgetReceiver_WidgetComponent$Builder builder() -> builder
    30:30:org.mula.finance.core.ui.widgets.WidgetBehavior getWidgetController() -> getWidgetController
org.mula.finance.receivers.DaggerWidgetReceiver_WidgetComponent$Builder -> org.mula.finance.receivers.DaggerWidgetReceiver_WidgetComponent$Builder:
    32:32:void <init>(org.mula.finance.receivers.DaggerWidgetReceiver_WidgetComponent$1) -> <init>
    35:35:void <init>() -> <init>
    45:46:org.mula.finance.receivers.WidgetReceiver$WidgetComponent build() -> build
    40:40:org.mula.finance.receivers.DaggerWidgetReceiver_WidgetComponent$Builder habitsApplicationComponent(org.mula.finance.HabitsApplicationComponent) -> habitsApplicationComponent
org.mula.finance.receivers.ReminderController -> org.mula.finance.receivers.ReminderController:
    37:39:void <init>(org.mula.finance.core.reminders.ReminderScheduler,org.mula.finance.core.ui.NotificationTray,org.mula.finance.core.preferences.Preferences) -> <init>
    45:45:void onBootCompleted() -> onBootCompleted
    76:76:void onDismiss(org.mula.finance.core.models.Habit) -> onDismiss
    52:53:void onShowReminder(org.mula.finance.core.models.Habit,org.mula.finance.core.models.Timestamp,long) -> onShowReminder
    63:64:void onSnoozeDelayPicked(org.mula.finance.core.models.Habit,int) -> onSnoozeDelayPicked
    58:58:void onSnoozePressed(org.mula.finance.core.models.Habit,android.content.Context) -> onSnoozePressed
    69:71:void onSnoozeTimePicked(org.mula.finance.core.models.Habit,int,int) -> onSnoozeTimePicked
    81:85:void showSnoozeDelayPicker(org.mula.finance.core.models.Habit,android.content.Context) -> showSnoozeDelayPicker
org.mula.finance.receivers.ReminderController_Factory -> org.mula.finance.receivers.ReminderController_Factory:
    27:30:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    42:42:org.mula.finance.receivers.ReminderController_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    10:10:java.lang.Object get() -> get
    35:35:org.mula.finance.receivers.ReminderController get() -> get
    47:47:org.mula.finance.receivers.ReminderController newInstance(org.mula.finance.core.reminders.ReminderScheduler,org.mula.finance.core.ui.NotificationTray,org.mula.finance.core.preferences.Preferences) -> newInstance
org.mula.finance.receivers.ReminderReceiver -> org.mula.finance.receivers.ReminderReceiver:
    23:23:void <init>() -> <init>
    40:92:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.mula.finance.receivers.WidgetReceiver -> org.mula.finance.receivers.WidgetReceiver:
    21:21:void <init>() -> <init>
    41:94:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.mula.finance.sync.Event -> org.mula.finance.sync.Event:
    31:34:void <init>() -> <init>
    38:41:void <init>(java.lang.String,long,java.lang.String) -> <init>
org.mula.finance.sync.SyncManager -> org.mula.finance.sync.SyncManager:
    95:114:void <init>(org.mula.androidbase.SSLContextProvider,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.commands.CommandParser) -> <init>
    44:44:java.util.LinkedList access$1000(org.mula.finance.sync.SyncManager) -> access$1000
    44:44:java.util.LinkedList access$1100(org.mula.finance.sync.SyncManager) -> access$1100
    44:44:void access$1200(org.mula.finance.sync.SyncManager,java.lang.Long) -> access$1200
    44:44:org.mula.finance.core.commands.CommandParser access$1300(org.mula.finance.sync.SyncManager) -> access$1300
    44:44:org.mula.finance.core.database.Repository access$1400(org.mula.finance.sync.SyncManager) -> access$1400
    44:44:org.mula.finance.core.commands.CommandRunner access$1500(org.mula.finance.sync.SyncManager) -> access$1500
    44:44:void access$1600(org.mula.finance.sync.SyncManager) -> access$1600
    44:44:org.mula.finance.core.preferences.Preferences access$500(org.mula.finance.sync.SyncManager) -> access$500
    44:44:io.socket.client.Socket access$600(org.mula.finance.sync.SyncManager) -> access$600
    44:44:java.lang.String access$700(org.mula.finance.sync.SyncManager) -> access$700
    44:44:java.lang.String access$800(org.mula.finance.sync.SyncManager) -> access$800
    44:44:boolean access$902(org.mula.finance.sync.SyncManager,boolean) -> access$902
    165:189:void connect(java.lang.String) -> connect
    197:208:void emitPending() -> emitPending
    216:219:void lambda$logSocketEvent$0(java.lang.String,java.lang.Object[]) -> lambda$logSocketEvent$0
    214:214:void logSocketEvent(io.socket.client.Socket,java.lang.String,java.lang.String) -> logSocketEvent
    121:131:void onCommandExecuted(org.mula.finance.core.commands.Command,java.lang.Long) -> onCommandExecuted
    136:138:void onNetworkStatusChanged(boolean) -> onNetworkStatusChanged
    143:149:void startListening() -> startListening
    154:158:void stopListening() -> stopListening
    227:231:org.json.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    237:237:void updateLastSync(java.lang.Long) -> updateLastSync
org.mula.finance.sync.SyncManager$OnAuthOKListener -> org.mula.finance.sync.SyncManager$OnAuthOKListener:
    240:240:void <init>(org.mula.finance.sync.SyncManager) -> <init>
    240:240:void <init>(org.mula.finance.sync.SyncManager,org.mula.finance.sync.SyncManager$1) -> <init>
    256:262:org.json.JSONObject buildFetchMessage(java.lang.Long) -> buildFetchMessage
    245:249:void call(java.lang.Object[]) -> call
org.mula.finance.sync.SyncManager$OnConnectListener -> org.mula.finance.sync.SyncManager$OnConnectListener:
    267:267:void <init>(org.mula.finance.sync.SyncManager) -> <init>
    267:267:void <init>(org.mula.finance.sync.SyncManager,org.mula.finance.sync.SyncManager$1) -> <init>
    280:288:org.json.JSONObject buildAuthMessage() -> buildAuthMessage
    272:273:void call(java.lang.Object[]) -> call
org.mula.finance.sync.SyncManager$OnDisconnectListener -> org.mula.finance.sync.SyncManager$OnDisconnectListener:
    293:293:void <init>(org.mula.finance.sync.SyncManager) -> <init>
    293:293:void <init>(org.mula.finance.sync.SyncManager,org.mula.finance.sync.SyncManager$1) -> <init>
    298:300:void call(java.lang.Object[]) -> call
org.mula.finance.sync.SyncManager$OnExecuteCommandListener -> org.mula.finance.sync.SyncManager$OnExecuteCommandListener:
    304:304:void <init>(org.mula.finance.sync.SyncManager) -> <init>
    304:304:void <init>(org.mula.finance.sync.SyncManager,org.mula.finance.sync.SyncManager$1) -> <init>
    311:319:void call(java.lang.Object[]) -> call
    325:340:void executeCommand(org.json.JSONObject) -> executeCommand
org.mula.finance.sync.SyncManager$OnFetchOKListener -> org.mula.finance.sync.SyncManager$OnFetchOKListener:
    344:344:void <init>(org.mula.finance.sync.SyncManager) -> <init>
    344:344:void <init>(org.mula.finance.sync.SyncManager,org.mula.finance.sync.SyncManager$1) -> <init>
    351:361:void call(java.lang.Object[]) -> call
org.mula.finance.sync.SyncManager_Factory -> org.mula.finance.sync.SyncManager_Factory:
    30:34:void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> <init>
    45:45:org.mula.finance.sync.SyncManager_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider) -> create
    11:11:java.lang.Object get() -> get
    39:39:org.mula.finance.sync.SyncManager get() -> get
    50:50:org.mula.finance.sync.SyncManager newInstance(org.mula.androidbase.SSLContextProvider,org.mula.finance.core.preferences.Preferences,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.commands.CommandParser) -> newInstance
org.mula.finance.sync.SyncService -> org.mula.finance.sync.SyncService:
    24:24:void <init>() -> <init>
    36:58:void onCreate() -> onCreate
    70:71:void onDestroy() -> onDestroy
    64:64:void onSyncFeatureChanged() -> onSyncFeatureChanged
org.mula.finance.tasks.AndroidTaskRunner -> org.mula.finance.tasks.AndroidTaskRunner:
    25:28:void <init>() -> <init>
    16:16:java.util.LinkedList access$000(org.mula.finance.tasks.AndroidTaskRunner) -> access$000
    16:16:java.util.HashMap access$100(org.mula.finance.tasks.AndroidTaskRunner) -> access$100
    16:16:java.util.LinkedList access$200(org.mula.finance.tasks.AndroidTaskRunner) -> access$200
    41:41:void addListener(org.mula.finance.core.tasks.TaskRunner$Listener) -> addListener
    47:48:void execute(org.mula.finance.core.tasks.Task) -> execute
    54:54:int getActiveTaskCount() -> getActiveTaskCount
    35:35:org.mula.finance.core.tasks.TaskRunner provideTaskRunner() -> provideTaskRunner
    60:62:void publishProgress(org.mula.finance.core.tasks.Task,int) -> publishProgress
    68:68:void removeListener(org.mula.finance.core.tasks.TaskRunner$Listener) -> removeListener
org.mula.finance.tasks.AndroidTaskRunner$CustomAsyncTask -> org.mula.finance.tasks.AndroidTaskRunner$CustomAsyncTask:
    77:78:void <init>(org.mula.finance.tasks.AndroidTaskRunner,org.mula.finance.core.tasks.Task) -> <init>
    71:71:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    94:95:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    71:71:void onPostExecute(java.lang.Object) -> onPostExecute
    102:106:void onPostExecute(java.lang.Void) -> onPostExecute
    112:117:void onPreExecute() -> onPreExecute
    71:71:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    123:123:void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    88:88:void publish(int) -> publish
org.mula.finance.tasks.AndroidTaskRunner_ProvideTaskRunnerFactory -> org.mula.finance.tasks.AndroidTaskRunner_ProvideTaskRunnerFactory:
    16:16:void <init>() -> <init>
    23:23:org.mula.finance.tasks.AndroidTaskRunner_ProvideTaskRunnerFactory create() -> create
    8:8:java.lang.Object get() -> get
    19:19:org.mula.finance.core.tasks.TaskRunner get() -> get
    27:27:org.mula.finance.core.tasks.TaskRunner provideTaskRunner() -> provideTaskRunner
org.mula.finance.tasks.AndroidTaskRunner_ProvideTaskRunnerFactory$InstanceHolder -> org.mula.finance.tasks.AndroidTaskRunner_ProvideTaskRunnerFactory$InstanceHolder:
    31:31:void <clinit>() -> <clinit>
    30:30:org.mula.finance.tasks.AndroidTaskRunner_ProvideTaskRunnerFactory access$000() -> access$000
org.mula.finance.tasks.ExportDBTask -> org.mula.finance.tasks.ExportDBTask:
    35:38:void <init>(android.content.Context,org.mula.androidbase.AndroidDirFinder,org.mula.finance.tasks.ExportDBTask$Listener) -> <init>
    44:55:void doInBackground() -> doInBackground
    62:62:void onPostExecute() -> onPostExecute
org.mula.finance.tasks.ExportDBTaskFactory -> org.mula.finance.tasks.ExportDBTaskFactory:
    21:23:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    35:35:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    27:30:org.mula.finance.tasks.ExportDBTask create(org.mula.finance.tasks.ExportDBTask$Listener) -> create
org.mula.finance.tasks.ExportDBTaskFactory_Factory -> org.mula.finance.tasks.ExportDBTaskFactory_Factory:
    23:25:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    35:35:org.mula.finance.tasks.ExportDBTaskFactory_Factory create(javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    30:30:org.mula.finance.tasks.ExportDBTaskFactory get() -> get
    40:40:org.mula.finance.tasks.ExportDBTaskFactory newInstance(javax.inject.Provider,javax.inject.Provider) -> newInstance
org.mula.finance.tasks.ImportDataTask -> org.mula.finance.tasks.ImportDataTask:
    41:45:void <init>(org.mula.finance.core.io.GenericImporter,org.mula.finance.core.models.ModelFactory,java.io.File,org.mula.finance.tasks.ImportDataTask$Listener) -> <init>
    51:72:void doInBackground() -> doInBackground
    78:78:void onPostExecute() -> onPostExecute
org.mula.finance.tasks.ImportDataTaskFactory -> org.mula.finance.tasks.ImportDataTaskFactory:
    21:23:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    36:36:java.lang.Object checkNotNull(java.lang.Object,int) -> checkNotNull
    27:31:org.mula.finance.tasks.ImportDataTask create(java.io.File,org.mula.finance.tasks.ImportDataTask$Listener) -> create
org.mula.finance.tasks.ImportDataTaskFactory_Factory -> org.mula.finance.tasks.ImportDataTaskFactory_Factory:
    23:25:void <init>(javax.inject.Provider,javax.inject.Provider) -> <init>
    35:35:org.mula.finance.tasks.ImportDataTaskFactory_Factory create(javax.inject.Provider,javax.inject.Provider) -> create
    9:9:java.lang.Object get() -> get
    30:30:org.mula.finance.tasks.ImportDataTaskFactory get() -> get
    40:40:org.mula.finance.tasks.ImportDataTaskFactory newInstance(javax.inject.Provider,javax.inject.Provider) -> newInstance
org.mula.finance.utils.AndroidDateFormats -> org.mula.finance.utils.AndroidDateFormats:
    18:20:java.text.SimpleDateFormat fromSkeleton(java.lang.String) -> fromSkeleton
org.mula.finance.utils.AndroidDateUtils -> org.mula.finance.utils.AndroidDateUtils:
    19:23:java.lang.String formatTime(android.content.Context,int,int) -> formatTime
    28:54:java.lang.String formatWeekdayList(android.content.Context,boolean[]) -> formatWeekdayList
org.mula.finance.utils.AttributeSetUtils -> org.mula.finance.utils.AttributeSetUtils:
    23:26:java.lang.String getAttribute(android.content.Context,android.util.AttributeSet,java.lang.String,java.lang.String) -> getAttribute
    36:37:boolean getBooleanAttribute(android.content.Context,android.util.AttributeSet,java.lang.String,boolean) -> getBooleanAttribute
    47:48:java.lang.Integer getColorAttribute(android.content.Context,android.util.AttributeSet,java.lang.String,java.lang.Integer) -> getColorAttribute
    57:58:float getFloatAttribute(android.content.Context,android.util.AttributeSet,java.lang.String,float) -> getFloatAttribute
org.mula.finance.utils.Constants -> org.mula.finance.utils.Constants:
    7:20:void <clinit>() -> <clinit>
org.mula.finance.utils.DatabaseUtils -> org.mula.finance.utils.DatabaseUtils:
    52:58:java.io.File getDatabaseFile(android.content.Context) -> getDatabaseFile
    65:65:java.lang.String getDatabaseFilename() -> getDatabaseFilename
    72:72:void initializeDatabase(android.content.Context) -> initializeDatabase
    95:95:android.database.sqlite.SQLiteDatabase openDatabase() -> openDatabase
    80:89:java.lang.String saveDatabaseCopy(android.content.Context,java.io.File) -> saveDatabaseCopy
org.mula.finance.utils.PaletteUtils -> org.mula.finance.utils.PaletteUtils:
    8:8:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    12:13:int colorToPaletteIndex(android.content.Context,int) -> colorToPaletteIndex
    19:41:int getAndroidTestColor(int) -> getAndroidTestColor
    46:51:int getColor(android.content.Context,int) -> getColor
org.mula.finance.utils.ViewExtensionsKt -> org.mula.finance.utils.ViewExtensionsKt:
    36:40:void addAtBottom(android.widget.RelativeLayout,android.view.View,int,int) -> addAtBottom
    34:34:void addAtBottom$default(android.widget.RelativeLayout,android.view.View,int,int,int,java.lang.Object) -> addAtBottom$default
    47:51:void addAtTop(android.widget.RelativeLayout,android.view.View,int,int) -> addAtTop
    45:45:void addAtTop$default(android.widget.RelativeLayout,android.view.View,int,int,int,java.lang.Object) -> addAtTop$default
    24:29:void addBelow(android.widget.RelativeLayout,android.view.View,android.view.View,int,int,kotlin.jvm.functions.Function1) -> addBelow
    22:22:void addBelow$default(android.widget.RelativeLayout,android.view.View,android.view.View,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addBelow$default
    60:61:com.google.android.material.bottomnavigation.BottomNavigationView buildBottomNav(android.view.ViewGroup) -> buildBottomNav
    55:56:androidx.appcompat.widget.Toolbar buildToolbar(android.view.ViewGroup) -> buildToolbar
    86:86:float dim(android.view.View,int) -> dim
    88:88:float dp(android.view.View,float) -> dp
    85:85:android.graphics.Typeface getFontAwesome(android.view.View) -> getFontAwesome
    91:91:org.mula.androidbase.utils.StyledResources getSres(android.view.View) -> getSres
    84:84:boolean isRTL(android.view.View) -> isRTL
    68:72:void showMessage(android.view.View,int) -> showMessage
    87:87:float sp(android.view.View,float) -> sp
    89:89:java.lang.String str(android.view.View,int) -> str
    79:79:int toMeasureSpec(int,int) -> toMeasureSpec
    82:82:int toMeasureSpec(float,int) -> toMeasureSpec
org.mula.finance.widgets.BaseWidget -> org.mula.finance.widgets.BaseWidget:
    40:51:void <init>(android.content.Context,int) -> <init>
    104:107:void adjustRemoteViewsPadding(android.widget.RemoteViews,android.view.View,int,int) -> adjustRemoteViewsPadding
    115:122:void buildRemoteViews(android.view.View,android.widget.RemoteViews,int,int) -> buildRemoteViews
    56:56:void delete() -> delete
    139:145:android.graphics.Bitmap getBitmapFromView(android.view.View) -> getBitmapFromView
    62:62:android.content.Context getContext() -> getContext
    67:67:int getId() -> getId
    73:73:android.widget.RemoteViews getLandscapeRemoteViews() -> getLandscapeRemoteViews
    82:82:android.widget.RemoteViews getPortraitRemoteViews() -> getPortraitRemoteViews
    191:191:int getPreferedBackgroundAlpha() -> getPreferedBackgroundAlpha
    152:162:android.widget.RemoteViews getRemoteViews(int,int) -> getRemoteViews
    169:187:void measureView(android.view.View,int,int) -> measureView
    90:90:void setDimensions(org.mula.finance.widgets.WidgetDimensions) -> setDimensions
org.mula.finance.widgets.BaseWidgetProvider -> org.mula.finance.widgets.BaseWidgetProvider:
    25:25:void <init>() -> <init>
    148:157:void drawErrorWidget(android.content.Context,android.appwidget.AppWidgetManager,int,java.lang.RuntimeException) -> drawErrorWidget
    47:55:org.mula.finance.widgets.WidgetDimensions getDimensionsFromOptions(android.content.Context,android.os.Bundle) -> getDimensionsFromOptions
    127:132:java.util.List getHabitsFromWidgetId(int) -> getHabitsFromWidgetId
    189:189:org.mula.finance.core.preferences.Preferences getPreferences() -> getPreferences
    119:121:void lambda$onUpdate$0(int[],android.content.Context,android.appwidget.AppWidgetManager) -> lambda$onUpdate$0$BaseWidgetProvider
    69:80:void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle) -> onAppWidgetOptionsChanged
    90:87:void onDeleted(android.content.Context,int[]) -> onDeleted
    114:111:void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    166:174:void update(android.content.Context,android.appwidget.AppWidgetManager,int) -> update
    36:39:void updateAppWidget(android.appwidget.AppWidgetManager,org.mula.finance.widgets.BaseWidget) -> updateAppWidget
    181:184:void updateDependencies(android.content.Context) -> updateDependencies
org.mula.finance.widgets.CheckmarkWidget -> org.mula.finance.widgets.CheckmarkWidget:
    15:15:void <init>(android.content.Context,int,org.mula.finance.core.models.Habit) -> <init>
    11:11:android.view.View buildView() -> buildView
    31:31:org.mula.finance.widgets.views.CheckmarkWidgetView buildView() -> buildView
    18:18:android.app.PendingIntent getOnClickPendingIntent(android.content.Context) -> getOnClickPendingIntent
    21:27:void refreshData(android.view.View) -> refreshData
org.mula.finance.widgets.CheckmarkWidgetProvider -> org.mula.finance.widgets.CheckmarkWidgetProvider:
    6:6:void <init>() -> <init>
    8:10:org.mula.finance.widgets.BaseWidget getWidgetFromId(android.content.Context,int) -> getWidgetFromId
org.mula.finance.widgets.EmptyWidget -> org.mula.finance.widgets.EmptyWidget:
    12:12:void <init>(android.content.Context,int) -> <init>
    9:9:android.view.View buildView() -> buildView
    16:16:org.mula.finance.widgets.views.EmptyWidgetView buildView() -> buildView
    9:9:android.app.PendingIntent getOnClickPendingIntent(android.content.Context) -> getOnClickPendingIntent
org.mula.finance.widgets.FrequencyWidget -> org.mula.finance.widgets.FrequencyWidget:
    17:17:void <init>(android.content.Context,int,org.mula.finance.core.models.Habit,int) -> <init>
    12:12:android.view.View buildView() -> buildView
    34:34:org.mula.finance.widgets.views.GraphWidgetView buildView() -> buildView
    20:20:android.app.PendingIntent getOnClickPendingIntent(android.content.Context) -> getOnClickPendingIntent
    23:26:void refreshData(android.view.View) -> refreshData
org.mula.finance.widgets.FrequencyWidgetProvider -> org.mula.finance.widgets.FrequencyWidgetProvider:
    7:7:void <init>() -> <init>
    9:14:org.mula.finance.widgets.BaseWidget getWidgetFromId(android.content.Context,int) -> getWidgetFromId
org.mula.finance.widgets.HabitPickerDialog -> org.mula.finance.widgets.HabitPickerDialog:
    15:15:void <init>() -> <init>
    75:80:void confirm(java.util.List) -> confirm
    22:23:void onCreate(android.os.Bundle) -> onCreate
org.mula.finance.widgets.HabitPickerDialog$onCreate$2 -> org.mula.finance.widgets.HabitPickerDialog$onCreate$2:
    51:57:void onClick(android.view.View) -> onClick
org.mula.finance.widgets.HabitPickerDialog$onCreate$4 -> org.mula.finance.widgets.HabitPickerDialog$onCreate$4:
    69:69:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.mula.finance.widgets.HistoryWidget -> org.mula.finance.widgets.HistoryWidget:
    18:18:void <init>(android.content.Context,int,org.mula.finance.core.models.Habit,int) -> <init>
    13:13:android.view.View buildView() -> buildView
    35:36:org.mula.finance.widgets.views.GraphWidgetView buildView() -> buildView
    21:21:android.app.PendingIntent getOnClickPendingIntent(android.content.Context) -> getOnClickPendingIntent
    25:27:void refreshData(android.view.View) -> refreshData
org.mula.finance.widgets.HistoryWidgetProvider -> org.mula.finance.widgets.HistoryWidgetProvider:
    6:6:void <init>() -> <init>
    8:13:org.mula.finance.widgets.BaseWidget getWidgetFromId(android.content.Context,int) -> getWidgetFromId
org.mula.finance.widgets.ScoreWidget -> org.mula.finance.widgets.ScoreWidget:
    17:17:void <init>(android.content.Context,int,org.mula.finance.core.models.Habit) -> <init>
    13:13:android.view.View buildView() -> buildView
    41:42:org.mula.finance.widgets.views.GraphWidgetView buildView() -> buildView
    20:20:android.app.PendingIntent getOnClickPendingIntent(android.content.Context) -> getOnClickPendingIntent
    23:32:void refreshData(android.view.View) -> refreshData
org.mula.finance.widgets.ScoreWidgetProvider -> org.mula.finance.widgets.ScoreWidgetProvider:
    6:6:void <init>() -> <init>
    8:10:org.mula.finance.widgets.BaseWidget getWidgetFromId(android.content.Context,int) -> getWidgetFromId
org.mula.finance.widgets.StackRemoteViewsFactory -> org.mula.finance.widgets.StackRemoteViewsFactory:
    45:52:void <init>(android.content.Context,android.content.Intent) -> <init>
    97:100:org.mula.finance.widgets.BaseWidget constructWidget(org.mula.finance.core.models.Habit,org.mula.finance.core.preferences.Preferences) -> constructWidget
    71:71:int getCount() -> getCount
    78:83:org.mula.finance.widgets.WidgetDimensions getDimensionsFromOptions(android.content.Context,android.os.Bundle) -> getDimensionsFromOptions
    131:131:long getItemId(int) -> getItemId
    116:121:android.widget.RemoteViews getLoadingView() -> getLoadingView
    88:90:android.widget.RemoteViews getViewAt(int) -> getViewAt
    141:167:void onDataSetChanged() -> onDataSetChanged
org.mula.finance.widgets.StackRemoteViewsFactory$1 -> org.mula.finance.widgets.StackRemoteViewsFactory$1:
    97:97:void <clinit>() -> <clinit>
org.mula.finance.widgets.StackWidget -> org.mula.finance.widgets.StackWidget:
    18:18:void <init>(android.content.Context,int,org.mula.finance.widgets.StackWidgetType,java.util.List) -> <init>
    13:13:android.view.View buildView() -> buildView
    13:13:android.app.PendingIntent getOnClickPendingIntent(android.content.Context) -> getOnClickPendingIntent
    27:38:android.widget.RemoteViews getRemoteViews(int,int) -> getRemoteViews
org.mula.finance.widgets.StackWidgetService -> org.mula.finance.widgets.StackWidgetService:
    24:24:void <init>() -> <init>
    32:32:android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent) -> onGetViewFactory
org.mula.finance.widgets.StackWidgetType -> org.mula.finance.widgets.StackWidgetType:
    11:9:void <clinit>() -> <clinit>
    18:19:void <init>(java.lang.String,int,int) -> <init>
    58:58:int getStackWidgetAdapterViewId(org.mula.finance.widgets.StackWidgetType) -> getStackWidgetAdapterViewId
    74:74:int getStackWidgetEmptyViewId(org.mula.finance.widgets.StackWidgetType) -> getStackWidgetEmptyViewId
    42:42:int getStackWidgetLayoutId(org.mula.finance.widgets.StackWidgetType) -> getStackWidgetLayoutId
    23:23:int getValue() -> getValue
    27:36:org.mula.finance.widgets.StackWidgetType getWidgetTypeFromValue(int) -> getWidgetTypeFromValue
    9:9:org.mula.finance.widgets.StackWidgetType valueOf(java.lang.String) -> valueOf
    9:9:org.mula.finance.widgets.StackWidgetType[] values() -> values
org.mula.finance.widgets.StackWidgetType$1 -> org.mula.finance.widgets.StackWidgetType$1:
    42:42:void <clinit>() -> <clinit>
org.mula.finance.widgets.StreakWidget -> org.mula.finance.widgets.StreakWidget:
    18:18:void <init>(android.content.Context,int,org.mula.finance.core.models.Habit) -> <init>
    33:35:android.view.View buildView() -> buildView
    21:21:android.app.PendingIntent getOnClickPendingIntent(android.content.Context) -> getOnClickPendingIntent
    24:26:void refreshData(android.view.View) -> refreshData
org.mula.finance.widgets.StreakWidgetProvider -> org.mula.finance.widgets.StreakWidgetProvider:
    6:6:void <init>() -> <init>
    8:10:org.mula.finance.widgets.BaseWidget getWidgetFromId(android.content.Context,int) -> getWidgetFromId
org.mula.finance.widgets.WidgetDimensions -> org.mula.finance.widgets.WidgetDimensions:
    5:5:void <init>(int,int,int,int) -> <init>
    8:8:int getLandscapeHeight() -> getLandscapeHeight
    7:7:int getLandscapeWidth() -> getLandscapeWidth
    6:6:int getPortraitHeight() -> getPortraitHeight
    5:5:int getPortraitWidth() -> getPortraitWidth
org.mula.finance.widgets.WidgetUpdater -> org.mula.finance.widgets.WidgetUpdater:
    19:19:void <init>(android.content.Context,org.mula.finance.core.commands.CommandRunner,org.mula.finance.core.tasks.TaskRunner,org.mula.finance.core.preferences.WidgetPreferences) -> <init>
    18:18:void access$updateWidgets(org.mula.finance.widgets.WidgetUpdater,java.lang.Long,java.lang.Class) -> access$updateWidgets
    27:27:void onCommandExecuted(org.mula.finance.core.commands.Command,java.lang.Long) -> onCommandExecuted
    36:36:void startListening() -> startListening
    44:44:void stopListening() -> stopListening
    48:48:void updateWidgets(java.lang.Long) -> updateWidgets
    58:68:void updateWidgets(java.lang.Long,java.lang.Class) -> updateWidgets
    75:75:void updateWidgets() -> updateWidgets
org.mula.finance.widgets.WidgetUpdater$updateWidgets$1 -> org.mula.finance.widgets.WidgetUpdater$updateWidgets$1:
    49:53:void doInBackground() -> doInBackground
org.mula.finance.widgets.views.CheckmarkWidgetView -> org.mula.finance.widgets.views.CheckmarkWidgetView:
    37:38:void <init>(android.content.Context) -> <init>
    120:120:java.lang.Integer getInnerLayoutId() -> getInnerLayoutId
    159:170:void init() -> init
    126:154:void onMeasure(int,int) -> onMeasure
    49:93:void refresh() -> refresh
    98:98:void setActiveColor(int) -> setActiveColor
    103:103:void setCheckmarkValue(int) -> setCheckmarkValue
    108:108:void setName(java.lang.String) -> setName
    113:113:void setPercentage(float) -> setPercentage
org.mula.finance.widgets.views.EmptyWidgetView -> org.mula.finance.widgets.views.EmptyWidgetView:
    18:19:void <init>(android.content.Context) -> <init>
    31:31:java.lang.Integer getInnerLayoutId() -> getInnerLayoutId
    36:37:void init() -> init
    24:24:void setTitle(java.lang.String) -> setTitle
org.mula.finance.widgets.views.GraphWidgetView -> org.mula.finance.widgets.views.GraphWidgetView:
    22:24:void <init>(android.content.Context,android.view.View) -> <init>
    29:29:android.view.View getDataView() -> getDataView
    41:41:java.lang.Integer getInnerLayoutId() -> getInnerLayoutId
    46:55:void init() -> init
    34:34:void setTitle(java.lang.String) -> setTitle
org.mula.finance.widgets.views.HabitWidgetView -> org.mula.finance.widgets.views.HabitWidgetView:
    40:41:void <init>(android.content.Context) -> <init>
    99:102:void init() -> init
    68:94:void rebuildBackground() -> rebuildBackground
    58:59:void setBackgroundAlpha(int) -> setBackgroundAlpha
    52:53:void setShadowAlpha(int) -> setShadowAlpha
